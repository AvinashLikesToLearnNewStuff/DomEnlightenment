(undo-tree-save-format-version . 1)
"6f84aa90bb3d3ff8648656b99ab97be24f4db79b"
[nil nil nil nil (25720 17265 364001 475000) 0 nil]
([nil nil ((20 . 21) (9 . 20) (#("g" 0 1 (fontified t face org-level-1)) . -9) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("l" 0 1 (fontified t face org-level-1)) . -10) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("i" 0 1 (fontified t face org-level-1)) . -11) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 12 (4 . 12) (#("i" 0 1 (fontified t face org-level-1)) . -4) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("m" 0 1 (fontified t face org-level-1)) . -5) (undo-tree-id78 . -1) (undo-tree-id79 . -1) 6 (1 . 6) (t . -1)) nil (25720 17265 363994 770000) 0 nil])
([nil nil ((180 . 184) (176 . 180) (171 . 176) (150 . 171) (146 . 150) 147 (146 . 147) (143 . 146) (128 . 143) (118 . 128) (#("m" 0 1 (fontified t face org-level-2)) . -118) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 119 (115 . 119) (103 . 115) (#("e" 0 1 (fontified t face org-level-2)) . -103) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 104 (103 . 104) (#("E" 0 1 (fontified t face org-level-2)) . -103) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("E" 0 1 (fontified t face org-level-2)) . -104) (undo-tree-id35 . -1) (undo-tree-id36 . -1) 105 (102 . 105) (98 . 102) (84 . 98) (#("n" 0 1 (fontified t face org-level-2)) . -84) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 85 (84 . 85) (#("n" 0 1 (fontified t face org-level-2)) . -84) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 85 (81 . 85) (#("n" 0 1 (fontified t face org-level-2)) . -81) (undo-tree-id41 . -1) (undo-tree-id42 . -1) 82 (76 . 82) (72 . 76) (59 . 72) (55 . 59) (52 . 55) (#("e" 0 1 (fontified t face org-level-2)) . -52) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("s" 0 1 (fontified t face org-level-2)) . -53) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("
" 0 1 (fontified t)) . -54) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 55 (54 . 55) (51 . 54) (#("O" 0 1 (fontified t face org-level-2)) . -51) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("d" 0 1 (fontified t face org-level-2)) . -52) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("e" 0 1 (fontified t face org-level-2)) . -53) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 54 (50 . 54) (#("n" 0 1 (fontified t face org-level-2)) . -50) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 51 (46 . 51) (#("n" 0 1 (fontified t face org-level-2)) . -46) (undo-tree-id58 . -1) (undo-tree-id59 . -1) 47 (41 . 47) (#("C" 0 1 (fontified t face org-level-2)) . -41) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("o" 0 1 (fontified t face org-level-2)) . -42) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 43 (41 . 43) (#("d" 0 1 (fontified t face org-level-2)) . -41) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("o" 0 1 (fontified t face org-level-2)) . -42) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("c" 0 1 (fontified t face org-level-2)) . -43) (undo-tree-id68 . -1) (undo-tree-id69 . -1) 44 (41 . 44) (37 . 41) (24 . 37) (nil fontified t 23 . 24) (nil keymap (keymap) 23 . 24) (nil face org-level-1 23 . 24) (nil fontified t 22 . 23) (nil composition (0 1 [9673]) 22 . 23) (nil keymap (keymap) 22 . 23) (nil face org-level-1 22 . 23) (#("* " 0 1 (fontified t composition (0 1 [9673]) keymap (keymap) face org-level-1) 1 2 (fontified t keymap (keymap) face org-level-1)) . 21) (23 . 26) (21 . 23)) nil (25720 17265 363960 59000) 0 nil])
([nil nil ((182 . 190) (#("s" 0 1 (fontified t face org-level-2)) . -182) (undo-tree-id24 . -1) 183 (180 . 183) (#("t" 0 1 (fontified t face org-level-2)) . -180) (undo-tree-id25 . -1) (#("e" 0 1 (fontified t face org-level-2)) . -181) (undo-tree-id26 . -1) (#("s" 0 1 (fontified t face org-level-2)) . -182) (undo-tree-id27 . -1) (#("t" 0 1 (fontified t face org-level-2)) . -183) (undo-tree-id28 . -1) 184 (180 . 184)) nil (25720 17265 363858 928000) 0 nil])
([nil nil ((284 . 289) (#("e" 0 1 (fontified t face org-level-2)) . -284) (undo-tree-id8 . -1) (#("v" 0 1 (fontified t face org-level-2)) . -285) (undo-tree-id9 . -1) 286 (284 . 286) (#("l" 0 1 (fontified t face org-level-2)) . -284) (undo-tree-id10 . -1) (#("e" 0 1 (fontified t face org-level-2)) . -285) (undo-tree-id11 . -1) 286 (279 . 286) (#("O" 0 1 (fontified t face org-level-2)) . -279) (undo-tree-id12 . -1) (#("d" 0 1 (fontified t face org-level-2)) . -280) (undo-tree-id13 . -1) 281 (280 . 281) (279 . 280) (#("d" 0 1 (fontified t face org-level-2)) . -279) (undo-tree-id14 . -1) (#("o" 0 1 (fontified t face org-level-2)) . -280) (undo-tree-id15 . -1) (#("m" 0 1 (fontified t face org-level-2)) . -281) (undo-tree-id16 . -1) 282 (279 . 282) (275 . 279) (257 . 275) (253 . 257) (249 . 253) 250 (249 . 250) (240 . 249) (#("s" 0 1 (fontified t face org-level-2)) . -240) (undo-tree-id17 . -1) (#("c" 0 1 (fontified t face org-level-2)) . -241) (undo-tree-id18 . -1) 242 (226 . 242) (222 . 226) (#("C" 0 1 (fontified t face org-level-2)) . -222) (undo-tree-id19 . -1) (#("C" 0 1 (fontified t face org-level-2)) . -223) (undo-tree-id20 . -1) (#("s" 0 1 (fontified t face org-level-2)) . -224) (undo-tree-id21 . -1) 225 (224 . 225) (221 . 224) (217 . 221) (212 . 217) (195 . 212) (#("c" 0 1 (fontified t face org-level-2)) . -195) (undo-tree-id22 . -1) (#("o" 0 1 (fontified t face org-level-2)) . -196) (undo-tree-id23 . -1) 197 (194 . 197)) nil (25720 17265 363835 601000) 0 nil])
([nil nil ((289 . 293) 288) nil (25720 17265 363432 264000) 0 nil])
([nil nil ((364 . 367) (343 . 364) (330 . 343) (#("r" 0 1 (fontified t face org-level-2)) . -330) (undo-tree-id0 . -1) (#("i" 0 1 (fontified t face org-level-2)) . -331) (undo-tree-id1 . -1) 332 (330 . 332) (309 . 330) (305 . 309) (#("," 0 1 (fontified t face org-level-2)) . -305) (undo-tree-id2 . -1) (#("j" 0 1 (fontified t face org-level-2)) . -306) (undo-tree-id3 . -1) (#("s" 0 1 (fontified t face org-level-2)) . -307) (undo-tree-id4 . -1) 308 (294 . 308) (#("C" 0 1 (fontified t face org-level-2)) . -294) (undo-tree-id5 . -1) (#("C" 0 1 (fontified t face org-level-2)) . -295) (undo-tree-id6 . -1) 296 (293 . 296) (#(" " 0 1 (fontified t face org-level-2)) . -293) (undo-tree-id7 . -1) 294 (293 . 294)) nil (25720 17265 363325 57000) 0 nil])
([nil nil ((43 . 46) (42 . 43) (38 . 42) (#("
" 0 1 (fontified t)) . -38) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (#(" " 0 1 (fontified t)) . -39) (undo-tree-id489 . -1) (#(" " 0 1 (fontified t)) . -40) (undo-tree-id490 . -1) (#(" " 0 1 (fontified t)) . -41) (undo-tree-id491 . -1) 42 (38 . 42) (#("   " 0 3 (fontified t)) . 38) (undo-tree-id492 . -3) 41 (37 . 41) (t 25720 17265 363803 753000) 36) nil (25720 18484 460972 197000) 0 nil])
([nil nil ((43 . 48) (42 . 43) 40) nil (25720 18484 460940 281000) 0 nil])
([nil nil ((38 . 41) 41) nil (25720 18484 460936 510000) 0 nil])
([nil nil ((46 . 49) 50) nil (25720 18484 460933 227000) 0 nil])
([nil nil ((55 . 58) 57) nil (25720 18484 460929 875000) 0 nil])
([nil nil ((49 . 53)) nil (25720 18484 460926 523000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -49) (undo-tree-id486 . -3) 52) nil (25720 18484 460923 240000) 0 nil])
([nil nil ((#("   1.1 
" 0 3 (fontified t) 3 7 (fontified t) 7 8 (fontified t)) . 38) (undo-tree-id483 . -3) (undo-tree-id484 . -8) (undo-tree-id485 . -7) 41) nil (25720 18484 460917 933000) 0 nil])
([nil nil ((#("   1.1.1
" 0 1 (fontified t) 1 3 (fontified t) 3 8 (fontified t) 8 9 (fontified t)) . 38) (undo-tree-id479 . -3) (undo-tree-id480 . -9) (undo-tree-id481 . 6) (undo-tree-id482 . -8) 41) nil (25720 18484 460909 762000) 0 nil])
([nil nil ((#("   1.2
" 0 1 (fontified t) 1 3 (fontified t) 3 6 (fontified t) 6 7 (fontified t)) . 38) (undo-tree-id475 . -3) (undo-tree-id476 . -7) (undo-tree-id477 . 7) (undo-tree-id478 . -6) 41) nil (25720 18484 460900 822000) 0 nil])
([nil nil ((48 . 58) (45 . 48) (44 . 45) (41 . 44) (37 . 41) 24) nil (25720 18484 460890 347000) 0 nil])
([nil nil ((#("   sdsadflkjs
" 0 13 (fontified t) 13 14 (fontified t)) . 45) (undo-tree-id471 . -5) (undo-tree-id472 . -14) (undo-tree-id473 . 1) (undo-tree-id474 . -13) 50) nil (25720 18484 460885 39000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t)) . -45) (undo-tree-id470 . -1) 46 (44 . 46)) nil (25720 18484 460875 890000) 0 nil])
([nil nil ((49 . 56) (45 . 49) 44) nil (25720 18484 460869 745000) 0 nil])
([nil nil ((#("   sadlfkj
" 0 10 (fontified t) 10 11 (fontified t)) . 46) (undo-tree-id466 . -6) (undo-tree-id467 . -11) (undo-tree-id468 . 1) (undo-tree-id469 . -10) 52) nil (25720 18484 460865 135000) 0 nil])
([nil nil ((#("   1.1.
" 0 7 (fontified t) 7 8 (fontified t)) . 38) (undo-tree-id124 . -6) (undo-tree-id125 . -8) (undo-tree-id126 . -7) (undo-tree-id127 . -6) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -6) (undo-tree-id131 . -6) (undo-tree-id132 . -6) (undo-tree-id133 . -6) (undo-tree-id134 . -6) (undo-tree-id135 . -6) (undo-tree-id136 . -6) (undo-tree-id137 . -6) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (undo-tree-id140 . -6) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -6) (undo-tree-id145 . -6) (undo-tree-id146 . -6) (undo-tree-id147 . -6) (undo-tree-id148 . -6) (undo-tree-id149 . -6) (undo-tree-id150 . -6) (undo-tree-id151 . -6) (undo-tree-id152 . -6) (undo-tree-id153 . -6) (undo-tree-id154 . -6) (undo-tree-id155 . -6) (undo-tree-id156 . -6) (undo-tree-id157 . -6) (undo-tree-id158 . -6) (undo-tree-id159 . -6) (undo-tree-id160 . -6) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) (undo-tree-id166 . -6) (undo-tree-id167 . -6) (undo-tree-id168 . -6) (undo-tree-id169 . -6) (undo-tree-id170 . -6) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -6) (undo-tree-id174 . -6) (undo-tree-id175 . -6) (undo-tree-id176 . -6) (undo-tree-id177 . -6) (undo-tree-id178 . -6) (undo-tree-id179 . -6) (undo-tree-id180 . -6) (undo-tree-id181 . -6) (undo-tree-id182 . -6) (undo-tree-id183 . -6) (undo-tree-id184 . -6) (undo-tree-id185 . -6) (undo-tree-id186 . -6) (undo-tree-id187 . -6) (undo-tree-id188 . -6) (undo-tree-id189 . -6) (undo-tree-id190 . -6) (undo-tree-id191 . -6) (undo-tree-id192 . -6) (undo-tree-id193 . -6) (undo-tree-id194 . -6) (undo-tree-id195 . -6) (undo-tree-id196 . -6) (undo-tree-id197 . -6) (undo-tree-id198 . -6) (undo-tree-id199 . -6) (undo-tree-id200 . -6) (undo-tree-id201 . -6) (undo-tree-id202 . -6) (undo-tree-id203 . -6) (undo-tree-id204 . -6) (undo-tree-id205 . -6) (undo-tree-id206 . -6) (undo-tree-id207 . -6) (undo-tree-id208 . -6) (undo-tree-id209 . -6) (undo-tree-id210 . -6) (undo-tree-id211 . -6) (undo-tree-id212 . -6) (undo-tree-id213 . -6) (undo-tree-id214 . -6) (undo-tree-id215 . -6) (undo-tree-id216 . -6) (undo-tree-id217 . -6) (undo-tree-id218 . -6) (undo-tree-id219 . -6) (undo-tree-id220 . -6) (undo-tree-id221 . -6) (undo-tree-id222 . -6) (undo-tree-id223 . -6) (undo-tree-id224 . -6) (undo-tree-id225 . -6) (undo-tree-id226 . -6) (undo-tree-id227 . -6) (undo-tree-id228 . -6) (undo-tree-id229 . -6) (undo-tree-id230 . -6) (undo-tree-id231 . -6) (undo-tree-id232 . -6) (undo-tree-id233 . -6) (undo-tree-id234 . -6) (undo-tree-id235 . -6) (undo-tree-id236 . -6) (undo-tree-id237 . -6) (undo-tree-id238 . -6) (undo-tree-id239 . -6) (undo-tree-id240 . -6) (undo-tree-id241 . -6) (undo-tree-id242 . -6) (undo-tree-id243 . -6) (undo-tree-id244 . -6) (undo-tree-id245 . -6) (undo-tree-id246 . -6) (undo-tree-id247 . -6) (undo-tree-id248 . -6) (undo-tree-id249 . -6) (undo-tree-id250 . -6) (undo-tree-id251 . -6) (undo-tree-id252 . -6) (undo-tree-id253 . -6) (undo-tree-id254 . -6) (undo-tree-id255 . -6) (undo-tree-id256 . -6) (undo-tree-id257 . -6) (undo-tree-id258 . -6) (undo-tree-id259 . -6) (undo-tree-id260 . -6) (undo-tree-id261 . -6) (undo-tree-id262 . -6) (undo-tree-id263 . -6) (undo-tree-id264 . -6) (undo-tree-id265 . -6) (undo-tree-id266 . -6) (undo-tree-id267 . -6) (undo-tree-id268 . -6) (undo-tree-id269 . -6) (undo-tree-id270 . -6) (undo-tree-id271 . -6) (undo-tree-id272 . -6) (undo-tree-id273 . -6) (undo-tree-id274 . -6) (undo-tree-id275 . -6) (undo-tree-id276 . -6) (undo-tree-id277 . -6) (undo-tree-id278 . -6) (undo-tree-id279 . -6) (undo-tree-id280 . -6) (undo-tree-id281 . -6) (undo-tree-id282 . -6) (undo-tree-id283 . -6) (undo-tree-id284 . -6) (undo-tree-id285 . -6) (undo-tree-id286 . -6) (undo-tree-id287 . -6) (undo-tree-id288 . -6) (undo-tree-id289 . -6) (undo-tree-id290 . -6) (undo-tree-id291 . -6) (undo-tree-id292 . -6) (undo-tree-id293 . -6) (undo-tree-id294 . -6) (undo-tree-id295 . -6) (undo-tree-id296 . -6) (undo-tree-id297 . -6) (undo-tree-id298 . -6) (undo-tree-id299 . -6) (undo-tree-id300 . -6) (undo-tree-id301 . -6) (undo-tree-id302 . -6) (undo-tree-id303 . -6) (undo-tree-id304 . -6) (undo-tree-id305 . -6) (undo-tree-id306 . -6) (undo-tree-id307 . -6) (undo-tree-id308 . -6) (undo-tree-id309 . -6) (undo-tree-id310 . -6) (undo-tree-id311 . -6) (undo-tree-id312 . -6) (undo-tree-id313 . -6) (undo-tree-id314 . -6) (undo-tree-id315 . -6) (undo-tree-id316 . -6) (undo-tree-id317 . -6) (undo-tree-id318 . -6) (undo-tree-id319 . -6) (undo-tree-id320 . -6) (undo-tree-id321 . -6) (undo-tree-id322 . -6) (undo-tree-id323 . -6) (undo-tree-id324 . -6) (undo-tree-id325 . -6) (undo-tree-id326 . -6) (undo-tree-id327 . -6) (undo-tree-id328 . -6) (undo-tree-id329 . -6) (undo-tree-id330 . -6) (undo-tree-id331 . -6) (undo-tree-id332 . -6) (undo-tree-id333 . -6) (undo-tree-id334 . -6) (undo-tree-id335 . -6) (undo-tree-id336 . -6) (undo-tree-id337 . -6) (undo-tree-id338 . -6) (undo-tree-id339 . -6) (undo-tree-id340 . -6) (undo-tree-id341 . -6) (undo-tree-id342 . -6) (undo-tree-id343 . -6) (undo-tree-id344 . -6) (undo-tree-id345 . -6) (undo-tree-id346 . -6) (undo-tree-id347 . -6) (undo-tree-id348 . -6) (undo-tree-id349 . -6) (undo-tree-id350 . -6) (undo-tree-id351 . -6) (undo-tree-id352 . -6) (undo-tree-id353 . -6) (undo-tree-id354 . -6) (undo-tree-id355 . -6) (undo-tree-id356 . -6) (undo-tree-id357 . -6) (undo-tree-id358 . -6) (undo-tree-id359 . -6) (undo-tree-id360 . -6) (undo-tree-id361 . -6) (undo-tree-id362 . -6) (undo-tree-id363 . -6) (undo-tree-id364 . -6) (undo-tree-id365 . -6) (undo-tree-id366 . -6) (undo-tree-id367 . -6) (undo-tree-id368 . -6) (undo-tree-id369 . -6) (undo-tree-id370 . -6) (undo-tree-id371 . -6) (undo-tree-id372 . -6) (undo-tree-id373 . -6) (undo-tree-id374 . -6) (undo-tree-id375 . -6) (undo-tree-id376 . -6) (undo-tree-id377 . -6) (undo-tree-id378 . -6) (undo-tree-id379 . -6) (undo-tree-id380 . -6) (undo-tree-id381 . -6) (undo-tree-id382 . -6) (undo-tree-id383 . -6) (undo-tree-id384 . -6) (undo-tree-id385 . -6) (undo-tree-id386 . -6) (undo-tree-id387 . -6) (undo-tree-id388 . -6) (undo-tree-id389 . -6) (undo-tree-id390 . -6) (undo-tree-id391 . -6) (undo-tree-id392 . -6) (undo-tree-id393 . -6) (undo-tree-id394 . -6) (undo-tree-id395 . -6) (undo-tree-id396 . -6) (undo-tree-id397 . -6) (undo-tree-id398 . -6) (undo-tree-id399 . -6) (undo-tree-id400 . -6) (undo-tree-id401 . -6) (undo-tree-id402 . -6) (undo-tree-id403 . -6) (undo-tree-id404 . -6) (undo-tree-id405 . -6) (undo-tree-id406 . -6) (undo-tree-id407 . -6) (undo-tree-id408 . -6) (undo-tree-id409 . -6) (undo-tree-id410 . -6) (undo-tree-id411 . -6) (undo-tree-id412 . -6) (undo-tree-id413 . -6) (undo-tree-id414 . -6) (undo-tree-id415 . -6) (undo-tree-id416 . -6) (undo-tree-id417 . -6) (undo-tree-id418 . -6) (undo-tree-id419 . -6) (undo-tree-id420 . -6) (undo-tree-id421 . -6) (undo-tree-id422 . -6) (undo-tree-id423 . -6) (undo-tree-id424 . -6) (undo-tree-id425 . -6) (undo-tree-id426 . -6) (undo-tree-id427 . -6) (undo-tree-id428 . -6) (undo-tree-id429 . -6) (undo-tree-id430 . -6) (undo-tree-id431 . -6) (undo-tree-id432 . -6) (undo-tree-id433 . -6) (undo-tree-id434 . -6) (undo-tree-id435 . -6) (undo-tree-id436 . -6) (undo-tree-id437 . -6) (undo-tree-id438 . -6) (undo-tree-id439 . -6) (undo-tree-id440 . -6) (undo-tree-id441 . -6) (undo-tree-id442 . -6) (undo-tree-id443 . -6) (undo-tree-id444 . -6) (undo-tree-id445 . -6) (undo-tree-id446 . -6) (undo-tree-id447 . -6) (undo-tree-id448 . -6) (undo-tree-id449 . -6) (undo-tree-id450 . -6) (undo-tree-id451 . -6) (undo-tree-id452 . -6) (undo-tree-id453 . -6) (undo-tree-id454 . -6) (undo-tree-id455 . -6) (undo-tree-id456 . -6) (undo-tree-id457 . -6) (undo-tree-id458 . -6) (undo-tree-id459 . -6) (undo-tree-id460 . -6) (undo-tree-id461 . -6) (undo-tree-id462 . -6) (undo-tree-id463 . -6) (undo-tree-id464 . -6) (undo-tree-id465 . -8) 44) nil (25720 18484 460829 658000) 0 nil])
([nil nil ((334 . 338) (#("e" 0 1 (fontified t)) . -334) (undo-tree-id80 . -1) (#("m" 0 1 (fontified t)) . -335) (undo-tree-id81 . -1) 336 (335 . 336) (#("m" 0 1 (fontified t)) . -335) (undo-tree-id82 . -1) (#("n" 0 1 (fontified t)) . -336) (undo-tree-id83 . -1) (#("t" 0 1 (fontified t)) . -337) (undo-tree-id84 . -1) (#(" " 0 1 (fontified t)) . -338) (undo-tree-id85 . -1) 339 (320 . 339) (#("m" 0 1 (fontified t)) . -320) (undo-tree-id86 . -1) 321 (312 . 321) (#("html " 0 5 (fontified t)) . -312) (undo-tree-id87 . -5) 317 (316 . 317) (305 . 316) (#("g" 0 1 (fontified t)) . -305) (undo-tree-id88 . -1) (#("n" 0 1 (fontified t)) . -306) (undo-tree-id89 . -1) (#(" " 0 1 (fontified t)) . -307) (undo-tree-id90 . -1) 308 (290 . 308) (#("t" 0 1 (fontified t)) . -290) (undo-tree-id91 . -1) 291 (285 . 291) (#("i" 0 1 (fontified t)) . -285) (undo-tree-id92 . -1) 286 (270 . 286) (#(" " 0 1 (fontified t)) . -270) (undo-tree-id93 . -1) 271 (269 . 271) (268 . 269) (265 . 268) (244 . 265) (#("t" 0 1 (fontified t)) . -244) (undo-tree-id94 . -1) (#("y" 0 1 (fontified t)) . -245) (undo-tree-id95 . -1) (#(" " 0 1 (fontified t)) . -246) (undo-tree-id96 . -1) 247 (243 . 247) (222 . 243) (#(" " 0 1 (fontified t)) . -222) (undo-tree-id97 . -1) 223 (216 . 223) (#("t" 0 1 (fontified t)) . -216) (undo-tree-id98 . -1) (#(" " 0 1 (fontified t)) . -217) (undo-tree-id99 . -1) 218 (209 . 218) (208 . 209) (#("B" 0 1 (fontified t)) . -208) (undo-tree-id100 . -1) 209 (206 . 209) (#(" " 0 1 (fontified t)) . -206) (undo-tree-id101 . -1) 207 (202 . 207) (181 . 202) (#("o" 0 1 (fontified t)) . -181) (undo-tree-id102 . -1) 182 (165 . 182) (#("G" 0 1 (fontified t)) . -165) (undo-tree-id103 . -1) (#("H" 0 1 (fontified t)) . -166) (undo-tree-id104 . -1) 167 (165 . 167) (160 . 165) (148 . 160) (127 . 148) (#("e" 0 1 (fontified t)) . -127) (undo-tree-id105 . -1) (#("h" 0 1 (fontified t)) . -128) (undo-tree-id106 . -1) (#("n" 0 1 (fontified t)) . -129) (undo-tree-id107 . -1) 130 (126 . 130) (125 . 126) (107 . 125) (86 . 107) (84 . 86) (#(" " 0 1 (fontified t face org-level-3)) . -84) (undo-tree-id108 . -1) 85 (70 . 85) (#("k" 0 1 (fontified t face org-level-3)) . -70) (undo-tree-id109 . -1) 71 (68 . 71) (47 . 68) (#("e" 0 1 (fontified t face org-level-3)) . -47) (undo-tree-id110 . -1) 48 (46 . 48) (42 . 46) (nil fontified t 41 . 42) (nil keymap (keymap) 41 . 42) (nil face org-level-2 41 . 42) (nil fontified t 40 . 41) (nil composition (1 1 [9675]) 40 . 41) (nil keymap (keymap) 40 . 41) (nil face org-level-2 40 . 41) (nil fontified t 39 . 40) (nil face org-hide 39 . 40) (nil keymap (keymap) 39 . 40) (#("** " 0 1 (fontified t face org-hide keymap (keymap)) 1 2 (fontified t composition (1 1 [9675]) keymap (keymap) face org-level-2) 2 3 (fontified t keymap (keymap) face org-level-2)) . 38) (41 . 45) (38 . 41) (#("
   " 0 1 (fontified t) 1 4 (fontified nil)) . 37) (undo-tree-id111 . -4) (undo-tree-id112 . -1) (41 . 42) (#("1" 0 1 (fontified t)) . -41) (undo-tree-id113 . -1) (#("." 0 1 (fontified t)) . -42) (undo-tree-id114 . -1) (#("1" 0 1 (fontified t)) . -43) (undo-tree-id115 . -1) (#(" " 0 1 (fontified t)) . -44) (undo-tree-id116 . -1) (#("l" 0 1 (fontified t)) . -45) (undo-tree-id117 . -1) (#("k" 0 1 (fontified t)) . -46) (undo-tree-id118 . -1) (#("d" 0 1 (fontified t)) . -47) (undo-tree-id119 . -1) (#("a" 0 1 (fontified t)) . -48) (undo-tree-id120 . -1) (#("j" 0 1 (fontified t)) . -49) (undo-tree-id121 . -1) (#("f" 0 1 (fontified t)) . -50) (undo-tree-id122 . -1) (#("s" 0 1 (fontified t)) . -51) (undo-tree-id123 . -1) 52 (45 . 52) (44 . 45) (41 . 44) (37 . 41) 27) nil (25720 18484 460294 978000) 0 nil])
([nil nil ((405 . 406) (393 . 405) (#("n" 0 1 (fontified t)) . -393) (undo-tree-id9 . -1) (#("k" 0 1 (fontified t)) . -394) (undo-tree-id10 . -1) (#("e" 0 1 (fontified t)) . -395) (undo-tree-id11 . -1) 396 (386 . 396) (#("r" 0 1 (fontified t)) . -386) (undo-tree-id12 . -1) 387 (386 . 387) (382 . 386) (361 . 382) (340 . 361) (#("e" 0 1 (fontified t)) . -340) (undo-tree-id13 . -1) (#("h" 0 1 (fontified t)) . -341) (undo-tree-id14 . -1) 342 (339 . 342) (338 . 339) (t 25720 18484 465666 983000) 270) nil (25720 19467 632958 626000) 0 nil])
([nil nil ((406 . 409)) nil (25720 19467 632942 4000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 408) (undo-tree-id7 . -1) (undo-tree-id8 . -1)) nil (25720 19467 632938 582000) 0 nil])
([nil nil ((#("sr
" 0 2 (fontified t) 2 3 (fontified t)) . 406) (undo-tree-id2 . -1) (undo-tree-id3 . -3) (undo-tree-id4 . -2) (undo-tree-id5 . 1) (undo-tree-id6 . -2) 407) nil (25720 19481 567804 350000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 428) (406 . 428) (406 . 409) (#("a" 0 1 (fontified nil)) . 406) (405 . 407)) ((#("
" 0 1 (fontified t)) . 405) (#("a" 0 1 (fontified nil)) . 406) (406 . 407) (#("src" 0 3 (fontified nil)) . 406) (undo-tree-id19 . 3) (#("#+BEGIN_SRC 
#+END_SRC" 0 13 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil) 13 22 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified nil)) . 406) (undo-tree-id20 . 10) (428 . 431) (t 25720 19467 647297 726000)) (25720 19489 389019 76000) 0 nil])
([nil nil ((#("*" 0 1 (face org-level-2 fontified t)) . -583) (undo-tree-id21 . -1) 584 (t 25720 19467 647297 726000)) nil (25720 19498 300434 314000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 581) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (t 25720 19467 647297 726000)) ((581 . 582)) (25720 19479 248133 961000) 0 nil])
([nil nil ((nil fontified t 584 . 585) (nil keymap (keymap) 584 . 585) (nil face org-level-1 584 . 585) (nil fontified t 583 . 584) (nil composition (0 1 [9673]) 583 . 584) (nil keymap (keymap) 583 . 584) (nil face org-level-1 583 . 584) (#("* " 0 1 (face org-level-1 keymap (keymap) composition (0 1 [9673]) fontified t) 1 2 (face org-level-1 keymap (keymap) fontified t)) . 582) (584 . 587) 583) nil (25720 19498 300397 648000) 0 nil])
nil
([nil nil ((434 . 449) (#("u" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -434) (undo-tree-id410 . -1) (#("_" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -435) (undo-tree-id411 . -1) 436 (425 . 436) (424 . 425) (#("w" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -424) (undo-tree-id412 . -1) 425 (424 . 425) (#("2" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -424) (undo-tree-id413 . -1) 425 (418 . 425) (#("t" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -418) (undo-tree-id414 . -1) (#(":" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -419) (undo-tree-id415 . -1) 420 (419 . 420) (#("a" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -419) (undo-tree-id416 . -1) (#("g" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -420) (undo-tree-id417 . -1) (#("n" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -421) (undo-tree-id418 . -1) 422 (417 . 422) (t 25720 19498 315125 555000)) nil (25720 19920 562740 286000) 0 nil])
([nil nil ((450 . 451) 448) nil (25720 19920 562716 52000) 0 nil])
([nil nil ((nil rear-nonsticky nil 570 . 571) (nil fontified nil 451 . 571) (451 . 571)) nil (25720 19920 562712 629000) 0 nil])
([nil nil ((417 . 422)) nil (25720 19920 562708 788000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 420) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) 421) nil (25720 19931 23084 395000) 0 nil])
([nil nil ((420 . 421)) nil (25720 19939 282948 92000) 0 nil] [nil nil ((406 . 407) (#("#+BEGIN_SRC htl :tangle hierarchy_of_nodes.html 
" 0 48 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 48 49 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 406) (undo-tree-id0 . -49) (undo-tree-id1 . 34) (undo-tree-id2 . -49) (undo-tree-id3 . -49) (undo-tree-id4 . -48) (undo-tree-id5 . -14) (undo-tree-id7 . -14) (undo-tree-id9 . -14) (undo-tree-id11 . -14) (undo-tree-id13 . -14) (undo-tree-id15 . -14) (undo-tree-id17 . -14) (undo-tree-id19 . -14) (undo-tree-id21 . -14) (undo-tree-id23 . -14) (undo-tree-id25 . -14) (undo-tree-id27 . -14) (undo-tree-id29 . -14) (undo-tree-id31 . -14) (undo-tree-id33 . -14) (undo-tree-id35 . -14) (undo-tree-id37 . -14) (undo-tree-id39 . -14) (undo-tree-id41 . -14) (undo-tree-id43 . -14) (undo-tree-id45 . -14) (undo-tree-id47 . -14) (undo-tree-id49 . -14) (undo-tree-id51 . -14) (undo-tree-id53 . -14) (undo-tree-id55 . -14) (undo-tree-id57 . -14) (undo-tree-id59 . -14) (undo-tree-id61 . -14) (undo-tree-id63 . -14) (undo-tree-id65 . -14) (undo-tree-id67 . -14) (undo-tree-id69 . -14) (undo-tree-id71 . -14) (undo-tree-id73 . -14) (undo-tree-id75 . -14) (undo-tree-id77 . -14) (undo-tree-id79 . -14) (undo-tree-id81 . -14) (undo-tree-id83 . -14) (undo-tree-id85 . -14) (undo-tree-id87 . -14) (undo-tree-id89 . -14) (undo-tree-id91 . -14) (undo-tree-id93 . -14) (undo-tree-id95 . -14) (undo-tree-id97 . -14) (undo-tree-id99 . -14) (undo-tree-id101 . -14) (undo-tree-id103 . -14) (undo-tree-id105 . -14) (undo-tree-id107 . -14) (undo-tree-id109 . -14) (undo-tree-id111 . -14) (undo-tree-id113 . -14) (undo-tree-id115 . -14) (undo-tree-id117 . -14) (undo-tree-id119 . -14) (undo-tree-id121 . -14) (undo-tree-id123 . -14) (undo-tree-id125 . -14) (undo-tree-id127 . -14) (undo-tree-id129 . -14) (undo-tree-id131 . -14) (undo-tree-id133 . -14) (undo-tree-id135 . -14) (undo-tree-id137 . -14) (undo-tree-id139 . -14) (undo-tree-id141 . -14) (undo-tree-id143 . -14) (undo-tree-id145 . -14) (undo-tree-id147 . -14) (undo-tree-id149 . -14) (undo-tree-id151 . -14) (undo-tree-id153 . -14) (undo-tree-id155 . -14) (undo-tree-id157 . -14) (undo-tree-id159 . -14) (undo-tree-id161 . -14) (undo-tree-id163 . -14) (undo-tree-id165 . -14) (undo-tree-id167 . -14) (undo-tree-id169 . -14) (undo-tree-id171 . -14) (undo-tree-id173 . -14) (undo-tree-id175 . -14) (undo-tree-id177 . -14) (undo-tree-id179 . -14) (undo-tree-id181 . -14) (undo-tree-id183 . -14) (undo-tree-id185 . -14) (undo-tree-id187 . -14) (undo-tree-id189 . -14) (undo-tree-id191 . -14) (undo-tree-id193 . -14) (undo-tree-id195 . -14) (undo-tree-id197 . -14) (undo-tree-id199 . -14) (undo-tree-id201 . -14) (undo-tree-id203 . -14) (undo-tree-id205 . -14) (undo-tree-id207 . -14) (undo-tree-id209 . -14) (undo-tree-id211 . -14) (undo-tree-id213 . -14) (undo-tree-id215 . -14) (undo-tree-id217 . -14) (undo-tree-id219 . -14) (undo-tree-id221 . -14) (undo-tree-id223 . -14) (undo-tree-id225 . -14) (undo-tree-id227 . -14) (undo-tree-id229 . -14) (undo-tree-id231 . -14) (undo-tree-id233 . -14) (undo-tree-id235 . -14) (undo-tree-id237 . -14) (undo-tree-id239 . -14) (undo-tree-id241 . -14) (undo-tree-id243 . -14) (undo-tree-id245 . -14) (undo-tree-id247 . -14) (undo-tree-id249 . -14) (undo-tree-id251 . -14) (undo-tree-id253 . -14) (undo-tree-id255 . -14) (undo-tree-id257 . -14) (undo-tree-id259 . -14) (undo-tree-id261 . -14) (undo-tree-id263 . -14) (undo-tree-id265 . -14) (undo-tree-id267 . -14) (undo-tree-id269 . -14) (undo-tree-id271 . -14) (undo-tree-id273 . -14) (undo-tree-id275 . -14) (undo-tree-id277 . -14) (undo-tree-id279 . -14) (undo-tree-id281 . -14) (undo-tree-id283 . -14) (undo-tree-id285 . -14) (undo-tree-id287 . -14) (undo-tree-id289 . -14) (undo-tree-id291 . -14) (undo-tree-id293 . -14) (undo-tree-id295 . -14) (undo-tree-id297 . -14) (undo-tree-id299 . -14) (undo-tree-id301 . -14) (undo-tree-id303 . -14) (undo-tree-id305 . -14) (undo-tree-id307 . -14) (undo-tree-id309 . -14) (undo-tree-id311 . -14) (undo-tree-id313 . -14) (undo-tree-id315 . -14) (undo-tree-id317 . -14) (undo-tree-id319 . -14) (undo-tree-id321 . -14) (undo-tree-id323 . -14) (undo-tree-id325 . -14) (undo-tree-id327 . -14) (undo-tree-id329 . -14) (undo-tree-id331 . -14) (undo-tree-id333 . -14) (undo-tree-id335 . -14) (undo-tree-id337 . -14) (undo-tree-id339 . -14) (undo-tree-id341 . -14) (undo-tree-id343 . -14) (undo-tree-id345 . -49) (undo-tree-id347 . -49) 420) ((406 . 455) (#("
" 0 1 (fontified t)) . 406) (undo-tree-id449 . -1) (undo-tree-id450 . 1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (t 25720 19920 569635 249000)) (25720 19930 557073 853000) 0 nil])
([nil nil ((586 . 587) 585) nil (25720 19939 282919 248000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -406) (undo-tree-id447 . -1) 407 (406 . 407) (t 25720 19920 569635 249000)) ((#("j" 0 1 (fontified nil)) . 406) (undo-tree-id448 . -1) (406 . 407)) (25720 19930 252925 12000) 0 nil])
([nil nil ((746 . 747) (745 . 746) (738 . 745) (736 . 738) (#("s" 0 1 (fontified t)) . -736) (undo-tree-id865 . -1) 737 (736 . 737) (#("a" 0 1 (fontified t)) . -736) (undo-tree-id866 . -1) (#("v" 0 1 (fontified t)) . -737) (undo-tree-id867 . -1) 738 (735 . 738) (#("d" 0 1 (fontified t)) . -735) (undo-tree-id868 . -1) 736 (729 . 736) (708 . 729) (695 . 708) (680 . 695) (672 . 680) (#("g" 0 1 (fontified t)) . -672) (undo-tree-id869 . -1) 673 (665 . 673) (#("g" 0 1 (fontified t)) . -665) (undo-tree-id870 . -1) (#("v" 0 1 (fontified t)) . -666) (undo-tree-id871 . -1) 667 (657 . 667) (#(" " 0 1 (fontified t)) . -657) (undo-tree-id872 . -1) (#("s" 0 1 (fontified t)) . -658) (undo-tree-id873 . -1) 659 (640 . 659) (#("o" 0 1 (fontified t)) . -640) (undo-tree-id874 . -1) 641 (634 . 641) (#("g" 0 1 (fontified t)) . -634) (undo-tree-id875 . -1) 635 (633 . 635) (632 . 633) (620 . 632) (599 . 620) (#("b" 0 1 (fontified t)) . -599) (undo-tree-id876 . -1) 600 (592 . 600) (#("d" 0 1 (fontified t)) . -592) (undo-tree-id877 . -1) 593 (587 . 593) (t 25720 19939 285597 153000)) nil (25720 20068 102335 941000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 406) (undo-tree-id419 . -1) (undo-tree-id420 . 1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1)) ((406 . 407)) (25720 19930 252705 432000) 0 nil])
([nil nil ((652 . 655) (#("dom" 0 3 (fontified t)) . 652) (undo-tree-id476 . -2) (undo-tree-id477 . -1) (undo-tree-id478 . -3) (undo-tree-id479 . -3) (undo-tree-id480 . -3) (undo-tree-id481 . -3) (undo-tree-id482 . -3) (undo-tree-id483 . -3) (undo-tree-id484 . -3) (undo-tree-id485 . -3) (undo-tree-id486 . -3) (undo-tree-id487 . -3) (undo-tree-id488 . -3) (undo-tree-id489 . -3) (undo-tree-id490 . -3) (undo-tree-id491 . -3) (undo-tree-id492 . -3) (undo-tree-id493 . -3) (undo-tree-id494 . -3) (undo-tree-id495 . -3) (undo-tree-id496 . -3) (undo-tree-id497 . -3) (undo-tree-id498 . -3) (undo-tree-id499 . -3) (undo-tree-id500 . -3) (undo-tree-id501 . -3) (undo-tree-id502 . -3) (undo-tree-id503 . -3) (undo-tree-id504 . -3) (undo-tree-id505 . -3) (undo-tree-id506 . -3) (undo-tree-id507 . -3) (undo-tree-id508 . -3) (undo-tree-id509 . -3) (undo-tree-id510 . -3) (undo-tree-id511 . -3) (undo-tree-id512 . -3) (undo-tree-id513 . -3) (undo-tree-id514 . -3) (undo-tree-id515 . -3) (undo-tree-id516 . -3) (undo-tree-id517 . -3) (undo-tree-id518 . -3) (undo-tree-id519 . -3) (undo-tree-id520 . -3) (undo-tree-id521 . -3) (undo-tree-id522 . -3) (undo-tree-id523 . -3) (undo-tree-id524 . -3) (undo-tree-id525 . -3) (undo-tree-id526 . -3) (undo-tree-id527 . -3) (undo-tree-id528 . -3) (undo-tree-id529 . -3) (undo-tree-id530 . -3) (undo-tree-id531 . -3) (undo-tree-id532 . -3) (undo-tree-id533 . -3) (undo-tree-id534 . -3) (undo-tree-id535 . -3) (undo-tree-id536 . -3) (undo-tree-id537 . -3) (undo-tree-id538 . -3) (undo-tree-id539 . -3) (undo-tree-id540 . -3) (undo-tree-id541 . -3) (undo-tree-id542 . -3) (undo-tree-id543 . -3) (undo-tree-id544 . -3) (undo-tree-id545 . -3) (undo-tree-id546 . -3) (undo-tree-id547 . -3) (undo-tree-id548 . -3) (undo-tree-id549 . -3) (undo-tree-id550 . -3) (undo-tree-id551 . -3) (undo-tree-id552 . -3) (undo-tree-id553 . -3) (undo-tree-id554 . -3) (undo-tree-id555 . -3) (undo-tree-id556 . -3) (undo-tree-id557 . -3) (undo-tree-id558 . -3) (undo-tree-id559 . -3) (undo-tree-id560 . -3) (undo-tree-id561 . -3) (undo-tree-id562 . -3) (undo-tree-id563 . -3) (undo-tree-id564 . -3) (undo-tree-id565 . -3) (undo-tree-id566 . -3) (undo-tree-id567 . -3) (undo-tree-id568 . -3) (undo-tree-id569 . -3) (undo-tree-id570 . -3) (undo-tree-id571 . -3) (undo-tree-id572 . -3) (undo-tree-id573 . -3) (undo-tree-id574 . -3) (undo-tree-id575 . -3) (undo-tree-id576 . -3) (undo-tree-id577 . -3) (undo-tree-id578 . -3) (undo-tree-id579 . -3) (undo-tree-id580 . -3) (undo-tree-id581 . -3) (undo-tree-id582 . -3) (undo-tree-id583 . -3) (undo-tree-id584 . -3) (undo-tree-id585 . -3) (undo-tree-id586 . -3) (undo-tree-id587 . -3) (undo-tree-id588 . -3) (undo-tree-id589 . -3) (undo-tree-id590 . -3) (undo-tree-id591 . -3) (undo-tree-id592 . -3) (undo-tree-id593 . -3) (undo-tree-id594 . -3) (undo-tree-id595 . -3) (undo-tree-id596 . -3) (undo-tree-id597 . -3) (undo-tree-id598 . -3) (undo-tree-id599 . -3) (undo-tree-id600 . -3) (undo-tree-id601 . -3) (undo-tree-id602 . -3) (undo-tree-id603 . -3) (undo-tree-id604 . -3) (undo-tree-id605 . -3) (undo-tree-id606 . -3) (undo-tree-id607 . -3) (undo-tree-id608 . -3) (undo-tree-id609 . -3) (undo-tree-id610 . -3) (undo-tree-id611 . -3) (undo-tree-id612 . -3) (undo-tree-id613 . -3) (undo-tree-id614 . -3) (undo-tree-id615 . -3) (undo-tree-id616 . -3) (undo-tree-id617 . -3) (undo-tree-id618 . -3) (undo-tree-id619 . -3) (undo-tree-id620 . -3) (undo-tree-id621 . -3) (undo-tree-id622 . -3) (undo-tree-id623 . -3) (undo-tree-id624 . -3) (undo-tree-id625 . -3) (undo-tree-id626 . -3) (undo-tree-id627 . -3) (undo-tree-id628 . -3) (undo-tree-id629 . -3) (undo-tree-id630 . -3) (undo-tree-id631 . -3) (undo-tree-id632 . -3) (undo-tree-id633 . -3) (undo-tree-id634 . -3) (undo-tree-id635 . -3) (undo-tree-id636 . -3) (undo-tree-id637 . -3) (undo-tree-id638 . -3) (undo-tree-id639 . -3) (undo-tree-id640 . -3) (undo-tree-id641 . -3) (undo-tree-id642 . -3) (undo-tree-id643 . -3) (undo-tree-id644 . -3) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (undo-tree-id647 . -3) (undo-tree-id648 . -3) (undo-tree-id649 . -3) (undo-tree-id650 . -3) (undo-tree-id651 . -3) (undo-tree-id652 . -3) (undo-tree-id653 . -3) (undo-tree-id654 . -3) (undo-tree-id655 . -3) (undo-tree-id656 . -3) (undo-tree-id657 . -3) (undo-tree-id658 . -3) (undo-tree-id659 . -3) (undo-tree-id660 . -3) (undo-tree-id661 . -3) (undo-tree-id662 . -3) (undo-tree-id663 . -3) (undo-tree-id664 . -3) (undo-tree-id665 . -3) (undo-tree-id666 . -3) (undo-tree-id667 . -3) (undo-tree-id668 . -3) (undo-tree-id669 . -3) (undo-tree-id670 . -3) (undo-tree-id671 . -3) (undo-tree-id672 . -3) (undo-tree-id673 . -3) (undo-tree-id674 . -3) (undo-tree-id675 . -3) (undo-tree-id676 . -3) (undo-tree-id677 . -3) (undo-tree-id678 . -3) (undo-tree-id679 . -3) (undo-tree-id680 . -3) (undo-tree-id681 . -3) (undo-tree-id682 . -3) (undo-tree-id683 . -3) (undo-tree-id684 . -3) (undo-tree-id685 . -3) (undo-tree-id686 . -3) (undo-tree-id687 . -3) (undo-tree-id688 . -3) (undo-tree-id689 . -3) (undo-tree-id690 . -3) (undo-tree-id691 . -3) (undo-tree-id692 . -3) (undo-tree-id693 . -3) (undo-tree-id694 . -2) (undo-tree-id695 . -2) (undo-tree-id696 . -2) (undo-tree-id697 . -2) (undo-tree-id698 . -2) (undo-tree-id699 . -2) (undo-tree-id700 . -2) (undo-tree-id701 . -2) (undo-tree-id702 . -2) (undo-tree-id703 . -2) (undo-tree-id704 . -2) (undo-tree-id705 . -2) (undo-tree-id706 . -2) (undo-tree-id707 . -2) (undo-tree-id708 . -2) (undo-tree-id709 . -2) (undo-tree-id710 . -2) (undo-tree-id711 . -2) (undo-tree-id712 . -2) (undo-tree-id713 . -2) (undo-tree-id714 . -2) (undo-tree-id715 . -2) (undo-tree-id716 . -2) (undo-tree-id717 . -2) (undo-tree-id718 . -2) (undo-tree-id719 . -2) (undo-tree-id720 . -2) (undo-tree-id721 . -2) (undo-tree-id722 . -2) (undo-tree-id723 . -2) (undo-tree-id724 . -2) (undo-tree-id725 . -2) (undo-tree-id726 . -2) (undo-tree-id727 . -2) (undo-tree-id728 . -2) (undo-tree-id729 . -2) (undo-tree-id730 . -2) (undo-tree-id731 . -2) (undo-tree-id732 . -2) (undo-tree-id733 . -2) (undo-tree-id734 . -2) (undo-tree-id735 . -2) (undo-tree-id736 . -2) (undo-tree-id737 . -2) (undo-tree-id738 . -2) (undo-tree-id739 . -2) (undo-tree-id740 . -2) (undo-tree-id741 . -2) (undo-tree-id742 . -2) (undo-tree-id743 . -2) (undo-tree-id744 . -2) (undo-tree-id745 . -2) (undo-tree-id746 . -2) (undo-tree-id747 . -2) (undo-tree-id748 . -2) (undo-tree-id749 . -2) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -3) (undo-tree-id864 . -3) 653) nil (25720 20068 102264 145000) 0 nil])
nil
([nil nil ((747 . 751) 748 (747 . 748) (t 25720 20068 105378 558000) 55) nil (25720 20105 664266 790000) 0 nil])
([nil nil ((751 . 752) 749) nil (25720 20105 664261 692000) 0 nil])
([nil nil ((769 . 773) (#("e" 0 1 (fontified t face org-level-3)) . -769) (undo-tree-id884 . -1) 770 (769 . 770) (#("l" 0 1 (fontified t face org-level-3)) . -769) (undo-tree-id885 . -1) 770 (757 . 770) (#("e" 0 1 (fontified t face org-level-3)) . -757) (undo-tree-id886 . -1) (#(" " 0 1 (fontified t face org-level-3)) . -758) (undo-tree-id887 . -1) 759 (757 . 759) (751 . 757) (#("2" 0 1 (fontified t face org-level-3)) . -751) (undo-tree-id888 . -1) (#("." 0 1 (fontified t face org-level-3)) . -752) (undo-tree-id889 . -1) (#("3" 0 1 (fontified t face org-level-3)) . -753) (undo-tree-id890 . -1) (#(" " 0 1 (fontified t face org-level-3)) . -754) (undo-tree-id891 . -1) 755 (751 . 755) (#(" " 0 1 (fontified t face org-level-3)) . -751) (undo-tree-id892 . -1) 752 (751 . 752)) nil (25720 20150 189503 224000) 0 nil])
([nil nil ((774 . 778) 772 (t 25720 20108 273324 180000)) nil (25720 20187 757966 39000) 0 nil] [nil nil ((778 . 783) (774 . 778) (#("
    " 0 5 (fontified t)) . 773) (undo-tree-id952 . -1) (undo-tree-id953 . -5) 778 (773 . 778) (t 25720 20108 273324 180000) 772) ((#("
    " 0 5 (fontified nil)) . 773) (773 . 778) (#("*** " 0 2 (fontified nil face org-hide keymap (keymap)) 2 3 (fontified nil composition (2 1 [10040]) keymap (keymap) face org-level-3) 3 4 (fontified nil keymap (keymap) face org-level-3)) . 774) (undo-tree-id1016 . -4) (undo-tree-id1017 . -4) (undo-tree-id1018 . -4) (undo-tree-id1019 . -4) (undo-tree-id1020 . -3) (undo-tree-id1021 . -4) (undo-tree-id1022 . -4) (undo-tree-id1023 . -4) (undo-tree-id1024 . -4) (undo-tree-id1025 . -4) (undo-tree-id1026 . -4) (undo-tree-id1027 . -4) (undo-tree-id1028 . -4) (undo-tree-id1029 . -4) (undo-tree-id1030 . -4) (undo-tree-id1031 . -4) (undo-tree-id1032 . -4) (undo-tree-id1033 . -4) (undo-tree-id1034 . -4) (undo-tree-id1035 . -4) (undo-tree-id1036 . -4) (undo-tree-id1037 . -4) (undo-tree-id1038 . -4) (undo-tree-id1039 . -4) (undo-tree-id1040 . -4) (undo-tree-id1041 . -4) (undo-tree-id1042 . -4) (undo-tree-id1043 . -4) (undo-tree-id1044 . -4) (undo-tree-id1045 . -4) (undo-tree-id1046 . -4) (undo-tree-id1047 . -4) (undo-tree-id1048 . -4) (undo-tree-id1049 . -4) (undo-tree-id1050 . -4) (undo-tree-id1051 . -4) (undo-tree-id1052 . -4) (undo-tree-id1053 . -4) (undo-tree-id1054 . -4) (undo-tree-id1055 . -4) (undo-tree-id1056 . -4) (undo-tree-id1057 . -4) (undo-tree-id1058 . -4) (undo-tree-id1059 . -4) (undo-tree-id1060 . -4) (undo-tree-id1061 . -4) (undo-tree-id1062 . -4) (undo-tree-id1063 . -4) (undo-tree-id1064 . -4) (undo-tree-id1065 . -4) (undo-tree-id1066 . -4) (undo-tree-id1067 . -4) (undo-tree-id1068 . -4) (undo-tree-id1069 . -4) (undo-tree-id1070 . -4) (undo-tree-id1071 . -4) (undo-tree-id1072 . -4) (undo-tree-id1073 . -4) (undo-tree-id1074 . -4) (undo-tree-id1075 . -4) (undo-tree-id1076 . -4) (undo-tree-id1077 . -4) (undo-tree-id1078 . -4) (undo-tree-id1079 . -4) (undo-tree-id1080 . -4) (undo-tree-id1081 . -4) (undo-tree-id1082 . -4) (undo-tree-id1083 . -4) (undo-tree-id1084 . -4) (undo-tree-id1085 . -4) (undo-tree-id1086 . -4) (undo-tree-id1087 . -4) (undo-tree-id1088 . -4) (undo-tree-id1089 . -4) (undo-tree-id1090 . -4) (undo-tree-id1091 . -4) (undo-tree-id1092 . -4) (undo-tree-id1093 . -4) (undo-tree-id1094 . -4) (undo-tree-id1095 . -4) (undo-tree-id1096 . -4) (undo-tree-id1097 . -4) (undo-tree-id1098 . -4) (undo-tree-id1099 . -4) (undo-tree-id1100 . -4) (undo-tree-id1101 . -4) (undo-tree-id1102 . -4) (undo-tree-id1103 . -4) (undo-tree-id1104 . -4) (undo-tree-id1105 . -4) (undo-tree-id1106 . -4) (undo-tree-id1107 . -4) (undo-tree-id1108 . -4) (undo-tree-id1109 . -4) (undo-tree-id1110 . -4) (undo-tree-id1111 . -4) (undo-tree-id1112 . -4) (undo-tree-id1113 . -4) (undo-tree-id1114 . -4) (undo-tree-id1115 . -4) (undo-tree-id1116 . -4) (undo-tree-id1117 . -4) (undo-tree-id1118 . -4) (undo-tree-id1119 . -4) (undo-tree-id1120 . -4) (undo-tree-id1121 . -4) (undo-tree-id1122 . -4) (undo-tree-id1123 . -4) (undo-tree-id1124 . -4) (undo-tree-id1125 . -4) (undo-tree-id1126 . -4) (undo-tree-id1127 . -4) (undo-tree-id1128 . -4) (undo-tree-id1129 . -4) (undo-tree-id1130 . -4) (undo-tree-id1131 . -4) (undo-tree-id1132 . -4) (undo-tree-id1133 . -4) (undo-tree-id1134 . -4) (undo-tree-id1135 . -4) (undo-tree-id1136 . -4) (undo-tree-id1137 . -4) (undo-tree-id1138 . -4) (undo-tree-id1139 . -4) (undo-tree-id1140 . -4) (undo-tree-id1141 . -4) (undo-tree-id1142 . -4) (undo-tree-id1143 . -4) (undo-tree-id1144 . -4) (undo-tree-id1145 . -4) (undo-tree-id1146 . -4) (undo-tree-id1147 . -4) (undo-tree-id1148 . -4) (undo-tree-id1149 . -4) (undo-tree-id1150 . -4) (undo-tree-id1151 . -4) (undo-tree-id1152 . -4) (undo-tree-id1153 . -4) (undo-tree-id1154 . -4) (undo-tree-id1155 . -4) (undo-tree-id1156 . -4) (undo-tree-id1157 . -4) (undo-tree-id1158 . -4) (undo-tree-id1159 . -4) (undo-tree-id1160 . -4) (undo-tree-id1161 . -4) (undo-tree-id1162 . -4) (undo-tree-id1163 . -4) (undo-tree-id1164 . -4) (undo-tree-id1165 . -4) (undo-tree-id1166 . -4) (undo-tree-id1167 . -4) (undo-tree-id1168 . -4) (undo-tree-id1169 . -4) (undo-tree-id1170 . -4) (undo-tree-id1171 . -4) (undo-tree-id1172 . -4) (undo-tree-id1173 . -4) (undo-tree-id1174 . -4) (undo-tree-id1175 . -4) (undo-tree-id1176 . -4) (undo-tree-id1177 . -4) (undo-tree-id1178 . -4) (undo-tree-id1179 . -4) (undo-tree-id1180 . -4) (undo-tree-id1181 . -4) (undo-tree-id1182 . -4) (undo-tree-id1183 . -4) (undo-tree-id1184 . -4) (undo-tree-id1185 . -4) (undo-tree-id1186 . -4) (undo-tree-id1187 . -4) (undo-tree-id1188 . -4) (undo-tree-id1189 . -4) (undo-tree-id1190 . -4) (undo-tree-id1191 . -4) (undo-tree-id1192 . -4) (undo-tree-id1193 . -4) (undo-tree-id1194 . -4) (undo-tree-id1195 . -4) (undo-tree-id1196 . -4) (undo-tree-id1197 . -4) (undo-tree-id1198 . -4) (undo-tree-id1199 . -4) (undo-tree-id1200 . -4) (undo-tree-id1201 . -4) (undo-tree-id1202 . -4) (undo-tree-id1203 . -4) (undo-tree-id1204 . -4) (undo-tree-id1205 . -4) (undo-tree-id1206 . -4) (undo-tree-id1207 . -4) (undo-tree-id1208 . -4) (undo-tree-id1209 . -4) (undo-tree-id1210 . -4) (undo-tree-id1211 . -4) (undo-tree-id1212 . -4) (undo-tree-id1213 . -4) (undo-tree-id1214 . -4) (undo-tree-id1215 . -4) (undo-tree-id1216 . -4) (undo-tree-id1217 . -4) (undo-tree-id1218 . -4) (undo-tree-id1219 . -4) (undo-tree-id1220 . -4) (undo-tree-id1221 . -4) (undo-tree-id1222 . -4) (undo-tree-id1223 . -4) (undo-tree-id1224 . -4) (undo-tree-id1225 . -4) (undo-tree-id1226 . -4) (undo-tree-id1227 . -4) (undo-tree-id1228 . -4) (undo-tree-id1229 . -4) (undo-tree-id1230 . -4) (undo-tree-id1231 . -4) (undo-tree-id1232 . -4) (undo-tree-id1233 . -4) (undo-tree-id1234 . -4) (undo-tree-id1235 . -4) (undo-tree-id1236 . -4) (undo-tree-id1237 . -4) (undo-tree-id1238 . -4) (undo-tree-id1239 . -4) (undo-tree-id1240 . -4) (undo-tree-id1241 . -4) (undo-tree-id1242 . -4) (undo-tree-id1243 . -4) (undo-tree-id1244 . -4) (undo-tree-id1245 . -4) (undo-tree-id1246 . -4) (undo-tree-id1247 . -4) (undo-tree-id1248 . -4) (undo-tree-id1249 . -4) (undo-tree-id1250 . -4) (undo-tree-id1251 . -4) (undo-tree-id1252 . -4) (undo-tree-id1253 . -4) (undo-tree-id1254 . -4) (undo-tree-id1255 . -4) (undo-tree-id1256 . -4) (undo-tree-id1257 . -4) (undo-tree-id1258 . -4) (undo-tree-id1259 . -4) (undo-tree-id1260 . -4) (undo-tree-id1261 . -4) (undo-tree-id1262 . -4) (undo-tree-id1263 . -4) (undo-tree-id1264 . -4) (undo-tree-id1265 . -4) (undo-tree-id1266 . -4) (undo-tree-id1267 . -4) (undo-tree-id1268 . -4) (undo-tree-id1269 . -4) (undo-tree-id1270 . -4) (undo-tree-id1271 . -4) (undo-tree-id1272 . -4) (undo-tree-id1273 . -4) (undo-tree-id1274 . -4) (undo-tree-id1275 . -4) (undo-tree-id1276 . -4) (undo-tree-id1277 . -4) (undo-tree-id1278 . -4) (undo-tree-id1279 . -4) (undo-tree-id1280 . -4) (undo-tree-id1281 . -4) (undo-tree-id1282 . -4) (undo-tree-id1283 . -4) (undo-tree-id1284 . -4) (undo-tree-id1285 . -4) (undo-tree-id1286 . -4) (undo-tree-id1287 . -4) (undo-tree-id1288 . -4) (undo-tree-id1289 . -4) (undo-tree-id1290 . -4) (undo-tree-id1291 . -4) (undo-tree-id1292 . -4) (undo-tree-id1293 . -4) (undo-tree-id1294 . -4) (undo-tree-id1295 . -4) (undo-tree-id1296 . -4) (undo-tree-id1297 . -4) (undo-tree-id1298 . -4) (undo-tree-id1299 . -4) (undo-tree-id1300 . -4) (undo-tree-id1301 . -4) (undo-tree-id1302 . -4) (undo-tree-id1303 . -4) (undo-tree-id1304 . -4) (undo-tree-id1305 . -4) (undo-tree-id1306 . -4) (undo-tree-id1307 . -4) (undo-tree-id1308 . -4) (undo-tree-id1309 . -4) (undo-tree-id1310 . -4) (undo-tree-id1311 . -4) (undo-tree-id1312 . -4) (undo-tree-id1313 . -4) (undo-tree-id1314 . -4) (undo-tree-id1315 . -4) (undo-tree-id1316 . -4) (undo-tree-id1317 . -4) (undo-tree-id1318 . -4) (undo-tree-id1319 . -4) (undo-tree-id1320 . -4) (undo-tree-id1321 . -4) (undo-tree-id1322 . -4) (undo-tree-id1323 . -4) (undo-tree-id1324 . -4) (undo-tree-id1325 . -4) (undo-tree-id1326 . -4) (undo-tree-id1327 . -4) (undo-tree-id1328 . -4) (undo-tree-id1329 . -4) (undo-tree-id1330 . -4) (undo-tree-id1331 . -4) (undo-tree-id1332 . -4) (undo-tree-id1333 . -4) (undo-tree-id1334 . -4) (undo-tree-id1335 . -4) (undo-tree-id1336 . -4) (undo-tree-id1337 . -4) (undo-tree-id1338 . -4) (undo-tree-id1339 . -4) (undo-tree-id1340 . -4) (undo-tree-id1341 . -4) (undo-tree-id1342 . -4) (undo-tree-id1343 . -4) (undo-tree-id1344 . -4) (undo-tree-id1345 . -4) (undo-tree-id1346 . -4) (undo-tree-id1347 . -4) (undo-tree-id1348 . -4) (undo-tree-id1349 . -4) (undo-tree-id1350 . -4) (undo-tree-id1351 . -4) (undo-tree-id1352 . -4) (undo-tree-id1353 . -4) (undo-tree-id1354 . -4) (undo-tree-id1355 . -4) (#("
*** " 0 1 (fontified t) 1 3 (fontified t face org-hide keymap (keymap)) 3 4 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 4 5 (fontified t keymap (keymap) face org-level-3)) . 778) (undo-tree-id1356 . -1) (undo-tree-id1357 . -5) (undo-tree-id1358 . -4) (undo-tree-id1359 . -5) (undo-tree-id1360 . -5) (undo-tree-id1361 . -5) (undo-tree-id1362 . -5) (undo-tree-id1363 . -5) (undo-tree-id1364 . -5) (undo-tree-id1365 . -5) (undo-tree-id1366 . -5) (undo-tree-id1367 . -5) (undo-tree-id1368 . -5) (undo-tree-id1369 . -5) (undo-tree-id1370 . -5) (undo-tree-id1371 . -5) (undo-tree-id1372 . -5) (undo-tree-id1373 . -5) (undo-tree-id1374 . -5) (undo-tree-id1375 . -5) (undo-tree-id1376 . -5) (undo-tree-id1377 . -5) (undo-tree-id1378 . -5) (undo-tree-id1379 . -5) (undo-tree-id1380 . -5) (undo-tree-id1381 . -5) (undo-tree-id1382 . -5) (undo-tree-id1383 . -5) (undo-tree-id1384 . -5) (undo-tree-id1385 . -5) (undo-tree-id1386 . -5) (undo-tree-id1387 . -5) (undo-tree-id1388 . -5) (undo-tree-id1389 . -5) (undo-tree-id1390 . -5) (undo-tree-id1391 . -5) (undo-tree-id1392 . -5) (undo-tree-id1393 . -5) (undo-tree-id1394 . -5) (undo-tree-id1395 . -5) (undo-tree-id1396 . -5) (undo-tree-id1397 . -5) (undo-tree-id1398 . -5) (undo-tree-id1399 . -5) (undo-tree-id1400 . -5) (undo-tree-id1401 . -5) (undo-tree-id1402 . -5) (undo-tree-id1403 . -5) (undo-tree-id1404 . -5) (undo-tree-id1405 . -5) (undo-tree-id1406 . -5) (undo-tree-id1407 . -5) (undo-tree-id1408 . -5) (undo-tree-id1409 . -5) (undo-tree-id1410 . -5) (undo-tree-id1411 . -5) (undo-tree-id1412 . -5) (undo-tree-id1413 . -5) (undo-tree-id1414 . -5) (undo-tree-id1415 . -4) (undo-tree-id1416 . -4) (undo-tree-id1417 . -4) (undo-tree-id1418 . -4) (undo-tree-id1419 . -4) (undo-tree-id1420 . -4) (undo-tree-id1421 . -4) (undo-tree-id1422 . -4) (undo-tree-id1423 . -4) (undo-tree-id1424 . -4) (undo-tree-id1425 . -4) (undo-tree-id1426 . -4) (undo-tree-id1427 . -4) (undo-tree-id1428 . -4) (undo-tree-id1429 . -4) (undo-tree-id1430 . -4) (undo-tree-id1431 . -4) (undo-tree-id1432 . -4) (undo-tree-id1433 . -4) (undo-tree-id1434 . -4) (undo-tree-id1435 . -4) (undo-tree-id1436 . -4) (undo-tree-id1437 . -4) (undo-tree-id1438 . -4) (undo-tree-id1439 . -4) (undo-tree-id1440 . -4) (undo-tree-id1441 . -4) (undo-tree-id1442 . -4) (undo-tree-id1443 . -4) (undo-tree-id1444 . -4) (undo-tree-id1445 . -4) (undo-tree-id1446 . -4) (undo-tree-id1447 . -4) (undo-tree-id1448 . -4) (undo-tree-id1449 . -4) (undo-tree-id1450 . -4) (undo-tree-id1451 . -4) (undo-tree-id1452 . -4) (undo-tree-id1453 . -4) (undo-tree-id1454 . -4) (undo-tree-id1455 . -4) (undo-tree-id1456 . -4) (undo-tree-id1457 . -4) (undo-tree-id1458 . -4) (undo-tree-id1459 . -4) (undo-tree-id1460 . -4) (undo-tree-id1461 . -4) (undo-tree-id1462 . -4) (undo-tree-id1463 . -4) (undo-tree-id1464 . -4) (undo-tree-id1465 . -4) (undo-tree-id1466 . -4) (undo-tree-id1467 . -4) (undo-tree-id1468 . -4) (undo-tree-id1469 . -4) (undo-tree-id1470 . -4) (undo-tree-id1471 . -4) (undo-tree-id1472 . -4) (undo-tree-id1473 . -4) (undo-tree-id1474 . -4) (undo-tree-id1475 . -4) (undo-tree-id1476 . -4) (undo-tree-id1477 . -4) (undo-tree-id1478 . -4) (undo-tree-id1479 . -4) (undo-tree-id1480 . -4) (undo-tree-id1481 . -4) (undo-tree-id1482 . -4) (undo-tree-id1483 . -4) (undo-tree-id1484 . -4) (undo-tree-id1485 . -4) (undo-tree-id1486 . -4) (undo-tree-id1487 . -4) (undo-tree-id1488 . -4) (undo-tree-id1489 . -4) (undo-tree-id1490 . -4) (undo-tree-id1491 . -4) (undo-tree-id1492 . -4) (undo-tree-id1493 . -4) (undo-tree-id1494 . -4) (undo-tree-id1495 . -4) (undo-tree-id1496 . -4) (undo-tree-id1497 . -4) (undo-tree-id1498 . -4) (undo-tree-id1499 . -4) (undo-tree-id1500 . -4) (undo-tree-id1501 . -4) (undo-tree-id1502 . -4) (undo-tree-id1503 . -4) (undo-tree-id1504 . -4) (undo-tree-id1505 . -4) (undo-tree-id1506 . -4) (undo-tree-id1507 . -4) (undo-tree-id1508 . -4) (undo-tree-id1509 . -4) (undo-tree-id1510 . -4) (undo-tree-id1511 . -4) (undo-tree-id1512 . -4) (undo-tree-id1513 . -4) (undo-tree-id1514 . -4) (undo-tree-id1515 . -4) (undo-tree-id1516 . -4) (undo-tree-id1517 . -4) (undo-tree-id1518 . -4) (undo-tree-id1519 . -4) (undo-tree-id1520 . -4) (undo-tree-id1521 . -4) (undo-tree-id1522 . -4) (undo-tree-id1523 . -4) (undo-tree-id1524 . -4) (undo-tree-id1525 . -4) (undo-tree-id1526 . -4) (undo-tree-id1527 . -4) (undo-tree-id1528 . -4) (undo-tree-id1529 . -4) (undo-tree-id1530 . -4) (undo-tree-id1531 . -4) (undo-tree-id1532 . -4) (undo-tree-id1533 . -4) (undo-tree-id1534 . -4) (undo-tree-id1535 . -4) (undo-tree-id1536 . -4) (undo-tree-id1537 . -4) (undo-tree-id1538 . -4) (undo-tree-id1539 . -4) (undo-tree-id1540 . -4) (undo-tree-id1541 . -4) (undo-tree-id1542 . -4) (undo-tree-id1543 . -4) (undo-tree-id1544 . -4) (undo-tree-id1545 . -4) (undo-tree-id1546 . -4) (undo-tree-id1547 . -4) (undo-tree-id1548 . -4) (undo-tree-id1549 . -4) (undo-tree-id1550 . -4) (undo-tree-id1551 . -4) (undo-tree-id1552 . -4) (undo-tree-id1553 . -4) (undo-tree-id1554 . -4) (undo-tree-id1555 . -4) (undo-tree-id1556 . -4) (undo-tree-id1557 . -4) (undo-tree-id1558 . -4) (undo-tree-id1559 . -4) (undo-tree-id1560 . -4) (undo-tree-id1561 . -4) (undo-tree-id1562 . -4) (undo-tree-id1563 . -4) (undo-tree-id1564 . -4) (undo-tree-id1565 . -4) (undo-tree-id1566 . -4) (undo-tree-id1567 . -4) (undo-tree-id1568 . -4) (undo-tree-id1569 . -4) (undo-tree-id1570 . -4) (undo-tree-id1571 . -4) (undo-tree-id1572 . -4) (undo-tree-id1573 . -4) (undo-tree-id1574 . -4) (undo-tree-id1575 . -4) (undo-tree-id1576 . -4) (undo-tree-id1577 . -4) (undo-tree-id1578 . -4) (undo-tree-id1579 . -4) (undo-tree-id1580 . -4) (undo-tree-id1581 . -4) (undo-tree-id1582 . -4) (undo-tree-id1583 . -4) (undo-tree-id1584 . -4) (undo-tree-id1585 . -4) (undo-tree-id1586 . -4) (undo-tree-id1587 . -4) (undo-tree-id1588 . -4) (undo-tree-id1589 . -4) (undo-tree-id1590 . -4) (undo-tree-id1591 . -4) (undo-tree-id1592 . -4) (undo-tree-id1593 . -4) (undo-tree-id1594 . -4) (undo-tree-id1595 . -4) (undo-tree-id1596 . -4) (undo-tree-id1597 . -4) (undo-tree-id1598 . -4) (undo-tree-id1599 . -4) (undo-tree-id1600 . -4) (undo-tree-id1601 . -4) (undo-tree-id1602 . -4) (undo-tree-id1603 . -4) (undo-tree-id1604 . -4) (undo-tree-id1605 . -4) (undo-tree-id1606 . -4) (undo-tree-id1607 . -4) (undo-tree-id1608 . -4) (undo-tree-id1609 . -4) (undo-tree-id1610 . -4) (undo-tree-id1611 . -4) (undo-tree-id1612 . -4) (undo-tree-id1613 . -4) (undo-tree-id1614 . -4) (undo-tree-id1615 . -4) (undo-tree-id1616 . -4) (undo-tree-id1617 . -4) (undo-tree-id1618 . -4) (undo-tree-id1619 . -4) (undo-tree-id1620 . -4) (undo-tree-id1621 . -4) (undo-tree-id1622 . -4) (undo-tree-id1623 . -4) (undo-tree-id1624 . -4) (undo-tree-id1625 . -4) (undo-tree-id1626 . -4) (undo-tree-id1627 . -4) (undo-tree-id1628 . -4) (undo-tree-id1629 . -4) (undo-tree-id1630 . -4) (undo-tree-id1631 . -4) (undo-tree-id1632 . -4) (undo-tree-id1633 . -4) (undo-tree-id1634 . -4) (undo-tree-id1635 . -4) (undo-tree-id1636 . -4) (undo-tree-id1637 . -4) (undo-tree-id1638 . -4) (undo-tree-id1639 . -4) (undo-tree-id1640 . -4) (undo-tree-id1641 . -4) (undo-tree-id1642 . -4) (undo-tree-id1643 . -4) (undo-tree-id1644 . -4) (undo-tree-id1645 . -4) (undo-tree-id1646 . -4) (undo-tree-id1647 . -4) (undo-tree-id1648 . -4) (undo-tree-id1649 . -4) (undo-tree-id1650 . -4) (undo-tree-id1651 . -4) (undo-tree-id1652 . -4) (undo-tree-id1653 . -4) (undo-tree-id1654 . -4) (undo-tree-id1655 . -4) (undo-tree-id1656 . -4) (undo-tree-id1657 . -4) (undo-tree-id1658 . -4) (undo-tree-id1659 . -4) (undo-tree-id1660 . -4) (undo-tree-id1661 . -4) (undo-tree-id1662 . -4) (undo-tree-id1663 . -4) (undo-tree-id1664 . -4) (undo-tree-id1665 . -4) (undo-tree-id1666 . -4) (undo-tree-id1667 . -4) (undo-tree-id1668 . -4) (undo-tree-id1669 . -4) (undo-tree-id1670 . -4) (undo-tree-id1671 . -4) (undo-tree-id1672 . -4) (undo-tree-id1673 . -4) (undo-tree-id1674 . -4) (undo-tree-id1675 . -4) (undo-tree-id1676 . -4) (undo-tree-id1677 . -4) (undo-tree-id1678 . -4) (undo-tree-id1679 . -4) (undo-tree-id1680 . -4) (undo-tree-id1681 . -4) (undo-tree-id1682 . -4) (undo-tree-id1683 . -4) (undo-tree-id1684 . -4) (undo-tree-id1685 . -4) (undo-tree-id1686 . -4) (undo-tree-id1687 . -4) (undo-tree-id1688 . -4) (undo-tree-id1689 . -4) (undo-tree-id1690 . -4) (undo-tree-id1691 . -4) (undo-tree-id1692 . -4) (undo-tree-id1693 . -4) (undo-tree-id1694 . -4)) (25720 20149 915767 848000) 0 nil] [nil nil ((747 . 748) (#("*** 1.2 Node Object Types 
" 0 2 (fontified t face org-hide keymap (keymap)) 2 3 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 3 4 (fontified t keymap (keymap) face org-level-3) 4 26 (fontified t face org-level-3) 26 27 (fontified t)) . 747) (undo-tree-id880 . -27) (undo-tree-id881 . 1) (undo-tree-id882 . -26) (undo-tree-id883 . -25) 772) ((747 . 774) (#("
" 0 1 (fontified t)) . 747) (undo-tree-id893 . -1) (undo-tree-id894 . 1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1)) (25720 20105 664411 919000) 0 nil])
([nil nil ((nil fontified t 778 . 779) (nil keymap (keymap) 778 . 779) (nil face org-level-3 778 . 779) (nil fontified t 777 . 778) (nil composition (2 1 [10040]) 777 . 778) (nil keymap (keymap) 777 . 778) (nil face org-level-3 777 . 778) (nil fontified t 775 . 777) (nil face org-hide 775 . 777) (nil keymap (keymap) 775 . 777) (#("*** " 0 2 (fontified t face org-hide keymap (keymap)) 2 3 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 3 4 (fontified t keymap (keymap) face org-level-3)) . 774) (778 . 783) 777) nil (25720 20187 757960 243000) 0 nil])
([nil nil ((783 . 788) 782) ((#("
*** " 0 1 (fontified t) 1 3 (fontified t face org-hide keymap (keymap)) 3 4 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 4 5 (fontified t keymap (keymap) face org-level-3)) . 783) (undo-tree-id956 . -1) (undo-tree-id957 . -5) (undo-tree-id958 . -4) (undo-tree-id959 . -5) (undo-tree-id960 . -4) (undo-tree-id961 . -4) (undo-tree-id962 . -4) (undo-tree-id963 . -4) (undo-tree-id964 . -4) (undo-tree-id965 . -4) (undo-tree-id966 . -4) (undo-tree-id967 . -4) (undo-tree-id968 . -4) (undo-tree-id969 . -4) (undo-tree-id970 . -4) (undo-tree-id971 . -4) (undo-tree-id972 . -4) (undo-tree-id973 . -4) (undo-tree-id974 . -4) (undo-tree-id975 . -4) (undo-tree-id976 . -4) (undo-tree-id977 . -4) (undo-tree-id978 . -4) (undo-tree-id979 . -4) (undo-tree-id980 . -4) (undo-tree-id981 . -4) (undo-tree-id982 . -4) (undo-tree-id983 . -4) (undo-tree-id984 . -4) (undo-tree-id985 . -4) (undo-tree-id986 . -4) (undo-tree-id987 . -4) (undo-tree-id988 . -4) (undo-tree-id989 . -4) (undo-tree-id990 . -4) (undo-tree-id991 . -4) (undo-tree-id992 . -4) (undo-tree-id993 . -4) (undo-tree-id994 . -4) (undo-tree-id995 . -4) (undo-tree-id996 . -4) (undo-tree-id997 . -4) (undo-tree-id998 . -4) (undo-tree-id999 . -4) (undo-tree-id1000 . -4) (undo-tree-id1001 . -4) (undo-tree-id1002 . -4) (undo-tree-id1003 . -4) (undo-tree-id1004 . -4) (undo-tree-id1005 . -4) (undo-tree-id1006 . -4) (undo-tree-id1007 . -4) (undo-tree-id1008 . -4) (undo-tree-id1009 . -4) (undo-tree-id1010 . -4) (undo-tree-id1011 . -4) (undo-tree-id1012 . -4) (undo-tree-id1013 . -4) (undo-tree-id1014 . -4) (undo-tree-id1015 . -4)) (25720 20149 751640 17000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -747) (undo-tree-id878 . -1) (undo-tree-id879 . 1)) ((747 . 748)) (25720 20105 664166 80000) 0 nil])
([nil nil ((779 . 785) 774) nil (25720 20187 757951 163000) 0 nil])
([nil nil ((788 . 793) 787) ((#("
*** " 0 1 (fontified t) 1 3 (fontified t face org-hide keymap (keymap)) 3 4 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 4 5 (fontified t keymap (keymap) face org-level-3)) . 788) (undo-tree-id954 . -4) (undo-tree-id955 . -4)) (25720 20149 751331 460000) 0 nil])
nil
([nil nil ((785 . 791) 784) nil (25720 20187 757947 322000) 0 nil])
nil
([nil nil ((791 . 797) 790) nil (25720 20187 757943 132000) 0 nil])
([nil nil ((797 . 803) 792) nil (25720 20187 757939 360000) 0 nil])
([nil nil ((779 . 785) 778) nil (25720 20187 757935 659000) 0 nil])
([nil nil ((780 . 792) (#("o" 0 1 (fontified t face org-level-4)) . -780) (undo-tree-id1698 . -1) (#("c" 0 1 (fontified t face org-level-4)) . -781) (undo-tree-id1699 . -1) (#("u" 0 1 (fontified t face org-level-4)) . -782) (undo-tree-id1700 . -1) (#("m" 0 1 (fontified t face org-level-4)) . -783) (undo-tree-id1701 . -1) (#("t" 0 1 (fontified t face org-level-4)) . -784) (undo-tree-id1702 . -1) 785 (778 . 785)) nil (25720 20187 758707 889000) 0 nil])
([nil nil ((794 . 812) (#("x" 0 1 (fontified t face org-level-4)) . -794) (undo-tree-id1754 . -1) 795 (793 . 795) (792 . 794)) nil (25720 20387 56315 131000) 0 nil] [nil nil ((792 . 793) (#(" " 0 1 (fontified nil face org-level-4)) . 792) (undo-tree-id1695 . -1) (undo-tree-id1696 . 1) (#("
" 0 1 (fontified t)) . -793) (undo-tree-id1697 . -1) 791) ((792 . 794) (#(" " 0 1 (fontified t face org-level-4)) . 792)) (25720 20187 757667 260000) 0 nil])
([nil nil ((820 . 834)) nil (25720 20387 56308 846000) 0 nil])
nil
([nil nil ((837 . 850) (#("<" 0 1 (fontified t face org-level-4)) . -837) (undo-tree-id1753 . -1) 838 (833 . 838)) nil (25720 20387 56305 4000) 0 nil])
([nil nil ((909 . 910) (906 . 909) (#("o" 0 1 (fontified t face org-level-4)) . -906) (undo-tree-id1745 . -1) 907 (899 . 907) (#("s" 0 1 (fontified t face org-level-4)) . -899) (undo-tree-id1746 . -1) 900 (899 . 900) (#("c" 0 1 (fontified t face org-level-4)) . -899) (undo-tree-id1747 . -1) 900 (894 . 900) (#("j" 0 1 (fontified t face org-level-4)) . -894) (undo-tree-id1748 . -1) (#(" " 0 1 (fontified t face org-level-4)) . -895) (undo-tree-id1749 . -1) 896 (881 . 896) (#(" " 0 1 (fontified t face org-level-4)) . -881) (undo-tree-id1750 . -1) 882 (872 . 882) (866 . 873) (#(")" 0 1 (fontified t face org-level-4)) . -866) (undo-tree-id1751 . -1) 867 (866 . 867) (#(" " 0 1 (fontified t face org-level-4)) . -866) (undo-tree-id1752 . -1) 867 (857 . 867)) nil (25720 20387 56294 528000) 0 nil])
([nil nil ((921 . 928) (#(")" 0 1 (fontified t face org-level-4)) . -921) (undo-tree-id1744 . -1) 922 (917 . 922)) nil (25720 20387 56268 757000) 0 nil])
([nil nil (927) nil (25720 20387 56260 236000) 0 nil])
([nil nil ((982 . 989) (961 . 982) (#("s" 0 1 (fontified t face org-level-4)) . -961) (undo-tree-id1727 . -1) (#(" " 0 1 (fontified t face org-level-4)) . -962) (undo-tree-id1728 . -1) 963 (956 . 963) (935 . 956) (#("n" 0 1 (fontified t face org-level-4)) . -935) (undo-tree-id1729 . -1) (#("j" 0 1 (fontified t face org-level-4)) . -936) (undo-tree-id1730 . -1) 937 (927 . 937) (#("t" 0 1 (fontified t face org-level-4)) . -927) (undo-tree-id1731 . -1) (#("e" 0 1 (fontified t face org-level-4)) . -928) (undo-tree-id1732 . -1) (#("x" 0 1 (fontified t face org-level-4)) . -929) (undo-tree-id1733 . -1) (#("t" 0 1 (fontified t face org-level-4)) . -930) (undo-tree-id1734 . -1) (#(" " 0 1 (fontified t face org-level-4)) . -931) (undo-tree-id1735 . -1) (#("h" 0 1 (fontified t face org-level-4)) . -932) (undo-tree-id1736 . -1) (#("a" 0 1 (fontified t face org-level-4)) . -933) (undo-tree-id1737 . -1) (#("r" 0 1 (fontified t face org-level-4)) . -934) (undo-tree-id1738 . -1) (#("a" 0 1 (fontified t face org-level-4)) . -935) (undo-tree-id1739 . -1) 936 (929 . 936) (927 . 929) (#("T" 0 1 (fontified t face org-level-4)) . -927) (undo-tree-id1740 . -1) (#("E" 0 1 (fontified t face org-level-4)) . -928) (undo-tree-id1741 . -1) (#("X" 0 1 (fontified t face org-level-4)) . -929) (undo-tree-id1742 . -1) 930 (927 . 930) (#("3" 0 1 (fontified t face org-level-4)) . -927) (undo-tree-id1743 . -1) 928 (927 . 928)) nil (25720 20387 56248 852000) 0 nil])
([nil nil ((1016 . 1020) (#("C" 0 1 (fontified t face org-level-4)) . -1016) (undo-tree-id1722 . -1) 1017 (1000 . 1017) (#("E" 0 1 (fontified t face org-level-4)) . -1000) (undo-tree-id1723 . -1) (#("N" 0 1 (fontified t face org-level-4)) . -1001) (undo-tree-id1724 . -1) (#("T" 0 1 (fontified t face org-level-4)) . -1002) (undo-tree-id1725 . -1) 1003 (996 . 1003) (#(" " 0 1 (fontified t face org-level-4)) . -996) (undo-tree-id1726 . -1) 997 (996 . 997)) nil (25720 20387 56107 424000) 0 nil])
([nil nil (1019) nil (25720 20387 56086 542000) 0 nil])
([nil nil ((1030 . 1045) (#("a" 0 1 (fontified t face org-level-4)) . -1030) (undo-tree-id1711 . -1) (#(" " 0 1 (fontified t face org-level-4)) . -1031) (undo-tree-id1712 . -1) (#(" " 0 1 (fontified t face org-level-4)) . -1032) (undo-tree-id1713 . -1) (#("a" 0 1 (fontified t face org-level-4)) . -1033) (undo-tree-id1714 . -1) 1034 (1028 . 1034) (#("k" 0 1 (fontified t face org-level-4)) . -1028) (undo-tree-id1715 . -1) 1029 (1027 . 1029) (#("u" 0 1 (fontified t face org-level-4)) . -1027) (undo-tree-id1716 . -1) (#("s" 0 1 (fontified t face org-level-4)) . -1028) (undo-tree-id1717 . -1) (#("e" 0 1 (fontified t face org-level-4)) . -1029) (undo-tree-id1718 . -1) (#("d" 0 1 (fontified t face org-level-4)) . -1030) (undo-tree-id1719 . -1) (#(" " 0 1 (fontified t face org-level-4)) . -1031) (undo-tree-id1720 . -1) 1032 (1030 . 1032) (#(" " 0 1 (fontified t face org-level-4)) . -1030) (undo-tree-id1721 . -1) 1031 (1019 . 1031)) nil (25720 20387 56077 393000) 0 nil])
([nil nil ((1058 . 1072) (#("T" 0 1 (fontified t face org-level-4)) . -1058) (undo-tree-id1710 . -1) 1059 (1052 . 1059)) nil (25720 20387 56049 736000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face org-level-4)) . -1084) (undo-tree-id1709 . -1) 1085 (1079 . 1085) (1071 . 1079)) nil (25720 20387 56041 634000) 0 nil])
([nil nil ((#("     " 0 5 (fontified t)) . -1047) (undo-tree-id1703 . -5) (undo-tree-id1704 . -5) 1052 (1047 . 1052) (1047 . 1048) (#("**** DOCUMENT_TYPE_NODE(!DOCTYPE html)
" 0 3 (fontified t face org-hide keymap (keymap)) 3 4 (fontified t composition (3 1 [10047]) keymap (keymap) face org-level-4) 4 5 (fontified t keymap (keymap) face org-level-4) 5 38 (fontified t face org-level-4) 38 39 (fontified t)) . 1047) (undo-tree-id1705 . -39) (undo-tree-id1706 . 2) (undo-tree-id1707 . -38) (undo-tree-id1708 . -36) 1083) nil (25720 20387 56028 365000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1214 . 1215) (nil fontified nil 1047 . 1215) (1047 . 1215) (t 25720 20387 61082 611000)) nil (25720 20537 120430 377000) 0 nil])
([nil nil ((1295 . 1303) (1290 . 1295) (#(" " 0 1 (fontified t)) . -1290) (undo-tree-id1755 . -1) (#("s" 0 1 (fontified t)) . -1291) (undo-tree-id1756 . -1) 1292 (1273 . 1292) (1252 . 1273) (1231 . 1252) (#("c" 0 1 (fontified t)) . -1231) (undo-tree-id1757 . -1) (#("c" 0 1 (fontified t)) . -1232) (undo-tree-id1758 . -1) 1233 (1228 . 1233) (1222 . 1228) (#("v" 0 1 (fontified t)) . -1222) (undo-tree-id1759 . -1) (#("a" 0 1 (fontified t)) . -1223) (undo-tree-id1760 . -1) 1224 (1211 . 1224) (t 25720 20537 125025 421000)) nil (25720 20595 668108 966000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 1326) (undo-tree-id1769 . -3) (1304 . 1326) 1307 (#(" " 0 1 (fontified t)) . -1307) (undo-tree-id1770 . -1) 1308 (1304 . 1308) (#("r" 0 1 (fontified t)) . -1304) (undo-tree-id1771 . -1) 1305 (1304 . 1305) (t 25720 20595 677013 56000)) nil (25720 21793 637279 812000) 0 nil])
([nil nil ((1329 . 1350) (1322 . 1329) (#("T" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -1322) (undo-tree-id1761 . -1) (#("a" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -1323) (undo-tree-id1762 . -1) 1324 (#("n" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -1324) (undo-tree-id1763 . -1) 1325 (1316 . 1325) (#("e" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -1316) (undo-tree-id1764 . -1) (#("m" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -1317) (undo-tree-id1765 . -1) (#("a" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -1318) (undo-tree-id1766 . -1) (#("c" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -1319) (undo-tree-id1767 . -1) (#("s" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -1320) (undo-tree-id1768 . -1) 1321 (1316 . 1321)) nil (25720 21793 637264 447000) 0 nil])
([nil nil ((1350 . 1351) 1349) nil (25720 21793 637226 384000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1515 . 1516) (nil fontified nil 1351 . 1516) (1351 . 1516)) nil (25720 21793 637214 22000) 0 nil])
([nil nil ((1547 . 1548) (1527 . 1547) (#("w" 0 1 (fontified t)) . -1527) (undo-tree-id1840 . -1) (#("e" 0 1 (fontified t)) . -1528) (undo-tree-id1841 . -1) (#(" " 0 1 (fontified t)) . -1529) (undo-tree-id1842 . -1) 1530 (1527 . 1530) (1526 . 1527) (t 25720 21793 645322 768000) 1523) nil (25720 21893 689942 25000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1548) (undo-tree-id1838 . -1) (#("c" 0 1 (fontified t)) . -1549) (undo-tree-id1839 . -1) 1550 (1548 . 1550)) nil (25720 21893 689930 711000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1548 . 1549) (#("
" 0 1 (font-lock-fontified t font-lock-multiline t face org-block-begin-line fontified nil)) . -1595) (1548 . 1596)) nil (25720 21893 689921 701000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1595 . 1596) (#("
" 0 1 (face org-block-end-line fontified nil)) . -1605) (1595 . 1606) 1549) nil (25720 21893 689917 790000) 0 nil])
([nil nil ((1595 . 1596) 1549) nil (25720 21893 689913 460000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2275 . 2276) (nil fontified nil 1596 . 2276) (1596 . 2276)) nil (25720 21893 689909 619000) 0 nil])
([nil nil ((1580 . 1581) (#("l" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -1580) (undo-tree-id1833 . -1) (#("l" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -1581) (undo-tree-id1834 . -1) (#("l" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -1582) (undo-tree-id1835 . -1) 1583 (1578 . 1583) (#("element" 0 7 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 1578) (undo-tree-id1836 . -6) (undo-tree-id1837 . -1) 1579) nil (25720 21893 689903 962000) 0 nil])
([nil nil ((1588 . 1593) (#("l" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -1588) (undo-tree-id1831 . -1) (#("a" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -1589) (undo-tree-id1832 . -1) 1590 (1586 . 1590)) nil (25720 21893 689889 225000) 0 nil])
([nil nil ((2291 . 2292) (#("
" 0 1 (fontified t rear-nonsticky t)) . 2291) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1)) nil (25720 21893 689871 67000) 0 nil])
([nil nil ((2324 . 2325) (2320 . 2324) (#("i" 0 1 (fontified t)) . -2320) (undo-tree-id1852 . -1) 2321 (2312 . 2321) (2291 . 2312) (t 25720 21893 697369 473000)) nil (25720 22057 530879 589000) 0 nil])
([nil nil ((2312 . 2313) (#("5" 0 1 (fontified t)) . 2312)) nil (25720 22057 530870 579000) 0 nil])
([nil nil ((2337 . 2338) (2336 . 2337) (2326 . 2336) (2325 . 2326)) nil (25720 22057 530866 179000) 0 nil])
([nil nil ((#("|interface|node type | 
" 0 7 (fontified nil face org-table) 7 10 (fontified nil face org-table) 10 11 (fontified nil face org-table) 11 15 (fontified nil face org-table) 15 20 (fontified nil face org-table) 20 22 (fontified nil face org-table) 22 23 (fontified nil) 23 24 (fontified nil)) . 2351) (undo-tree-id1847 . -24) (undo-tree-id1848 . 1) (undo-tree-id1849 . -10) (undo-tree-id1850 . -24) (2325 . 2351) 2335 (2332 . 2335) (2326 . 2332) (2325 . 2326) (#("i" 0 1 (fontified t)) . -2325) (undo-tree-id1851 . -1) 2326 (2325 . 2326)) nil (25720 22057 532178 491000) 0 nil])
([nil nil ((#("| HTML*Element | 1(ElE    |
" 0 1 (fontified nil face org-table) 1 15 (fontified nil face org-table) 15 26 (fontified nil face org-table) 26 27 (fontified nil face org-table) 27 28 (fontified nil)) . 2412) (undo-tree-id1874 . -28) (undo-tree-id1875 . -22) (undo-tree-id1876 . -28) (2383 . 2412) 2405 (#(" " 0 1 (fontified nil face org-table)) . 2408) (2404 . 2405) (#("e" 0 1 (fontified t face org-table)) . -2404) (undo-tree-id1877 . -1) 2405 (#(" " 0 1 (fontified nil face org-table)) . 2409) (2404 . 2405) (#(" " 0 1 (fontified nil face org-table)) . 2409) (2403 . 2404) (#(" " 0 1 (fontified nil face org-table)) . 2409) (2402 . 2403) (#(" " 0 1 (fontified nil face org-table)) . 2409) (2401 . 2402) (#(" " 0 1 (fontified nil)) . 2409) (2400 . 2401) (#("|           " 0 12 (fontified t face org-table)) . 2398) (2410 . 2422) 2400 (#("|-----------+-----------|
" 0 1 (fontified nil face org-table) 1 25 (fontified nil face org-table) 25 26 (fontified nil)) . 2383) (undo-tree-id1878 . -26) (2354 . 2383) (#("| interface | node type |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 8 (fontified nil face org-table) 8 11 (fontified nil face org-table) 11 12 (display (space :relative-width 1) fontified nil face org-table) 12 13 (fontified nil face org-table) 13 14 (display (space :relative-width 1) fontified nil face org-table) 14 18 (fontified nil face org-table) 18 23 (fontified nil face org-table) 23 24 (display (space :relative-width 1) fontified nil face org-table) 24 25 (fontified nil face org-table) 25 26 (fontified nil)) . 2354) (2325 . 2354) 2391 (2390 . 2391) (2384 . 2390) (#(" " 0 1 (fontified nil face org-table)) . 2384) (2383 . 2384) (#(" " 0 1 (fontified nil face org-table)) . 2384) (2382 . 2383) (#(" " 0 1 (fontified nil face org-table)) . 2384) (2381 . 2382) (#(" " 0 1 (fontified nil face org-table)) . 2384) (2380 . 2381) (#(" " 0 1 (fontified nil face org-table)) . 2384) (2379 . 2380) (#("h" 0 1 (fontified t face org-table)) . -2379) (undo-tree-id1879 . -1) (#("t" 0 1 (fontified t face org-table)) . -2380) (undo-tree-id1880 . -1) (#("m" 0 1 (fontified t face org-table)) . -2381) (undo-tree-id1881 . -1) (#("l" 0 1 (fontified t face org-table)) . -2382) (undo-tree-id1882 . -1) 2383 (#(" " 0 1 (fontified nil face org-table)) . 2388) (2382 . 2383) (#(" " 0 1 (fontified nil face org-table)) . 2388) (2381 . 2382) (#(" " 0 1 (fontified nil face org-table)) . 2388) (2380 . 2381) (#(" " 0 1 (fontified nil)) . 2388) (2379 . 2380) (#("|           " 0 12 (fontified t face org-table)) . 2377) (2389 . 2401) 2379 (2377 . 2403) (#("|-
" 0 2 (fontified nil face org-table) 2 3 (fontified nil)) . 2377) (undo-tree-id1883 . -3) (undo-tree-id1884 . 1) (undo-tree-id1885 . -2) (undo-tree-id1886 . -3) (2351 . 2377) 2353 (2352 . 2353) (2351 . 2352) (2350 . 2351) 2338) nil (25720 22120 526376 804000) 0 nil] [nil nil ((#("|_
" 0 2 (fontified nil face org-table) 2 3 (fontified nil)) . 2377) (undo-tree-id1843 . -3) (undo-tree-id1844 . -2) (undo-tree-id1845 . -3) (undo-tree-id1846 . -2) (2351 . 2377) 2353 (2352 . 2353) (2351 . 2352) (2350 . 2351) 2338) ((#("
" 0 1 (fontified t)) . 2350) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (#("|" 0 1 (fontified nil face org-table)) . 2351) (undo-tree-id1858 . 1) (undo-tree-id1859 . -1) (#("_" 0 1 (fontified nil face org-table)) . 2352) (undo-tree-id1860 . -1) (#("| _         |           |
" 0 1 (fontified t face org-table) 1 2 (display (space :relative-width 1) fontified t face org-formula) 2 3 (fontified t face org-formula) 3 11 (fontified t face org-formula) 11 12 (display (space :relative-width 1) fontified t face org-formula) 12 13 (fontified t face org-formula) 13 14 (display (space :relative-width 1) fontified t face org-formula) 14 23 (fontified t face org-formula) 23 24 (display (space :relative-width 1) fontified t face org-formula) 24 25 (fontified t face org-table) 25 26 (fontified t)) . 2351) (undo-tree-id1861 . 12) (undo-tree-id1862 . -13) (undo-tree-id1863 . -13) (undo-tree-id1864 . -13) (2377 . 2380)) (25720 22057 530578 225000) 0 nil])
([nil nil ((2409 . 2415) (#(" " 0 1 (fontified t face org-table)) . -2409) (undo-tree-id1873 . -1) 2410 (2409 . 2410) (#(" " 0 1 (fontified nil face org-table)) . 2409) (2408 . 2409) (#(" " 0 1 (fontified nil face org-table)) . 2409) (2407 . 2408) (#(" " 0 1 (fontified nil face org-table)) . 2409) (2406 . 2407) (#(" " 0 1 (fontified nil face org-table)) . 2409) (2405 . 2406)) nil (25720 22120 526311 154000) 0 nil])
nil
([nil nil ((#("E" 0 1 (fontified t face org-table)) . 2413) (undo-tree-id1872 . -1) 2414) nil (25720 22120 526622 784000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t face org-table)) . 2412) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) 2413) nil (25720 22124 275313 472000) 0 nil] [nil nil ((2383 . 2384) (#("| HTML*Element | 1(ElEMENT_NOD) |
" 0 1 (fontified t face org-table) 1 2 (display (space :relative-width 1) fontified t face org-table) 2 14 (fontified t face org-table) 14 15 (display (space :relative-width 1) fontified t face org-table) 15 16 (fontified t face org-table) 16 17 (display (space :relative-width 1) fontified t face org-table) 17 31 (fontified t face org-table) 31 32 (display (space :relative-width 1) fontified t face org-table) 32 33 (fontified t face org-table) 33 34 (fontified t)) . 2383) (undo-tree-id1865 . -34) (undo-tree-id1866 . 3) (undo-tree-id1867 . -33) (undo-tree-id1868 . -34) (undo-tree-id1869 . -32) (undo-tree-id1870 . -32) (undo-tree-id1871 . -30) 2413) ((2383 . 2417) (#("
" 0 1 (fontified t)) . 2383) (undo-tree-id1887 . -1) (undo-tree-id1888 . 1)) (25720 22120 526283 567000) 0 nil])
([nil nil ((2412 . 2414) (#("d" 0 1 (fontified t face org-table)) . -2412) (undo-tree-id2522 . -1) 2413 (2412 . 2413) (t 25720 22126 517482 20000)) nil (25720 22130 950820 402000) 0 nil] [nil nil ((2383 . 2384) (#("| HTML*Element | 1(ElEMENT_NO) |
" 0 1 (fontified t face org-table) 1 2 (display (space :relative-width 1) fontified t face org-table) 2 14 (fontified t face org-table) 14 15 (display (space :relative-width 1) fontified t face org-table) 15 16 (fontified t face org-table) 16 17 (display (space :relative-width 1) fontified t face org-table) 17 30 (fontified t face org-table) 30 31 (display (space :relative-width 1) fontified t face org-table) 31 32 (fontified t face org-table) 32 33 (fontified t)) . 2383) (undo-tree-id1889 . -33) (undo-tree-id1890 . 3) (undo-tree-id1891 . -32) (undo-tree-id1892 . -33) (undo-tree-id1893 . -31) (undo-tree-id1894 . -31) (undo-tree-id1895 . -29) (undo-tree-id1896 . -29) (undo-tree-id1897 . -29) (undo-tree-id1898 . -29) (undo-tree-id1899 . -29) (undo-tree-id1900 . -29) (undo-tree-id1901 . -29) (undo-tree-id1902 . -29) (undo-tree-id1903 . -29) (undo-tree-id1904 . -29) (undo-tree-id1905 . -29) (undo-tree-id1906 . -29) (undo-tree-id1907 . -29) (undo-tree-id1908 . -29) (undo-tree-id1909 . -29) (undo-tree-id1910 . -29) (undo-tree-id1911 . -29) (undo-tree-id1912 . -29) (undo-tree-id1913 . -29) (undo-tree-id1914 . -29) (undo-tree-id1915 . -29) (undo-tree-id1916 . -29) (undo-tree-id1917 . -29) (undo-tree-id1918 . -29) (undo-tree-id1919 . -29) (undo-tree-id1920 . -29) (undo-tree-id1921 . -29) (undo-tree-id1922 . -29) (undo-tree-id1923 . -29) (undo-tree-id1924 . -29) (undo-tree-id1925 . -29) (undo-tree-id1926 . -29) (undo-tree-id1927 . -29) (undo-tree-id1928 . -29) (undo-tree-id1929 . -29) (undo-tree-id1930 . -29) (undo-tree-id1931 . -29) (undo-tree-id1932 . -29) (undo-tree-id1933 . -29) (undo-tree-id1934 . -29) (undo-tree-id1935 . -29) (undo-tree-id1936 . -29) (undo-tree-id1937 . -29) (undo-tree-id1938 . -29) (undo-tree-id1939 . -29) (undo-tree-id1940 . -29) (undo-tree-id1941 . -29) (undo-tree-id1942 . -29) (undo-tree-id1943 . -29) (undo-tree-id1944 . -29) (undo-tree-id1945 . -29) (undo-tree-id1946 . -29) (undo-tree-id1947 . -29) (undo-tree-id1948 . -29) (undo-tree-id1949 . -29) (undo-tree-id1950 . -29) (undo-tree-id1951 . -29) (undo-tree-id1952 . -29) (undo-tree-id1953 . -29) (undo-tree-id1954 . -29) (undo-tree-id1955 . -29) (undo-tree-id1956 . -29) (undo-tree-id1957 . -29) (undo-tree-id1958 . -29) (undo-tree-id1959 . -29) (undo-tree-id1960 . -29) (undo-tree-id1961 . -29) (undo-tree-id1962 . -29) (undo-tree-id1963 . -29) (undo-tree-id1964 . -29) (undo-tree-id1965 . -29) (undo-tree-id1966 . -29) (undo-tree-id1967 . -29) (undo-tree-id1968 . -29) (undo-tree-id1969 . -29) (undo-tree-id1970 . -29) (undo-tree-id1971 . -29) (undo-tree-id1972 . -29) (undo-tree-id1973 . -29) (undo-tree-id1974 . -29) (undo-tree-id1975 . -29) (undo-tree-id1976 . -29) (undo-tree-id1977 . -29) (undo-tree-id1978 . -29) (undo-tree-id1979 . -29) (undo-tree-id1980 . -29) (undo-tree-id1981 . -29) (undo-tree-id1982 . -29) (undo-tree-id1983 . -29) (undo-tree-id1984 . -29) (undo-tree-id1985 . -29) (undo-tree-id1986 . -29) (undo-tree-id1987 . -29) (undo-tree-id1988 . -29) (undo-tree-id1989 . -29) (undo-tree-id1990 . -29) (undo-tree-id1991 . -29) (undo-tree-id1992 . -29) (undo-tree-id1993 . -29) (undo-tree-id1994 . -29) (undo-tree-id1995 . -29) (undo-tree-id1996 . -29) (undo-tree-id1997 . -29) (undo-tree-id1998 . -29) (undo-tree-id1999 . -29) (undo-tree-id2000 . -29) (undo-tree-id2001 . -29) (undo-tree-id2002 . -29) (undo-tree-id2003 . -29) (undo-tree-id2004 . -29) (undo-tree-id2005 . -29) (undo-tree-id2006 . -29) (undo-tree-id2007 . -29) (undo-tree-id2008 . -29) (undo-tree-id2009 . -29) (undo-tree-id2010 . -29) (undo-tree-id2011 . -29) (undo-tree-id2012 . -29) (undo-tree-id2013 . -29) (undo-tree-id2014 . -29) (undo-tree-id2015 . -29) (undo-tree-id2016 . -29) (undo-tree-id2017 . -29) (undo-tree-id2018 . -29) (undo-tree-id2019 . -29) (undo-tree-id2020 . -29) (undo-tree-id2021 . -29) (undo-tree-id2022 . -29) (undo-tree-id2023 . -29) (undo-tree-id2024 . -29) (undo-tree-id2025 . -29) (undo-tree-id2026 . -29) (undo-tree-id2027 . -29) (undo-tree-id2028 . -29) (undo-tree-id2029 . -29) (undo-tree-id2030 . -29) (undo-tree-id2031 . -29) (undo-tree-id2032 . -29) (undo-tree-id2033 . -29) (undo-tree-id2034 . -29) (undo-tree-id2035 . -29) (undo-tree-id2036 . -29) (undo-tree-id2037 . -29) (undo-tree-id2038 . -29) (undo-tree-id2039 . -29) (undo-tree-id2040 . -29) (undo-tree-id2041 . -29) (undo-tree-id2042 . -29) (undo-tree-id2043 . -29) (undo-tree-id2044 . -29) (undo-tree-id2045 . -29) (undo-tree-id2046 . -29) (undo-tree-id2047 . -29) (undo-tree-id2048 . -29) (undo-tree-id2049 . -29) (undo-tree-id2050 . -29) (undo-tree-id2051 . -29) (undo-tree-id2052 . -29) (undo-tree-id2053 . -29) (undo-tree-id2054 . -29) (undo-tree-id2055 . -29) (undo-tree-id2056 . -29) (undo-tree-id2057 . -29) (undo-tree-id2058 . -29) (undo-tree-id2059 . -29) (undo-tree-id2060 . -29) (undo-tree-id2061 . -29) (undo-tree-id2062 . -29) (undo-tree-id2063 . -29) (undo-tree-id2064 . -29) (undo-tree-id2065 . -29) (undo-tree-id2066 . -29) (undo-tree-id2067 . -29) (undo-tree-id2068 . -29) (undo-tree-id2069 . -29) (undo-tree-id2070 . -29) (undo-tree-id2071 . -29) (undo-tree-id2072 . -29) (undo-tree-id2073 . -29) (undo-tree-id2074 . -29) (undo-tree-id2075 . -29) (undo-tree-id2076 . -29) (undo-tree-id2077 . -29) (undo-tree-id2078 . -29) (undo-tree-id2079 . -29) (undo-tree-id2080 . -29) (undo-tree-id2081 . -29) (undo-tree-id2082 . -29) (undo-tree-id2083 . -29) (undo-tree-id2084 . -29) (undo-tree-id2085 . -29) (undo-tree-id2086 . -29) (undo-tree-id2087 . -29) (undo-tree-id2088 . -29) (undo-tree-id2089 . -29) (undo-tree-id2090 . -29) (undo-tree-id2091 . -29) (undo-tree-id2092 . -29) (undo-tree-id2093 . -29) (undo-tree-id2094 . -29) (undo-tree-id2095 . -29) (undo-tree-id2096 . -29) (undo-tree-id2097 . -29) (undo-tree-id2098 . -29) (undo-tree-id2099 . -29) (undo-tree-id2100 . -29) (undo-tree-id2101 . -29) (undo-tree-id2102 . -29) (undo-tree-id2103 . -29) (undo-tree-id2104 . -29) (undo-tree-id2105 . -29) (undo-tree-id2106 . -29) (undo-tree-id2107 . -29) (undo-tree-id2108 . -29) (undo-tree-id2109 . -29) (undo-tree-id2110 . -29) (undo-tree-id2111 . -29) (undo-tree-id2112 . -29) (undo-tree-id2113 . -29) (undo-tree-id2114 . -29) (undo-tree-id2115 . -29) (undo-tree-id2116 . -29) (undo-tree-id2117 . -29) (undo-tree-id2118 . -29) (undo-tree-id2119 . -29) (undo-tree-id2120 . -29) (undo-tree-id2121 . -29) (undo-tree-id2122 . -29) (undo-tree-id2123 . -29) (undo-tree-id2124 . -29) (undo-tree-id2125 . -29) (undo-tree-id2126 . -29) (undo-tree-id2127 . -29) (undo-tree-id2128 . -29) (undo-tree-id2129 . -29) (undo-tree-id2130 . -29) (undo-tree-id2131 . -29) (undo-tree-id2132 . -29) (undo-tree-id2133 . -29) (undo-tree-id2134 . -29) (undo-tree-id2135 . -29) (undo-tree-id2136 . -29) (undo-tree-id2137 . -29) (undo-tree-id2138 . -29) (undo-tree-id2139 . -29) (undo-tree-id2140 . -29) (undo-tree-id2141 . -29) (undo-tree-id2142 . -29) (undo-tree-id2143 . -29) (undo-tree-id2144 . -29) (undo-tree-id2145 . -29) (undo-tree-id2146 . -29) (undo-tree-id2147 . -29) (undo-tree-id2148 . -29) (undo-tree-id2149 . -29) (undo-tree-id2150 . -29) (undo-tree-id2151 . -29) (undo-tree-id2152 . -29) (undo-tree-id2153 . -29) (undo-tree-id2154 . -29) (undo-tree-id2155 . -29) (undo-tree-id2156 . -29) (undo-tree-id2157 . -29) (undo-tree-id2158 . -29) (undo-tree-id2159 . -29) (undo-tree-id2160 . -29) (undo-tree-id2161 . -29) (undo-tree-id2162 . -29) (undo-tree-id2163 . -29) (undo-tree-id2164 . -29) (undo-tree-id2165 . -29) (undo-tree-id2166 . -29) (undo-tree-id2167 . -29) (undo-tree-id2168 . -29) (undo-tree-id2169 . -29) (undo-tree-id2170 . -29) (undo-tree-id2171 . -29) (undo-tree-id2172 . -29) (undo-tree-id2173 . -29) (undo-tree-id2174 . -29) (undo-tree-id2175 . -29) (undo-tree-id2176 . -29) (undo-tree-id2177 . -29) (undo-tree-id2178 . -29) (undo-tree-id2179 . -29) (undo-tree-id2180 . -29) (undo-tree-id2181 . -29) (undo-tree-id2182 . -29) (undo-tree-id2183 . -29) (undo-tree-id2184 . -29) (undo-tree-id2185 . -29) (undo-tree-id2186 . -29) (undo-tree-id2187 . -29) (undo-tree-id2188 . -29) (undo-tree-id2189 . -29) (undo-tree-id2190 . -29) (undo-tree-id2191 . -29) (undo-tree-id2192 . -29) (undo-tree-id2193 . -29) (undo-tree-id2194 . -29) (undo-tree-id2195 . -29) (undo-tree-id2196 . -29) (undo-tree-id2197 . -29) (undo-tree-id2198 . -29) (undo-tree-id2199 . -29) (undo-tree-id2200 . -29) (undo-tree-id2201 . -29) (undo-tree-id2202 . -29) (undo-tree-id2203 . -29) (undo-tree-id2204 . -29) (undo-tree-id2205 . -29) (undo-tree-id2206 . -29) (undo-tree-id2207 . -29) (undo-tree-id2208 . -29) (undo-tree-id2209 . -29) (undo-tree-id2210 . -29) (undo-tree-id2211 . -29) (undo-tree-id2212 . -29) (undo-tree-id2213 . -29) (undo-tree-id2214 . -29) (undo-tree-id2215 . -29) (undo-tree-id2216 . -29) (undo-tree-id2217 . -29) (undo-tree-id2218 . -29) (undo-tree-id2219 . -29) (undo-tree-id2220 . -29) (undo-tree-id2221 . -29) (undo-tree-id2222 . -29) (undo-tree-id2223 . -29) (undo-tree-id2224 . -29) (undo-tree-id2225 . -29) (undo-tree-id2226 . -29) (undo-tree-id2227 . -29) (undo-tree-id2228 . -29) (undo-tree-id2229 . -29) (undo-tree-id2230 . -29) (undo-tree-id2231 . -29) (undo-tree-id2232 . -29) (undo-tree-id2233 . -33) (undo-tree-id2234 . -33) (undo-tree-id2235 . -33) 2412) ((2383 . 2416) (#("
" 0 1 (fontified t)) . 2383) (undo-tree-id2520 . -1) (undo-tree-id2521 . 1)) (25720 22124 273832 773000) 0 nil])
nil
([nil nil ((#("|--------------+-----------|
" 0 1 (fontified nil face org-table) 1 28 (fontified nil face org-table) 28 29 (fontified nil)) . 2395) (undo-tree-id2590 . -29) (2360 . 2395) (#("| interface    | node type |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 8 (fontified nil face org-table) 8 11 (fontified nil face org-table) 11 14 (fontified nil face org-table) 14 15 (display (space :relative-width 1) fontified nil face org-table) 15 16 (fontified nil face org-table) 16 17 (display (space :relative-width 1) fontified nil face org-table) 17 21 (fontified nil face org-table) 21 26 (fontified nil face org-table) 26 27 (display (space :relative-width 1) fontified nil face org-table) 27 28 (fontified nil face org-table) 28 29 (fontified nil)) . 2360) (undo-tree-id2591 . -29) (undo-tree-id2592 . -27) (2325 . 2360) 2352 (t 25720 22130 957484 208000)) nil (25720 22247 291255 518000) 0 nil])
nil
([nil nil ((2535 . 2570) (#("|
" 0 1 (fontified nil) 1 2 (fontified nil)) . 2535) (undo-tree-id2573 . -2) (undo-tree-id2574 . -2) (undo-tree-id2575 . -1) (2500 . 2535) (#("|Attr
" 0 1 (fontified nil face org-table) 1 5 (fontified nil face org-table) 5 6 (fontified nil)) . 2500) (undo-tree-id2576 . -6) (2465 . 2500) (#("|Text
" 0 5 (fontified nil face org-table) 5 6 (fontified nil)) . 2465) (2430 . 2465) 2443 (2442 . 2443) (#("*" 0 1 (fontified t)) . -2442) (undo-tree-id2577 . -1) (#("*" 0 1 (fontified t)) . -2443) (undo-tree-id2578 . -1) (#("*" 0 1 (fontified t face (bold) font-lock-multiline t org-emphasis t)) . -2444) (undo-tree-id2579 . -1) (#("*" 0 1 (fontified t face (bold) font-lock-multiline t org-emphasis t)) . -2445) (undo-tree-id2580 . -1) (#(" " 0 1 (fontified t keymap (keymap) face org-level-4)) . -2446) (undo-tree-id2581 . -1) 2447 (2442 . 2447) 2441 (#("i" 0 1 (fontified t face org-table)) . -2441) (undo-tree-id2582 . -1) (#("b" 0 1 (fontified t face org-table)) . -2442) (undo-tree-id2583 . -1) (#("u" 0 1 (fontified t face org-table)) . -2443) (undo-tree-id2584 . -1) (#("t" 0 1 (fontified t face org-table)) . -2444) (undo-tree-id2585 . -1) (#("e" 0 1 (fontified t face org-table)) . -2445) (undo-tree-id2586 . -1) 2446 (2441 . 2446) (#("i" 0 1 (fontified t face org-table)) . -2441) (undo-tree-id2587 . -1) 2442 (2437 . 2442) (2436 . 2437) (2435 . 2436) (2432 . 2435) (#("E" 0 1 (fontified t face org-table)) . -2432) (undo-tree-id2588 . -1) (#("X" 0 1 (fontified t face org-table)) . -2433) (undo-tree-id2589 . -1) 2434 (2431 . 2434) (2430 . 2431) (2429 . 2430) 2397) nil (25720 22247 291236 658000) 0 nil])
([nil nil ((#("|--------------+-----------------|
" 0 34 (fontified t face org-table) 34 35 (fontified t)) . 2500) (undo-tree-id2570 . -35) (undo-tree-id2571 . -34) (undo-tree-id2572 . -1) 2501) nil (25720 22247 291197 889000) 0 nil])
([nil nil ((#("| DocumentType   |                 |
" 0 17 (fontified nil face org-table) 17 18 (fontified nil face org-table) 18 19 (display (space :relative-width 1) fontified nil face org-table) 19 34 (fontified nil face org-table) 34 35 (display (space :relative-width 1) fontified nil face org-table) 35 36 (fontified nil face org-table) 36 37 (fontified nil)) . 2637) (undo-tree-id2555 . -37) (undo-tree-id2556 . -37) (undo-tree-id2557 . -14) (2598 . 2637) 2612 (#(" " 0 1 (fontified nil face org-table)) . 2614) (2611 . 2612) (#(" " 0 1 (fontified nil face org-table)) . 2614) (2610 . 2611) (#("e" 0 1 (fontified t face org-table)) . -2610) (undo-tree-id2558 . -1) (#("o" 0 1 (fontified t face org-table)) . -2611) (undo-tree-id2559 . -1) 2612 (#(" " 0 1 (fontified nil face org-table)) . 2616) (2611 . 2612) (#(" " 0 1 (fontified nil face org-table)) . 2616) (2610 . 2611) (#(" " 0 1 (fontified nil face org-table)) . 2616) (2609 . 2610) (#(" " 0 1 (fontified nil face org-table)) . 2616) (2608 . 2609) (#(" " 0 1 (fontified nil face org-table)) . 2616) (2607 . 2608) (#(" " 0 1 (fontified nil face org-table)) . 2616) (2606 . 2607) (#(" " 0 1 (fontified nil face org-table)) . 2616) (2605 . 2606) (#(" " 0 1 (fontified nil face org-table)) . 2616) (2604 . 2605) (#(" " 0 1 (fontified nil face org-table)) . 2616) (2603 . 2604) (#(" " 0 1 (fontified nil face org-table)) . 2616) (2602 . 2603) (#(" " 0 1 (fontified nil face org-table)) . 2616) (2601 . 2602) (#(" " 0 1 (fontified nil)) . 2616) (2600 . 2601) (#("|                  " 0 19 (fontified t face org-table)) . 2598) (2617 . 2636) 2600 (2598 . 2637) (#("| HTMLDocument |                 |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 14 (fontified nil face org-table) 14 15 (display (space :relative-width 1) fontified nil face org-table) 15 16 (fontified nil face org-table) 16 17 (display (space :relative-width 1) fontified nil face org-table) 17 32 (fontified nil face org-table) 32 33 (display (space :relative-width 1) fontified nil face org-table) 33 34 (fontified nil face org-table) 34 35 (fontified nil)) . 2559) (undo-tree-id2560 . -35) (2520 . 2559) (#("| Attr         |                 |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 6 (fontified nil face org-table) 6 14 (fontified nil face org-table) 14 15 (display (space :relative-width 1) fontified nil face org-table) 15 16 (fontified nil face org-table) 16 17 (display (space :relative-width 1) fontified nil face org-table) 17 32 (fontified nil face org-table) 32 33 (display (space :relative-width 1) fontified nil face org-table) 33 34 (fontified nil face org-table) 34 35 (fontified nil)) . 2520) (undo-tree-id2561 . -35) (undo-tree-id2562 . -35) (2481 . 2520) (#("| Text         |                 |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 6 (fontified nil face org-table) 6 14 (fontified nil face org-table) 14 15 (display (space :relative-width 1) fontified nil face org-table) 15 16 (fontified nil face org-table) 16 17 (display (space :relative-width 1) fontified nil face org-table) 17 32 (fontified nil face org-table) 32 33 (display (space :relative-width 1) fontified nil face org-table) 33 34 (fontified nil face org-table) 34 35 (fontified nil)) . 2481) (2442 . 2481) (#("| HTML*Element | 1(ElEMENT_NODE) |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 14 (fontified nil face org-table) 14 15 (display (space :relative-width 1) fontified nil face org-table) 15 16 (fontified nil face org-table) 16 17 (display (space :relative-width 1) fontified nil face org-table) 17 32 (fontified nil face org-table) 32 33 (display (space :relative-width 1) fontified nil face org-table) 33 34 (fontified nil face org-table) 34 35 (fontified nil)) . 2442) (undo-tree-id2563 . -33) (undo-tree-id2564 . -33) (2403 . 2442) (#("|--------------+-----------------|
" 0 1 (fontified nil face org-table) 1 34 (fontified nil face org-table) 34 35 (fontified nil)) . 2403) (2364 . 2403) (#("| interface    | node type       |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 8 (fontified nil face org-table) 8 11 (fontified nil face org-table) 11 14 (fontified nil face org-table) 14 15 (display (space :relative-width 1) fontified nil face org-table) 15 16 (fontified nil face org-table) 16 17 (display (space :relative-width 1) fontified nil face org-table) 17 21 (fontified nil face org-table) 21 26 (fontified nil face org-table) 26 32 (fontified nil face org-table) 32 33 (display (space :relative-width 1) fontified nil face org-table) 33 34 (fontified nil face org-table) 34 35 (fontified nil)) . 2364) (2325 . 2364) 2553 (2552 . 2553) (#(" " 0 1 (fontified nil face org-table)) . 2552) (2551 . 2552) (#(" " 0 1 (fontified nil face org-table)) . 2552) (2550 . 2551) (#(" " 0 1 (fontified nil face org-table)) . 2552) (2549 . 2550) (#(" " 0 1 (fontified nil face org-table)) . 2552) (2548 . 2549) (#(" " 0 1 (fontified nil face org-table)) . 2552) (2547 . 2548) (#(" " 0 1 (fontified nil face org-table)) . 2552) (2546 . 2547) (#(" " 0 1 (fontified nil face org-table)) . 2552) (2545 . 2546) (2542 . 2545) (#(" " 0 1 (fontified nil face org-table)) . 2549) (2541 . 2542) (#(" " 0 1 (fontified nil face org-table)) . 2549) (2540 . 2541) (#(" " 0 1 (fontified nil face org-table)) . 2549) (2539 . 2540) (#(" " 0 1 (fontified nil face org-table)) . 2549) (2538 . 2539) (#(" " 0 1 (fontified nil)) . 2549) (2537 . 2538) (#("|              " 0 15 (fontified t face org-table)) . 2535) (2550 . 2565) 2537 (2535 . 2570) (#("|HTMLDocument  |                 |
" 0 13 (fontified nil face org-table) 13 34 (fontified nil face org-table) 34 35 (fontified nil)) . 2535) (undo-tree-id2565 . -35) (undo-tree-id2566 . 21) (undo-tree-id2567 . -35) (undo-tree-id2568 . -13) (2500 . 2535) 2513 (#(" " 0 1 (fontified nil face org-table)) . 2514) (undo-tree-id2569 . 1) (2512 . 2513) (#(" " 0 1 (fontified nil face org-table)) . 2514) (2511 . 2512) (#(" " 0 1 (fontified nil face org-table)) . 2514) (2510 . 2511) (#(" " 0 1 (fontified nil face org-table)) . 2514) (2509 . 2510) (#(" " 0 1 (fontified nil face org-table)) . 2514) (2508 . 2509) (#(" " 0 1 (fontified nil face org-table)) . 2514) (2507 . 2508) (#(" " 0 1 (fontified nil face org-table)) . 2514) (2506 . 2507) (#(" " 0 1 (fontified nil face org-table)) . 2514) (2505 . 2506) (#(" " 0 1 (fontified nil face org-table)) . 2514) (2504 . 2505) (#(" " 0 1 (fontified nil face org-table)) . 2514) (2503 . 2504) (#(" " 0 1 (fontified nil face org-table)) . 2514) (2502 . 2503) (#(" " 0 1 (fontified nil face org-table)) . 2514) (2501 . 2502)) nil (25720 22247 291167 363000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face org-table)) . 2478) (2464 . 2465) (#(" " 0 1 (fontified nil face org-table)) . 2478) (2463 . 2464) (#(" " 0 1 (fontified nil face org-table)) . 2478) (2462 . 2463)) nil (25720 22247 291101 981000) 0 nil])
([nil nil ((2462 . 2463) (#("2" 0 1 (fontified t face org-table)) . 2462)) nil (25720 22247 291097 231000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face org-table)) . -2465) (undo-tree-id2554 . -1) 2466 (#(" " 0 1 (fontified nil face org-table)) . 2478) (2465 . 2466)) nil (25720 22247 291092 970000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil face org-table)) . 2477) (2472 . 2473) (#(" " 0 1 (fontified nil face org-table)) . 2477) (2471 . 2472) (#(" " 0 1 (fontified nil face org-table)) . 2477) (2470 . 2471) (#(" " 0 1 (fontified nil face org-table)) . 2477) (2469 . 2470) (#(" " 0 1 (fontified nil face org-table)) . 2477) (2468 . 2469) (#(" " 0 1 (fontified nil face org-table)) . 2477) (2467 . 2468) (#(" " 0 1 (fontified nil face org-table)) . 2477) (2466 . 2467) (#(" " 0 1 (fontified nil face org-table)) . 2477) (2465 . 2466) (#(" " 0 1 (fontified nil face org-table)) . 2477) (2464 . 2465)) nil (25720 22247 291083 959000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face org-table)) . 2516) (2512 . 2513) (#(" " 0 1 (fontified nil face org-table)) . 2516) (2511 . 2512) (#(" " 0 1 (fontified nil face org-table)) . 2516) (2510 . 2511)) nil (25720 22247 291073 900000) 0 nil])
([nil nil ((2517 . 2526) (#("V" 0 1 (fontified t face org-table)) . -2517) (undo-tree-id2551 . -1) (#("u" 0 1 (fontified t face org-table)) . -2518) (undo-tree-id2552 . -1) 2519 (2515 . 2519) (#(" " 0 1 (fontified nil face org-table)) . 2516) (undo-tree-id2553 . 1) (2514 . 2515) (#(" " 0 1 (fontified nil face org-table)) . 2516) (2513 . 2514) (#(" " 0 1 (fontified nil face org-table)) . 2516) (2512 . 2513)) nil (25720 22247 291066 216000) 0 nil])
([nil nil ((#("| DocumentType     |                 |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 14 (fontified nil face org-table) 14 18 (fontified nil face org-table) 18 19 (display (space :relative-width 1) fontified nil face org-table) 19 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 36 (fontified nil face org-table) 36 37 (display (space :relative-width 1) fontified nil face org-table) 37 38 (fontified nil face org-table) 38 39 (fontified nil)) . 2653) (undo-tree-id2539 . 39) (undo-tree-id2540 . -39) (2612 . 2653) (#("| DocumentFragment |                 |
" 0 1 (fontified nil face org-table) 1 7 (fontified nil face org-table) 7 18 (fontified nil face org-table) 18 19 (fontified nil face org-table) 19 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 36 (fontified nil face org-table) 36 37 (display (space :relative-width 1) fontified nil face org-table) 37 38 (fontified nil face org-table) 38 39 (fontified nil)) . 2612) (undo-tree-id2541 . 39) (2571 . 2612) (#("| HTMLDocument     |                 |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 14 (fontified nil face org-table) 14 18 (fontified nil face org-table) 18 19 (display (space :relative-width 1) fontified nil face org-table) 19 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 36 (fontified nil face org-table) 36 37 (display (space :relative-width 1) fontified nil face org-table) 37 38 (fontified nil face org-table) 38 39 (fontified nil)) . 2571) (undo-tree-id2542 . 39) (2530 . 2571) (#("| Attr             |          2(ATTRIBUTE_NODE) |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 6 (fontified nil face org-table) 6 18 (fontified nil face org-table) 18 19 (display (space :relative-width 1) fontified nil face org-table) 19 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 47 (fontified nil face org-table) 47 48 (display (space :relative-width 1) fontified nil face org-table) 48 49 (fontified nil face org-table) 49 50 (fontified nil)) . 2530) (undo-tree-id2543 . -50) (undo-tree-id2544 . 4) (undo-tree-id2545 . -45) (2489 . 2530) (#("| Text             |3(TEXT_NODE)    |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 6 (fontified nil face org-table) 6 18 (fontified nil face org-table) 18 19 (display (space :relative-width 1) fontified nil face org-table) 19 20 (fontified nil face org-table) 20 21 (fontified nil face org-table) 21 32 (fontified nil face org-table) 32 33 (display (space :relative-width 1) fontified nil face org-table) 33 35 (fontified nil face org-table) 35 36 (display (space :relative-width 1) fontified nil face org-table) 36 37 (fontified nil face org-table) 37 38 (fontified nil)) . 2489) (undo-tree-id2546 . -38) (undo-tree-id2547 . -20) (undo-tree-id2548 . -20) (2448 . 2489) (#("| HTML*Element     | 1(ElEMENT_NODE) |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 14 (fontified nil face org-table) 14 18 (fontified nil face org-table) 18 19 (display (space :relative-width 1) fontified nil face org-table) 19 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 36 (fontified nil face org-table) 36 37 (display (space :relative-width 1) fontified nil face org-table) 37 38 (fontified nil face org-table) 38 39 (fontified nil)) . 2448) (undo-tree-id2549 . -39) (undo-tree-id2550 . -39) (2407 . 2448) (#("|------------------+-----------------|
" 0 1 (fontified nil face org-table) 1 38 (fontified nil face org-table) 38 39 (fontified nil)) . 2407) (2366 . 2407) (#("| interface        | node type       |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 8 (fontified nil face org-table) 8 11 (fontified nil face org-table) 11 18 (fontified nil face org-table) 18 19 (display (space :relative-width 1) fontified nil face org-table) 19 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 25 (fontified nil face org-table) 25 30 (fontified nil face org-table) 30 36 (fontified nil face org-table) 36 37 (display (space :relative-width 1) fontified nil face org-table) 37 38 (fontified nil face org-table) 38 39 (fontified nil)) . 2366) (2325 . 2366) 2525) nil (25720 22247 291051 547000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2573 . 2574) (nil fontified nil 2552 . 2574) (2552 . 2574) 2551) nil (25720 22247 291024 444000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2662 . 2663) (nil fontified nil 2631 . 2663) (2631 . 2663) 2630) nil (25720 22247 291020 532000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2732 . 2733) (nil fontified nil 2704 . 2733) (2704 . 2733) 2703) nil (25720 22247 291016 271000) 0 nil])
([nil nil ((2773 . 2829) (#("| DocumentType     |                  	10 (i.e. DOCUMENT_TYPE_NODE) |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 14 (fontified nil face org-table) 14 18 (fontified nil face org-table) 18 19 (display (space :relative-width 1) fontified nil face org-table) 19 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 38 (fontified nil face org-table) 38 66 (fontified nil face org-table) 66 67 (fontified nil rear-nonsticky t face org-table) 67 68 (display (space :relative-width 1) fontified nil face org-table) 68 69 (fontified nil face org-table) 69 70 (fontified nil)) . 2773) (undo-tree-id2528 . -70) (undo-tree-id2529 . -38) (undo-tree-id2530 . -38) (undo-tree-id2531 . -66) (undo-tree-id2532 . -70) (undo-tree-id2533 . -66) (2717 . 2773) (#("| DocumentFragment |                  11 (i.e. DOCUMENT_FRAGMENT_NODE) |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 7 (fontified nil face org-table) 7 18 (fontified nil face org-table) 18 19 (display (space :relative-width 1) fontified nil face org-table) 19 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 38 (fontified nil face org-table) 38 69 (fontified nil face org-table) 69 70 (fontified nil rear-nonsticky t face org-table) 70 71 (display (space :relative-width 1) fontified nil face org-table) 71 72 (fontified nil face org-table) 72 73 (fontified nil)) . 2717) (undo-tree-id2534 . -73) (undo-tree-id2535 . -38) (2661 . 2717) (#("| HTMLDocument     |  9 (i.e. DOCUMENT_NODE)                 |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 14 (fontified nil face org-table) 14 18 (fontified nil face org-table) 18 19 (display (space :relative-width 1) fontified nil face org-table) 19 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 22 (fontified nil face org-table) 22 43 (fontified nil face org-table) 43 44 (fontified nil rear-nonsticky t face org-table) 44 60 (fontified nil face org-table) 60 61 (display (space :relative-width 1) fontified nil face org-table) 61 62 (fontified nil face org-table) 62 63 (fontified nil)) . 2661) (undo-tree-id2536 . -22) (2605 . 2661) (#("| Attr             | 2(ATTRIBUTE_NODE) |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 6 (fontified nil face org-table) 6 18 (fontified nil face org-table) 18 19 (display (space :relative-width 1) fontified nil face org-table) 19 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 38 (fontified nil face org-table) 38 39 (display (space :relative-width 1) fontified nil face org-table) 39 40 (fontified nil face org-table) 40 41 (fontified nil)) . 2605) (2549 . 2605) (#("| Text             | 3(TEXT_NODE)      |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 6 (fontified nil face org-table) 6 18 (fontified nil face org-table) 18 19 (display (space :relative-width 1) fontified nil face org-table) 19 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 22 (fontified nil face org-table) 22 33 (fontified nil face org-table) 33 38 (fontified nil face org-table) 38 39 (display (space :relative-width 1) fontified nil face org-table) 39 40 (fontified nil face org-table) 40 41 (fontified nil)) . 2549) (2493 . 2549) (#("| HTML*Element     | 1(ElEMENT_NODE)   |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 14 (fontified nil face org-table) 14 18 (fontified nil face org-table) 18 19 (display (space :relative-width 1) fontified nil face org-table) 19 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 36 (fontified nil face org-table) 36 38 (fontified nil face org-table) 38 39 (display (space :relative-width 1) fontified nil face org-table) 39 40 (fontified nil face org-table) 40 41 (fontified nil)) . 2493) (undo-tree-id2537 . -41) (undo-tree-id2538 . -41) (2437 . 2493) (#("|------------------+-------------------|
" 0 1 (fontified nil face org-table) 1 40 (fontified nil face org-table) 40 41 (fontified nil)) . 2437) (2381 . 2437) (#("| interface        | node type         |
" 0 1 (fontified nil face org-table) 1 2 (display (space :relative-width 1) fontified nil face org-table) 2 8 (fontified nil face org-table) 8 11 (fontified nil face org-table) 11 18 (fontified nil face org-table) 18 19 (display (space :relative-width 1) fontified nil face org-table) 19 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 25 (fontified nil face org-table) 25 30 (fontified nil face org-table) 30 38 (fontified nil face org-table) 38 39 (display (space :relative-width 1) fontified nil face org-table) 39 40 (fontified nil face org-table) 40 41 (fontified nil)) . 2381) (2325 . 2381) 2732) nil (25720 22247 291008 517000) 0 nil])
([nil nil ((#("|                  |                                  |
" 0 55 (fontified t face org-table) 55 56 (fontified t)) . 2773) (undo-tree-id2523 . -56) (undo-tree-id2524 . -56) (undo-tree-id2525 . -55) (undo-tree-id2526 . -56) (undo-tree-id2527 . -2) 2775) nil (25720 22247 290976 804000) 0 nil])
([nil nil ((2773 . 2774) 2773) nil (25720 22247 290942 157000) 0 nil])
([nil nil ((2773 . 2777) 749 (t 25720 22247 299922 135000)) nil (25720 22526 4320 371000) 0 nil])
([nil nil ((#("X" 0 1 (fontified t)) . -3006) (undo-tree-id2763 . -1) (#("S" 0 1 (fontified t)) . -3007) (undo-tree-id2764 . -1) 3008 (2996 . 3008) (2991 . 2996) (#("e" 0 1 (fontified t)) . -2991) (undo-tree-id2765 . -1) (#("s" 0 1 (fontified t)) . -2992) (undo-tree-id2766 . -1) (#("e" 0 1 (fontified t)) . -2993) (undo-tree-id2767 . -1) (#(" " 0 1 (fontified t)) . -2994) (undo-tree-id2768 . -1) (#("n" 0 1 (fontified t)) . -2995) (undo-tree-id2769 . -1) (#("o" 0 1 (fontified t)) . -2996) (undo-tree-id2770 . -1) (#("d" 0 1 (fontified t)) . -2997) (undo-tree-id2771 . -1) (#("e" 0 1 (fontified t)) . -2998) (undo-tree-id2772 . -1) 2999 (2992 . 2999) (2971 . 2992) (#("g" 0 1 (fontified t)) . -2971) (undo-tree-id2773 . -1) (#("a" 0 1 (fontified t)) . -2972) (undo-tree-id2774 . -1) (#("c" 0 1 (fontified t)) . -2973) (undo-tree-id2775 . -1) (#("e" 0 1 (fontified t)) . -2974) (undo-tree-id2776 . -1) 2975 (2968 . 2975) (#("r" 0 1 (fontified t)) . -2968) (undo-tree-id2777 . -1) (#("e" 0 1 (fontified t)) . -2969) (undo-tree-id2778 . -1) 2970 (2967 . 2970) (#("g" 0 1 (fontified t)) . -2967) (undo-tree-id2779 . -1) 2968 (2967 . 2968) (2959 . 2967) (#("c" 0 1 (fontified t)) . -2959) (undo-tree-id2780 . -1) (#("u" 0 1 (fontified t)) . -2960) (undo-tree-id2781 . -1) (#("t" 0 1 (fontified t)) . -2961) (undo-tree-id2782 . -1) (#("r" 0 1 (fontified t)) . -2962) (undo-tree-id2783 . -1) (#("o" 0 1 (fontified t)) . -2963) (undo-tree-id2784 . -1) 2964 (2947 . 2964) (#("t" 0 1 (fontified t)) . -2947) (undo-tree-id2785 . -1) (#("o" 0 1 (fontified t)) . -2948) (undo-tree-id2786 . -1) 2949 (2943 . 2949) (2942 . 2943) (#("a" 0 1 (fontified t)) . -2942) (undo-tree-id2787 . -1) (#("n" 0 1 (fontified t)) . -2943) (undo-tree-id2788 . -1) (#("d" 0 1 (fontified t)) . -2944) (undo-tree-id2789 . -1) (#(" " 0 1 (fontified t)) . -2945) (undo-tree-id2790 . -1) (#("a" 0 1 (fontified t)) . -2946) (undo-tree-id2791 . -1) (#("l" 0 1 (fontified t)) . -2947) (undo-tree-id2792 . -1) 2948 (2942 . 2948) (#("a" 0 1 (fontified t)) . -2942) (undo-tree-id2793 . -1) (#("n" 0 1 (fontified t)) . -2943) (undo-tree-id2794 . -1) (#("d" 0 1 (fontified t)) . -2944) (undo-tree-id2795 . -1) (#("
" 0 1 (fontified t)) . -2945) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (#("A" 0 1 (fontified t)) . -2946) (undo-tree-id2798 . -1) 2947 (2946 . 2947) (2945 . 2946) (2940 . 2945) (2919 . 2940) (2898 . 2919) (2888 . 2898) (#("o" 0 1 (fontified t)) . -2888) (undo-tree-id2799 . -1) (#("b" 0 1 (fontified t)) . -2889) (undo-tree-id2800 . -1) 2890 (2879 . 2890) (2876 . 2879) (#("e" 0 1 (fontified t)) . -2876) (undo-tree-id2801 . -1) (#("h" 0 1 (fontified t)) . -2877) (undo-tree-id2802 . -1) 2878 (2860 . 2878) (#("o" 0 1 (fontified t)) . -2860) (undo-tree-id2803 . -1) 2861 (2842 . 2861) (2821 . 2842) (#("i" 0 1 (fontified t)) . -2821) (undo-tree-id2804 . -1) 2822 (2821 . 2822) (2820 . 2821) 2819 (2818 . 2819) (2797 . 2818) (#(" " 0 1 (fontified t face org-level-3)) . -2797) (undo-tree-id2805 . -1) 2798 (2782 . 2798) (#("y" 0 1 (fontified t face org-level-3)) . -2782) (undo-tree-id2806 . -1) (#("b" 0 1 (fontified t face org-level-3)) . -2783) (undo-tree-id2807 . -1) 2784 (2781 . 2784) (#("A" 0 1 (fontified t face org-level-3)) . -2781) (undo-tree-id2808 . -1) 2782 (2776 . 2782)) nil (25720 22671 321489 618000) 0 nil] [nil nil ((2777 . 2778) 2775) ((#("
" 0 1 (fontified t)) . 2777) (undo-tree-id2626 . -1) (undo-tree-id2627 . 1) (undo-tree-id2628 . -1)) (25720 22521 322251 39000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 3004) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) 3005) nil (25720 22671 321922 602000) 0 nil])
([nil nil ((2800 . 2809) (#("o" 0 1 (fontified t face org-level-3)) . -2800) (undo-tree-id2593 . -1) (#("r" 0 1 (fontified t face org-level-3)) . -2801) (undo-tree-id2594 . -1) 2802 (2793 . 2802) (2792 . 2793) (#("e" 0 1 (fontified t face org-level-3)) . -2792) (undo-tree-id2595 . -1) (#("r" 0 1 (fontified t face org-level-3)) . -2793) (undo-tree-id2596 . -1) (#("e" 0 1 (fontified t face org-level-3)) . -2794) (undo-tree-id2597 . -1) (#("r" 0 1 (fontified t face org-level-3)) . -2795) (undo-tree-id2598 . -1) (#("e" 0 1 (fontified t face org-level-3)) . -2796) (undo-tree-id2599 . -1) 2797 (2792 . 2797) (2787 . 2792) (#("t" 0 1 (fontified t face org-level-3)) . -2787) (undo-tree-id2600 . -1) 2788 (2777 . 2788) (#("S" 0 1 (fontified t face org-level-3)) . -2777) (undo-tree-id2601 . -1) (#("u" 0 1 (fontified t face org-level-3)) . -2778) (undo-tree-id2602 . -1) (#("b" 0 1 (fontified t face org-level-3)) . -2779) (undo-tree-id2603 . -1) (#(" " 0 1 (fontified t face org-level-3)) . -2780) (undo-tree-id2604 . -1) 2781 (2777 . 2781)) ((#("Sub " 0 1 (fontified nil face org-level-3) 1 2 (fontified nil face org-level-3) 2 3 (fontified nil face org-level-3) 3 4 (fontified nil face org-level-3)) . 2777) (undo-tree-id2605 . -4) (2777 . 2781) (#("1.3 Sub not" 0 10 (fontified nil face org-level-3) 10 11 (fontified nil face org-level-3)) . 2777) (undo-tree-id2606 . -10) (undo-tree-id2607 . -11) (undo-tree-id2608 . -10) (undo-tree-id2609 . -10) (undo-tree-id2610 . -10) (2787 . 2788) (#("des i" 0 5 (fontified nil face org-level-3)) . 2787) (undo-tree-id2611 . -5) (undo-tree-id2612 . -5) (undo-tree-id2613 . -5) (undo-tree-id2614 . -5) (undo-tree-id2615 . -5) (#("erere" 0 1 (fontified nil face org-level-3) 1 2 (fontified nil face org-level-3) 2 3 (fontified nil face org-level-3) 3 4 (fontified nil face org-level-3) 4 5 (fontified nil face org-level-3)) . 2792) (undo-tree-id2616 . -5) (2792 . 2797) (#("n" 0 1 (fontified nil face org-level-3)) . 2792) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (#("herit for" 0 7 (fontified nil face org-level-3) 7 8 (fontified nil face org-level-3) 8 9 (fontified nil face org-level-3)) . 2793) (undo-tree-id2620 . -9) (undo-tree-id2621 . -7) (undo-tree-id2622 . -7) (2800 . 2802) (#("rom Node " 0 9 (fontified t face org-level-3)) . 2800) (undo-tree-id2623 . -4) (undo-tree-id2624 . -4) (undo-tree-id2625 . -4)) (25720 22521 321446 869000) 0 nil])
([nil nil ((3004 . 3005) (t 25720 22673 390216 504000)) nil (25720 22677 36611 844000) 0 nil] [nil nil ((2943 . 2944) (#("all other constructor interfaces inherit from this node objec 
" 0 62 (fontified t) 62 63 (fontified t)) . 2943) (undo-tree-id2629 . -63) (undo-tree-id2630 . 1) (undo-tree-id2631 . -62) (undo-tree-id2632 . -61) (undo-tree-id2633 . -62) (undo-tree-id2634 . -61) (undo-tree-id2635 . -61) (undo-tree-id2636 . -61) (undo-tree-id2637 . -61) (undo-tree-id2638 . -61) (undo-tree-id2639 . -61) (undo-tree-id2640 . -61) (undo-tree-id2641 . -61) (undo-tree-id2642 . -61) (undo-tree-id2643 . -61) (undo-tree-id2644 . -61) (undo-tree-id2645 . -61) (undo-tree-id2646 . -61) (undo-tree-id2647 . -61) (undo-tree-id2648 . -61) (undo-tree-id2649 . -61) (undo-tree-id2650 . -61) (undo-tree-id2651 . -61) (undo-tree-id2652 . -61) (undo-tree-id2653 . -61) (undo-tree-id2654 . -61) (undo-tree-id2655 . -61) (undo-tree-id2656 . -61) (undo-tree-id2657 . -61) (undo-tree-id2658 . -61) (undo-tree-id2659 . -61) (undo-tree-id2660 . -61) (undo-tree-id2661 . -61) (undo-tree-id2662 . -61) (undo-tree-id2663 . -61) (undo-tree-id2664 . -61) (undo-tree-id2665 . -61) (undo-tree-id2666 . -61) (undo-tree-id2667 . -61) (undo-tree-id2668 . -61) (undo-tree-id2669 . -61) (undo-tree-id2670 . -61) (undo-tree-id2671 . -61) (undo-tree-id2672 . -61) (undo-tree-id2673 . -61) (undo-tree-id2674 . -61) (undo-tree-id2675 . -61) (undo-tree-id2676 . -61) (undo-tree-id2677 . -61) (undo-tree-id2678 . -61) (undo-tree-id2679 . -61) (undo-tree-id2680 . -61) (undo-tree-id2681 . -61) (undo-tree-id2682 . -61) (undo-tree-id2683 . -61) (undo-tree-id2684 . -61) (undo-tree-id2685 . -61) (undo-tree-id2686 . -61) (undo-tree-id2687 . -61) (undo-tree-id2688 . -61) (undo-tree-id2689 . -61) (undo-tree-id2690 . -61) (undo-tree-id2691 . -61) (undo-tree-id2692 . -61) (undo-tree-id2693 . -61) (undo-tree-id2694 . -61) (undo-tree-id2695 . -61) (undo-tree-id2696 . -61) (undo-tree-id2697 . -61) (undo-tree-id2698 . -61) (undo-tree-id2699 . -61) (undo-tree-id2700 . -61) (undo-tree-id2701 . -61) (undo-tree-id2702 . -61) (undo-tree-id2703 . -61) (undo-tree-id2704 . -61) (undo-tree-id2705 . -61) (undo-tree-id2706 . -61) (undo-tree-id2707 . -61) (undo-tree-id2708 . -61) (undo-tree-id2709 . -61) (undo-tree-id2710 . -61) (undo-tree-id2711 . -61) (undo-tree-id2712 . -61) (undo-tree-id2713 . -61) (undo-tree-id2714 . -61) (undo-tree-id2715 . -61) (undo-tree-id2716 . -61) (undo-tree-id2717 . -61) (undo-tree-id2718 . -61) (undo-tree-id2719 . -61) (undo-tree-id2720 . -61) (undo-tree-id2721 . -61) (undo-tree-id2722 . -61) (undo-tree-id2723 . -61) (undo-tree-id2724 . -63) (undo-tree-id2725 . -63) (undo-tree-id2726 . -63) 3004) ((2943 . 3006) (#("
" 0 1 (fontified t)) . 2943) (undo-tree-id2809 . -1) (undo-tree-id2810 . 1)) (25720 22671 321280 496000) 0 nil])
nil
([nil nil ((#("l" 0 1 (fontified t)) . 2945) (t 25720 22677 46547 825000)) nil (25720 29671 688880 381000) 0 nil])
nil
([nil nil ((2945 . 2946)) nil (25720 29671 688877 563000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 3030) (undo-tree-id0 . -3) (3008 . 3030) 3011 (3008 . 3011) (3007 . 3008) 3007) nil (25720 29671 688873 847000) 0 nil])
([nil nil ((3054 . 3068) (3033 . 3054) (3025 . 3033) (3020 . 3025)) nil (25720 29671 688834 510000) 0 nil])
([nil nil ((3068 . 3069) 3067) nil (25720 29671 688829 800000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3608 . 3609) (nil fontified nil 3069 . 3609) (3069 . 3609)) nil (25720 29671 688819 347000) 0 nil])
([nil nil ((3619 . 3620) (t 25720 29671 697190 479000) 3611) nil (25720 29888 441132 461000) 0 nil])
([nil nil ((3620 . 3621) (t 25720 29888 450496 907000) 3620) nil (25720 30136 528466 73000) 0 nil])
([nil nil ((3621 . 3622) 3621) nil (25720 30136 528463 439000) 0 nil])
([nil nil ((3621 . 3622) 3621) nil (25720 30136 528461 341000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3620) (undo-tree-id397 . -1) (#("j" 0 1 (fontified t)) . -3621) (undo-tree-id398 . -1) 3622 (3621 . 3622) (3620 . 3621) (3620 . 3621) (#("
" 0 1 (fontified t)) . 3620) (undo-tree-id399 . -1) (undo-tree-id400 . -1) 3621) nil (25720 30136 528457 437000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3621) (undo-tree-id395 . -1) 3622 (3621 . 3622) (#("," 0 1 (fontified t)) . -3621) (undo-tree-id396 . -1) 3622 (3621 . 3622)) nil (25720 30136 528444 853000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -3621) (undo-tree-id392 . -1) (#("x" 0 1 (fontified t)) . -3622) (undo-tree-id393 . -1) 3623 (3621 . 3623) (#("," 0 1 (fontified t)) . -3621) (undo-tree-id394 . -1) 3622 (3621 . 3622)) nil (25720 30136 528435 865000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -3621) (undo-tree-id391 . -1) 3622 (3621 . 3622)) nil (25720 30136 528425 354000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -3621) (undo-tree-id385 . -1) (#("=" 0 1 (fontified t)) . -3622) (undo-tree-id386 . -1) 3623 (3621 . 3623) (#("m" 0 1 (fontified t)) . -3621) (undo-tree-id387 . -1) 3622 (3621 . 3622) (#("x" 0 1 (fontified t)) . -3621) (undo-tree-id388 . -1) 3622 (3621 . 3622) (#("M" 0 1 (fontified t)) . -3621) (undo-tree-id389 . -1) 3622 (3621 . 3622) (#("m" 0 1 (fontified t)) . -3621) (undo-tree-id390 . -1) 3622 (3621 . 3622)) nil (25720 30136 528417 171000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3620) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (#("j" 0 1 (fontified t)) . -3621) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (#("j" 0 1 (fontified t)) . -3622) (undo-tree-id384 . -1) 3623 (3621 . 3623)) nil (25720 30136 528390 817000) 0 nil])
([nil nil ((3621 . 3622)) nil (25720 30136 528205 360000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3621) (undo-tree-id297 . -1) (undo-tree-id298 . -1) 3622) nil (25720 30136 528202 30000) 0 nil])
([nil nil ((3621 . 3622)) nil (25720 30136 528194 133000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3621) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) 3622) nil (25720 30136 528157 314000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3621) (undo-tree-id403 . -1) 3622 (3621 . 3622) (t 25720 30136 539329 619000)) nil (25720 30184 341922 226000) 0 nil])
([nil nil ((3620 . 3634) (#("


** Document" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face org-block-end-line) 3 4 (fontified t face org-hide keymap (keymap)) 4 5 (fontified t composition (1 1 [9675]) keymap (keymap) face org-level-2) 5 6 (fontified t keymap (keymap) face org-level-2) 6 14 (fontified t face org-level-2)) . 3620)) nil (25720 30184 342127 266000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t)) . -3620) (undo-tree-id405 . -1) (#("x" 0 1 (fontified t)) . -3621) (undo-tree-id406 . -1) 3622 (3620 . 3622)) nil (25720 30340 878401 947000) 0 nil] [nil nil ((#("<" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 3594) (undo-tree-id401 . -1) (undo-tree-id402 . -1)) ((3594 . 3595)) (25720 30184 341901 845000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -3621) (undo-tree-id404 . -1) 3622 (3621 . 3622)) nil (25720 30340 878391 505000) 0 nil])
nil
([nil nil (3621) nil (25720 30340 878363 257000) 0 nil])
([nil nil ((#("log" 0 3 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 3564) (undo-tree-id407 . -2) (undo-tree-id408 . -2) (undo-tree-id409 . -2) (undo-tree-id410 . -2) (undo-tree-id411 . -2) 3566 (t 25720 30340 893099 26000)) nil (25720 30415 732373 677000) 0 nil])
([nil nil ((3564 . 3569)) nil (25720 30415 731890 768000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -3007) (undo-tree-id455 . -1) 3008 (3007 . 3008) (t 25720 30415 740589 656000)) nil (25720 30557 185899 175000) 0 nil])
([nil nil ((3694 . 3709) (#("i" 0 1 (fontified t)) . -3694) (undo-tree-id456 . -1) 3695 (3689 . 3695) (#("a" 0 1 (fontified t)) . -3689) (undo-tree-id457 . -1) (#("h" 0 1 (fontified t)) . -3690) (undo-tree-id458 . -1) 3691 (3683 . 3691) (#("t" 0 1 (fontified t)) . -3683) (undo-tree-id459 . -1) (#(" " 0 1 (fontified t)) . -3684) (undo-tree-id460 . -1) (#("e" 0 1 (fontified t)) . -3685) (undo-tree-id461 . -1) (#("h" 0 1 (fontified t)) . -3686) (undo-tree-id462 . -1) 3687 (3681 . 3687) (3660 . 3681) (#("t" 0 1 (fontified t)) . -3660) (undo-tree-id463 . -1) (#("i" 0 1 (fontified t)) . -3661) (undo-tree-id464 . -1) (#(" " 0 1 (fontified t)) . -3662) (undo-tree-id465 . -1) 3663 (3651 . 3663) (#("s" 0 1 (fontified t)) . -3651) (undo-tree-id466 . -1) (#("e" 0 1 (fontified t)) . -3652) (undo-tree-id467 . -1) (#("d" 0 1 (fontified t)) . -3653) (undo-tree-id468 . -1) 3654 (3645 . 3654) (3624 . 3645) (#("e" 0 1 (fontified t)) . -3624) (undo-tree-id469 . -1) 3625 (3623 . 3625)) nil (25720 30701 462495 759000) 0 nil] [nil nil ((#("_" 0 1 (fontified t font-lock-fontified t)) . -3617) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) 3618 (#("SRC
,,,,," 0 3 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 3 4 (fontified t face org-block-end-line) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . -3618) (undo-tree-id433 . -4) (undo-tree-id434 . -4) (undo-tree-id435 . -4) (undo-tree-id436 . -4) (undo-tree-id437 . -4) (undo-tree-id438 . -4) (undo-tree-id439 . -4) (undo-tree-id440 . -4) (undo-tree-id441 . -4) (undo-tree-id442 . -4) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (undo-tree-id446 . -4) (undo-tree-id447 . -4) (undo-tree-id448 . -4) (undo-tree-id449 . -4) (undo-tree-id450 . -4) (undo-tree-id451 . -4) (undo-tree-id452 . -4) (undo-tree-id453 . -3) (undo-tree-id454 . -9) 3627 (3626 . 3627) (3625 . 3626) (3624 . 3625) (3623 . 3624) (3622 . 3623)) ((#("," 0 1 (fontified nil)) . 3622) (#("," 0 1 (fontified nil)) . 3623) (#("," 0 1 (fontified nil)) . 3624) (#("," 0 1 (fontified nil)) . 3625) (#("," 0 1 (fontified nil)) . 3626) (3617 . 3627)) (25720 30557 184720 267000) 0 nil])
([nil nil ((3708 . 3709) (t 25720 30701 473705 232000)) nil (25720 30970 934843 635000) 0 nil])
nil
([nil nil ((3796 . 3798) (3795 . 3796) (3789 . 3795) (#("c" 0 1 (fontified t)) . -3789) (undo-tree-id494 . -1) 3790 (3783 . 3790) (3782 . 3783) (#("," 0 1 (fontified t)) . -3782) (undo-tree-id495 . -1) 3783 (#(" " 0 1 (fontified t)) . -3783) (undo-tree-id496 . -1) 3784 (3783 . 3784) (3782 . 3783) (3769 . 3782) (#("f" 0 1 (fontified t)) . -3769) (undo-tree-id497 . -1) (#("i" 0 1 (fontified t)) . -3770) (undo-tree-id498 . -1) (#("r" 0 1 (fontified t)) . -3771) (undo-tree-id499 . -1) (#("s" 0 1 (fontified t)) . -3772) (undo-tree-id500 . -1) (#(" " 0 1 (fontified t)) . -3773) (undo-tree-id501 . -1) (#("t" 0 1 (fontified t)) . -3774) (undo-tree-id502 . -1) 3775 (3769 . 3775) (3768 . 3769) (3764 . 3768) (#("i" 0 1 (fontified t)) . -3764) (undo-tree-id503 . -1) (#("t" 0 1 (fontified t)) . -3765) (undo-tree-id504 . -1) 3766 (3753 . 3766) (3752 . 3753) (3743 . 3752) (3741 . 3743) (#("i" 0 1 (fontified t face org-level-3)) . -3741) (undo-tree-id505 . -1) (#("w" 0 1 (fontified t face org-level-3)) . -3742) (undo-tree-id506 . -1) (#("t" 0 1 (fontified t face org-level-3)) . -3743) (undo-tree-id507 . -1) (#("h" 0 1 (fontified t face org-level-3)) . -3744) (undo-tree-id508 . -1) (#(" " 0 1 (fontified t face org-level-3)) . -3745) (undo-tree-id509 . -1) 3746 (3738 . 3746) (#("g" 0 1 (fontified t face org-level-3)) . -3738) (undo-tree-id510 . -1) (#("n" 0 1 (fontified t face org-level-3)) . -3739) (undo-tree-id511 . -1) (#(" " 0 1 (fontified t face org-level-3)) . -3740) (undo-tree-id512 . -1) (#("i" 0 1 (fontified t face org-level-3)) . -3741) (undo-tree-id513 . -1) 3742 (3723 . 3742) (3702 . 3723) (#("p" 0 1 (fontified t face org-level-3)) . -3702) (undo-tree-id514 . -1) (#("r" 0 1 (fontified t face org-level-3)) . -3703) (undo-tree-id515 . -1) (#("o" 0 1 (fontified t face org-level-3)) . -3704) (undo-tree-id516 . -1) (#("p" 0 1 (fontified t face org-level-3)) . -3705) (undo-tree-id517 . -1) (#("e" 0 1 (fontified t face org-level-3)) . -3706) (undo-tree-id518 . -1) (#("r" 0 1 (fontified t face org-level-3)) . -3707) (undo-tree-id519 . -1) (#("t" 0 1 (fontified t face org-level-3)) . -3708) (undo-tree-id520 . -1) 3709 (3702 . 3709) (3697 . 3702) (#("inheritance
 
" 0 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t)) . -3697) (undo-tree-id521 . -14) (undo-tree-id522 . 2) (undo-tree-id523 . -14) (undo-tree-id524 . -13) 3711 (#("," 0 1 (fontified t)) . -3711) (undo-tree-id525 . -1) (#("
" 0 1 (fontified t)) . -3712) (undo-tree-id526 . -1) (undo-tree-id527 . -1) 3713 (3712 . 3713) (3711 . 3712) (#("," 0 1 (fontified t)) . -3711) (undo-tree-id528 . -1) (#("
" 0 1 (fontified t)) . -3712) (undo-tree-id529 . -1) (undo-tree-id530 . -1) 3713 (3712 . 3713) (3711 . 3712)) nil (25720 30970 934819 584000) 0 nil])
([nil nil ((3776 . 3781) (#(" " 0 1 (fontified t)) . -3776) (undo-tree-id484 . -1) (#("n" 0 1 (fontified t)) . -3777) (undo-tree-id485 . -1) (#("o" 0 1 (fontified t)) . -3778) (undo-tree-id486 . -1) (#("d" 0 1 (fontified t)) . -3779) (undo-tree-id487 . -1) (#("e" 0 1 (fontified t)) . -3780) (undo-tree-id488 . -1) (#("s" 0 1 (fontified t)) . -3781) (undo-tree-id489 . -1) (#(" " 0 1 (fontified t)) . -3782) (undo-tree-id490 . -1) 3783 (3776 . 3783) (#("n" 0 1 (fontified t)) . -3776) (undo-tree-id491 . -1) (#("o" 0 1 (fontified t)) . -3777) (undo-tree-id492 . -1) (#("t" 0 1 (fontified t)) . -3778) (undo-tree-id493 . -1) 3779 (3771 . 3779) (3769 . 3771) (3768 . 3769) 3754) nil (25720 30970 934517 174000) 0 nil])
([nil nil ((3878 . 3880) (3877 . 3878) (3863 . 3877) (#("v" 0 1 (fontified t)) . -3863) (undo-tree-id472 . -1) 3864 (3861 . 3864) (3860 . 3861) (#("-" 0 1 (fontified t)) . -3860) (undo-tree-id473 . -1) 3861 (3860 . 3861) (#("-" 0 1 (fontified t)) . -3860) (undo-tree-id474 . -1) 3861 (3860 . 3861) (3848 . 3860) (3847 . 3848) (#("-" 0 1 (fontified t)) . -3847) (undo-tree-id475 . -1) 3848 (3847 . 3848) (3838 . 3847) (3836 . 3838) (#("0" 0 1 (fontified t)) . -3836) (undo-tree-id476 . -1) (#(" " 0 1 (fontified t)) . -3837) (undo-tree-id477 . -1) 3838 (3836 . 3838) (3835 . 3836) (3825 . 3835) (#("n" 0 1 (fontified t)) . -3825) (undo-tree-id478 . -1) (#("o" 0 1 (fontified t)) . -3826) (undo-tree-id479 . -1) (#("d" 0 1 (fontified t)) . -3827) (undo-tree-id480 . -1) (#("e" 0 1 (fontified t)) . -3828) (undo-tree-id481 . -1) 3829 (3824 . 3829) (3823 . 3824) (3821 . 3823) (#("g" 0 1 (fontified t)) . -3821) (undo-tree-id482 . -1) (#("n" 0 1 (fontified t)) . -3822) (undo-tree-id483 . -1) 3823 (3811 . 3823) (3810 . 3811)) nil (25720 30970 934480 622000) 0 nil])
([nil nil ((#("sibling" 0 7 (fontified t)) . 3870) (undo-tree-id471 . -6)) nil (25720 30970 934434 278000) 0 nil])
([nil nil ((3870 . 3874)) nil (25720 30970 934428 406000) 0 nil])
([nil nil ((3877 . 3894) (#(" " 0 1 (fontified t)) . -3877) (undo-tree-id470 . -1) 3878) nil (25720 30970 934418 137000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3895) (undo-tree-id595 . -2) 3897 (3894 . 3897) (t 25720 30970 945932 873000) 3893) nil (25720 31175 272743 876000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3896) (undo-tree-id594 . -2) 3898 (3895 . 3898) 3895) nil (25720 31175 272737 242000) 0 nil])
([nil nil ((3900 . 3904) 3757 (3752 . 3757) 3698) nil (25720 31175 272731 69000) 0 nil])
([nil nil ((#("Node properties
" 0 15 (fontified t) 15 16 (fontified t)) . 3758) (undo-tree-id591 . -16) (undo-tree-id592 . -15) (undo-tree-id593 . -3) 3761) nil (25720 31175 272726 921000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3888 . 3889) (#("
" 0 1 (fontified nil)) . -3904) (3888 . 3905) 3886) nil (25720 31175 272718 608000) 0 nil])
([nil nil ((#("Node properties" 0 15 (fontified t)) . 3889) (undo-tree-id589 . -14) (undo-tree-id590 . -15)) nil (25720 31175 272714 368000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3901 . 3902) (nil fontified nil 3887 . 3902) (3887 . 3902) 3886) nil (25720 31175 272707 448000) 0 nil])
([nil nil ((3887 . 3889)) nil (25720 31175 272703 471000) 0 nil])
([nil nil ((#("- childnodes
- first child
- last child
- next sibling
- node name
- node type
- node value
- parent node
- previous sibling 
" 0 1 (fontified t) 1 12 (fontified t) 12 13 (fontified t) 13 27 (fontified t) 27 40 (fontified t) 40 55 (fontified t) 55 67 (fontified t) 67 79 (fontified t) 79 92 (fontified t) 92 105 (fontified t) 105 106 (fontified t) 106 125 (fontified t) 125 126 (fontified t)) . 3758) (undo-tree-id580 . -106) (undo-tree-id581 . -126) (undo-tree-id582 . -125) (undo-tree-id583 . -110) (undo-tree-id584 . -4) (undo-tree-id585 . -110) (undo-tree-id586 . -110) (undo-tree-id587 . -4) (undo-tree-id588 . -110) 3868) nil (25720 31175 272699 844000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3780 . 3781) (#("
" 0 1 (fontified nil)) . -3906) (3780 . 3907)) nil (25720 31175 272680 599000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 3780) (undo-tree-id579 . -1)) nil (25720 31175 272676 268000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face org-level-3)) . 3762)) nil (25720 31175 272670 802000) 0 nil])
([nil nil ((3760 . 3761)) nil (25720 31175 272668 375000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3906 . 3907) (#("
" 0 1 (fontified nil)) . -4055) (3906 . 4056) 3762) nil (25720 31175 272665 449000) 0 nil])
([nil nil ((3921 . 3924) (#("d" 0 1 (fontified t face org-level-4)) . -3921) (undo-tree-id574 . -1) 3922 (3919 . 3922) (#("h" 0 1 (fontified t face org-level-4)) . -3919) (undo-tree-id575 . -1) (#("t" 0 1 (fontified t face org-level-4)) . -3920) (undo-tree-id576 . -1) 3921 (3918 . 3921) (3917 . 3918) (#("properties" 0 9 (fontified t face org-level-4) 9 10 (rear-nonsticky t fontified t face org-level-4)) . 3917) (undo-tree-id577 . -9) (undo-tree-id578 . -1) 3918) nil (25720 31175 272658 891000) 0 nil])
([nil nil ((#("- childnodes
- first child
- last child
- next sibling
- node name
- node type
- node value
- parent node
- previous sibling 
" 0 1 (fontified t) 1 12 (fontified t) 12 13 (fontified t) 13 27 (fontified t) 27 40 (fontified t) 40 55 (fontified t) 55 67 (fontified t) 67 79 (fontified t) 79 92 (fontified t) 92 105 (fontified t) 105 106 (fontified t) 106 125 (fontified t) 125 126 (fontified t)) . 3926) (undo-tree-id565 . -106) (undo-tree-id566 . -126) (undo-tree-id567 . -125) (undo-tree-id568 . -117) (undo-tree-id569 . -11) (undo-tree-id570 . -117) (undo-tree-id571 . -117) (undo-tree-id572 . -11) (undo-tree-id573 . -117) 4043) nil (25720 31175 272638 217000) 0 nil])
([nil nil ((4069 . 4080) (#("a" 0 1 (fontified t)) . -4069) (undo-tree-id535 . -1) 4070 (4065 . 4070) (#("r" 0 1 (fontified t)) . -4065) (undo-tree-id536 . -1) (#("e" 0 1 (fontified t)) . -4066) (undo-tree-id537 . -1) 4067 (4064 . 4067) (4063 . 4064) (4056 . 4063) (4048 . 4056) (4047 . 4048) (4041 . 4047) (#("-" 0 1 (fontified t)) . -4041) (undo-tree-id538 . -1) 4042 (4032 . 4042) (4031 . 4032) (4015 . 4031) (4014 . 4015) (4009 . 4014) (3998 . 4009) (#("h" 0 1 (fontified t)) . -3998) (undo-tree-id539 . -1) 3999 (3997 . 3999) (3996 . 3997) (3985 . 3996) (#("c" 0 1 (fontified t)) . -3985) (undo-tree-id540 . -1) 3986 (3984 . 3986) (3983 . 3984) (3975 . 3983) (#("i" 0 1 (fontified t)) . -3975) (undo-tree-id541 . -1) 3976 (3966 . 3976) (#("c" 0 1 (fontified t)) . -3966) (undo-tree-id542 . -1) (#("o" 0 1 (fontified t)) . -3967) (undo-tree-id543 . -1) (#("u" 0 1 (fontified t)) . -3968) (undo-tree-id544 . -1) 3969 (3963 . 3969) (#("s" 0 1 (fontified t)) . -3963) (undo-tree-id545 . -1) (#("r" 0 1 (fontified t)) . -3964) (undo-tree-id546 . -1) (#("e" 0 1 (fontified t)) . -3965) (undo-tree-id547 . -1) 3966 (3958 . 3966) (3956 . 3958) (3955 . 3956) (3945 . 3955) (#("o" 0 1 (fontified t)) . -3945) (undo-tree-id548 . -1) 3946 (3943 . 3946) (#(" " 0 1 (fontified t)) . -3943) (undo-tree-id549 . -1) 3944 (3942 . 3944) (3941 . 3942) (#(";" 0 1 (fontified t)) . -3941) (undo-tree-id550 . -1) 3942 (3939 . 3942) (#("e" 0 1 (fontified t)) . -3939) (undo-tree-id551 . -1) 3940 (3934 . 3940) (#("c" 0 1 (fontified t)) . -3934) (undo-tree-id552 . -1) (#("h" 0 1 (fontified t)) . -3935) (undo-tree-id553 . -1) (#("i" 0 1 (fontified t)) . -3936) (undo-tree-id554 . -1) (#("l" 0 1 (fontified t)) . -3937) (undo-tree-id555 . -1) (#("d" 0 1 (fontified t)) . -3938) (undo-tree-id556 . -1) 3939 (3927 . 3939) (#(" " 0 1 (fontified t)) . -3927) (undo-tree-id557 . -1) 3928 (3926 . 3928) (#("
" 0 1 (fontified t)) . -3926) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (#(" " 0 1 (fontified t)) . -3927) (undo-tree-id560 . -1) (#(" " 0 1 (fontified t)) . -3928) (undo-tree-id561 . -1) (#(" " 0 1 (fontified t)) . -3929) (undo-tree-id562 . -1) (#(" " 0 1 (fontified t)) . -3930) (undo-tree-id563 . -1) (#(" " 0 1 (fontified t)) . -3931) (undo-tree-id564 . -1) 3932 (3926 . 3932) 3926) nil (25720 31175 272594 148000) 0 nil])
([nil nil ((4080 . 4087) 3922) nil (25720 31175 271870 478000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4081) (undo-tree-id534 . -1)) nil (25720 31175 271867 539000) 0 nil])
([nil nil ((4097 . 4103) (#("t" 0 1 (fontified t face org-level-4)) . -4097) (undo-tree-id532 . -1) (#("g" 0 1 (fontified t face org-level-4)) . -4098) (undo-tree-id533 . -1) 4099 (4086 . 4099)) nil (25720 31175 271861 446000) 0 nil])
([nil nil ((#("     " 0 5 (fontified t)) . -4104) (undo-tree-id531 . -5) 4109 (4103 . 4109) 4102) nil (25720 31175 271851 227000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4153 . 4154) (nil fontified nil 4104 . 4154) (4104 . 4154)) nil (25720 31175 271823 775000) 0 nil])
([nil nil ((4154 . 4155) (t 25720 31175 287171 940000) 4152) nil (25720 31304 568068 27000) 0 nil])
([nil nil ((4154 . 4160) 4155) nil (25720 31304 568065 447000) 0 nil])
([nil nil ((4186 . 4188) (4185 . 4186) (4183 . 4185) (4181 . 4183) (4160 . 4181) (#("h" 0 1 (fontified t face org-level-4)) . -4160) (undo-tree-id609 . -1) (#("r" 0 1 (fontified t face org-level-4)) . -4161) (undo-tree-id610 . -1) (#("t" 0 1 (fontified t face org-level-4)) . -4162) (undo-tree-id611 . -1) (#("m" 0 1 (fontified t face org-level-4)) . -4163) (undo-tree-id612 . -1) 4164 (4162 . 4164) (#("m" 0 1 (fontified t face org-level-4)) . -4162) (undo-tree-id613 . -1) 4163 (4162 . 4163) (4160 . 4162) (#("g" 0 1 (fontified t face org-level-4)) . -4160) (undo-tree-id614 . -1) 4161 (4160 . 4161) (#("g" 0 1 (fontified t face org-level-4)) . -4160) (undo-tree-id615 . -1) 4161 (4160 . 4161)) nil (25720 31304 568058 967000) 0 nil])
([nil nil (("" . -4130) (4130 . 4131) ("" . -4104) (4104 . 4105)) nil (25720 31304 568038 473000) 0 nil])
([nil nil ((#("- 
" 0 2 (fontified t) 2 3 (fontified t)) . 4188) (undo-tree-id606 . -3) (undo-tree-id607 . 1) (undo-tree-id608 . -2)) nil (25720 31304 568034 895000) 0 nil])
([nil nil ((4313 . 4321) (4312 . 4313) (4292 . 4312) (4291 . 4292) (4275 . 4291) (4274 . 4275) (4262 . 4274) (4258 . 4262) (4257 . 4258) (4240 . 4257) (4239 . 4240) (4232 . 4239) (4230 . 4232) (4229 . 4230) (4222 . 4229) (#("e" 0 1 (fontified t)) . -4222) (undo-tree-id596 . -1) 4223 (4220 . 4223) (4219 . 4220) (#("(" 0 1 (fontified t)) . -4219) (undo-tree-id597 . -1) (#(")" 0 1 (fontified t)) . -4220) (undo-tree-id598 . -1) 4221 (4220 . 4221) (4208 . 4220) (4207 . 4208) (4198 . 4207) (4197 . 4198) (4194 . 4197) (#("m" 0 1 (fontified t)) . -4194) (undo-tree-id599 . -1) (#("l" 0 1 (fontified t)) . -4195) (undo-tree-id600 . -1) 4196 (4194 . 4196) (4191 . 4194) (#("h" 0 1 (fontified t)) . -4191) (undo-tree-id601 . -1) (#("e" 0 1 (fontified t)) . -4192) (undo-tree-id602 . -1) (#("r" 0 1 (fontified t)) . -4193) (undo-tree-id603 . -1) 4194 (4190 . 4194) (#("h" 0 1 (fontified t)) . -4190) (undo-tree-id604 . -1) (#("n" 0 1 (fontified t)) . -4191) (undo-tree-id605 . -1) 4192 (4188 . 4192)) nil (25720 31304 568020 353000) 0 nil])
([nil nil (("" . -4322) (4322 . 4323) ("" . -4300) (4300 . 4301) ("" . -4282) (4282 . 4283) ("" . -4264) (4264 . 4265) ("" . -4245) (4245 . 4246) ("" . -4234) (4234 . 4235) ("" . -4223) (4223 . 4224) ("" . -4210) (4210 . 4211) ("" . -4199) (4199 . 4200) ("" . -4188) (4188 . 4189)) nil (25720 31304 567960 611000) 0 nil])
([nil nil ((4332 . 4333)) nil (25720 31304 567943 435000) 0 nil])
([nil nil ((4331 . 4337) 4332 (t 25720 31304 581011 356000)) nil (25720 31351 203741 383000) 0 nil])
([nil nil ((4378 . 4379) (#("0" 0 1 (fontified t)) . -4378) (undo-tree-id616 . -1) 4379 (4377 . 4379) (#("9" 0 1 (fontified t)) . -4377) (undo-tree-id617 . -1) 4378 (4368 . 4378) (#("c" 0 1 (fontified t)) . -4368) (undo-tree-id618 . -1) (#("a" 0 1 (fontified t)) . -4369) (undo-tree-id619 . -1) 4370 (4366 . 4370) (#("j" 0 1 (fontified t)) . -4366) (undo-tree-id620 . -1) 4367 (4363 . 4367) (#("t" 0 1 (fontified t)) . -4363) (undo-tree-id621 . -1) 4364 (4359 . 4364) (#("i" 0 1 (fontified t)) . -4359) (undo-tree-id622 . -1) (#("n" 0 1 (fontified t)) . -4360) (undo-tree-id623 . -1) (#("e" 0 1 (fontified t)) . -4361) (undo-tree-id624 . -1) (#("r" 0 1 (fontified t)) . -4362) (undo-tree-id625 . -1) 4363 (4358 . 4363) (4357 . 4358) (4337 . 4357)) nil (25720 31351 203724 795000) 0 nil])
([nil nil ((4380 . 4381) (t 25720 31351 231117 523000) 3725) nil (25720 31515 853027 38000) 0 nil])
([nil nil ((4380 . 4384) 3698) nil (25720 31515 853023 528000) 0 nil])
([nil nil ((4384 . 4385) 4382) nil (25720 31515 853020 165000) 0 nil])
([nil nil ((4421 . 4426) (4417 . 4421) (#("s" 0 1 (fontified t face org-level-3)) . -4417) (undo-tree-id626 . -1) 4418 (4416 . 4418) (4395 . 4416) (#("u" 0 1 (fontified t face org-level-3)) . -4395) (undo-tree-id627 . -1) 4396 (4386 . 4396) (#("4" 0 1 (fontified t face org-level-3)) . -4386) (undo-tree-id628 . -1) 4387 (4386 . 4387) (#("g" 0 1 (fontified t face org-level-3)) . -4386) (undo-tree-id629 . -1) (#(" " 0 1 (fontified t face org-level-3)) . -4387) (undo-tree-id630 . -1) 4388 (4384 . 4388) (#("i" 0 1 (fontified t face org-level-3)) . -4384) (undo-tree-id631 . -1) (#("." 0 1 (fontified t face org-level-3)) . -4385) (undo-tree-id632 . -1) 4386 (4384 . 4386)) nil (25720 31515 853004 571000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -4489) (undo-tree-id651 . -1) (#("r" 0 1 (fontified t)) . -4490) (undo-tree-id652 . -1) (#("c" 0 1 (fontified t)) . -4491) (undo-tree-id653 . -1) 4492 (4489 . 4492) (4488 . 4489) (4484 . 4488) (#("t" 0 1 (fontified t)) . -4484) (undo-tree-id654 . -1) (#("h" 0 1 (fontified t)) . -4485) (undo-tree-id655 . -1) (#("e" 0 1 (fontified t)) . -4486) (undo-tree-id656 . -1) (#(" " 0 1 (fontified t)) . -4487) (undo-tree-id657 . -1) 4488 (4477 . 4488) (#("c" 0 1 (fontified t)) . -4477) (undo-tree-id658 . -1) 4478 (4476 . 4478) (4475 . 4476) (4454 . 4475) (#("t" 0 1 (fontified t)) . -4454) (undo-tree-id659 . -1) (#("y" 0 1 (fontified t)) . -4455) (undo-tree-id660 . -1) (#("p" 0 1 (fontified t)) . -4456) (undo-tree-id661 . -1) 4457 (4450 . 4457) (#(" " 0 1 (fontified t)) . -4450) (undo-tree-id662 . -1) (#("d" 0 1 (fontified t)) . -4451) (undo-tree-id663 . -1) 4452 (4444 . 4452) (#("t" 0 1 (fontified t)) . -4444) (undo-tree-id664 . -1) 4445 (4431 . 4445) (#("u" 0 1 (fontified t)) . -4431) (undo-tree-id665 . -1) (#(" " 0 1 (fontified t)) . -4432) (undo-tree-id666 . -1) 4433 (4427 . 4433) (#("i" 0 1 (fontified t)) . -4427) (undo-tree-id667 . -1) 4428 (4427 . 4428) (4426 . 4427) (#("m" 0 1 (fontified t face org-level-3)) . -4426) (undo-tree-id668 . -1) 4427 (4426 . 4427) (t 25720 31515 866548 543000)) nil (25720 31908 944083 510000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4489 . 4490) (#("
" 0 1 (font-lock-fontified t font-lock-multiline t face org-block-begin-line fontified nil)) . -4539) (4489 . 4540)) nil (25720 31908 944035 528000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4540 . 4541) (#("
" 0 1 (face org-block-end-line fontified nil)) . -4550) (4540 . 4551)) nil (25720 31908 944032 480000) 0 nil])
([nil nil ((4545 . 4553) (4533 . 4545) (#("-" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -4533) (undo-tree-id641 . -1) 4534 (4530 . 4534) (#("-" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -4530) (undo-tree-id642 . -1) 4531 (4520 . 4531) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -4520) (undo-tree-id643 . -1) 4521 (4515 . 4521) (4514 . 4515) (#(" hierarchy_of_nodes" 0 19 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 4514) (undo-tree-id644 . -18) (undo-tree-id645 . -18) (undo-tree-id646 . -18) (undo-tree-id647 . -19) (undo-tree-id648 . -18) (undo-tree-id649 . -18) (undo-tree-id650 . -18) 4532) nil (25720 31908 944026 982000) 0 nil])
([nil nil ((4559 . 4560) 4545) nil (25720 31908 944003 916000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4628 . 4629) (nil fontified nil 4560 . 4629) (4560 . 4629)) nil (25720 31908 944001 603000) 0 nil])
([nil nil ((4630 . 4631) 4630) nil (25720 31908 943999 152000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4655 . 4656) (nil fontified nil 4631 . 4656) (4631 . 4656)) nil (25720 31908 943996 907000) 0 nil])
([nil nil ((4629 . 4630) 4627) nil (25720 31908 943994 298000) 0 nil])
([nil nil ((4630 . 4643)) nil (25720 31908 943992 178000) 0 nil])
([nil nil ((4692 . 4693) (#("p" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -4692) (undo-tree-id633 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -4693) (undo-tree-id634 . -1) 4694 (4693 . 4694) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -4693) (undo-tree-id635 . -1) 4694 (4689 . 4694) (4668 . 4689) (4667 . 4668) (#("m" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -4667) (undo-tree-id636 . -1) 4668 (4651 . 4668) (#("c" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -4651) (undo-tree-id637 . -1) (#("o" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -4652) (undo-tree-id638 . -1) 4653 (4651 . 4653) (4646 . 4651) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -4646) (undo-tree-id639 . -1) (#("m" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -4647) (undo-tree-id640 . -1) 4648 (4642 . 4648)) nil (25720 31908 943984 208000) 0 nil])
([nil nil ((4694 . 4695)) nil (25720 31908 943884 626000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -4695) (undo-tree-id1561 . -1) 4696 (4695 . 4696) (t 25720 31908 956284 869000)) nil (25720 32081 584421 120000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4695 . 4696) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -4761) (4695 . 4762) 4640) nil (25720 32100 843806 503000) 0 nil] [nil nil ((4638 . 4643) (#("log" 0 3 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 4638) (undo-tree-id669 . -2) (undo-tree-id670 . -2) (undo-tree-id671 . -2) (undo-tree-id672 . -2) (undo-tree-id674 . -1) (undo-tree-id676 . -1) (undo-tree-id678 . -1) (undo-tree-id680 . -1) (undo-tree-id682 . -1) (undo-tree-id684 . -1) (undo-tree-id686 . -1) (undo-tree-id688 . -1) (undo-tree-id690 . -1) (undo-tree-id692 . -1) (undo-tree-id694 . -1) (undo-tree-id696 . -1) (undo-tree-id698 . -1) (undo-tree-id700 . -1) (undo-tree-id702 . -1) (undo-tree-id704 . -1) (undo-tree-id706 . -1) (undo-tree-id708 . -1) (undo-tree-id710 . -1) (undo-tree-id712 . -1) (undo-tree-id714 . -1) (undo-tree-id716 . -1) (undo-tree-id718 . -1) (undo-tree-id720 . -1) (undo-tree-id722 . -1) (undo-tree-id724 . -1) (undo-tree-id726 . -1) (undo-tree-id728 . -1) (undo-tree-id730 . -1) (undo-tree-id732 . -1) (undo-tree-id734 . -1) (undo-tree-id736 . -1) (undo-tree-id738 . -1) (undo-tree-id740 . -1) (undo-tree-id742 . -1) (undo-tree-id744 . -1) (undo-tree-id746 . -1) (undo-tree-id748 . -1) (undo-tree-id750 . -1) (undo-tree-id752 . -1) (undo-tree-id754 . -1) (undo-tree-id756 . -1) (undo-tree-id758 . -1) (undo-tree-id760 . -1) (undo-tree-id762 . -1) (undo-tree-id764 . -1) (undo-tree-id766 . -1) (undo-tree-id768 . -1) (undo-tree-id770 . -1) (undo-tree-id772 . -1) (undo-tree-id774 . -1) (undo-tree-id776 . -1) (undo-tree-id778 . -1) (undo-tree-id780 . -1) (undo-tree-id782 . -1) (undo-tree-id784 . -1) (undo-tree-id786 . -1) (undo-tree-id788 . -1) (undo-tree-id790 . -1) (undo-tree-id792 . -1) (undo-tree-id794 . -1) (undo-tree-id796 . -1) (undo-tree-id798 . -1) (undo-tree-id800 . -1) (undo-tree-id802 . -1) (undo-tree-id804 . -1) (undo-tree-id806 . -1) (undo-tree-id808 . -1) (undo-tree-id810 . -1) (undo-tree-id812 . -1) (undo-tree-id814 . -1) (undo-tree-id816 . -1) (undo-tree-id818 . -1) (undo-tree-id820 . -1) (undo-tree-id822 . -1) (undo-tree-id824 . -1) (undo-tree-id826 . -1) (undo-tree-id828 . -1) (undo-tree-id830 . -1) (undo-tree-id832 . -1) (undo-tree-id834 . -1) (undo-tree-id836 . -1) (undo-tree-id838 . -1) (undo-tree-id840 . -1) (undo-tree-id842 . -1) (undo-tree-id844 . -1) (undo-tree-id846 . -1) (undo-tree-id848 . -1) (undo-tree-id850 . -1) (undo-tree-id852 . -1) (undo-tree-id854 . -2) (undo-tree-id856 . -1) (undo-tree-id858 . -1) (undo-tree-id860 . -1) (undo-tree-id862 . -1) (undo-tree-id864 . -1) (undo-tree-id866 . -1) (undo-tree-id868 . -1) (undo-tree-id870 . -1) (undo-tree-id872 . -1) (undo-tree-id874 . -1) (undo-tree-id876 . -1) (undo-tree-id878 . -1) (undo-tree-id880 . -1) (undo-tree-id882 . -1) (undo-tree-id884 . -1) (undo-tree-id886 . -1) (undo-tree-id888 . -1) (undo-tree-id890 . -1) (undo-tree-id892 . -1) (undo-tree-id894 . -1) (undo-tree-id896 . -1) (undo-tree-id898 . -1) (undo-tree-id900 . -1) (undo-tree-id902 . -1) (undo-tree-id904 . -1) (undo-tree-id906 . -1) (undo-tree-id908 . -1) (undo-tree-id910 . -1) (undo-tree-id912 . -1) (undo-tree-id914 . -1) (undo-tree-id916 . -1) (undo-tree-id918 . -1) (undo-tree-id920 . -2) (undo-tree-id922 . -2) (undo-tree-id924 . -2) (undo-tree-id926 . -2) (undo-tree-id928 . -2) (undo-tree-id930 . -2) (undo-tree-id932 . -2) (undo-tree-id934 . -2) (undo-tree-id936 . -2) (undo-tree-id938 . -2) (undo-tree-id940 . -2) (undo-tree-id942 . -2) (undo-tree-id944 . -2) (undo-tree-id946 . -2) (undo-tree-id948 . -2) (undo-tree-id950 . -2) (undo-tree-id952 . -2) (undo-tree-id954 . -2) (undo-tree-id956 . -2) (undo-tree-id958 . -2) (undo-tree-id960 . -2) (undo-tree-id962 . -2) (undo-tree-id964 . -2) (undo-tree-id966 . -2) (undo-tree-id968 . -2) (undo-tree-id970 . -2) (undo-tree-id972 . -2) (undo-tree-id974 . -2) (undo-tree-id976 . -2) (undo-tree-id978 . -2) (undo-tree-id980 . -2) (undo-tree-id982 . -2) (undo-tree-id984 . -2) (undo-tree-id986 . -2) (undo-tree-id988 . -2) (undo-tree-id990 . -2) (undo-tree-id992 . -2) (undo-tree-id994 . -2) (undo-tree-id996 . -2) (undo-tree-id998 . -2) (undo-tree-id1000 . -2) (undo-tree-id1002 . -2) (undo-tree-id1004 . -2) (undo-tree-id1006 . -2) (undo-tree-id1008 . -2) (undo-tree-id1010 . -2) (undo-tree-id1012 . -2) (undo-tree-id1014 . -2) (undo-tree-id1016 . -2) (undo-tree-id1018 . -2) (undo-tree-id1020 . -2) (undo-tree-id1022 . -2) (undo-tree-id1024 . -2) (undo-tree-id1026 . -2) (undo-tree-id1028 . -2) (undo-tree-id1030 . -2) (undo-tree-id1032 . -2) (undo-tree-id1034 . -2) (undo-tree-id1036 . -2) (undo-tree-id1038 . -2) (undo-tree-id1040 . -2) (undo-tree-id1042 . -2) (undo-tree-id1044 . -2) (undo-tree-id1046 . -2) (undo-tree-id1048 . -2) (undo-tree-id1050 . -2) (undo-tree-id1052 . -2) (undo-tree-id1054 . -2) (undo-tree-id1056 . -2) (undo-tree-id1058 . -2) (undo-tree-id1060 . -2) (undo-tree-id1062 . -2) (undo-tree-id1064 . -2) (undo-tree-id1066 . -2) (undo-tree-id1068 . -2) (undo-tree-id1070 . -2) (undo-tree-id1072 . -2) (undo-tree-id1074 . -2) (undo-tree-id1076 . -2) (undo-tree-id1078 . -2) (undo-tree-id1080 . -2) (undo-tree-id1082 . -2) (undo-tree-id1084 . -2) (undo-tree-id1086 . -2) (undo-tree-id1088 . -2) (undo-tree-id1090 . -2) (undo-tree-id1092 . -2) (undo-tree-id1094 . -2) (undo-tree-id1096 . -2) (undo-tree-id1098 . -2) (undo-tree-id1100 . -2) (undo-tree-id1102 . -2) (undo-tree-id1104 . -2) (undo-tree-id1106 . -2) (undo-tree-id1108 . -2) (undo-tree-id1110 . -2) (undo-tree-id1112 . -2) (undo-tree-id1114 . -2) (undo-tree-id1116 . -2) (undo-tree-id1118 . -2) (undo-tree-id1120 . -2) (undo-tree-id1122 . -2) (undo-tree-id1124 . -2) (undo-tree-id1126 . -2) (undo-tree-id1128 . -2) (undo-tree-id1130 . -2) (undo-tree-id1132 . -2) (undo-tree-id1134 . -2) (undo-tree-id1136 . -2) (undo-tree-id1138 . -2) (undo-tree-id1140 . -2) (undo-tree-id1142 . -2) (undo-tree-id1144 . -2) (undo-tree-id1146 . -2) (undo-tree-id1148 . -2) (undo-tree-id1150 . -2) (undo-tree-id1152 . -2) (undo-tree-id1154 . -2) (undo-tree-id1156 . -2) (undo-tree-id1158 . -2) (undo-tree-id1160 . -2) (undo-tree-id1162 . -2) (undo-tree-id1164 . -2) (undo-tree-id1166 . -2) (undo-tree-id1168 . -2) (undo-tree-id1170 . -2) (undo-tree-id1172 . -2) (undo-tree-id1174 . -2) (undo-tree-id1176 . -2) (undo-tree-id1178 . -2) (undo-tree-id1180 . -2) (undo-tree-id1182 . -2) (undo-tree-id1184 . -2) (undo-tree-id1186 . -2) (undo-tree-id1188 . -2) (undo-tree-id1190 . -2) (undo-tree-id1192 . -2) (undo-tree-id1194 . -2) (undo-tree-id1196 . -2) (undo-tree-id1198 . -2) (undo-tree-id1200 . -2) (undo-tree-id1202 . -2) (undo-tree-id1204 . -2) (undo-tree-id1206 . -2) (undo-tree-id1208 . -2) (undo-tree-id1210 . -2) (undo-tree-id1212 . -2) (undo-tree-id1214 . -2) (undo-tree-id1216 . -2) (undo-tree-id1218 . -2) (undo-tree-id1220 . -2) (undo-tree-id1222 . -2) (undo-tree-id1224 . -2) (undo-tree-id1226 . -2) (undo-tree-id1228 . -2) (undo-tree-id1230 . -2) (undo-tree-id1232 . -2) (undo-tree-id1234 . -2) (undo-tree-id1236 . -2) (undo-tree-id1238 . -2) (undo-tree-id1240 . -2) (undo-tree-id1242 . -2) (undo-tree-id1244 . -2) (undo-tree-id1246 . -2) (undo-tree-id1248 . -2) (undo-tree-id1250 . -2) (undo-tree-id1252 . -2) (undo-tree-id1254 . -2) (undo-tree-id1256 . -2) (undo-tree-id1258 . -2) (undo-tree-id1260 . -2) (undo-tree-id1262 . -2) (undo-tree-id1264 . -2) (undo-tree-id1266 . -2) (undo-tree-id1268 . -2) (undo-tree-id1270 . -2) (undo-tree-id1272 . -2) (undo-tree-id1274 . -2) (undo-tree-id1276 . -2) (undo-tree-id1278 . -2) (undo-tree-id1280 . -2) (undo-tree-id1282 . -2) (undo-tree-id1284 . -2) (undo-tree-id1286 . -2) (undo-tree-id1288 . -2) (undo-tree-id1290 . -2) (undo-tree-id1292 . -2) (undo-tree-id1294 . -2) (undo-tree-id1296 . -2) (undo-tree-id1298 . -2) (undo-tree-id1300 . -2) (undo-tree-id1302 . -2) (undo-tree-id1304 . -2) (undo-tree-id1306 . -2) (undo-tree-id1308 . -2) (undo-tree-id1310 . -2) (undo-tree-id1312 . -2) (undo-tree-id1314 . -2) (undo-tree-id1316 . -2) (undo-tree-id1318 . -2) (undo-tree-id1320 . -2) (undo-tree-id1322 . -2) (undo-tree-id1324 . -2) (undo-tree-id1326 . -2) (undo-tree-id1328 . -2) (undo-tree-id1330 . -2) (undo-tree-id1332 . -2) (undo-tree-id1334 . -2) (undo-tree-id1336 . -2) (undo-tree-id1338 . -2) (undo-tree-id1340 . -2) (undo-tree-id1342 . -2) (undo-tree-id1344 . -2) (undo-tree-id1346 . -2) (undo-tree-id1348 . -2) (undo-tree-id1350 . -2) (undo-tree-id1352 . -2) (undo-tree-id1354 . -2) (undo-tree-id1356 . -2) (undo-tree-id1358 . -2) (undo-tree-id1360 . -2) (undo-tree-id1362 . -2) (undo-tree-id1364 . -2) (undo-tree-id1366 . -2) (undo-tree-id1368 . -2) (undo-tree-id1370 . -2) (undo-tree-id1372 . -2) (undo-tree-id1374 . -2) (undo-tree-id1376 . -2) (undo-tree-id1378 . -2) (undo-tree-id1380 . -2) (undo-tree-id1382 . -2) (undo-tree-id1384 . -2) (undo-tree-id1386 . -2) (undo-tree-id1388 . -2) (undo-tree-id1390 . -2) (undo-tree-id1392 . -2) (undo-tree-id1394 . -2) (undo-tree-id1396 . -2) (undo-tree-id1398 . -2) (undo-tree-id1400 . -2) (undo-tree-id1402 . -2) (undo-tree-id1404 . -2) (undo-tree-id1406 . -2) (undo-tree-id1408 . -2) (undo-tree-id1410 . -2) (undo-tree-id1412 . -2) (undo-tree-id1414 . -2) (undo-tree-id1416 . -2) (undo-tree-id1418 . -2) (undo-tree-id1420 . -2) (undo-tree-id1422 . -2) (undo-tree-id1424 . -2) (undo-tree-id1426 . -2) (undo-tree-id1428 . -2) (undo-tree-id1430 . -2) (undo-tree-id1432 . -2) (undo-tree-id1434 . -2) (undo-tree-id1436 . -2) (undo-tree-id1438 . -2) (undo-tree-id1440 . -2) (undo-tree-id1442 . -2) (undo-tree-id1444 . -2) (undo-tree-id1446 . -2) (undo-tree-id1448 . -2) (undo-tree-id1450 . -2) (undo-tree-id1452 . -2) (undo-tree-id1454 . -2) (undo-tree-id1456 . -2) (undo-tree-id1458 . -2) (undo-tree-id1460 . -2) (undo-tree-id1462 . -2) (undo-tree-id1464 . -2) (undo-tree-id1466 . -2) (undo-tree-id1468 . -2) (undo-tree-id1470 . -2) (undo-tree-id1472 . -2) (undo-tree-id1474 . -2) (undo-tree-id1476 . -2) (undo-tree-id1478 . -2) (undo-tree-id1480 . -2) (undo-tree-id1482 . -2) (undo-tree-id1484 . -2) (undo-tree-id1486 . -2) (undo-tree-id1488 . -2) (undo-tree-id1490 . -2) (undo-tree-id1492 . -2) (undo-tree-id1494 . -2) (undo-tree-id1496 . -2) (undo-tree-id1498 . -2) (undo-tree-id1500 . -2) (undo-tree-id1502 . -2) (undo-tree-id1504 . -2) (undo-tree-id1506 . -2) (undo-tree-id1508 . -2) (undo-tree-id1510 . -2) (undo-tree-id1512 . -2) (undo-tree-id1514 . -2) (undo-tree-id1516 . -2) (undo-tree-id1518 . -2) (undo-tree-id1520 . -2) (undo-tree-id1522 . -2) (undo-tree-id1524 . -2) (undo-tree-id1526 . -2) (undo-tree-id1528 . -2) (undo-tree-id1530 . -2) (undo-tree-id1532 . -2) (undo-tree-id1534 . -2) (undo-tree-id1536 . -2) (undo-tree-id1538 . -2) (undo-tree-id1540 . -2) (undo-tree-id1542 . -2) (undo-tree-id1544 . -2) (undo-tree-id1546 . -2) (undo-tree-id1548 . -2) (undo-tree-id1550 . -2) (undo-tree-id1552 . -2) (undo-tree-id1554 . -2) (undo-tree-id1556 . -2) (undo-tree-id1558 . -2) (undo-tree-id1560 . -3) 4640) ((4638 . 4641) (#("table" 0 5 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 4638) (undo-tree-id1562 . -4) (t 25720 31965 394831 97000)) (25720 31965 378473 997000) 0 nil])
([nil nil ((#(".doctype" 0 8 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . 4716) (undo-tree-id1567 . -7) (undo-tree-id1568 . -7) (undo-tree-id1569 . -7) (undo-tree-id1570 . -7) (undo-tree-id1571 . -7) 4723) nil (25720 32100 843360 964000) 0 nil])
nil
([nil nil ((#(".doctype" 0 8 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . 4734) (undo-tree-id1563 . -7) (undo-tree-id1564 . -7) (undo-tree-id1565 . -7) (undo-tree-id1566 . -7) 4741) nil (25720 32100 844122 872000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4745 . 4746) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -4795) (4745 . 4796) 4734 (t 25720 32105 690438 911000)) nil (25720 32158 266779 71000) 0 nil] [nil nil ((nil rear-nonsticky nil 4745 . 4746) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -4795) (4745 . 4796) 4734) ((#("
console.log(document.nodeName,document.nodeType);
" 0 1 (fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 1 9 (font-lock-fontified t src-block t fontified nil font-lock-multiline t face (org-block)) 9 11 (font-lock-fontified t src-block t fontified nil font-lock-multiline t face (org-block)) 11 12 (font-lock-fontified t src-block t fontified nil font-lock-multiline t face (org-block)) 12 30 (font-lock-fontified t src-block t fontified nil font-lock-multiline t face (org-block)) 30 48 (font-lock-fontified t src-block t fontified nil font-lock-multiline t face (org-block)) 48 50 (font-lock-fontified t src-block t fontified nil font-lock-multiline t face (org-block)) 50 51 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . 4745) (undo-tree-id1572 . -1) (undo-tree-id1573 . -50) (undo-tree-id1574 . -50) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (4795 . 4796) (nil rear-nonsticky t 4745 . 4746)) (25720 32100 843311 639000) 0 nil])
([nil nil ((4773 . 4791) (4766 . 4773) (#("c" 0 1 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . -4766) (undo-tree-id1579 . -1) 4767 (4766 . 4767)) nil (25720 32158 266773 811000) 0 nil])
nil
([nil nil ((4830 . 4834) (4809 . 4830) (#("c" 0 1 (font-lock-fontified t src-block t fontified nil font-lock-multiline t face (org-block))) . -4809) 4810 (4809 . 4810)) nil (25720 32158 266746 401000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4845 . 4846) (#("
" 0 1 (rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -4895) (4845 . 4896) 4794 (t 25720 32158 282009 151000)) nil (25720 32216 113468 917000) 0 nil])
([nil nil ((4881 . 4885) (#(")" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -4881) (undo-tree-id1580 . -1) 4882 (4880 . 4882) (4874 . 4880) (4871 . 4874) (#("t" 0 1 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . -4871) (undo-tree-id1581 . -1) 4872 (4866 . 4872)) nil (25720 32216 113462 235000) 0 nil])
([nil nil ((4918 . 4922) (#(")" 0 1 (fontified nil)) . -4918) 4919 (4917 . 4919) (4908 . 4917) (#("t" 0 1 (font-lock-fontified t src-block t fontified nil font-lock-multiline t face (org-block))) . -4908) 4909 (4903 . 4909)) nil (25720 32216 113430 44000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4933 . 4934) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -5021) (4933 . 5022) 4920 (t 25720 32216 129739 411000)) nil (25720 32294 505902 694000) 0 nil])
([nil nil ((#("('a')" 0 5 (font-lock-fontified t src-block t fontified nil font-lock-multiline t face (org-block))) . 5016) (5021 . 5037) (nil font-lock-fontified t 4981 . 4984) (nil src-block t 4981 . 4984) (nil fontified t 4981 . 4984) (nil font-lock-multiline t 4981 . 4984) (nil face (org-block) 4981 . 4984) (nil font-lock-fontified t 4980 . 4981) (nil src-block t 4980 . 4981) (nil fontified t 4980 . 4981) (nil font-lock-multiline t 4980 . 4981) (nil face (org-block) 4980 . 4981) (#("('a')" 0 1 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 1 2 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 2 5 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . 4968) (4973 . 4989)) nil (25720 32294 505888 384000) 0 nil])
([nil nil ((5044 . 5045) (t 25720 32294 524015 119000)) nil (25720 32302 497285 373000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -5043) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (#("" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -5044) (undo-tree-id1585 . -1) 5045) nil (25720 32302 497278 359000) 0 nil])
([nil nil ((5043 . 5044)) nil (25720 32302 496993 102000) 0 nil])
([nil nil ((5155 . 5157) (5134 . 5155) (5125 . 5134) (#("u" 0 1 (fontified t)) . -5125) (undo-tree-id1586 . -1) 5126 (5125 . 5126) (#("a" 0 1 (fontified t)) . -5125) (undo-tree-id1587 . -1) 5126 (5124 . 5126) (5123 . 5124) (5103 . 5123) (#(" " 0 1 (fontified t)) . -5103) (undo-tree-id1588 . -1) 5104 (5102 . 5104) (5081 . 5102) (t 25720 32302 515111 37000)) nil (25720 32613 9839 668000) 0 nil])
([nil nil ((5157 . 5158) 5156) nil (25720 32613 9803 697000) 0 nil])
([nil nil ((5158 . 5159) (t 25720 32613 25714 35000) 5158) nil (25720 32669 820889 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -5159) (undo-tree-id1596 . -1) (#("r" 0 1 (fontified t)) . -5160) (undo-tree-id1597 . -1) 5161 (#("c" 0 1 (fontified t)) . -5161) (undo-tree-id1598 . -1) 5162 (5159 . 5162) (5158 . 5159) 5158) nil (25720 32669 820883 132000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5158 . 5159) (#("
" 0 1 (font-lock-fontified t font-lock-multiline t face org-block-begin-line fontified nil)) . -5228) (5158 . 5229)) nil (25720 32669 820870 874000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5228 . 5229) (#("
" 0 1 (face org-block-end-line fontified nil)) . -5238) (5228 . 5239) 5159) nil (25720 32669 820867 36000) 0 nil])
([nil nil ((5205 . 5207) (5184 . 5205) (#("names_and_types_of_some_imp_node_types" 0 38 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 5184) (undo-tree-id1589 . -37) (undo-tree-id1590 . -37) (undo-tree-id1591 . -37) (undo-tree-id1592 . -38) (undo-tree-id1593 . -37) (undo-tree-id1594 . -37) (undo-tree-id1595 . -37) 5221) nil (25720 32669 820861 203000) 0 nil])
([nil nil ((5213 . 5214) 5206) nil (25720 32669 821123 239000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5619 . 5620) (nil fontified nil 5214 . 5620) (5214 . 5620)) nil (25720 32682 356653 969000) 0 nil] [nil nil ((nil rear-nonsticky nil 5251 . 5252) (nil fontified nil 5214 . 5252) (5214 . 5252)) ((#("names_and_types_of_some_imp_node_types" 0 37 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 37 38 (fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 5214) (undo-tree-id1599 . -37) (undo-tree-id1600 . -37) (undo-tree-id1601 . -37) (undo-tree-id1602 . -37) (nil rear-nonsticky t 5251 . 5252)) (25720 32669 820818 848000) 0 nil])
([nil nil ((5631 . 5635) (t 25720 32682 374061 717000)) nil (25720 32861 651755 762000) 0 nil])
nil
([nil nil ((5635 . 5640) 5634) nil (25720 32861 651751 847000) 0 nil])
([nil nil ((5630 . 5631) (#("
*** 1" 0 1 (fontified t face org-block-end-line) 1 3 (fontified t face org-hide keymap (keymap)) 3 4 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 4 5 (fontified t keymap (keymap) face org-level-3) 5 6 (fontified t face org-level-3)) . -5630) (undo-tree-id1905 . -1) (undo-tree-id1906 . -6) 5636 (5634 . 5636)) nil (25720 32861 651747 517000) 0 nil])
([nil nil ((5766 . 5767) (5753 . 5766) (5740 . 5753) (5719 . 5740) (5712 . 5719) (#("t" 0 1 (fontified t)) . -5712) (undo-tree-id1900 . -1) (#("h" 0 1 (fontified t)) . -5713) (undo-tree-id1901 . -1) 5714 (5705 . 5714) (5704 . 5705) (5692 . 5704) (#(" " 0 1 (fontified t)) . -5692) (undo-tree-id1902 . -1) 5693 (5692 . 5693) (#("t" 0 1 (fontified t)) . -5692) (undo-tree-id1903 . -1) 5693 (5677 . 5693) (#("r" 0 1 (fontified t)) . -5677) (undo-tree-id1904 . -1) 5678 (5666 . 5678) (5665 . 5666) 5664 (5662 . 5664) (5641 . 5662) (5636 . 5641)) nil (25720 32861 651732 852000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5767 . 5768) (#("
" 0 1 (font-lock-fontified t font-lock-multiline t face org-block-begin-line fontified nil)) . -5822) (5767 . 5823)) nil (25720 32861 651701 249000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5822 . 5823) (#("
" 0 1 (font-lock-fontified t face org-block-end-line fontified nil)) . -5832) (5822 . 5833) 5768) nil (25720 32861 651696 227000) 0 nil])
([nil nil ((5822 . 5823) 5768) nil (25720 32861 651691 319000) 0 nil])
([nil nil ((5823 . 5824)) nil (25720 32861 651687 258000) 0 nil])
([nil nil ((#("." 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -5823) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) 5824) nil (25720 32861 651640 947000) 0 nil])
([nil nil ((5793 . 5800) (#("determining" 0 11 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 5793) (undo-tree-id1912 . -10) (undo-tree-id1913 . -10) (undo-tree-id1914 . -10) (undo-tree-id1915 . -10) (undo-tree-id1916 . -10) 5803 (t 25720 32861 666973 699000)) nil (25720 32886 648546 996000) 0 nil])
([nil nil ((5808 . 5813) (#("type" 0 4 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 5808) (undo-tree-id1907 . -3) (undo-tree-id1908 . -3) (undo-tree-id1909 . -3) (undo-tree-id1910 . -3) (undo-tree-id1911 . -3) 5811) nil (25720 32886 648530 976000) 0 nil])
([nil nil ((5819 . 5820) 5812) nil (25720 32886 648493 355000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5888 . 5889) (nil fontified nil 5820 . 5889) (5820 . 5889) (t 25720 32886 662210 963000)) nil (25720 33182 846367 381000) 0 nil])
([nil nil ((5889 . 5890) 5888) nil (25720 33182 846363 467000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5914 . 5915) (nil fontified nil 5890 . 5915) (5890 . 5915)) nil (25720 33182 846360 602000) 0 nil])
([nil nil ((5889 . 5890) 5887) nil (25720 33182 846357 197000) 0 nil])
([nil nil ((5903 . 5904) (#("l" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -5903) (undo-tree-id1941 . -1) 5904 (5890 . 5904)) nil (25720 33182 846353 745000) 0 nil])
([nil nil ((5924 . 5928) (#("l" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -5924) (undo-tree-id1939 . -1) 5925 (5921 . 5925) (#("c" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -5921) (undo-tree-id1940 . -1) 5922 (5918 . 5922) (5916 . 5918) (5906 . 5916) (5902 . 5906)) nil (25720 33182 846345 848000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5930 . 5931) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -5971) (5930 . 5972) 5927) nil (25720 33182 846334 615000) 0 nil])
([nil nil ((#(".doctype" 0 6 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 6 8 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . 5951) (undo-tree-id1934 . -7) (undo-tree-id1935 . -7) (undo-tree-id1936 . -7) (undo-tree-id1937 . -7) (undo-tree-id1938 . -7) 5958) nil (25720 33182 846330 230000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5963 . 5964) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -5996) (5963 . 5997) 5951) nil (25720 33182 846314 680000) 0 nil])
([nil nil ((6007 . 6009) (5993 . 6007) (5984 . 5993)) nil (25720 33182 846311 141000) 0 nil])
([nil nil ((5999 . 6000) (#("f" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 5999)) nil (25720 33182 846307 574000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6021 . 6022) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -6079) (6021 . 6080) 5999) nil (25720 33182 846303 702000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6056) (undo-tree-id1928 . -1) 6057 (6056 . 6057) (6050 . 6056) (6043 . 6050) (#("createDocumentFragment" 0 8 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 8 14 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 14 15 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 15 22 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . 6043) (undo-tree-id1929 . -21) (undo-tree-id1930 . -21) (undo-tree-id1931 . -21) (undo-tree-id1932 . -21) (undo-tree-id1933 . -21) 6064) nil (25720 33182 846297 738000) 0 nil])
([nil nil ((6057 . 6060)) nil (25720 33182 846279 1000) 0 nil])
([nil nil ((6073 . 6074) 6059) nil (25720 33182 846276 388000) 0 nil])
([nil nil ((6136 . 6137) (#("l" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6136) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) 6137 (6135 . 6137) (6131 . 6135) (6126 . 6131) (#("b" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6126) (undo-tree-id1923 . -1) (#("i" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6127) (undo-tree-id1924 . -1) (#("d" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6128) (undo-tree-id1925 . -1) 6129 (6125 . 6129) (6121 . 6125) (6115 . 6121) (6109 . 6115) (6102 . 6109) (6097 . 6102) (#("y" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6097) (undo-tree-id1926 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6098) (undo-tree-id1927 . -1) 6099 (6088 . 6099) (6075 . 6088) (6074 . 6075) 6074) nil (25720 33182 846268 274000) 0 nil])
([nil nil ((6137 . 6141)) nil (25720 33182 846238 88000) 0 nil])
([nil nil ((#("." 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6137) (undo-tree-id1917 . -1) (#("x" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6138) (undo-tree-id1918 . -1) (#("." 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6139) (undo-tree-id1919 . -1) (#("s" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6140) (undo-tree-id1920 . -1) 6141) nil (25720 33182 846227 794000) 0 nil])
([nil nil ((6174 . 6175) (t 25720 33182 864220 773000) 6165) nil (25720 33222 156985 988000) 0 nil])
([nil nil ((6175 . 6177)) nil (25720 33222 156982 368000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -6175) (undo-tree-id1946 . -1) (#("\\" 0 1 (fontified t)) . -6176) (undo-tree-id1947 . -1) 6177) nil (25720 33222 156978 296000) 0 nil])
([nil nil ((6175 . 6177)) nil (25720 33222 156969 794000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -6175) (undo-tree-id1944 . -1) (#("x" 0 1 (fontified t)) . -6176) (undo-tree-id1945 . -1) 6177) nil (25720 33222 156965 501000) 0 nil])
([nil nil ((6175 . 6177)) nil (25720 33222 156956 208000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -6175) (undo-tree-id1942 . -1) (#("x" 0 1 (fontified t)) . -6176) (undo-tree-id1943 . -1) 6177) nil (25720 33222 156945 723000) 0 nil])
([nil nil ((6208 . 6226) (#("b" 0 1 (fontified t)) . -6208) (undo-tree-id1948 . -1) (#("i" 0 1 (fontified t)) . -6209) (undo-tree-id1949 . -1) 6210 (6196 . 6210) (6175 . 6196) (t 25720 33222 179760 230000)) nil (25720 33282 186081 801000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6281 . 6282) (nil fontified nil 6226 . 6282) (6226 . 6282) 6225) nil (25720 33282 186059 195000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 6227)) nil (25720 33282 186055 135000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 6227)) nil (25720 33282 186052 694000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 6227)) nil (25720 33282 186049 207000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 6227)) nil (25720 33282 186046 130000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6227)) nil (25720 33282 186034 53000) 0 nil])
([nil nil ((6277 . 6278) (t 25720 33282 203172 784000) 6225) nil (25720 33391 824903 303000) 0 nil])
([nil nil ((6278 . 6281)) nil (25720 33391 824899 930000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -6279) (undo-tree-id1979 . -1) (#("." 0 1 (fontified t)) . -6280) (undo-tree-id1980 . -1) 6281) nil (25720 33391 824896 212000) 0 nil])
([nil nil ((6279 . 6284)) nil (25720 33391 824888 656000) 0 nil])
([nil nil ((6284 . 6287)) nil (25720 33391 824886 391000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t face org-level-3)) . -6286) (undo-tree-id1978 . -1) 6287) nil (25720 33391 824883 422000) 0 nil])
([nil nil ((6286 . 6296)) nil (25720 33391 824877 850000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face org-level-3)) . -6294) (undo-tree-id1976 . -1) (#("n" 0 1 (fontified t face org-level-3)) . -6295) (undo-tree-id1977 . -1) 6296) nil (25720 33391 824873 833000) 0 nil])
([nil nil ((6294 . 6301)) nil (25720 33391 824865 698000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face org-level-3)) . -6297) (undo-tree-id1972 . -1) (#("t" 0 1 (fontified t face org-level-3)) . -6298) (undo-tree-id1973 . -1) (#("m" 0 1 (fontified t face org-level-3)) . -6299) (undo-tree-id1974 . -1) (#("l" 0 1 (fontified t face org-level-3)) . -6300) (undo-tree-id1975 . -1) 6301) nil (25720 33391 824861 405000) 0 nil])
([nil nil ((6297 . 6318)) nil (25720 33391 824849 384000) 0 nil])
([nil nil ((6318 . 6322)) nil (25720 33391 824846 876000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t face org-level-3)) . -6320) (undo-tree-id1970 . -1) (#("i" 0 1 (fontified t face org-level-3)) . -6321) (undo-tree-id1971 . -1) 6322) nil (25720 33391 824843 102000) 0 nil])
([nil nil ((6320 . 6323)) nil (25720 33391 824835 683000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t face org-level-3)) . -6320) (undo-tree-id1967 . -1) (#("i" 0 1 (fontified t face org-level-3)) . -6321) (undo-tree-id1968 . -1) (#("t" 0 1 (fontified t face org-level-3)) . -6322) (undo-tree-id1969 . -1) 6323) nil (25720 33391 824831 529000) 0 nil])
([nil nil ((6320 . 6323)) nil (25720 33391 824820 994000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face org-level-3)) . -6321) (undo-tree-id1965 . -1) (#("n" 0 1 (fontified t face org-level-3)) . -6322) (undo-tree-id1966 . -1) 6323) nil (25720 33391 824817 247000) 0 nil])
([nil nil ((6321 . 6327)) nil (25720 33391 824809 328000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face org-level-3)) . -6326) (undo-tree-id1964 . -1) 6327) nil (25720 33391 824806 202000) 0 nil])
([nil nil ((6326 . 6327)) nil (25720 33391 824801 130000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face org-level-3)) . -6326) (undo-tree-id1963 . -1) 6327) nil (25720 33391 824798 25000) 0 nil])
([nil nil ((6326 . 6332)) nil (25720 33391 824792 832000) 0 nil])
([nil nil ((6332 . 6343)) nil (25720 33391 824790 572000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face org-level-3)) . -6339) (undo-tree-id1959 . -1) (#("o" 0 1 (fontified t face org-level-3)) . -6340) (undo-tree-id1960 . -1) (#("t" 0 1 (fontified t face org-level-3)) . -6341) (undo-tree-id1961 . -1) (#("d" 0 1 (fontified t face org-level-3)) . -6342) (undo-tree-id1962 . -1) 6343) nil (25720 33391 824786 163000) 0 nil])
([nil nil ((6339 . 6344)) nil (25720 33391 824773 936000) 0 nil])
([nil nil ((6344 . 6345)) nil (25720 33391 824771 863000) 0 nil])
([nil nil ((6345 . 6366)) nil (25720 33391 824769 499000) 0 nil])
([nil nil ((6366 . 6370)) nil (25720 33391 824767 140000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -6368) (undo-tree-id1957 . -1) (#(" " 0 1 (fontified t)) . -6369) (undo-tree-id1958 . -1) 6370) nil (25720 33391 824763 486000) 0 nil])
([nil nil ((6368 . 6372)) nil (25720 33391 824755 882000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -6371) (undo-tree-id1956 . -1) 6372) nil (25720 33391 824752 539000) 0 nil])
([nil nil ((6371 . 6392)) nil (25720 33391 824747 409000) 0 nil])
([nil nil ((6392 . 6396)) nil (25720 33391 824745 141000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6394) (undo-tree-id1954 . -1) (#("g" 0 1 (fontified t)) . -6395) (undo-tree-id1955 . -1) 6396) nil (25720 33391 824741 705000) 0 nil])
([nil nil ((6394 . 6403)) nil (25720 33391 824733 164000) 0 nil])
([nil nil ((6403 . 6416)) nil (25720 33391 824730 873000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -6413) (undo-tree-id1951 . -1) (#("s" 0 1 (fontified t)) . -6414) (undo-tree-id1952 . -1) (#("s" 0 1 (fontified t)) . -6415) (undo-tree-id1953 . -1) 6416) nil (25720 33391 824727 173000) 0 nil])
([nil nil ((6413 . 6417)) nil (25720 33391 824714 435000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -6416) (undo-tree-id1950 . -1) 6417) nil (25720 33391 824613 63000) 0 nil])
([nil nil ((6416 . 6437)) nil (25720 33391 824594 494000) 0 nil])
([nil nil ((6437 . 6452)) nil (25720 33391 824585 85000) 0 nil])
([nil nil ((6531 . 6532) (6521 . 6531) (#("E" 0 1 (fontified t)) . -6521) (undo-tree-id1981 . -1) (#("x" 0 1 (fontified t)) . -6522) (undo-tree-id1982 . -1) (#("t" 0 1 (fontified t)) . -6523) (undo-tree-id1983 . -1) 6524 (6520 . 6524) (#(" " 0 1 (fontified t)) . -6520) (undo-tree-id1984 . -1) 6521 (6512 . 6521) (6511 . 6512) (6493 . 6511) (6492 . 6493) (6488 . 6492) (6467 . 6488) (6466 . 6467) (6465 . 6466) (#(" " 0 1 (fontified t)) . -6465) (undo-tree-id1985 . -1) 6466 (6458 . 6466) (#("a" 0 1 (fontified t)) . -6458) (undo-tree-id1986 . -1) 6459 (6454 . 6459) (#("r" 0 1 (fontified t)) . -6454) (undo-tree-id1987 . -1) (#("o" 0 1 (fontified t)) . -6455) (undo-tree-id1988 . -1) 6456 (6453 . 6456) (#("w" 0 1 (fontified t)) . -6453) (undo-tree-id1989 . -1) (#("e" 0 1 (fontified t)) . -6454) (undo-tree-id1990 . -1) (#(" " 0 1 (fontified t)) . -6455) (undo-tree-id1991 . -1) 6456 (6453 . 6456) (6452 . 6453) (t 25720 33391 838415 198000)) nil (25720 33498 734625 14000) 0 nil])
([nil nil ((6021 . 6022) 5964) nil (25720 33498 733926 48000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6533 . 6534) (#("
" 0 1 (font-lock-fontified t font-lock-multiline t face org-block-begin-line fontified nil)) . -6585) (6533 . 6586)) nil (25720 33498 733746 633000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6586 . 6587) (#("
" 0 1 (face org-block-end-line fontified nil)) . -6596) (6586 . 6597)) nil (25720 33498 733680 863000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6633 . 6634) (nil fontified nil 6586 . 6634) (6586 . 6634) (t 25720 33498 750004 715000)) nil (25720 33522 412678 492000) 0 nil])
([nil nil ((6634 . 6635) 6633) nil (25720 33522 412673 147000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6660 . 6661) (nil fontified nil 6635 . 6661) (6635 . 6661)) nil (25720 33522 412660 229000) 0 nil])
([nil nil ((6716 . 6720) (6714 . 6716) (#("n" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6714) (undo-tree-id1996 . -1) (#("t" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6715) (undo-tree-id1997 . -1) 6716 (6709 . 6716) (6708 . 6709) (6707 . 6708) (6697 . 6707) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6697) (undo-tree-id1998 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6698) (undo-tree-id1999 . -1) 6699 (6696 . 6699) (6684 . 6696) (6683 . 6684) (6682 . 6683) (#("'" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6682) (undo-tree-id2000 . -1) 6683 (6682 . 6683) (#("l" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6682) (undo-tree-id2001 . -1) (#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6683) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) 6684 (6683 . 6684) (6682 . 6683) (#("'" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6682) (undo-tree-id2004 . -1) 6683 (#("'" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6683) (undo-tree-id2005 . -1) 6684 (6680 . 6684) (#(")" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6680) (undo-tree-id2006 . -1) (#("'" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6681) (undo-tree-id2007 . -1) 6682 (6675 . 6682) (6670 . 6675) (6668 . 6670) (6653 . 6668) (#("c" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6653) (undo-tree-id2008 . -1) (#("o" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6654) (undo-tree-id2009 . -1) 6655 (6640 . 6655) (#("m" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6640) (undo-tree-id2010 . -1) 6641 (6635 . 6641) (t 25720 33522 429951 211000)) nil (25720 33596 623280 754000) 0 nil])
([nil nil ((6716 . 6717) (#("n" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 6716)) nil (25720 33596 622911 522000) 0 nil])
([nil nil ((6729 . 6731) (6727 . 6729) (6717 . 6727) (#("o" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6717) (undo-tree-id1992 . -1) (#("d" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6718) (undo-tree-id1993 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6719) (undo-tree-id1994 . -1) (#("T" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6720) (undo-tree-id1995 . -1) 6721 (6720 . 6721)) nil (25720 33596 622899 960000) 0 nil])
([nil nil ((6820 . 6822) (6819 . 6820) (6810 . 6819) (#("m" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6810) (undo-tree-id2059 . -1) 6811 (6805 . 6811) (#("n" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6805) (undo-tree-id2060 . -1) 6806 (6805 . 6806) (6800 . 6805) (6799 . 6800) (#("m" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6799) (undo-tree-id2061 . -1) 6800 (6779 . 6800) (6778 . 6779) (6776 . 6778) (6771 . 6776) (#("'" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6771) (undo-tree-id2062 . -1) 6772 (6771 . 6772) (#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6771) (undo-tree-id2063 . -1) 6772 (6763 . 6772) (#("E" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6763) (undo-tree-id2064 . -1) 6764 (6758 . 6764) (6752 . 6758) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6752) (undo-tree-id2065 . -1) (#("m" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6753) (undo-tree-id2066 . -1) (#("t" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6754) (undo-tree-id2067 . -1) (#("n" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6755) (undo-tree-id2068 . -1) 6756 (6754 . 6756) (6733 . 6754) (6731 . 6733) (t 25720 33596 641860 401000)) nil (25720 33648 858496 16000) 0 nil])
([nil nil ((6821 . 6822)) nil (25720 33648 858460 207000) 0 nil])
([nil nil ((#("." 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -6821) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) 6822) nil (25720 33648 858446 755000) 0 nil])
([nil nil ((6634 . 6635) (t 25720 33648 873859 856000) 6626) nil (25720 33696 821987 380000) 0 nil])
([nil nil ((6559 . 6568) (#("getting_" 0 8 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 6559) (undo-tree-id2075 . -7) (undo-tree-id2076 . -7) (undo-tree-id2077 . -7) (undo-tree-id2078 . -7) (undo-tree-id2079 . -7) 6566) nil (25720 33696 821982 661000) 0 nil])
([nil nil ((#("_value" 0 6 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 6574) (undo-tree-id2069 . -5) (undo-tree-id2070 . -5) (undo-tree-id2071 . -5) (undo-tree-id2072 . -5) (undo-tree-id2073 . -5) (undo-tree-id2074 . -5) 6579) nil (25720 33696 821963 959000) 0 nil])
([nil nil ((6854 . 6855) (t 25720 33696 837900 496000) 6853) nil (25720 33740 149140 722000) 0 nil])
([nil nil ((6855 . 6856)) nil (25720 33740 149136 308000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -6855) (undo-tree-id2080 . -1) 6856) nil (25720 33740 149126 361000) 0 nil])
([nil nil ((6859 . 6861) (6855 . 6859) (#("t" 0 1 (fontified t)) . -6855) (undo-tree-id2081 . -1) 6856 (6855 . 6856) (t 25720 33740 165968 60000)) nil (25720 33758 36972 638000) 0 nil])
([nil nil ((6995 . 7008) (#("m" 0 1 (fontified t)) . -6995) (undo-tree-id2265 . -1) (#("e" 0 1 (fontified t)) . -6996) (undo-tree-id2266 . -1) 6997 (6996 . 6997) (#("e" 0 1 (fontified t)) . -6996) (undo-tree-id2267 . -1) (#("e" 0 1 (fontified t)) . -6997) (undo-tree-id2268 . -1) (#("n" 0 1 (fontified t)) . -6998) (undo-tree-id2269 . -1) (#("t" 0 1 (fontified t)) . -6999) (undo-tree-id2270 . -1) (#(" " 0 1 (fontified t)) . -7000) (undo-tree-id2271 . -1) 7001 (7000 . 7001) (6979 . 7000) (#("e" 0 1 (fontified t)) . -6979) (undo-tree-id2272 . -1) (#("r" 0 1 (fontified t)) . -6980) (undo-tree-id2273 . -1) (#("o" 0 1 (fontified t)) . -6981) (undo-tree-id2274 . -1) (#("p" 0 1 (fontified t)) . -6982) (undo-tree-id2275 . -1) 6983 (6966 . 6983) (#("r" 0 1 (fontified t)) . -6966) (undo-tree-id2276 . -1) (#("e" 0 1 (fontified t)) . -6967) (undo-tree-id2277 . -1) (#("t" 0 1 (fontified t)) . -6968) (undo-tree-id2278 . -1) (#("r" 0 1 (fontified t)) . -6969) (undo-tree-id2279 . -1) (#("u" 0 1 (fontified t)) . -6970) (undo-tree-id2280 . -1) (#("e" 0 1 (fontified t)) . -6971) (undo-tree-id2281 . -1) (#("n" 0 1 (fontified t)) . -6972) (undo-tree-id2282 . -1) 6973 (#("d" 0 1 (fontified t)) . -6973) (undo-tree-id2283 . -1) 6974 (6966 . 6974) (#("t" 0 1 (fontified t)) . -6966) (undo-tree-id2284 . -1) (#("r" 0 1 (fontified t)) . -6967) (undo-tree-id2285 . -1) (#("e" 0 1 (fontified t)) . -6968) (undo-tree-id2286 . -1) 6969 (6963 . 6969) (#("w" 0 1 (fontified t)) . -6963) (undo-tree-id2287 . -1) (#("e" 0 1 (fontified t)) . -6964) (undo-tree-id2288 . -1) 6965 (6953 . 6965) (#("t" 0 1 (fontified t)) . -6953) (undo-tree-id2289 . -1) (#("n" 0 1 (fontified t)) . -6954) (undo-tree-id2290 . -1) 6955 (6948 . 6955) (#("a" 0 1 (fontified t)) . -6948) (undo-tree-id2291 . -1) (#("s" 0 1 (fontified t)) . -6949) (undo-tree-id2292 . -1) (#("a" 0 1 (fontified t)) . -6950) (undo-tree-id2293 . -1) 6951 (6936 . 6951) (6935 . 6936) (6934 . 6935) (6916 . 6934) (#("t" 0 1 (fontified t)) . -6916) (undo-tree-id2294 . -1) (#(" " 0 1 (fontified t)) . -6917) (undo-tree-id2295 . -1) 6918 (6914 . 6918) (6902 . 6914) (#("h" 0 1 (fontified t)) . -6902) (undo-tree-id2296 . -1) 6903 (6902 . 6903) (6881 . 6902) (6860 . 6881) (t 25720 33758 54003 898000)) nil (25720 33913 46703 584000) 0 nil])
([nil nil ((7142 . 7155) (#("m" 0 1 (fontified nil)) . -7142) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (#("e" 0 1 (fontified nil)) . -7143) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) 7144 (7143 . 7144) (#("e" 0 1 (fontified nil)) . -7143) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (#("e" 0 1 (fontified nil)) . -7144) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (#("n" 0 1 (fontified nil)) . -7145) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (#("t" 0 1 (fontified nil)) . -7146) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (#(" " 0 1 (fontified nil)) . -7147) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) 7148 (7147 . 7148) (7126 . 7147) (#("e" 0 1 (fontified nil)) . -7126) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (#("r" 0 1 (fontified nil)) . -7127) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (#("o" 0 1 (fontified nil)) . -7128) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (#("p" 0 1 (fontified nil)) . -7129) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) 7130 (7113 . 7130) (#("r" 0 1 (fontified nil)) . -7113) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (#("e" 0 1 (fontified nil)) . -7114) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (#("t" 0 1 (fontified nil)) . -7115) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (#("r" 0 1 (fontified nil)) . -7116) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (#("u" 0 1 (fontified nil)) . -7117) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (#("e" 0 1 (fontified nil)) . -7118) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (#("n" 0 1 (fontified nil)) . -7119) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (#("d" 0 1 (fontified nil)) . -7120) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) 7121 (7113 . 7121) (#("t" 0 1 (fontified nil)) . -7113) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (#("r" 0 1 (fontified nil)) . -7114) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (#("e" 0 1 (fontified nil)) . -7115) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) 7116 (7110 . 7116) (#("w" 0 1 (fontified nil)) . -7110) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (#("e" 0 1 (fontified nil)) . -7111) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) 7112 (7100 . 7112) (#("t" 0 1 (fontified nil)) . -7100) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (#("n" 0 1 (fontified nil)) . -7101) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) 7102 (7095 . 7102) (#("a" 0 1 (fontified nil)) . -7095) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (#("s" 0 1 (fontified nil)) . -7096) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (#("a" 0 1 (fontified nil)) . -7097) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) 7098 (7083 . 7098) (7082 . 7083) (7081 . 7082) (7063 . 7081) (#("t" 0 1 (fontified nil)) . -7063) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (#(" " 0 1 (fontified nil)) . -7064) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) 7065 (7049 . 7065) (#("h" 0 1 (fontified nil)) . -7049) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) 7050 (7049 . 7050) (7028 . 7049) (7007 . 7028)) nil (25720 33913 46527 480000) 0 nil])
([nil nil ((7154 . 7155)) nil (25720 33913 45444 646000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -7154) (undo-tree-id2082 . -1) 7155) nil (25720 33913 45439 547000) 0 nil])
([nil nil ((7154 . 7155)) nil (25720 33913 45413 644000) 0 nil])
([nil nil ((7252 . 7268) (#("v" 0 1 (fontified t)) . -7252) (undo-tree-id2316 . -1) (#("e" 0 1 (fontified t)) . -7253) (undo-tree-id2317 . -1) 7254 (7251 . 7254) (#("t" 0 1 (fontified t)) . -7251) (undo-tree-id2318 . -1) (#("m" 0 1 (fontified t)) . -7252) (undo-tree-id2319 . -1) 7253 (7245 . 7253) (7232 . 7245) (7231 . 7232) (7230 . 7231) (7226 . 7230) (#("v" 0 1 (fontified t)) . -7226) (undo-tree-id2320 . -1) 7227 (7222 . 7227) (#("r" 0 1 (fontified t)) . -7222) (undo-tree-id2321 . -1) 7223 (7221 . 7223) (#(" " 0 1 (fontified t)) . -7221) (undo-tree-id2322 . -1) 7222 (7203 . 7222) (7202 . 7203) (#(" " 0 1 (fontified t)) . -7202) (undo-tree-id2323 . -1) 7203 (7198 . 7203) (7177 . 7198) (#("n" 0 1 (fontified t)) . -7177) (undo-tree-id2324 . -1) 7178 (7176 . 7178) (7155 . 7176) (#("0" 0 1 (fontified t)) . -7155) (undo-tree-id2325 . -1) (#(" " 0 1 (fontified t)) . -7156) (undo-tree-id2326 . -1) 7157 (7155 . 7157) (t 25720 33913 62483 842000)) nil (25720 33976 167571 106000) 0 nil])
([nil nil ((#("Attribute" 0 9 (fontified t)) . 7259) (7268 . 7279) (#("Attribute" 0 9 (fontified t)) . 7237) (7246 . 7257) (#("Attribute" 0 9 (fontified t)) . 7221) (7230 . 7241)) nil (25720 34031 688131 144000) 0 nil] [nil nil ((#("  " 0 2 (fontified t)) . -7155) (undo-tree-id2303 . -2) 7157 (7155 . 7157) (7155 . 7156) (#("- for attributes we do not use create attribute, rather we use getAttribute, setAttribute and removeAttribute etc  
" 0 47 (fontified t) 47 75 (fontified t) 75 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 116 (fontified t)) . 7155) (undo-tree-id2304 . 3) (undo-tree-id2305 . -115) (undo-tree-id2306 . -112) (undo-tree-id2307 . -112) (undo-tree-id2308 . 3) (undo-tree-id2309 . -112) (undo-tree-id2310 . -112) (undo-tree-id2311 . -116) (undo-tree-id2312 . -112) (undo-tree-id2313 . -112) (undo-tree-id2314 . -112) (undo-tree-id2315 . -112) 7267) ((7155 . 7271) (#("
" 0 1 (fontified nil)) . 7155) (undo-tree-id2327 . 1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (#("  " 0 2 (fontified nil)) . 7155) (7155 . 7157)) (25720 33975 820974 506000) 0 nil])
([nil nil ((7277 . 7278)) nil (25720 34031 688125 102000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7155) (undo-tree-id2301 . 1) (undo-tree-id2302 . -1)) ((7155 . 7156)) (25720 33974 957034 284000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -7277) (undo-tree-id2389 . -1) 7278) nil (25720 34031 688114 796000) 0 nil])
([nil nil ((7172 . 7173) (#("
" 0 1 (fontified t)) . -7172) (undo-tree-id2297 . -1) (#("
" 0 1 (fontified t)) . -7155) (undo-tree-id2298 . 1) (undo-tree-id2299 . 1) (undo-tree-id2300 . -1)) ((7155 . 7156) (7172 . 7173) (#(" " 0 1 (fontified t face org-level-2)) . 7172)) (25720 33974 956600 999000) 0 nil])
([nil nil ((7277 . 7278) (t 25720 34031 707021 449000)) nil (25720 34136 529576 665000) 0 nil])
nil
([nil nil ((7277 . 7282)) nil (25720 34136 529573 269000) 0 nil])
([nil nil ((7339 . 7354) (#("s" 0 1 (fontified t face org-level-3)) . -7339) (undo-tree-id2391 . -1) 7340 (7339 . 7340) (#("A" 0 1 (fontified t face org-level-3)) . -7339) (undo-tree-id2392 . -1) 7340 (7338 . 7340) (#("a" 0 1 (fontified t face org-level-3)) . -7338) (undo-tree-id2393 . -1) 7339 (7335 . 7339) (7330 . 7335) (#("i" 0 1 (fontified t face org-level-3)) . -7330) (undo-tree-id2394 . -1) (#("s" 0 1 (fontified t face org-level-3)) . -7331) (undo-tree-id2395 . -1) (#("n" 0 1 (fontified t face org-level-3)) . -7332) (undo-tree-id2396 . -1) (#("g" 0 1 (fontified t face org-level-3)) . -7333) (undo-tree-id2397 . -1) (#(" " 0 1 (fontified t face org-level-3)) . -7334) (undo-tree-id2398 . -1) 7335 (7316 . 7335) (7295 . 7316) (7287 . 7295) (#("t" 0 1 (fontified t face org-level-3)) . -7287) (undo-tree-id2399 . -1) (#("r" 0 1 (fontified t face org-level-3)) . -7288) (undo-tree-id2400 . -1) (#("e" 0 1 (fontified t face org-level-3)) . -7289) (undo-tree-id2401 . -1) 7290 (7288 . 7290) (#("e" 0 1 (fontified t face org-level-3)) . -7288) (undo-tree-id2402 . -1) (#("a" 0 1 (fontified t face org-level-3)) . -7289) (undo-tree-id2403 . -1) 7290 (7282 . 7290)) nil (25720 34136 529560 295000) 0 nil])
([nil nil ((7354 . 7355)) nil (25720 34136 529152 642000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face org-level-3)) . -7354) (undo-tree-id2390 . -1) 7355) nil (25720 34136 528970 741000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -7360) (undo-tree-id3161 . -1) (#("r" 0 1 (fontified t)) . -7361) (undo-tree-id3162 . -1) (#("s" 0 1 (fontified t)) . -7362) (undo-tree-id3163 . -1) (#("t" 0 1 (fontified t)) . -7363) (undo-tree-id3164 . -1) (#("E" 0 1 (fontified t)) . -7364) (undo-tree-id3165 . -1) 7365 (7364 . 7365) (#("e" 0 1 (fontified t)) . -7364) (undo-tree-id3166 . -1) 7365 (7359 . 7365) (#("f" 0 1 (fontified t)) . -7359) (undo-tree-id3167 . -1) (#("i" 0 1 (fontified t)) . -7360) (undo-tree-id3168 . -1) (#("r" 0 1 (fontified t)) . -7361) (undo-tree-id3169 . -1) (#("s" 0 1 (fontified t)) . -7362) (undo-tree-id3170 . -1) (#("t" 0 1 (fontified t)) . -7363) (undo-tree-id3171 . -1) (#("e" 0 1 (fontified t)) . -7364) (undo-tree-id3172 . -1) 7365 (7364 . 7365) (#("E" 0 1 (fontified t)) . -7364) (undo-tree-id3173 . -1) 7365 (7359 . 7365) (7354 . 7359) (t 25720 34136 544264 269000) 7353) nil (25720 34501 321082 30000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 7359)) nil (25720 34501 321054 368000) 0 nil])
([nil nil ((7358 . 7375) (#("first" 0 5 (fontified t)) . -7358) (undo-tree-id3155 . -5) 7363 (#("E" 0 1 (fontified t)) . -7363) (undo-tree-id3156 . -1) 7364 (7358 . 7364) (#("j" 0 1 (fontified t)) . -7358) (undo-tree-id3157 . -1) (#("a" 0 1 (fontified t)) . -7359) (undo-tree-id3158 . -1) (#("v" 0 1 (fontified t)) . -7360) (undo-tree-id3159 . -1) (#("a" 0 1 (fontified t)) . -7361) (undo-tree-id3160 . -1) 7362 (7358 . 7362)) nil (25720 34501 321049 266000) 0 nil])
([nil nil ((#("   firstelementchild 
" 0 3 (fontified t) 3 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t)) . 7355) (undo-tree-id3146 . 2) (undo-tree-id3147 . -21) (undo-tree-id3148 . -3) (undo-tree-id3149 . -3) (undo-tree-id3150 . -3) (undo-tree-id3151 . -3) (undo-tree-id3152 . -3) (undo-tree-id3153 . -19) (undo-tree-id3154 . -22) 7374) nil (25720 34501 321032 612000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -7371) (undo-tree-id3144 . -1) 7372 (7355 . 7372) (#("firs" 0 4 (fontified t)) . -7355) (undo-tree-id3145 . -4) 7359 (7355 . 7359)) nil (25720 34501 321014 492000) 0 nil])
([nil nil ((#("firstelementchil
" 0 16 (fontified t) 16 17 (fontified t)) . 7355) (undo-tree-id2408 . 1) (undo-tree-id2409 . -16) (undo-tree-id2410 . 1) (undo-tree-id2411 . -15) (undo-tree-id2412 . -17) (undo-tree-id2413 . -16) (undo-tree-id2414 . -15) (undo-tree-id2415 . -15) (undo-tree-id2416 . -15) (undo-tree-id2417 . -15) (undo-tree-id2418 . -15) (undo-tree-id2419 . -15) (undo-tree-id2420 . -15) (undo-tree-id2421 . -15) (undo-tree-id2422 . -15) (undo-tree-id2423 . -15) (undo-tree-id2424 . -15) (undo-tree-id2425 . -15) (undo-tree-id2426 . -15) (undo-tree-id2427 . -15) (undo-tree-id2428 . -15) (undo-tree-id2429 . -15) (undo-tree-id2430 . -15) (undo-tree-id2431 . -15) (undo-tree-id2432 . -15) (undo-tree-id2433 . -15) (undo-tree-id2434 . -15) (undo-tree-id2435 . -15) (undo-tree-id2436 . -15) (undo-tree-id2437 . -15) (undo-tree-id2438 . -15) (undo-tree-id2439 . -15) (undo-tree-id2440 . -15) (undo-tree-id2441 . -15) (undo-tree-id2442 . -15) (undo-tree-id2443 . -15) (undo-tree-id2444 . -15) (undo-tree-id2445 . -15) (undo-tree-id2446 . -15) (undo-tree-id2447 . -15) (undo-tree-id2448 . -15) (undo-tree-id2449 . -15) (undo-tree-id2450 . -15) (undo-tree-id2451 . -15) (undo-tree-id2452 . -15) (undo-tree-id2453 . -15) (undo-tree-id2454 . -15) (undo-tree-id2455 . -15) (undo-tree-id2456 . -15) (undo-tree-id2457 . -15) (undo-tree-id2458 . -15) (undo-tree-id2459 . -15) (undo-tree-id2460 . -15) (undo-tree-id2461 . -15) (undo-tree-id2462 . -15) (undo-tree-id2463 . -15) (undo-tree-id2464 . -15) (undo-tree-id2465 . -15) (undo-tree-id2466 . -15) (undo-tree-id2467 . -15) (undo-tree-id2468 . -15) (undo-tree-id2469 . -15) (undo-tree-id2470 . -15) (undo-tree-id2471 . -15) (undo-tree-id2472 . -15) (undo-tree-id2473 . -15) (undo-tree-id2474 . -15) (undo-tree-id2475 . -15) (undo-tree-id2476 . -15) (undo-tree-id2477 . -15) (undo-tree-id2478 . -15) (undo-tree-id2479 . -15) (undo-tree-id2480 . -15) (undo-tree-id2481 . -15) (undo-tree-id2482 . -15) (undo-tree-id2483 . -15) (undo-tree-id2484 . -15) (undo-tree-id2485 . -15) (undo-tree-id2486 . -15) (undo-tree-id2487 . -15) (undo-tree-id2488 . -15) (undo-tree-id2489 . -15) (undo-tree-id2490 . -15) (undo-tree-id2491 . -15) (undo-tree-id2492 . -15) (undo-tree-id2493 . -15) (undo-tree-id2494 . -15) (undo-tree-id2495 . -15) (undo-tree-id2496 . -15) (undo-tree-id2497 . -15) (undo-tree-id2498 . -15) (undo-tree-id2499 . -15) (undo-tree-id2500 . -15) (undo-tree-id2501 . -15) (undo-tree-id2502 . -15) (undo-tree-id2503 . -15) (undo-tree-id2504 . -15) (undo-tree-id2505 . -15) (undo-tree-id2506 . -15) (undo-tree-id2507 . -15) (undo-tree-id2508 . -15) (undo-tree-id2509 . -15) (undo-tree-id2510 . -15) (undo-tree-id2511 . -15) (undo-tree-id2512 . -15) (undo-tree-id2513 . -15) (undo-tree-id2514 . -15) (undo-tree-id2515 . -15) (undo-tree-id2516 . -15) (undo-tree-id2517 . -15) (undo-tree-id2518 . -15) (undo-tree-id2519 . -15) (undo-tree-id2520 . -15) (undo-tree-id2521 . -15) (undo-tree-id2522 . -15) (undo-tree-id2523 . -15) (undo-tree-id2524 . -15) (undo-tree-id2525 . -15) (undo-tree-id2526 . -15) (undo-tree-id2527 . -15) (undo-tree-id2528 . -15) (undo-tree-id2529 . -15) (undo-tree-id2530 . -15) (undo-tree-id2531 . -15) (undo-tree-id2532 . -15) (undo-tree-id2533 . -15) (undo-tree-id2534 . -15) (undo-tree-id2535 . -15) (undo-tree-id2536 . -15) (undo-tree-id2537 . -15) (undo-tree-id2538 . -15) (undo-tree-id2539 . -15) (undo-tree-id2540 . -15) (undo-tree-id2541 . -15) (undo-tree-id2542 . -15) (undo-tree-id2543 . -15) (undo-tree-id2544 . -15) (undo-tree-id2545 . -15) (undo-tree-id2546 . -15) (undo-tree-id2547 . -15) (undo-tree-id2548 . -15) (undo-tree-id2549 . -15) (undo-tree-id2550 . -15) (undo-tree-id2551 . -15) (undo-tree-id2552 . -15) (undo-tree-id2553 . -15) (undo-tree-id2554 . -15) (undo-tree-id2555 . -15) (undo-tree-id2556 . -15) (undo-tree-id2557 . -15) (undo-tree-id2558 . -15) (undo-tree-id2559 . -15) (undo-tree-id2560 . -15) (undo-tree-id2561 . -15) (undo-tree-id2562 . -15) (undo-tree-id2563 . -15) (undo-tree-id2564 . -15) (undo-tree-id2565 . -15) (undo-tree-id2566 . -15) (undo-tree-id2567 . -15) (undo-tree-id2568 . -15) (undo-tree-id2569 . -15) (undo-tree-id2570 . -15) (undo-tree-id2571 . -15) (undo-tree-id2572 . -15) (undo-tree-id2573 . -15) (undo-tree-id2574 . -15) (undo-tree-id2575 . -15) (undo-tree-id2576 . -15) (undo-tree-id2577 . -15) (undo-tree-id2578 . -15) (undo-tree-id2579 . -15) (undo-tree-id2580 . -15) (undo-tree-id2581 . -15) (undo-tree-id2582 . -15) (undo-tree-id2583 . -15) (undo-tree-id2584 . -15) (undo-tree-id2585 . -15) (undo-tree-id2586 . -15) (undo-tree-id2587 . -15) (undo-tree-id2588 . -15) (undo-tree-id2589 . -15) (undo-tree-id2590 . -15) (undo-tree-id2591 . -15) (undo-tree-id2592 . -15) (undo-tree-id2593 . -15) (undo-tree-id2594 . -15) (undo-tree-id2595 . -15) (undo-tree-id2596 . -15) (undo-tree-id2597 . -15) (undo-tree-id2598 . -15) (undo-tree-id2599 . -15) (undo-tree-id2600 . -15) (undo-tree-id2601 . -15) (undo-tree-id2602 . -15) (undo-tree-id2603 . -15) (undo-tree-id2604 . -15) (undo-tree-id2605 . -15) (undo-tree-id2606 . -15) (undo-tree-id2607 . -15) (undo-tree-id2608 . -15) (undo-tree-id2609 . -15) (undo-tree-id2610 . -15) (undo-tree-id2611 . -15) (undo-tree-id2612 . -15) (undo-tree-id2613 . -15) (undo-tree-id2614 . -15) (undo-tree-id2615 . -15) (undo-tree-id2616 . -15) (undo-tree-id2617 . -15) (undo-tree-id2618 . -15) (undo-tree-id2619 . -15) (undo-tree-id2620 . -15) (undo-tree-id2621 . -15) (undo-tree-id2622 . -15) (undo-tree-id2623 . -15) (undo-tree-id2624 . -15) (undo-tree-id2625 . -15) (undo-tree-id2626 . -15) (undo-tree-id2627 . -15) (undo-tree-id2628 . -15) (undo-tree-id2629 . -15) (undo-tree-id2630 . -15) (undo-tree-id2631 . -15) (undo-tree-id2632 . -15) (undo-tree-id2633 . -15) (undo-tree-id2634 . -15) (undo-tree-id2635 . -15) (undo-tree-id2636 . -15) (undo-tree-id2637 . -15) (undo-tree-id2638 . -15) (undo-tree-id2639 . -15) (undo-tree-id2640 . -15) (undo-tree-id2641 . -15) (undo-tree-id2642 . -15) (undo-tree-id2643 . -15) (undo-tree-id2644 . -15) (undo-tree-id2645 . -15) (undo-tree-id2646 . -15) (undo-tree-id2647 . -15) (undo-tree-id2648 . -15) (undo-tree-id2649 . -15) (undo-tree-id2650 . -15) (undo-tree-id2651 . -15) (undo-tree-id2652 . -15) (undo-tree-id2653 . -15) (undo-tree-id2654 . -15) (undo-tree-id2655 . -15) (undo-tree-id2656 . -15) (undo-tree-id2657 . -15) (undo-tree-id2658 . -15) (undo-tree-id2659 . -15) (undo-tree-id2660 . -15) (undo-tree-id2661 . -15) (undo-tree-id2662 . -15) (undo-tree-id2663 . -15) (undo-tree-id2664 . -15) (undo-tree-id2665 . -15) (undo-tree-id2666 . -15) (undo-tree-id2667 . -15) (undo-tree-id2668 . -15) (undo-tree-id2669 . -15) (undo-tree-id2670 . -15) (undo-tree-id2671 . -15) (undo-tree-id2672 . -15) (undo-tree-id2673 . -15) (undo-tree-id2674 . -15) (undo-tree-id2675 . -15) (undo-tree-id2676 . -15) (undo-tree-id2677 . -15) (undo-tree-id2678 . -15) (undo-tree-id2679 . -15) (undo-tree-id2680 . -15) (undo-tree-id2681 . -15) (undo-tree-id2682 . -15) (undo-tree-id2683 . -15) (undo-tree-id2684 . -15) (undo-tree-id2685 . -15) (undo-tree-id2686 . -15) (undo-tree-id2687 . -15) (undo-tree-id2688 . -15) (undo-tree-id2689 . -15) (undo-tree-id2690 . -15) (undo-tree-id2691 . -15) (undo-tree-id2692 . -15) (undo-tree-id2693 . -15) (undo-tree-id2694 . -15) (undo-tree-id2695 . -15) (undo-tree-id2696 . -15) (undo-tree-id2697 . -15) (undo-tree-id2698 . -15) (undo-tree-id2699 . -15) (undo-tree-id2700 . -15) (undo-tree-id2701 . -15) (undo-tree-id2702 . -15) (undo-tree-id2703 . -15) (undo-tree-id2704 . -15) (undo-tree-id2705 . -15) (undo-tree-id2706 . -15) (undo-tree-id2707 . -15) (undo-tree-id2708 . -15) (undo-tree-id2709 . -15) (undo-tree-id2710 . -15) (undo-tree-id2711 . -15) (undo-tree-id2712 . -15) (undo-tree-id2713 . -15) (undo-tree-id2714 . -15) (undo-tree-id2715 . -15) (undo-tree-id2716 . -15) (undo-tree-id2717 . -15) (undo-tree-id2718 . -15) (undo-tree-id2719 . -15) (undo-tree-id2720 . -15) (undo-tree-id2721 . -15) (undo-tree-id2722 . -15) (undo-tree-id2723 . -15) (undo-tree-id2724 . -15) (undo-tree-id2725 . -15) (undo-tree-id2726 . -15) (undo-tree-id2727 . -15) (undo-tree-id2728 . -15) (undo-tree-id2729 . -15) (undo-tree-id2730 . -15) (undo-tree-id2731 . -15) (undo-tree-id2732 . -15) (undo-tree-id2733 . -15) (undo-tree-id2734 . -15) (undo-tree-id2735 . -15) (undo-tree-id2736 . -15) (undo-tree-id2737 . -15) (undo-tree-id2738 . -15) (undo-tree-id2739 . -15) (undo-tree-id2740 . -15) (undo-tree-id2741 . -15) (undo-tree-id2742 . -15) (undo-tree-id2743 . -15) (undo-tree-id2744 . -15) (undo-tree-id2745 . -15) (undo-tree-id2746 . -15) (undo-tree-id2747 . -15) (undo-tree-id2748 . -15) (undo-tree-id2749 . -15) (undo-tree-id2750 . -15) (undo-tree-id2751 . -15) (undo-tree-id2752 . -15) (undo-tree-id2753 . -15) (undo-tree-id2754 . -15) (undo-tree-id2755 . -15) (undo-tree-id2756 . -15) (undo-tree-id2757 . -15) (undo-tree-id2758 . -15) (undo-tree-id2759 . -15) (undo-tree-id2760 . -15) (undo-tree-id2761 . -15) (undo-tree-id2762 . -15) (undo-tree-id2763 . -15) (undo-tree-id2764 . -15) (undo-tree-id2765 . -15) (undo-tree-id2766 . -15) (undo-tree-id2767 . -15) (undo-tree-id2768 . -15) (undo-tree-id2769 . -15) (undo-tree-id2770 . -15) (undo-tree-id2771 . -15) (undo-tree-id2772 . -15) (undo-tree-id2773 . -15) (undo-tree-id2774 . -15) (undo-tree-id2775 . -15) (undo-tree-id2776 . -15) (undo-tree-id2777 . -15) (undo-tree-id2778 . -15) (undo-tree-id2779 . -15) (undo-tree-id2780 . -15) (undo-tree-id2781 . -15) (undo-tree-id2782 . -15) (undo-tree-id2783 . -15) (undo-tree-id2784 . -15) (undo-tree-id2785 . -15) (undo-tree-id2786 . -15) (undo-tree-id2787 . -15) (undo-tree-id2788 . -15) (undo-tree-id2789 . -15) (undo-tree-id2790 . -15) (undo-tree-id2791 . -15) (undo-tree-id2792 . -15) (undo-tree-id2793 . -15) (undo-tree-id2794 . -15) (undo-tree-id2795 . -15) (undo-tree-id2796 . -15) (undo-tree-id2797 . -15) (undo-tree-id2798 . -15) (undo-tree-id2799 . -15) (undo-tree-id2800 . -15) (undo-tree-id2801 . -15) (undo-tree-id2802 . -15) (undo-tree-id2803 . -15) (undo-tree-id2804 . -15) (undo-tree-id2805 . -15) (undo-tree-id2806 . -15) (undo-tree-id2807 . -15) (undo-tree-id2808 . -15) (undo-tree-id2809 . -15) (undo-tree-id2810 . -15) (undo-tree-id2811 . -15) (undo-tree-id2812 . -15) (undo-tree-id2813 . -15) (undo-tree-id2814 . -15) (undo-tree-id2815 . -15) (undo-tree-id2816 . -15) (undo-tree-id2817 . -15) (undo-tree-id2818 . -15) (undo-tree-id2819 . -15) (undo-tree-id2820 . -15) (undo-tree-id2821 . -15) (undo-tree-id2822 . -15) (undo-tree-id2823 . -15) (undo-tree-id2824 . -15) (undo-tree-id2825 . -15) (undo-tree-id2826 . -15) (undo-tree-id2827 . -15) (undo-tree-id2828 . -15) (undo-tree-id2829 . -15) (undo-tree-id2830 . -15) (undo-tree-id2831 . -15) (undo-tree-id2832 . -15) (undo-tree-id2833 . -15) (undo-tree-id2834 . -15) (undo-tree-id2835 . -15) (undo-tree-id2836 . -15) (undo-tree-id2837 . -15) (undo-tree-id2838 . -15) (undo-tree-id2839 . -15) (undo-tree-id2840 . -15) (undo-tree-id2841 . -15) (undo-tree-id2842 . -15) (undo-tree-id2843 . -15) (undo-tree-id2844 . -15) (undo-tree-id2845 . -15) (undo-tree-id2846 . -15) (undo-tree-id2847 . -15) (undo-tree-id2848 . -15) (undo-tree-id2849 . -15) (undo-tree-id2850 . -15) (undo-tree-id2851 . -15) (undo-tree-id2852 . -15) (undo-tree-id2853 . -15) (undo-tree-id2854 . -15) (undo-tree-id2855 . -15) (undo-tree-id2856 . -15) (undo-tree-id2857 . -15) (undo-tree-id2858 . -15) (undo-tree-id2859 . -15) (undo-tree-id2860 . -15) (undo-tree-id2861 . -15) (undo-tree-id2862 . -15) (undo-tree-id2863 . -15) (undo-tree-id2864 . -15) (undo-tree-id2865 . -15) (undo-tree-id2866 . -15) (undo-tree-id2867 . -15) (undo-tree-id2868 . -15) (undo-tree-id2869 . -15) (undo-tree-id2870 . -15) (undo-tree-id2871 . -15) (undo-tree-id2872 . -15) (undo-tree-id2873 . -15) (undo-tree-id2874 . -15) (undo-tree-id2875 . -15) (undo-tree-id2876 . -15) (undo-tree-id2877 . -15) (undo-tree-id2878 . -15) (undo-tree-id2879 . -15) (undo-tree-id2880 . -15) (undo-tree-id2881 . -15) (undo-tree-id2882 . -15) (undo-tree-id2883 . -15) (undo-tree-id2884 . -15) (undo-tree-id2885 . -15) (undo-tree-id2886 . -15) (undo-tree-id2887 . -15) (undo-tree-id2888 . -15) (undo-tree-id2889 . -15) (undo-tree-id2890 . -15) (undo-tree-id2891 . -15) (undo-tree-id2892 . -15) (undo-tree-id2893 . -15) (undo-tree-id2894 . -15) (undo-tree-id2895 . -15) (undo-tree-id2896 . -15) (undo-tree-id2897 . -15) (undo-tree-id2898 . -15) (undo-tree-id2899 . -15) (undo-tree-id2900 . -15) (undo-tree-id2901 . -15) (undo-tree-id2902 . -15) (undo-tree-id2903 . -15) (undo-tree-id2904 . -15) (undo-tree-id2905 . -15) (undo-tree-id2906 . -15) (undo-tree-id2907 . -15) (undo-tree-id2908 . -15) (undo-tree-id2909 . -15) (undo-tree-id2910 . -15) (undo-tree-id2911 . -15) (undo-tree-id2912 . -15) (undo-tree-id2913 . -15) (undo-tree-id2914 . -15) (undo-tree-id2915 . -15) (undo-tree-id2916 . -15) (undo-tree-id2917 . -15) (undo-tree-id2918 . -15) (undo-tree-id2919 . -15) (undo-tree-id2920 . -15) (undo-tree-id2921 . -15) (undo-tree-id2922 . -15) (undo-tree-id2923 . -15) (undo-tree-id2924 . -15) (undo-tree-id2925 . -15) (undo-tree-id2926 . -15) (undo-tree-id2927 . -15) (undo-tree-id2928 . -15) (undo-tree-id2929 . -15) (undo-tree-id2930 . -15) (undo-tree-id2931 . -15) (undo-tree-id2932 . -15) (undo-tree-id2933 . -15) (undo-tree-id2934 . -15) (undo-tree-id2935 . -15) (undo-tree-id2936 . -15) (undo-tree-id2937 . -15) (undo-tree-id2938 . -15) (undo-tree-id2939 . -15) (undo-tree-id2940 . -15) (undo-tree-id2941 . -15) (undo-tree-id2942 . -15) (undo-tree-id2943 . -15) (undo-tree-id2944 . -15) (undo-tree-id2945 . -15) (undo-tree-id2946 . -15) (undo-tree-id2947 . -15) (undo-tree-id2948 . -15) (undo-tree-id2949 . -15) (undo-tree-id2950 . -15) (undo-tree-id2951 . -15) (undo-tree-id2952 . -15) (undo-tree-id2953 . -15) (undo-tree-id2954 . -15) (undo-tree-id2955 . -15) (undo-tree-id2956 . -15) (undo-tree-id2957 . -15) (undo-tree-id2958 . -15) (undo-tree-id2959 . -15) (undo-tree-id2960 . -15) (undo-tree-id2961 . -15) (undo-tree-id2962 . -15) (undo-tree-id2963 . -15) (undo-tree-id2964 . -15) (undo-tree-id2965 . -15) (undo-tree-id2966 . -15) (undo-tree-id2967 . -15) (undo-tree-id2968 . -15) (undo-tree-id2969 . -15) (undo-tree-id2970 . -15) (undo-tree-id2971 . -15) (undo-tree-id2972 . -15) (undo-tree-id2973 . -15) (undo-tree-id2974 . -15) (undo-tree-id2975 . -15) (undo-tree-id2976 . -15) (undo-tree-id2977 . -15) (undo-tree-id2978 . -15) (undo-tree-id2979 . -15) (undo-tree-id2980 . -15) (undo-tree-id2981 . -15) (undo-tree-id2982 . -15) (undo-tree-id2983 . -15) (undo-tree-id2984 . -15) (undo-tree-id2985 . -15) (undo-tree-id2986 . -15) (undo-tree-id2987 . -15) (undo-tree-id2988 . -15) (undo-tree-id2989 . -15) (undo-tree-id2990 . -15) (undo-tree-id2991 . -15) (undo-tree-id2992 . -15) (undo-tree-id2993 . -15) (undo-tree-id2994 . -15) (undo-tree-id2995 . -15) (undo-tree-id2996 . -15) (undo-tree-id2997 . -15) (undo-tree-id2998 . -15) (undo-tree-id2999 . -15) (undo-tree-id3000 . -15) (undo-tree-id3001 . -15) (undo-tree-id3002 . -15) (undo-tree-id3003 . -15) (undo-tree-id3004 . -15) (undo-tree-id3005 . -15) (undo-tree-id3006 . -15) (undo-tree-id3007 . -15) (undo-tree-id3008 . -15) (undo-tree-id3009 . -15) (undo-tree-id3010 . -15) (undo-tree-id3011 . -15) (undo-tree-id3012 . -15) (undo-tree-id3013 . -15) (undo-tree-id3014 . -15) (undo-tree-id3015 . -15) (undo-tree-id3016 . -15) (undo-tree-id3017 . -15) (undo-tree-id3018 . -15) (undo-tree-id3019 . -15) (undo-tree-id3020 . -15) (undo-tree-id3021 . -15) (undo-tree-id3022 . -15) (undo-tree-id3023 . -15) (undo-tree-id3024 . -15) (undo-tree-id3025 . -15) (undo-tree-id3026 . -15) (undo-tree-id3027 . -15) (undo-tree-id3028 . -15) (undo-tree-id3029 . -15) (undo-tree-id3030 . -15) (undo-tree-id3031 . -15) (undo-tree-id3032 . -15) (undo-tree-id3033 . -15) (undo-tree-id3034 . -15) (undo-tree-id3035 . -15) (undo-tree-id3036 . -15) (undo-tree-id3037 . -15) (undo-tree-id3038 . -15) (undo-tree-id3039 . -15) (undo-tree-id3040 . -15) (undo-tree-id3041 . -15) (undo-tree-id3042 . -15) (undo-tree-id3043 . -15) (undo-tree-id3044 . -15) (undo-tree-id3045 . -15) (undo-tree-id3046 . -15) (undo-tree-id3047 . -15) (undo-tree-id3048 . -15) (undo-tree-id3049 . -15) (undo-tree-id3050 . -15) (undo-tree-id3051 . -15) (undo-tree-id3052 . -15) (undo-tree-id3053 . -15) (undo-tree-id3054 . -15) (undo-tree-id3055 . -15) (undo-tree-id3056 . -15) (undo-tree-id3057 . -15) (undo-tree-id3058 . -15) (undo-tree-id3059 . -15) (undo-tree-id3060 . -15) (undo-tree-id3061 . -15) (undo-tree-id3062 . -15) (undo-tree-id3063 . -15) (undo-tree-id3064 . -15) (undo-tree-id3065 . -15) (undo-tree-id3066 . -15) (undo-tree-id3067 . -15) (undo-tree-id3068 . -15) (undo-tree-id3069 . -15) (undo-tree-id3070 . -15) (undo-tree-id3071 . -15) (undo-tree-id3072 . -15) (undo-tree-id3073 . -15) (undo-tree-id3074 . -15) (undo-tree-id3075 . -15) (undo-tree-id3076 . -15) (undo-tree-id3077 . -15) (undo-tree-id3078 . -15) (undo-tree-id3079 . -15) (undo-tree-id3080 . -15) (undo-tree-id3081 . -15) (undo-tree-id3082 . -15) (undo-tree-id3083 . -15) (undo-tree-id3084 . -15) (undo-tree-id3085 . -15) (undo-tree-id3086 . -15) (undo-tree-id3087 . -15) (undo-tree-id3088 . -15) (undo-tree-id3089 . -15) (undo-tree-id3090 . -15) (undo-tree-id3091 . -15) (undo-tree-id3092 . -15) (undo-tree-id3093 . -15) (undo-tree-id3094 . -15) (undo-tree-id3095 . -15) (undo-tree-id3096 . -15) (undo-tree-id3097 . -15) (undo-tree-id3098 . -15) (undo-tree-id3099 . -15) (undo-tree-id3100 . -15) (undo-tree-id3101 . -15) (undo-tree-id3102 . -15) (undo-tree-id3103 . -15) (undo-tree-id3104 . -15) (undo-tree-id3105 . -15) (undo-tree-id3106 . -15) (undo-tree-id3107 . -15) (undo-tree-id3108 . -15) (undo-tree-id3109 . -15) (undo-tree-id3110 . -15) (undo-tree-id3111 . -15) (undo-tree-id3112 . -15) (undo-tree-id3113 . -15) (undo-tree-id3114 . -15) (undo-tree-id3115 . -15) (undo-tree-id3116 . -15) (undo-tree-id3117 . -15) (undo-tree-id3118 . -15) (undo-tree-id3119 . -15) (undo-tree-id3120 . -15) (undo-tree-id3121 . -15) (undo-tree-id3122 . -15) (undo-tree-id3123 . -15) (undo-tree-id3124 . -15) (undo-tree-id3125 . -15) (undo-tree-id3126 . -15) (undo-tree-id3127 . -15) (undo-tree-id3128 . -15) (undo-tree-id3129 . -15) (undo-tree-id3130 . -15) (undo-tree-id3131 . -15) (undo-tree-id3132 . -15) (undo-tree-id3133 . -15) (undo-tree-id3134 . -15) (undo-tree-id3135 . -15) (undo-tree-id3136 . -15) (undo-tree-id3137 . -15) (undo-tree-id3138 . -15) (undo-tree-id3139 . -15) (undo-tree-id3140 . -15) (undo-tree-id3141 . -15) (undo-tree-id3142 . -15) (undo-tree-id3143 . -17) 7370) nil (25720 34501 320928 544000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -7355) (undo-tree-id2404 . -4) (undo-tree-id2405 . -4) (undo-tree-id2406 . -4) (undo-tree-id2407 . -4) 7359 (7354 . 7359) 7293) nil (25720 34501 319160 124000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -7364) (undo-tree-id3432 . -1) (#("e" 0 1 (fontified t)) . -7365) (undo-tree-id3433 . -1) (#("x" 0 1 (fontified t)) . -7366) (undo-tree-id3434 . -1) (#("t" 0 1 (fontified t)) . -7367) (undo-tree-id3435 . -1) 7368 (7359 . 7368) (#("innerT" 0 6 (fontified t)) . -7359) (undo-tree-id3436 . -6) 7365 (7364 . 7365) (#("t" 0 1 (fontified t)) . -7364) (undo-tree-id3437 . -1) (#("e" 0 1 (fontified t)) . -7365) (undo-tree-id3438 . -1) (#("x" 0 1 (fontified t)) . -7366) (undo-tree-id3439 . -1) (#("t" 0 1 (fontified t)) . -7367) (undo-tree-id3440 . -1) 7368 (7359 . 7368) (#("innerT" 0 6 (fontified t)) . -7359) (undo-tree-id3441 . -6) 7365 (7363 . 7365) (#("r" 0 1 (fontified t)) . -7363) (undo-tree-id3442 . -1) (#("t" 0 1 (fontified t)) . -7364) (undo-tree-id3443 . -1) (#("e" 0 1 (fontified t)) . -7365) (undo-tree-id3444 . -1) (#("x" 0 1 (fontified t)) . -7366) (undo-tree-id3445 . -1) (#("t" 0 1 (fontified t)) . -7367) (undo-tree-id3446 . -1) 7368 (7359 . 7368) (#("innerT" 0 6 (fontified t)) . -7359) (undo-tree-id3447 . -5) (undo-tree-id3448 . -5) (undo-tree-id3449 . -6) 7365 (7364 . 7365) (7361 . 7364) (#("e" 0 1 (fontified t)) . -7361) (undo-tree-id3450 . -1) (#("r" 0 1 (fontified t)) . -7362) (undo-tree-id3451 . -1) (#("e" 0 1 (fontified t)) . -7363) (undo-tree-id3452 . -1) (#("r" 0 1 (fontified t)) . -7364) (undo-tree-id3453 . -1) 7365 (7355 . 7365) (t 25720 34501 340122 436000)) nil (25720 35567 674446 340000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -7359) (undo-tree-id3389 . -1) (#("i" 0 1 (fontified t)) . -7360) (undo-tree-id3390 . -1) (#("r" 0 1 (fontified t)) . -7361) (undo-tree-id3391 . -1) 7362 (7359 . 7362) (#("f" 0 1 (fontified t)) . -7359) (undo-tree-id3392 . -1) (#("i" 0 1 (fontified t)) . -7360) (undo-tree-id3393 . -1) 7361 (7359 . 7361) (#("f" 0 1 (fontified t)) . -7359) (undo-tree-id3394 . -1) (#("i" 0 1 (fontified t)) . -7360) (undo-tree-id3395 . -1) 7361 (7359 . 7361) (#("f" 0 1 (fontified t)) . -7359) (undo-tree-id3396 . -1) (#("i" 0 1 (fontified t)) . -7360) (undo-tree-id3397 . -1) (#("r" 0 1 (fontified t)) . -7361) (undo-tree-id3398 . -1) (#("s" 0 1 (fontified t)) . -7362) (undo-tree-id3399 . -1) 7363 (7359 . 7363) (#("i" 0 1 (fontified t)) . -7359) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (#("n" 0 1 (fontified t)) . -7360) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (#("n" 0 1 (fontified t)) . -7361) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (#("e" 0 1 (fontified t)) . -7362) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (#("r" 0 1 (fontified t)) . -7363) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (#("F" 0 1 (fontified t)) . -7364) (undo-tree-id3430 . -1) (#("i" 0 1 (fontified t)) . -7365) (undo-tree-id3431 . -1) 7366 (7364 . 7366)) nil (25720 35567 674384 264000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -7359) (undo-tree-id3384 . -1) (#("i" 0 1 (fontified t)) . -7360) (undo-tree-id3385 . -1) 7361 (7360 . 7361) (#("f" 0 1 (fontified t)) . -7360) (undo-tree-id3386 . -1) 7361 (7360 . 7361) (#("i" 0 1 (fontified t)) . -7360) (undo-tree-id3387 . -1) (#("r" 0 1 (fontified t)) . -7361) (undo-tree-id3388 . -1) 7362 (7358 . 7362)) nil (25720 35567 674308 790000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -7359) (undo-tree-id3338 . -1) (#("i" 0 1 (fontified t)) . -7360) (undo-tree-id3339 . -1) (#("r" 0 1 (fontified t)) . -7361) (undo-tree-id3340 . -1) 7362 (#("s" 0 1 (fontified t)) . -7362) (undo-tree-id3341 . -1) (#("t" 0 1 (fontified t)) . -7363) (undo-tree-id3342 . -1) (#("E" 0 1 (fontified t)) . -7364) (undo-tree-id3343 . -1) (#("l" 0 1 (fontified t)) . -7365) (undo-tree-id3344 . -1) (#("e" 0 1 (fontified t)) . -7366) (undo-tree-id3345 . -1) (#("m" 0 1 (fontified t)) . -7367) (undo-tree-id3346 . -1) 7368 (7359 . 7368) (#("f" 0 1 (fontified t)) . -7359) (undo-tree-id3347 . -1) (#("i" 0 1 (fontified t)) . -7360) (undo-tree-id3348 . -1) (#("r" 0 1 (fontified t)) . -7361) (undo-tree-id3349 . -1) (#("s" 0 1 (fontified t)) . -7362) (undo-tree-id3350 . -1) (#("t" 0 1 (fontified t)) . -7363) (undo-tree-id3351 . -1) (#("e" 0 1 (fontified t)) . -7364) (undo-tree-id3352 . -1) (#("l" 0 1 (fontified nil)) . -7365) (undo-tree-id3353 . -1) (#("e" 0 1 (fontified nil)) . -7366) (undo-tree-id3354 . -1) (#("m" 0 1 (fontified nil)) . -7367) (undo-tree-id3355 . -1) (#("e" 0 1 (fontified t)) . -7368) (undo-tree-id3356 . -1) (#("n" 0 1 (fontified t)) . -7369) (undo-tree-id3357 . -1) (#("t" 0 1 (fontified t)) . -7370) (undo-tree-id3358 . -1) (#("c" 0 1 (fontified t)) . -7371) (undo-tree-id3359 . -1) (#("h" 0 1 (fontified t)) . -7372) (undo-tree-id3360 . -1) (#("i" 0 1 (fontified t)) . -7373) (undo-tree-id3361 . -1) (#("l" 0 1 (fontified t)) . -7374) (undo-tree-id3362 . -1) (#("d" 0 1 (fontified nil)) . -7375) 7376 (7359 . 7376) (#("firstE" 0 6 (fontified t)) . -7359) (undo-tree-id3363 . -6) 7365 (7364 . 7365) (#("e" 0 1 (fontified t)) . -7364) (undo-tree-id3364 . -1) 7365 (7364 . 7365) (#("e" 0 1 (fontified t)) . -7364) (undo-tree-id3365 . -1) (#("l" 0 1 (fontified t)) . -7365) (undo-tree-id3366 . -1) (#("e" 0 1 (fontified t)) . -7366) (undo-tree-id3367 . -1) (#("m" 0 1 (fontified t)) . -7367) (undo-tree-id3368 . -1) (#("e" 0 1 (fontified t)) . -7368) (undo-tree-id3369 . -1) (#("n" 0 1 (fontified t)) . -7369) (undo-tree-id3370 . -1) (#("t" 0 1 (fontified t)) . -7370) (undo-tree-id3371 . -1) (#("c" 0 1 (fontified t)) . -7371) (undo-tree-id3372 . -1) (#("h" 0 1 (fontified t)) . -7372) (undo-tree-id3373 . -1) (#("i" 0 1 (fontified t)) . -7373) (undo-tree-id3374 . -1) (#("l" 0 1 (fontified t)) . -7374) (undo-tree-id3375 . -1) (#("d" 0 1 (fontified t)) . -7375) (undo-tree-id3376 . -1) (#("
" 0 1 (fontified t)) . -7376) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) 7377 (7376 . 7377) (7359 . 7376) (#("firs" 0 4 (fontified t)) . -7359) (undo-tree-id3379 . -4) 7363 (7362 . 7363) (#("e" 0 1 (fontified t)) . -7362) (undo-tree-id3380 . -1) 7363 (7362 . 7363) (#("S" 0 1 (fontified t)) . -7362) (undo-tree-id3381 . -1) (#("t" 0 1 (fontified t)) . -7363) (undo-tree-id3382 . -1) 7364 (7360 . 7364) (#("i" 0 1 (fontified t)) . -7360) (undo-tree-id3383 . -1) 7361 (7359 . 7361)) nil (25720 35567 674275 856000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -7377) (undo-tree-id3330 . -1) (#("i" 0 1 (fontified t)) . -7378) (undo-tree-id3331 . -1) (#("r" 0 1 (fontified t)) . -7379) (undo-tree-id3332 . -1) (#("s" 0 1 (fontified t)) . -7380) (undo-tree-id3333 . -1) (#("t" 0 1 (fontified t)) . -7381) (undo-tree-id3334 . -1) (#("E" 0 1 (fontified t)) . -7382) (undo-tree-id3335 . -1) 7383 (7377 . 7383) (7374 . 7377) (#("d" 0 1 (fontified t)) . -7374) (undo-tree-id3336 . -1) 7375 (7373 . 7375) (7366 . 7373) (7362 . 7366) (#("E" 0 1 (fontified t)) . -7362) (undo-tree-id3337 . -1) 7363 (7358 . 7363)) nil (25720 35567 674027 744000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -7375) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) 7376) nil (25720 35567 674004 395000) 0 nil])
([nil nil ((7368 . 7377) (7359 . 7368) (#("v" 0 1 (fontified t)) . -7359) (undo-tree-id3202 . -1) (#("f" 0 1 (fontified t)) . -7360) (undo-tree-id3203 . -1) 7361 (7359 . 7361) (#("first" 0 5 (fontified t)) . -7359) (undo-tree-id3204 . -5) 7364 (#("Element" 0 7 (fontified t)) . -7364) (undo-tree-id3205 . -7) 7371 (#("Chil" 0 4 (fontified t)) . -7371) (undo-tree-id3206 . -4) 7375 (#("d" 0 1 (fontified t)) . -7375) (undo-tree-id3207 . -1) (#(" " 0 1 (fontified t)) . -7376) (undo-tree-id3208 . -1) 7377 (7371 . 7377) (#("E" 0 1 (fontified t)) . -7371) (undo-tree-id3209 . -1) 7372 (7367 . 7372) (7365 . 7367) (7364 . 7365) (#("e" 0 1 (fontified t)) . -7364) (undo-tree-id3210 . -1) (#("l" 0 1 (fontified t)) . -7365) (undo-tree-id3211 . -1) (#("e" 0 1 (fontified t)) . -7366) (undo-tree-id3212 . -1) (#("m" 0 1 (fontified t)) . -7367) (undo-tree-id3213 . -1) (#("e" 0 1 (fontified t)) . -7368) (undo-tree-id3214 . -1) (#("n" 0 1 (fontified t)) . -7369) (undo-tree-id3215 . -1) (#("t" 0 1 (fontified t)) . -7370) (undo-tree-id3216 . -1) (#("c" 0 1 (fontified t)) . -7371) (undo-tree-id3217 . -1) (#("h" 0 1 (fontified nil)) . -7372) (undo-tree-id3218 . -1) (#("i" 0 1 (fontified nil)) . -7373) (undo-tree-id3219 . -1) (#("l" 0 1 (fontified t)) . -7374) (undo-tree-id3220 . -1) (#("d" 0 1 (fontified nil)) . -7375) 7376 (7364 . 7376) (7359 . 7364) (#("f" 0 1 (fontified t)) . -7359) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (#("i" 0 1 (fontified t)) . -7360) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (#("r" 0 1 (fontified t)) . -7361) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (#("s" 0 1 (fontified t)) . -7362) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (#("t" 0 1 (fontified t)) . -7363) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (#("E" 0 1 (fontified t)) . -7364) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (#("l" 0 1 (fontified t)) . -7365) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (#("e" 0 1 (fontified t)) . -7366) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (#("m" 0 1 (fontified t)) . -7367) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (#("e" 0 1 (fontified t)) . -7368) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (#("n" 0 1 (fontified t)) . -7369) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (#("t" 0 1 (fontified t)) . -7370) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) 7371 (#("Chil" 0 4 (fontified t)) . 7371) (undo-tree-id3317 . -3) (undo-tree-id3318 . -4) (undo-tree-id3319 . -4) (undo-tree-id3320 . -4) (undo-tree-id3321 . -4) (undo-tree-id3322 . -4) (undo-tree-id3323 . -3) 7374) nil (25720 35567 673970 322000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -7377) (undo-tree-id3201 . -1) 7378 (7377 . 7378)) nil (25720 35567 673754 551000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -7376) (undo-tree-id3199 . -1) (#("k" 0 1 (fontified t)) . -7377) (undo-tree-id3200 . -1) 7378 (7376 . 7378)) nil (25720 35567 674680 976000) 0 nil])
([nil nil ((7376 . 7379) (#("m" 0 1 (fontified t)) . -7376) (undo-tree-id3520 . -1) 7377 (7376 . 7377) (#("t" 0 1 (fontified t)) . -7376) (undo-tree-id3521 . -1) 7377 (7375 . 7377) (#("G" 0 1 (fontified t)) . -7375) (undo-tree-id3522 . -1) 7376 (7370 . 7376) (7369 . 7370) (7368 . 7369) (7364 . 7368) (#("h" 0 1 (fontified t)) . -7364) (undo-tree-id3523 . -1) 7365 (7359 . 7365) (#("first" 0 5 (fontified t)) . -7359) (undo-tree-id3524 . -5) (undo-tree-id3525 . -5) 7364 (#("Element" 0 7 (fontified t)) . -7364) (undo-tree-id3526 . -7) (undo-tree-id3527 . -7) 7371 (#("Child" 0 5 (fontified t)) . -7371) (undo-tree-id3528 . -5) (undo-tree-id3529 . -5) 7376 (#(" " 0 1 (fontified t)) . -7376) (undo-tree-id3530 . -1) 7377 (7376 . 7377)) nil (25720 35911 382167 781000) 0 nil] [nil nil ((#("The firstElementChild    
" 0 22 (fontified t) 22 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 7355) (undo-tree-id3174 . 5) (undo-tree-id3175 . -25) (undo-tree-id3176 . -4) (undo-tree-id3177 . -4) (undo-tree-id3178 . -26) (undo-tree-id3179 . -26) (undo-tree-id3180 . -26) (undo-tree-id3181 . -25) (undo-tree-id3182 . -25) (undo-tree-id3183 . -25) (undo-tree-id3184 . -25) (undo-tree-id3185 . -25) (undo-tree-id3186 . -25) (undo-tree-id3187 . -24) (undo-tree-id3188 . -24) (undo-tree-id3189 . -24) (undo-tree-id3190 . -3) (undo-tree-id3191 . -3) (undo-tree-id3192 . -3) (undo-tree-id3193 . -4) (undo-tree-id3194 . -4) (undo-tree-id3195 . -26) (undo-tree-id3196 . -21) (undo-tree-id3197 . -20) (undo-tree-id3198 . -20) 7375) ((7355 . 7381)) (25720 35567 673731 989000) 0 nil])
([nil nil ((#("The innerHTML, outerHTML    
" 0 13 (fontified t) 13 24 (fontified t) 24 25 (fontified t) 25 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t)) . 7355) (undo-tree-id3493 . 5) (undo-tree-id3494 . -28) (undo-tree-id3495 . -23) (undo-tree-id3496 . -23) (undo-tree-id3497 . -29) (undo-tree-id3498 . -29) (undo-tree-id3499 . -29) (undo-tree-id3500 . -28) (undo-tree-id3501 . -28) (undo-tree-id3502 . -28) (undo-tree-id3503 . -28) (undo-tree-id3504 . -28) (undo-tree-id3505 . -28) (undo-tree-id3506 . -27) (undo-tree-id3507 . -27) (undo-tree-id3508 . -27) (undo-tree-id3509 . -3) (undo-tree-id3510 . -3) (undo-tree-id3511 . -3) (undo-tree-id3512 . -4) (undo-tree-id3513 . -4) (undo-tree-id3514 . -4) (undo-tree-id3515 . -23) (undo-tree-id3516 . -23) (undo-tree-id3517 . -23) (undo-tree-id3518 . -22) (undo-tree-id3519 . -29) 7377) nil (25720 35911 382128 234000) 0 nil])
nil
([nil nil ((7359 . 7364) (7354 . 7359) 7294) nil (25720 35911 382074 871000) 0 nil])
([nil nil ((#("    first
" 0 9 (fontified t) 9 10 (fontified t)) . 7355) (undo-tree-id3466 . 1) (undo-tree-id3467 . -9) (undo-tree-id3468 . -10) (undo-tree-id3469 . -10) (undo-tree-id3470 . -10) (undo-tree-id3471 . -10) (undo-tree-id3472 . -10) (undo-tree-id3473 . -10) (undo-tree-id3474 . -10) (undo-tree-id3475 . -10) (undo-tree-id3476 . -10) (undo-tree-id3477 . -10) (undo-tree-id3478 . -10) (undo-tree-id3479 . -10) (undo-tree-id3480 . -10) (undo-tree-id3481 . -10) (undo-tree-id3482 . -10) (undo-tree-id3483 . -10) (undo-tree-id3484 . -10) (undo-tree-id3485 . -10) (undo-tree-id3486 . -10) (undo-tree-id3487 . -10) (undo-tree-id3488 . -10) (undo-tree-id3489 . -10) (undo-tree-id3490 . -10) (undo-tree-id3491 . -8) (undo-tree-id3492 . -10) 7363) nil (25720 35911 382067 355000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -7359) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (#("i" 0 1 (fontified t)) . -7360) (undo-tree-id3456 . -1) (#("r" 0 1 (fontified t)) . -7361) (undo-tree-id3457 . -1) (#("s" 0 1 (fontified t)) . -7362) (undo-tree-id3458 . -1) (#("t" 0 1 (fontified t)) . -7363) (undo-tree-id3459 . -1) (#("E" 0 1 (fontified t)) . -7364) (undo-tree-id3460 . -1) (#("l" 0 1 (fontified t)) . -7365) (undo-tree-id3461 . -1) (#("e" 0 1 (fontified t)) . -7366) (undo-tree-id3462 . -1) 7367 (7359 . 7367) (#("d" 0 1 (fontified t)) . -7359) (undo-tree-id3463 . -1) (#("i" 0 1 (fontified t)) . -7360) (undo-tree-id3464 . -1) (#("e" 0 1 (fontified t)) . -7361) (undo-tree-id3465 . -1) 7362 (7359 . 7362) (7354 . 7359) 7286) nil (25720 35911 381996 119000) 0 nil])
([nil nil ((7521 . 7522) (#("." 0 1 (fontified t)) . -7521) (undo-tree-id0 . -1) 7522 (7521 . 7522) (#("," 0 1 (fontified t)) . -7521) (undo-tree-id1 . -1) 7522 (7521 . 7522) (7515 . 7521) (7497 . 7515) (7492 . 7497) (7471 . 7492) (7455 . 7471) (#("f" 0 1 (fontified t)) . -7455) (undo-tree-id2 . -1) 7456 (7455 . 7456) (#(" " 0 1 (fontified t)) . -7455) (undo-tree-id3 . -1) (#("f" 0 1 (fontified t)) . -7456) (undo-tree-id4 . -1) 7457 (7452 . 7457) (#("t" 0 1 (fontified t)) . -7452) (undo-tree-id5 . -1) (#("e" 0 1 (fontified t)) . -7453) (undo-tree-id6 . -1) (#(" " 0 1 (fontified t)) . -7454) (undo-tree-id7 . -1) (#("f" 0 1 (fontified t)) . -7455) (undo-tree-id8 . -1) (#("u" 0 1 (fontified t)) . -7456) (undo-tree-id9 . -1) 7457 (7436 . 7457) (7435 . 7436) (7414 . 7435) (#("h" 0 1 (fontified t)) . -7414) (undo-tree-id10 . -1) (#("t" 0 1 (fontified t)) . -7415) (undo-tree-id11 . -1) (#("m" 0 1 (fontified t)) . -7416) (undo-tree-id12 . -1) (#("l" 0 1 (fontified t)) . -7417) (undo-tree-id13 . -1) 7418 (7407 . 7418) (7406 . 7407) (7394 . 7406) (#(" " 0 1 (fontified t)) . -7394) (undo-tree-id14 . -1) 7395 (7393 . 7395) (7372 . 7393) (7367 . 7372) (#("t" 0 1 (fontified t)) . -7367) (undo-tree-id15 . -1) 7368 (7367 . 7368) (#("t" 0 1 (fontified t)) . -7367) (undo-tree-id16 . -1) 7368 (7357 . 7368) (#("t" 0 1 (fontified t)) . -7357) (undo-tree-id17 . -1) (#("h" 0 1 (fontified t)) . -7358) (undo-tree-id18 . -1) (#("e" 0 1 (fontified t)) . -7359) (undo-tree-id19 . -1) (#(" " 0 1 (fontified t)) . -7360) (undo-tree-id20 . -1) 7361 (7357 . 7361) (t 25720 35911 400939 635000)) nil (25720 37707 955508 704000) 0 nil])
([nil nil ((7543 . 7545) (7537 . 7543) (#("x" 0 1 (fontified t)) . -7537) (undo-tree-id928 . -1) (#("a" 0 1 (fontified t)) . -7538) (undo-tree-id929 . -1) 7539 (7522 . 7539) (t 25720 37708 6833 980000)) nil (25720 37787 486746 641000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7544 . 7545) (#("
" 0 1 (fontified nil face org-block-begin-line font-lock-multiline t font-lock-fontified t)) . -7591) (7544 . 7592)) nil (25720 37787 486724 850000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7594 . 7595) (#("
" 0 1 (fontified nil face org-block-begin-line font-lock-multiline t font-lock-fontified t)) . -7641) (7594 . 7642) 7592) nil (25720 37787 486716 641000) 0 nil])
([nil nil ((7597 . 7600) (#("BEGIN" 0 5 (fontified t font-lock-fontified t)) . 7597) (undo-tree-id926 . -1) (undo-tree-id927 . -4) 7598) nil (25720 37787 486706 899000) 0 nil])
([nil nil ((#(" html :tangle creating_a_node.html " 0 35 (face org-block-end-line font-lock-multiline t fontified t font-lock-fontified t)) . 7604) (undo-tree-id924 . -34) (undo-tree-id925 . -35)) nil (25720 37787 486678 457000) 0 nil])
([nil nil ((7598 . 7599) (#("n" 0 1 (face org-block-end-line font-lock-multiline t fontified t font-lock-fontified t)) . 7598)) nil (25720 37787 486637 143000) 0 nil])
([nil nil ((7599 . 7600) (#("d" 0 1 (face org-block-end-line font-lock-multiline t fontified t font-lock-fontified t)) . 7599)) nil (25720 37787 486620 902000) 0 nil])
([nil nil ((7587 . 7604) (#(")" 0 1 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . -7587) (undo-tree-id21 . -1) (#("u" 0 1 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . -7588) (undo-tree-id22 . -1) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . -7589) (undo-tree-id23 . -1) (#("i" 0 1 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . -7590) (undo-tree-id24 . -1) (#("n" 0 1 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . -7591) (undo-tree-id25 . -1) 7592 (7591 . 7592) (7570 . 7591) (#("creating_a_node" 0 15 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . 7570) (undo-tree-id26 . -14) (undo-tree-id27 . -14) (undo-tree-id28 . -14) (undo-tree-id29 . -14) (undo-tree-id30 . -15) (undo-tree-id31 . -14) (undo-tree-id32 . -13) (undo-tree-id33 . -14) (undo-tree-id34 . -14) (undo-tree-id35 . -14) (undo-tree-id36 . -14) (undo-tree-id37 . -14) (undo-tree-id38 . -14) (undo-tree-id39 . -14) (undo-tree-id40 . -14) (undo-tree-id41 . -14) (undo-tree-id42 . -14) (undo-tree-id43 . -14) (undo-tree-id44 . -14) (undo-tree-id45 . -14) (undo-tree-id46 . -14) (undo-tree-id47 . -14) (undo-tree-id48 . -14) (undo-tree-id49 . -14) (undo-tree-id50 . -14) (undo-tree-id51 . -14) (undo-tree-id52 . -14) (undo-tree-id53 . -14) (undo-tree-id54 . -14) (undo-tree-id55 . -14) (undo-tree-id56 . -14) (undo-tree-id57 . -14) (undo-tree-id58 . -14) (undo-tree-id59 . -14) (undo-tree-id60 . -14) (undo-tree-id61 . -14) (undo-tree-id62 . -14) (undo-tree-id63 . -14) (undo-tree-id64 . -14) (undo-tree-id65 . -14) (undo-tree-id66 . -14) (undo-tree-id67 . -14) (undo-tree-id68 . -14) (undo-tree-id69 . -14) (undo-tree-id70 . -14) (undo-tree-id71 . -14) (undo-tree-id72 . -14) (undo-tree-id73 . -14) (undo-tree-id74 . -14) (undo-tree-id75 . -14) (undo-tree-id76 . -14) (undo-tree-id77 . -14) (undo-tree-id78 . -14) (undo-tree-id79 . -14) (undo-tree-id80 . -14) (undo-tree-id81 . -14) (undo-tree-id82 . -14) (undo-tree-id83 . -14) (undo-tree-id84 . -14) (undo-tree-id85 . -14) (undo-tree-id86 . -14) (undo-tree-id87 . -14) (undo-tree-id88 . -14) (undo-tree-id89 . -14) (undo-tree-id90 . -14) (undo-tree-id91 . -14) (undo-tree-id92 . -14) (undo-tree-id93 . -14) (undo-tree-id94 . -14) (undo-tree-id95 . -14) (undo-tree-id96 . -14) (undo-tree-id97 . -14) (undo-tree-id98 . -14) (undo-tree-id99 . -14) (undo-tree-id100 . -14) (undo-tree-id101 . -14) (undo-tree-id102 . -14) (undo-tree-id103 . -14) (undo-tree-id104 . -14) (undo-tree-id105 . -14) (undo-tree-id106 . -14) (undo-tree-id107 . -14) (undo-tree-id108 . -14) (undo-tree-id109 . -14) (undo-tree-id110 . -14) (undo-tree-id111 . -14) (undo-tree-id112 . -14) (undo-tree-id113 . -14) (undo-tree-id114 . -14) (undo-tree-id115 . -14) (undo-tree-id116 . -14) (undo-tree-id117 . -14) (undo-tree-id118 . -14) (undo-tree-id119 . -14) (undo-tree-id120 . -14) (undo-tree-id121 . -14) (undo-tree-id122 . -14) (undo-tree-id123 . -14) (undo-tree-id124 . -14) (undo-tree-id125 . -14) (undo-tree-id126 . -14) (undo-tree-id127 . -14) (undo-tree-id128 . -14) (undo-tree-id129 . -14) (undo-tree-id130 . -14) (undo-tree-id131 . -14) (undo-tree-id132 . -14) (undo-tree-id133 . -14) (undo-tree-id134 . -14) (undo-tree-id135 . -14) (undo-tree-id136 . -14) (undo-tree-id137 . -14) (undo-tree-id138 . -14) (undo-tree-id139 . -14) (undo-tree-id140 . -14) (undo-tree-id141 . -14) (undo-tree-id142 . -14) (undo-tree-id143 . -14) (undo-tree-id144 . -14) (undo-tree-id145 . -14) (undo-tree-id146 . -14) (undo-tree-id147 . -14) (undo-tree-id148 . -14) (undo-tree-id149 . -14) (undo-tree-id150 . -14) (undo-tree-id151 . -14) (undo-tree-id152 . -14) (undo-tree-id153 . -14) (undo-tree-id154 . -14) (undo-tree-id155 . -14) (undo-tree-id156 . -14) (undo-tree-id157 . -14) (undo-tree-id158 . -14) (undo-tree-id159 . -14) (undo-tree-id160 . -14) (undo-tree-id161 . -14) (undo-tree-id162 . -14) (undo-tree-id163 . -14) (undo-tree-id164 . -14) (undo-tree-id165 . -14) (undo-tree-id166 . -14) (undo-tree-id167 . -14) (undo-tree-id168 . -14) (undo-tree-id169 . -14) (undo-tree-id170 . -14) (undo-tree-id171 . -14) (undo-tree-id172 . -14) (undo-tree-id173 . -14) (undo-tree-id174 . -14) (undo-tree-id175 . -14) (undo-tree-id176 . -14) (undo-tree-id177 . -14) (undo-tree-id178 . -14) (undo-tree-id179 . -14) (undo-tree-id180 . -14) (undo-tree-id181 . -14) (undo-tree-id182 . -14) (undo-tree-id183 . -14) (undo-tree-id184 . -14) (undo-tree-id185 . -14) (undo-tree-id186 . -14) (undo-tree-id187 . -14) (undo-tree-id188 . -14) (undo-tree-id189 . -14) (undo-tree-id190 . -14) (undo-tree-id191 . -14) (undo-tree-id192 . -14) (undo-tree-id193 . -14) (undo-tree-id194 . -14) (undo-tree-id195 . -14) (undo-tree-id196 . -14) (undo-tree-id197 . -14) (undo-tree-id198 . -14) (undo-tree-id199 . -14) (undo-tree-id200 . -14) (undo-tree-id201 . -14) (undo-tree-id202 . -14) (undo-tree-id203 . -14) (undo-tree-id204 . -14) (undo-tree-id205 . -14) (undo-tree-id206 . -14) (undo-tree-id207 . -14) (undo-tree-id208 . -14) (undo-tree-id209 . -14) (undo-tree-id210 . -14) (undo-tree-id211 . -14) (undo-tree-id212 . -14) (undo-tree-id213 . -14) (undo-tree-id214 . -14) (undo-tree-id215 . -14) (undo-tree-id216 . -14) (undo-tree-id217 . -14) (undo-tree-id218 . -14) (undo-tree-id219 . -14) (undo-tree-id220 . -14) (undo-tree-id221 . -14) (undo-tree-id222 . -14) (undo-tree-id223 . -14) (undo-tree-id224 . -14) (undo-tree-id225 . -14) (undo-tree-id226 . -14) (undo-tree-id227 . -14) (undo-tree-id228 . -14) (undo-tree-id229 . -14) (undo-tree-id230 . -14) (undo-tree-id231 . -14) (undo-tree-id232 . -14) (undo-tree-id233 . -14) (undo-tree-id234 . -14) (undo-tree-id235 . -14) (undo-tree-id236 . -14) (undo-tree-id237 . -14) (undo-tree-id238 . -14) (undo-tree-id239 . -14) (undo-tree-id240 . -14) (undo-tree-id241 . -14) (undo-tree-id242 . -14) (undo-tree-id243 . -14) (undo-tree-id244 . -14) (undo-tree-id245 . -14) (undo-tree-id246 . -14) (undo-tree-id247 . -14) (undo-tree-id248 . -14) (undo-tree-id249 . -14) (undo-tree-id250 . -14) (undo-tree-id251 . -14) (undo-tree-id252 . -14) (undo-tree-id253 . -14) (undo-tree-id254 . -14) (undo-tree-id255 . -14) (undo-tree-id256 . -14) (undo-tree-id257 . -14) (undo-tree-id258 . -14) (undo-tree-id259 . -14) (undo-tree-id260 . -14) (undo-tree-id261 . -14) (undo-tree-id262 . -14) (undo-tree-id263 . -14) (undo-tree-id264 . -14) (undo-tree-id265 . -14) (undo-tree-id266 . -14) (undo-tree-id267 . -14) (undo-tree-id268 . -14) (undo-tree-id269 . -14) (undo-tree-id270 . -14) (undo-tree-id271 . -14) (undo-tree-id272 . -14) (undo-tree-id273 . -14) (undo-tree-id274 . -14) (undo-tree-id275 . -14) (undo-tree-id276 . -14) (undo-tree-id277 . -14) (undo-tree-id278 . -14) (undo-tree-id279 . -14) (undo-tree-id280 . -14) (undo-tree-id281 . -14) (undo-tree-id282 . -14) (undo-tree-id283 . -14) (undo-tree-id284 . -14) (undo-tree-id285 . -14) (undo-tree-id286 . -14) (undo-tree-id287 . -14) (undo-tree-id288 . -14) (undo-tree-id289 . -14) (undo-tree-id290 . -14) (undo-tree-id291 . -14) (undo-tree-id292 . -14) (undo-tree-id293 . -14) (undo-tree-id294 . -14) (undo-tree-id295 . -14) (undo-tree-id296 . -14) (undo-tree-id297 . -14) (undo-tree-id298 . -14) (undo-tree-id299 . -14) (undo-tree-id300 . -14) (undo-tree-id301 . -14) (undo-tree-id302 . -14) (undo-tree-id303 . -14) (undo-tree-id304 . -14) (undo-tree-id305 . -14) (undo-tree-id306 . -14) (undo-tree-id307 . -14) (undo-tree-id308 . -14) (undo-tree-id309 . -14) (undo-tree-id310 . -14) (undo-tree-id311 . -14) (undo-tree-id312 . -14) (undo-tree-id313 . -14) (undo-tree-id314 . -14) (undo-tree-id315 . -14) (undo-tree-id316 . -14) (undo-tree-id317 . -14) (undo-tree-id318 . -14) (undo-tree-id319 . -14) (undo-tree-id320 . -14) (undo-tree-id321 . -14) (undo-tree-id322 . -14) (undo-tree-id323 . -14) (undo-tree-id324 . -14) (undo-tree-id325 . -14) (undo-tree-id326 . -14) (undo-tree-id327 . -14) (undo-tree-id328 . -14) (undo-tree-id329 . -14) (undo-tree-id330 . -14) (undo-tree-id331 . -14) (undo-tree-id332 . -14) (undo-tree-id333 . -14) (undo-tree-id334 . -14) (undo-tree-id335 . -14) (undo-tree-id336 . -14) (undo-tree-id337 . -14) (undo-tree-id338 . -14) (undo-tree-id339 . -14) (undo-tree-id340 . -14) (undo-tree-id341 . -14) (undo-tree-id342 . -14) (undo-tree-id343 . -14) (undo-tree-id344 . -14) (undo-tree-id345 . -14) (undo-tree-id346 . -14) (undo-tree-id347 . -14) (undo-tree-id348 . -14) (undo-tree-id349 . -14) (undo-tree-id350 . -14) (undo-tree-id351 . -14) (undo-tree-id352 . -14) (undo-tree-id353 . -14) (undo-tree-id354 . -14) (undo-tree-id355 . -14) (undo-tree-id356 . -14) (undo-tree-id357 . -14) (undo-tree-id358 . -14) (undo-tree-id359 . -14) (undo-tree-id360 . -14) (undo-tree-id361 . -14) (undo-tree-id362 . -14) (undo-tree-id363 . -14) (undo-tree-id364 . -14) (undo-tree-id365 . -14) (undo-tree-id366 . -14) (undo-tree-id367 . -14) (undo-tree-id368 . -14) (undo-tree-id369 . -14) (undo-tree-id370 . -14) (undo-tree-id371 . -14) (undo-tree-id372 . -14) (undo-tree-id373 . -14) (undo-tree-id374 . -14) (undo-tree-id375 . -14) (undo-tree-id376 . -14) (undo-tree-id377 . -14) (undo-tree-id378 . -14) (undo-tree-id379 . -14) (undo-tree-id380 . -14) (undo-tree-id381 . -14) (undo-tree-id382 . -14) (undo-tree-id383 . -14) (undo-tree-id384 . -14) (undo-tree-id385 . -14) (undo-tree-id386 . -14) (undo-tree-id387 . -14) (undo-tree-id388 . -14) (undo-tree-id389 . -14) (undo-tree-id390 . -14) (undo-tree-id391 . -14) (undo-tree-id392 . -14) (undo-tree-id393 . -14) (undo-tree-id394 . -14) (undo-tree-id395 . -14) (undo-tree-id396 . -14) (undo-tree-id397 . -14) (undo-tree-id398 . -14) (undo-tree-id399 . -14) (undo-tree-id400 . -14) (undo-tree-id401 . -14) (undo-tree-id402 . -14) (undo-tree-id403 . -14) (undo-tree-id404 . -14) (undo-tree-id405 . -14) (undo-tree-id406 . -14) (undo-tree-id407 . -14) (undo-tree-id408 . -14) (undo-tree-id409 . -14) (undo-tree-id410 . -14) (undo-tree-id411 . -14) (undo-tree-id412 . -14) (undo-tree-id413 . -14) (undo-tree-id414 . -14) (undo-tree-id415 . -14) (undo-tree-id416 . -14) (undo-tree-id417 . -14) (undo-tree-id418 . -14) (undo-tree-id419 . -14) (undo-tree-id420 . -14) (undo-tree-id421 . -14) (undo-tree-id422 . -14) (undo-tree-id423 . -14) (undo-tree-id424 . -14) (undo-tree-id425 . -14) (undo-tree-id426 . -14) (undo-tree-id427 . -14) (undo-tree-id428 . -14) (undo-tree-id429 . -14) (undo-tree-id430 . -14) (undo-tree-id431 . -14) (undo-tree-id432 . -14) (undo-tree-id433 . -14) (undo-tree-id434 . -14) (undo-tree-id435 . -14) (undo-tree-id436 . -14) (undo-tree-id437 . -14) (undo-tree-id438 . -14) (undo-tree-id439 . -14) (undo-tree-id440 . -14) (undo-tree-id441 . -14) (undo-tree-id442 . -14) (undo-tree-id443 . -14) (undo-tree-id444 . -14) (undo-tree-id445 . -14) (undo-tree-id446 . -14) (undo-tree-id447 . -14) (undo-tree-id448 . -14) (undo-tree-id449 . -14) (undo-tree-id450 . -14) (undo-tree-id451 . -14) (undo-tree-id452 . -14) (undo-tree-id453 . -14) (undo-tree-id454 . -14) (undo-tree-id455 . -14) (undo-tree-id456 . -14) (undo-tree-id457 . -14) (undo-tree-id458 . -14) (undo-tree-id459 . -14) (undo-tree-id460 . -14) (undo-tree-id461 . -14) (undo-tree-id462 . -14) (undo-tree-id463 . -14) (undo-tree-id464 . -14) (undo-tree-id465 . -14) (undo-tree-id466 . -14) (undo-tree-id467 . -14) (undo-tree-id468 . -14) (undo-tree-id469 . -14) (undo-tree-id470 . -14) (undo-tree-id471 . -14) (undo-tree-id472 . -14) (undo-tree-id473 . -14) (undo-tree-id474 . -14) (undo-tree-id475 . -14) (undo-tree-id476 . -14) (undo-tree-id477 . -14) (undo-tree-id478 . -14) (undo-tree-id479 . -14) (undo-tree-id480 . -14) (undo-tree-id481 . -14) (undo-tree-id482 . -14) (undo-tree-id483 . -14) (undo-tree-id484 . -14) (undo-tree-id485 . -14) (undo-tree-id486 . -14) (undo-tree-id487 . -14) (undo-tree-id488 . -14) (undo-tree-id489 . -14) (undo-tree-id490 . -14) (undo-tree-id491 . -14) (undo-tree-id492 . -14) (undo-tree-id493 . -14) (undo-tree-id494 . -14) (undo-tree-id495 . -14) (undo-tree-id496 . -14) (undo-tree-id497 . -14) (undo-tree-id498 . -14) (undo-tree-id499 . -14) (undo-tree-id500 . -14) (undo-tree-id501 . -14) (undo-tree-id502 . -14) (undo-tree-id503 . -14) (undo-tree-id504 . -14) (undo-tree-id505 . -14) (undo-tree-id506 . -14) (undo-tree-id507 . -14) (undo-tree-id508 . -14) (undo-tree-id509 . -14) (undo-tree-id510 . -14) (undo-tree-id511 . -14) (undo-tree-id512 . -14) (undo-tree-id513 . -14) (undo-tree-id514 . -14) (undo-tree-id515 . -14) (undo-tree-id516 . -14) (undo-tree-id517 . -14) (undo-tree-id518 . -14) (undo-tree-id519 . -14) (undo-tree-id520 . -14) (undo-tree-id521 . -14) (undo-tree-id522 . -14) (undo-tree-id523 . -14) (undo-tree-id524 . -14) (undo-tree-id525 . -14) (undo-tree-id526 . -14) (undo-tree-id527 . -14) (undo-tree-id528 . -14) (undo-tree-id529 . -14) (undo-tree-id530 . -14) (undo-tree-id531 . -14) (undo-tree-id532 . -14) (undo-tree-id533 . -14) (undo-tree-id534 . -14) (undo-tree-id535 . -14) (undo-tree-id536 . -14) (undo-tree-id537 . -14) (undo-tree-id538 . -14) (undo-tree-id539 . -14) (undo-tree-id540 . -14) (undo-tree-id541 . -14) (undo-tree-id542 . -14) (undo-tree-id543 . -14) (undo-tree-id544 . -14) (undo-tree-id545 . -14) (undo-tree-id546 . -14) (undo-tree-id547 . -14) (undo-tree-id548 . -14) (undo-tree-id549 . -14) (undo-tree-id550 . -14) (undo-tree-id551 . -14) (undo-tree-id552 . -14) (undo-tree-id553 . -14) (undo-tree-id554 . -14) (undo-tree-id555 . -14) (undo-tree-id556 . -14) (undo-tree-id557 . -14) (undo-tree-id558 . -14) (undo-tree-id559 . -14) (undo-tree-id560 . -14) (undo-tree-id561 . -14) (undo-tree-id562 . -14) (undo-tree-id563 . -14) (undo-tree-id564 . -14) (undo-tree-id565 . -14) (undo-tree-id566 . -14) (undo-tree-id567 . -14) (undo-tree-id568 . -14) (undo-tree-id569 . -14) (undo-tree-id570 . -14) (undo-tree-id571 . -14) (undo-tree-id572 . -14) (undo-tree-id573 . -14) (undo-tree-id574 . -14) (undo-tree-id575 . -14) (undo-tree-id576 . -14) (undo-tree-id577 . -14) (undo-tree-id578 . -14) (undo-tree-id579 . -14) (undo-tree-id580 . -14) (undo-tree-id581 . -14) (undo-tree-id582 . -14) (undo-tree-id583 . -14) (undo-tree-id584 . -14) (undo-tree-id585 . -14) (undo-tree-id586 . -14) (undo-tree-id587 . -14) (undo-tree-id588 . -14) (undo-tree-id589 . -14) (undo-tree-id590 . -14) (undo-tree-id591 . -14) (undo-tree-id592 . -14) (undo-tree-id593 . -14) (undo-tree-id594 . -14) (undo-tree-id595 . -14) (undo-tree-id596 . -14) (undo-tree-id597 . -14) (undo-tree-id598 . -14) (undo-tree-id599 . -15) (undo-tree-id600 . -14) (undo-tree-id601 . -14) (undo-tree-id602 . -14) (undo-tree-id603 . -14) (undo-tree-id604 . -14) (undo-tree-id605 . -14) (undo-tree-id606 . -14) (undo-tree-id607 . -14) (undo-tree-id608 . -14) (undo-tree-id609 . -14) (undo-tree-id610 . -14) (undo-tree-id611 . -14) (undo-tree-id612 . -14) (undo-tree-id613 . -14) (undo-tree-id614 . -14) (undo-tree-id615 . -14) (undo-tree-id616 . -14) (undo-tree-id617 . -14) (undo-tree-id618 . -14) (undo-tree-id619 . -14) (undo-tree-id620 . -14) (undo-tree-id621 . -14) (undo-tree-id622 . -14) (undo-tree-id623 . -14) (undo-tree-id624 . -14) (undo-tree-id625 . -14) (undo-tree-id626 . -14) (undo-tree-id627 . -14) (undo-tree-id628 . -14) (undo-tree-id629 . -14) (undo-tree-id630 . -14) (undo-tree-id631 . -14) (undo-tree-id632 . -14) (undo-tree-id633 . -14) (undo-tree-id634 . -14) (undo-tree-id635 . -14) (undo-tree-id636 . -14) (undo-tree-id637 . -14) (undo-tree-id638 . -14) (undo-tree-id639 . -14) (undo-tree-id640 . -14) (undo-tree-id641 . -14) (undo-tree-id642 . -14) (undo-tree-id643 . -14) (undo-tree-id644 . -14) (undo-tree-id645 . -14) (undo-tree-id646 . -14) (undo-tree-id647 . -14) (undo-tree-id648 . -14) (undo-tree-id649 . -14) (undo-tree-id650 . -14) (undo-tree-id651 . -14) (undo-tree-id652 . -14) (undo-tree-id653 . -14) (undo-tree-id654 . -14) (undo-tree-id655 . -14) (undo-tree-id656 . -14) (undo-tree-id657 . -14) (undo-tree-id658 . -14) (undo-tree-id659 . -14) (undo-tree-id660 . -14) (undo-tree-id661 . -14) (undo-tree-id662 . -14) (undo-tree-id663 . -14) (undo-tree-id664 . -14) (undo-tree-id665 . -14) (undo-tree-id666 . -14) (undo-tree-id667 . -14) (undo-tree-id668 . -14) (undo-tree-id669 . -14) (undo-tree-id670 . -14) (undo-tree-id671 . -14) (undo-tree-id672 . -14) (undo-tree-id673 . -14) (undo-tree-id674 . -14) (undo-tree-id675 . -14) (undo-tree-id676 . -14) (undo-tree-id677 . -14) (undo-tree-id678 . -14) (undo-tree-id679 . -14) (undo-tree-id680 . -14) (undo-tree-id681 . -14) (undo-tree-id682 . -14) (undo-tree-id683 . -14) (undo-tree-id684 . -14) (undo-tree-id685 . -14) (undo-tree-id686 . -14) (undo-tree-id687 . -14) (undo-tree-id688 . -14) (undo-tree-id689 . -14) (undo-tree-id690 . -14) (undo-tree-id691 . -14) (undo-tree-id692 . -14) (undo-tree-id693 . -14) (undo-tree-id694 . -14) (undo-tree-id695 . -14) (undo-tree-id696 . -14) (undo-tree-id697 . -14) (undo-tree-id698 . -14) (undo-tree-id699 . -14) (undo-tree-id700 . -14) (undo-tree-id701 . -14) (undo-tree-id702 . -14) (undo-tree-id703 . -14) (undo-tree-id704 . -14) (undo-tree-id705 . -14) (undo-tree-id706 . -14) (undo-tree-id707 . -14) (undo-tree-id708 . -14) (undo-tree-id709 . -14) (undo-tree-id710 . -14) (undo-tree-id711 . -14) (undo-tree-id712 . -14) (undo-tree-id713 . -14) (undo-tree-id714 . -14) (undo-tree-id715 . -14) (undo-tree-id716 . -14) (undo-tree-id717 . -14) (undo-tree-id718 . -14) (undo-tree-id719 . -14) (undo-tree-id720 . -14) (undo-tree-id721 . -14) (undo-tree-id722 . -14) (undo-tree-id723 . -14) (undo-tree-id724 . -14) (undo-tree-id725 . -14) (undo-tree-id726 . -14) (undo-tree-id727 . -14) (undo-tree-id728 . -14) (undo-tree-id729 . -14) (undo-tree-id730 . -14) (undo-tree-id731 . -14) (undo-tree-id732 . -14) (undo-tree-id733 . -14) (undo-tree-id734 . -14) (undo-tree-id735 . -14) (undo-tree-id736 . -14) (undo-tree-id737 . -14) (undo-tree-id738 . -14) (undo-tree-id739 . -14) (undo-tree-id740 . -14) (undo-tree-id741 . -14) (undo-tree-id742 . -14) (undo-tree-id743 . -14) (undo-tree-id744 . -14) (undo-tree-id745 . -14) (undo-tree-id746 . -14) (undo-tree-id747 . -14) (undo-tree-id748 . -14) (undo-tree-id749 . -14) (undo-tree-id750 . -14) (undo-tree-id751 . -14) (undo-tree-id752 . -14) (undo-tree-id753 . -14) (undo-tree-id754 . -14) (undo-tree-id755 . -14) (undo-tree-id756 . -14) (undo-tree-id757 . -14) (undo-tree-id758 . -14) (undo-tree-id759 . -14) (undo-tree-id760 . -14) (undo-tree-id761 . -14) (undo-tree-id762 . -14) (undo-tree-id763 . -14) (undo-tree-id764 . -14) (undo-tree-id765 . -14) (undo-tree-id766 . -14) (undo-tree-id767 . -14) (undo-tree-id768 . -14) (undo-tree-id769 . -14) (undo-tree-id770 . -14) (undo-tree-id771 . -14) (undo-tree-id772 . -14) (undo-tree-id773 . -14) (undo-tree-id774 . -14) (undo-tree-id775 . -14) (undo-tree-id776 . -14) (undo-tree-id777 . -14) (undo-tree-id778 . -14) (undo-tree-id779 . -14) (undo-tree-id780 . -14) (undo-tree-id781 . -14) (undo-tree-id782 . -14) (undo-tree-id783 . -14) (undo-tree-id784 . -14) (undo-tree-id785 . -14) (undo-tree-id786 . -14) (undo-tree-id787 . -14) (undo-tree-id788 . -14) (undo-tree-id789 . -14) (undo-tree-id790 . -14) (undo-tree-id791 . -14) (undo-tree-id792 . -14) (undo-tree-id793 . -14) (undo-tree-id794 . -14) (undo-tree-id795 . -14) (undo-tree-id796 . -14) (undo-tree-id797 . -14) (undo-tree-id798 . -14) (undo-tree-id799 . -14) (undo-tree-id800 . -14) (undo-tree-id801 . -14) (undo-tree-id802 . -14) (undo-tree-id803 . -14) (undo-tree-id804 . -14) (undo-tree-id805 . -14) (undo-tree-id806 . -14) (undo-tree-id807 . -14) (undo-tree-id808 . -14) (undo-tree-id809 . -14) (undo-tree-id810 . -14) (undo-tree-id811 . -14) (undo-tree-id812 . -14) (undo-tree-id813 . -14) (undo-tree-id814 . -14) (undo-tree-id815 . -14) (undo-tree-id816 . -14) (undo-tree-id817 . -14) (undo-tree-id818 . -14) (undo-tree-id819 . -14) (undo-tree-id820 . -14) (undo-tree-id821 . -14) (undo-tree-id822 . -14) (undo-tree-id823 . -14) (undo-tree-id824 . -14) (undo-tree-id825 . -14) (undo-tree-id826 . -14) (undo-tree-id827 . -14) (undo-tree-id828 . -14) (undo-tree-id829 . -14) (undo-tree-id830 . -14) (undo-tree-id831 . -14) (undo-tree-id832 . -14) (undo-tree-id833 . -14) (undo-tree-id834 . -14) (undo-tree-id835 . -14) (undo-tree-id836 . -14) (undo-tree-id837 . -14) (undo-tree-id838 . -14) (undo-tree-id839 . -14) (undo-tree-id840 . -14) (undo-tree-id841 . -14) (undo-tree-id842 . -14) (undo-tree-id843 . -14) (undo-tree-id844 . -14) (undo-tree-id845 . -14) (undo-tree-id846 . -14) (undo-tree-id847 . -14) (undo-tree-id848 . -14) (undo-tree-id849 . -14) (undo-tree-id850 . -14) (undo-tree-id851 . -14) (undo-tree-id852 . -14) (undo-tree-id853 . -14) (undo-tree-id854 . -14) (undo-tree-id855 . -14) (undo-tree-id856 . -14) (undo-tree-id857 . -14) (undo-tree-id858 . -14) (undo-tree-id859 . -14) (undo-tree-id860 . -14) (undo-tree-id861 . -14) (undo-tree-id862 . -14) (undo-tree-id863 . -14) (undo-tree-id864 . -14) (undo-tree-id865 . -14) (undo-tree-id866 . -14) (undo-tree-id867 . -14) (undo-tree-id868 . -14) (undo-tree-id869 . -14) (undo-tree-id870 . -14) (undo-tree-id871 . -14) (undo-tree-id872 . -14) (undo-tree-id873 . -14) (undo-tree-id874 . -14) (undo-tree-id875 . -14) (undo-tree-id876 . -14) (undo-tree-id877 . -14) (undo-tree-id878 . -14) (undo-tree-id879 . -14) (undo-tree-id880 . -14) (undo-tree-id881 . -14) (undo-tree-id882 . -14) (undo-tree-id883 . -14) (undo-tree-id884 . -14) (undo-tree-id885 . -14) (undo-tree-id886 . -14) (undo-tree-id887 . -14) (undo-tree-id888 . -14) (undo-tree-id889 . -14) (undo-tree-id890 . -14) (undo-tree-id891 . -14) (undo-tree-id892 . -14) (undo-tree-id893 . -14) (undo-tree-id894 . -14) (undo-tree-id895 . -14) (undo-tree-id896 . -14) (undo-tree-id897 . -14) (undo-tree-id898 . -14) (undo-tree-id899 . -14) (undo-tree-id900 . -14) (undo-tree-id901 . -14) (undo-tree-id902 . -14) (undo-tree-id903 . -14) (undo-tree-id904 . -14) (undo-tree-id905 . -14) (undo-tree-id906 . -14) (undo-tree-id907 . -14) (undo-tree-id908 . -14) (undo-tree-id909 . -14) (undo-tree-id910 . -14) (undo-tree-id911 . -14) (undo-tree-id912 . -14) (undo-tree-id913 . -14) (undo-tree-id914 . -14) (undo-tree-id915 . -14) (undo-tree-id916 . -14) (undo-tree-id917 . -14) (undo-tree-id918 . -14) (undo-tree-id919 . -14) (undo-tree-id920 . -14) (undo-tree-id921 . -14) (undo-tree-id922 . -15) (undo-tree-id923 . -15) 7584) nil (25720 37787 485796 217000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7758 . 7759) (nil fontified nil 7612 . 7759) (7612 . 7759) 7611 (t 25720 37787 531853 803000)) nil (25720 38029 412523 151000) 0 nil])
([nil nil ((7760 . 7761) 7758) nil (25720 38029 412514 852000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7936 . 7937) (nil fontified nil 7761 . 7937) (7761 . 7937)) nil (25720 38029 412509 264000) 0 nil])
([nil nil ((7760 . 7761) 7757) nil (25720 38029 412503 106000) 0 nil])
([nil nil ((#("
/* logs
<div id=\"A\"><strong>Hi</strong></div>
<div id=\"B\" class=\"new\">Whats Shaking</div>
<span id=\"C\">dude</span>
<div id=\"D\">Keep it</div>
real!
*/

" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1 10 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 10 13 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 13 14 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 14 16 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 16 17 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 17 20 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 20 22 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 22 28 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 28 29 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 29 31 (face (bold org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 31 33 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 33 39 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 39 42 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 42 45 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 45 48 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 48 51 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 51 52 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 52 54 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 54 55 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 55 58 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 58 59 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 59 64 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 64 65 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 65 70 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 70 86 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 86 89 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 89 92 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 92 96 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 96 97 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 97 99 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 99 100 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 100 103 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 103 110 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 110 114 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 114 117 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 117 120 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 120 121 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 121 123 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 123 124 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 124 127 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 127 137 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 137 140 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 140 152 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 7761) (undo-tree-id972 . -151) (undo-tree-id973 . -152) (undo-tree-id974 . -151) (undo-tree-id975 . 152) (undo-tree-id976 . -151) (undo-tree-id977 . -151) (undo-tree-id978 . -151) (undo-tree-id979 . -151) 7912) nil (25720 38029 412495 746000) 0 nil])
([nil nil ((7760 . 7761) 7751) nil (25720 38029 412457 708000) 0 nil])
([nil nil ((7760 . 7761) 7751) nil (25720 38029 412451 384000) 0 nil])
([nil nil ((7860 . 7861) (#("l" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7860) (undo-tree-id961 . -1) 7861 (7855 . 7861) (7843 . 7855) (7836 . 7843) (#("b" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7836) (undo-tree-id962 . -1) 7837 (7825 . 7837) (#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -7825) (7825 . 7826) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -7825) (7825 . 7826) (#("g" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . -7825) (7825 . 7826) (7821 . 7825) (7820 . 7821) (#("c" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7820) (undo-tree-id963 . -1) (#("u" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7821) (undo-tree-id964 . -1) (#("m" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7822) (undo-tree-id965 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7823) (undo-tree-id966 . -1) (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7824) (undo-tree-id967 . -1) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7825) (undo-tree-id968 . -1) (#("." 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7826) (undo-tree-id969 . -1) (#("g" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7827) (undo-tree-id970 . -1) 7828 (7826 . 7828) (7820 . 7826) (7817 . 7820) (7816 . 7817) (7812 . 7816) (7805 . 7812) (7784 . 7805) (7763 . 7784) (#("/" 0 1 (face (org-block) org-emphasis t font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7763) (undo-tree-id971 . -1) 7764 (7761 . 7764)) nil (25720 38029 412420 546000) 0 nil])
([nil nil ((7869 . 7876) (#("S" 0 1 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7869) (undo-tree-id956 . -1) (#("t" 0 1 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7870) (undo-tree-id957 . -1) (#("r" 0 1 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7871) (undo-tree-id958 . -1) 7872 (7863 . 7872) (#("p" 0 1 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7863) (undo-tree-id959 . -1) 7864 (7863 . 7864) (#("i" 0 1 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7863) (undo-tree-id960 . -1) 7864 (7859 . 7864)) nil (25720 38029 410366 333000) 0 nil])
([nil nil ((7867 . 7869) (#("h" 0 1 (face (bold org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7867) (undo-tree-id954 . -1) (#("i" 0 1 (face (bold org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7868) (undo-tree-id955 . -1) 7869 (7867 . 7869)) nil (25720 38029 410321 426000) 0 nil])
([nil nil ((#("/" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7882) (undo-tree-id952 . -1) (#("/" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7883) (undo-tree-id953 . -1) 7884 (7882 . 7884) (7881 . 7882) 7881) nil (25720 38029 409704 615000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7977 . 7978) (nil fontified nil 7882 . 7978) (7882 . 7978)) nil (25720 38029 409683 718000) 0 nil])
([nil nil ((#("k" 0 1 (face org-level-2 fontified t)) . -8366) (undo-tree-id948 . -1) 8367 (8366 . 8367) (8360 . 8366) (7993 . 7994) (7992 . 7993) (#("E" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7992) (undo-tree-id949 . -1) 7993 (7992 . 7993) (7990 . 7992) (7986 . 7990) (7983 . 7986) (7982 . 7983) (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7982) (undo-tree-id950 . -1) 7983 (7982 . 7983) (#("." 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7982) (undo-tree-id951 . -1) 7983 (7978 . 7983)) nil (25720 38029 409666 750000) 0 nil])
([nil nil ((8015 . 8016) (8006 . 8015) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8006) (undo-tree-id932 . -1) 8007 (8004 . 8007) (#(")" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8004) (undo-tree-id933 . -1) 8005 (8001 . 8005) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8001) (undo-tree-id934 . -1) 8002 (7997 . 8002) (7994 . 7997) (#("m" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -7994) (7990 . 7995) (7987 . 7990) (#("c" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7987) (undo-tree-id935 . -1) (#("r" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -7988) (undo-tree-id936 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7989) (undo-tree-id937 . -1) (#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7990) (undo-tree-id938 . -1) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7991) (undo-tree-id939 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7992) (undo-tree-id940 . -1) (#("E" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7993) (undo-tree-id941 . -1) (#("l" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7994) (undo-tree-id942 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7995) (undo-tree-id943 . -1) (#("m" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7996) (undo-tree-id944 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7997) (undo-tree-id945 . -1) (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7998) (undo-tree-id946 . -1) (#("t" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -7999) (undo-tree-id947 . -1) 8000 (7995 . 8000) (7994 . 7995)) nil (25720 38029 409596 687000) 0 nil])
([nil nil ((8007 . 8016) (#("innerHTML" 0 9 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 8007) (undo-tree-id930 . -3) (undo-tree-id931 . -8) 8010) nil (25720 38029 409069 576000) 0 nil])
([nil nil ((#(";" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8071) (undo-tree-id983 . -1) 8072 (8070 . 8072) (#("'" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8070) (undo-tree-id984 . -1) 8071 (8069 . 8071) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8069) (undo-tree-id985 . -1) 8070 (8056 . 8070) (8054 . 8056) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8054) (undo-tree-id986 . -1) 8055 (8051 . 8055) (8033 . 8051) (8026 . 8033) (8023 . 8026) (#("c" 0 1 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8023) (undo-tree-id987 . -1) 8024 (8020 . 8024) (#(";" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8020) (undo-tree-id988 . -1) 8021 (8020 . 8021) (#("'" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8020) (undo-tree-id989 . -1) 8021 (8016 . 8021) (t 25720 38029 466854 760000)) nil (25720 38553 445492 901000) 0 nil])
([nil nil ((8071 . 8072) 8070) nil (25720 38553 445466 641000) 0 nil])
([nil nil ((8072 . 8073) 8072) nil (25720 38553 445463 265000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8133 . 8134) (nil fontified nil 8073 . 8134) (8073 . 8134)) nil (25720 38553 445460 487000) 0 nil])
([nil nil ((8146 . 8157) (8142 . 8146) (8138 . 8142) (8134 . 8138)) nil (25720 38553 445457 191000) 0 nil])
([nil nil ((8146 . 8147) (#("e" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 8146)) nil (25720 38553 445453 406000) 0 nil])
([nil nil ((8155 . 8156) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 8155)) nil (25720 38553 445449 694000) 0 nil])
([nil nil ((8177 . 8184) (#(";" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8177) (undo-tree-id980 . -1) 8178 (8158 . 8178) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8158) (undo-tree-id981 . -1) (undo-tree-id982 . -1) 8159 (8158 . 8159) (8157 . 8158)) nil (25720 38553 445444 373000) 0 nil])
([nil nil ((8184 . 8185) 8183) nil (25720 38553 445413 522000) 0 nil])
([nil nil ((8185 . 8186) 8185) nil (25720 38553 445402 24000) 0 nil])
([nil nil ((#("'" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8054) (undo-tree-id992 . -1) 8055 (#("/" 0 1 (face (org-block) org-emphasis t font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8054) (undo-tree-id993 . -1) 8055 (8054 . 8055) (#("\\" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8054) (undo-tree-id994 . -1) 8055 (8054 . 8055) (t 25720 38553 468691 112000)) nil (25720 38627 916460 624000) 0 nil])
([nil nil ((8053 . 8054)) nil (25720 38627 916193 819000) 0 nil])
([nil nil ((#("." 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8053) (undo-tree-id990 . -1) (undo-tree-id991 . -1) 8054) nil (25720 38627 916183 177000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -21) (undo-tree-id1291 . -2) 23 (20 . 23) (t 25720 38627 943008 966000) 1) nil (25720 38691 727239 554000) 0 nil])
([nil nil ((2 . 18) (1 . 2) (1 . 2)) nil (25720 38691 727232 165000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -18) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (#("k" 0 1 (fontified t)) . -19) (undo-tree-id1289 . -1) (#("k" 0 1 (fontified t)) . -20) (undo-tree-id1290 . -1) 21 (19 . 21) (18 . 19) 17) nil (25720 38691 727226 242000) 0 nil])
([nil nil ((7 . 8) (#("-" 0 1 (face org-meta-line font-lock-fontified t fontified t)) . 7) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1)) nil (25720 38691 727162 696000) 0 nil])
([nil nil ((18 . 19) 7) nil (25720 38691 725687 854000) 0 nil])
([nil nil ((#(" " 0 1 (face org-meta-line font-lock-fontified t fontified t)) . 14) (t 25720 38691 748870 527000)) nil (25720 38705 676322 916000) 0 nil])
([nil nil ((8171 . 8172) (#("b" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 8171) (undo-tree-id1292 . -1) (t 25720 38705 697263 659000)) nil (25720 38762 730882 684000) 0 nil])
([nil nil ((8240 . 8241) (t 25720 38762 750824 435000)) nil (25720 38815 61402 81000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t font-lock-fontified t)) . -8241) (undo-tree-id1294 . -1) 8242 (8241 . 8242)) nil (25720 38815 61397 147000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t font-lock-fontified t)) . -8241) (undo-tree-id1293 . -1) 8242 (8241 . 8242)) nil (25720 38815 61952 709000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33 . 34) (nil fontified nil 18 . 34) (18 . 34)) nil (25720 38827 314661 375000) 0 nil] [nil nil ((nil rear-nonsticky nil 17 . 18) (nil fontified nil 2 . 18) (2 . 18) 1) ((#("#+auto_tangle: t" 0 15 (fontified nil) 15 16 (rear-nonsticky nil fontified nil)) . 2) (undo-tree-id1295 . -15) (undo-tree-id1296 . -15) (undo-tree-id1297 . -15) (undo-tree-id1298 . -15) (nil rear-nonsticky t 17 . 18)) (25720 38815 61130 908000) 0 nil])
([nil nil ((#("#+auto_tangle: t
" 0 1 (face org-meta-line font-lock-fontified t fontified t) 1 6 (face org-meta-line font-lock-fontified t fontified t) 6 7 (face org-meta-line font-lock-fontified t fontified t) 7 16 (face org-meta-line font-lock-fontified t fontified t) 16 17 (fontified t)) . 1) (undo-tree-id1302 . -16) (undo-tree-id1303 . -17) (undo-tree-id1304 . -17) (undo-tree-id1305 . -6) (undo-tree-id1306 . -15) (undo-tree-id1307 . -1) 16) nil (25720 38827 314656 845000) 0 nil])
nil
([nil nil ((17 . 18) 16) nil (25720 38827 314640 692000) 0 nil])
([nil nil ((18 . 19) 18) nil (25720 38827 314637 253000) 0 nil])
([nil nil ((19 . 20)) nil (25720 38827 314633 400000) 0 nil])
([nil nil ((#("i
" 0 1 (fontified t) 1 2 (fontified t)) . 19) (undo-tree-id1299 . 1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -2)) nil (25720 38827 314624 31000) 0 nil])
([nil nil ((8177 . 8178) (#("C" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 8177) (t 25720 38827 336507 287000)) nil (25720 38931 749689 326000) 0 nil])
([nil nil ((8177 . 8178) (#("c" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 8177) (8177 . 8178) (#("X" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 8177) (8177 . 8178) (#("D" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 8177) (t 25720 38931 771065 446000)) nil (25720 38964 911675 875000) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 8203) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1)) nil (25720 38964 911661 131000) 0 nil])
([nil nil ((8203 . 8204) (t 25720 38964 935840 912000) 8203) nil (25720 39094 593671 526000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8322 . 8323) (nil fontified nil 8203 . 8323) (8203 . 8323)) nil (25720 39094 593668 32000) 0 nil])
([nil nil ((8202 . 8203) 8201) nil (25720 39094 593664 668000) 0 nil])
([nil nil ((8376 . 8378) (8363 . 8376) (8352 . 8363) (#("(" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8352) (undo-tree-id1311 . -1) 8353 (8349 . 8353) (8339 . 8349) (#("m" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8339) (undo-tree-id1312 . -1) 8340 (8336 . 8340) (8333 . 8336) (8329 . 8333) (8325 . 8329) (8324 . 8325) 8264) nil (25720 39094 593658 333000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8462 . 8463) (nil fontified nil 8378 . 8463) (8378 . 8463)) nil (25720 39094 593424 880000) 0 nil])
([nil nil ((8479 . 8484) (8471 . 8479) (8467 . 8471) (8465 . 8467) (#("u" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8465) (undo-tree-id1310 . -1) 8466 (8465 . 8466) (8463 . 8465)) nil (25720 39094 593418 142000) 0 nil])
([nil nil ((8511 . 8512) (8491 . 8511) (8484 . 8491)) nil (25720 39094 593167 626000) 0 nil])
([nil nil ((8512 . 8513) 8510) nil (25720 39094 593154 401000) 0 nil])
([nil nil ((#("j" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8513) (undo-tree-id1322 . -1) 8514 (8513 . 8514) (t 25720 39094 614729 479000)) nil (25720 39149 814018 872000) 0 nil])
([nil nil ((8514 . 8515) 8514) nil (25720 39149 814012 598000) 0 nil])
([nil nil ((#("d" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7770) (undo-tree-id1318 . -1) (#("o" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7771) (undo-tree-id1319 . -1) (#("c" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7772) (undo-tree-id1320 . -1) (#("u" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -7773) (undo-tree-id1321 . -1) 7774 (7770 . 7774) (8525 . 8526) (8514 . 8525)) nil (25720 39149 814006 273000) 0 nil])
([nil nil ((8549 . 8551) (#("(" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8549) (undo-tree-id1313 . -1) (#("l" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8550) (undo-tree-id1314 . -1) 8551 (8540 . 8551) (8537 . 8540) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8537) (undo-tree-id1315 . -1) (#("y" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8538) (undo-tree-id1316 . -1) 8539 (8535 . 8539) (#("d" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8535) (undo-tree-id1317 . -1) 8536 (8526 . 8536)) nil (25720 39149 813760 947000) 0 nil])
([nil nil ((8551 . 8552) 8550) nil (25720 39149 813491 848000) 0 nil])
([nil nil ((#("j" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8552) (undo-tree-id1360 . -1) 8553 (8552 . 8553) (t 25720 39149 843899 407000)) nil (25720 39210 429253 984000) 0 nil])
([nil nil ((#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8552) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8553) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8554) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8555) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (#("r" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8556) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (#("T" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8557) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8558) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (#("x" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8559) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8560) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (#("n" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -8561) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) 8562 (nil fontified nil 8553 . 8562) (#("innerText" 0 9 (fontified nil)) . -8552) (8561 . 8571) 8561 (#("innerTextn" 0 10 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 8561) (undo-tree-id1343 . -10) (8552 . 8561) 8562 (nil fontified nil 8553 . 8562) (#("innerText" 0 9 (fontified nil)) . -8552) (8561 . 8571) 8561 (#("innerTextn" 0 10 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 8561) (undo-tree-id1344 . -10) (8552 . 8561) 8562 (nil fontified nil 8553 . 8562) (#("innerText" 0 9 (fontified nil)) . -8552) (8561 . 8571) 8561 (#("innerTextn" 0 10 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 8561) (undo-tree-id1345 . -10) (8552 . 8561) 8562 (nil fontified t 8553 . 8562) (nil font-lock-fontified t 8553 . 8562) (nil src-block t 8553 . 8562) (nil font-lock-multiline t 8553 . 8562) (nil face (org-block) 8553 . 8562) (#("innerText" 0 9 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8552) (8561 . 8571) 8561 (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8561) (undo-tree-id1346 . -1) 8562 (8561 . 8562) (nil fontified t 8552 . 8561) (nil font-lock-fontified t 8552 . 8561) (nil font-lock-multiline t 8552 . 8561) (nil face (org-block) 8552 . 8561) (nil src-block t 8552 . 8561) (#("innerHTML" 0 9 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -8552) (8561 . 8570) 8561 (nil fontified nil 8556 . 8561) (#("inner" 0 5 (fontified nil)) . -8552) (8557 . 8566) 8557 (#("innerText" 0 9 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 8557) (undo-tree-id1347 . -9) (8552 . 8557) 8561 (nil fontified t 8552 . 8561) (nil font-lock-fontified t 8552 . 8561) (nil font-lock-multiline t 8552 . 8561) (nil face (org-block) 8552 . 8561) (nil src-block t 8552 . 8561) (#("innerHTML" 0 9 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -8552) (8561 . 8570) 8561 (nil fontified nil 8556 . 8561) (#("inner" 0 5 (fontified nil)) . -8552) (8557 . 8566) 8557 (#("innerText" 0 9 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 8557) (undo-tree-id1348 . -9) (8552 . 8557) 8561 (nil fontified t 8552 . 8561) (nil font-lock-fontified t 8552 . 8561) (nil font-lock-multiline t 8552 . 8561) (nil face (org-block) 8552 . 8561) (nil src-block t 8552 . 8561) (#("innerHTML" 0 9 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -8552) (8561 . 8570) 8561 (nil fontified nil 8556 . 8561) (#("inner" 0 5 (fontified nil)) . -8552) (8557 . 8566) 8557 (#("innerText" 0 9 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 8557) (undo-tree-id1349 . -9) (8552 . 8557) 8561 (nil fontified t 8552 . 8561) (nil font-lock-fontified t 8552 . 8561) (nil font-lock-multiline t 8552 . 8561) (nil face (org-block) 8552 . 8561) (nil src-block t 8552 . 8561) (#("innerHTML" 0 9 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -8552) (8561 . 8570) 8561 (nil fontified nil 8556 . 8561) (#("inner" 0 5 (fontified nil)) . -8552) (8557 . 8566) 8557 (#("innerText" 0 9 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 8557) (undo-tree-id1350 . -9) (8552 . 8557) 8561 (nil fontified t 8552 . 8561) (nil font-lock-fontified t 8552 . 8561) (nil font-lock-multiline t 8552 . 8561) (nil face (org-block) 8552 . 8561) (nil src-block t 8552 . 8561) (#("innerHTML" 0 9 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -8552) (8561 . 8570) 8561 (nil fontified nil 8556 . 8561) (#("inner" 0 5 (fontified nil)) . -8552) (8557 . 8566) 8557 (#("innerText" 0 9 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 8557) (undo-tree-id1351 . -9) (8552 . 8557) 8561 (nil fontified t 8552 . 8561) (nil font-lock-fontified t 8552 . 8561) (nil font-lock-multiline t 8552 . 8561) (nil face (org-block) 8552 . 8561) (nil src-block t 8552 . 8561) (#("innerHTML" 0 9 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -8552) (8561 . 8570) 8561 (#("inner" 0 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8552) (8557 . 8566) 8557 (8553 . 8557) (8552 . 8553) (#("d" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8552) (undo-tree-id1352 . -1) (#("o" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8553) (undo-tree-id1353 . -1) (#("c" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8554) (undo-tree-id1354 . -1) (#("u" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8555) (undo-tree-id1355 . -1) (#("m" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8556) (undo-tree-id1356 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8557) (undo-tree-id1357 . -1) (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8558) (undo-tree-id1358 . -1) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -8559) (undo-tree-id1359 . -1) 8560 (8552 . 8560)) nil (25720 39210 429098 41000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8700 . 8701) (nil fontified nil 8552 . 8701) (8552 . 8701)) nil (25720 39210 428483 722000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8977) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) 8978 (8977 . 8978) (8965 . 8977) (8944 . 8965) (#("e" 0 1 (fontified t)) . -8944) (undo-tree-id2367 . -1) 8945 (8925 . 8945) (#("t" 0 1 (fontified t)) . -8925) (undo-tree-id2368 . -1) 8926 (8924 . 8926) (8918 . 8924) (#("s" 0 1 (fontified t)) . -8918) (undo-tree-id2369 . -1) 8919 (8915 . 8919) (8913 . 8915) (8898 . 8913) (#("s" 0 1 (fontified t)) . -8898) (undo-tree-id2370 . -1) (#("c" 0 1 (fontified t)) . -8899) (undo-tree-id2371 . -1) 8900 (8892 . 8900) (#(" " 0 1 (fontified t)) . -8892) (undo-tree-id2372 . -1) 8893 (8882 . 8893) (8866 . 8882) (#("u" 0 1 (fontified t)) . -8866) (undo-tree-id2373 . -1) (#("s" 0 1 (fontified t)) . -8867) (undo-tree-id2374 . -1) (#("e" 0 1 (fontified t)) . -8868) (undo-tree-id2375 . -1) 8869 (8860 . 8869) (8859 . 8860) (8855 . 8859) (#("t" 0 1 (fontified t)) . -8855) (undo-tree-id2376 . -1) 8856 (8836 . 8856) (#("=" 0 1 (fontified t)) . -8836) (undo-tree-id2377 . -1) 8837 (8836 . 8837) (8823 . 8836) (#("i" 0 1 (fontified t)) . -8823) (undo-tree-id2378 . -1) 8824 (8823 . 8824) (#("s" 0 1 (fontified t)) . -8823) (undo-tree-id2379 . -1) 8824 (8817 . 8824) (#("t" 0 1 (fontified t)) . -8817) (undo-tree-id2380 . -1) 8818 (8813 . 8818) (#("i" 0 1 (fontified t)) . -8813) (undo-tree-id2381 . -1) 8814 (8813 . 8814) (#(" " 0 1 (fontified t)) . -8813) (undo-tree-id2382 . -1) (#("o" 0 1 (fontified t)) . -8814) (undo-tree-id2383 . -1) (#("u" 0 1 (fontified t)) . -8815) (undo-tree-id2384 . -1) 8816 (8814 . 8816) (8813 . 8814) (8812 . 8813) (8808 . 8812) (#("g" 0 1 (fontified t font-lock-fontified t)) . -8808) (undo-tree-id2385 . -1) (#("a" 0 1 (fontified t font-lock-fontified t)) . -8809) (undo-tree-id2386 . -1) 8810 (8800 . 8810) (8797 . 8800) (8776 . 8797) (8755 . 8776) (#("h" 0 1 (fontified t font-lock-fontified t)) . -8755) (undo-tree-id2387 . -1) (#("e" 0 1 (fontified t font-lock-fontified t)) . -8756) (undo-tree-id2388 . -1) (#("r" 0 1 (fontified t font-lock-fontified t)) . -8757) (undo-tree-id2389 . -1) (#(" " 0 1 (fontified t font-lock-fontified t)) . -8758) (undo-tree-id2390 . -1) 8759 (8747 . 8759) (#("l" 0 1 (fontified t font-lock-fontified t)) . -8747) (undo-tree-id2391 . -1) 8748 (8739 . 8748) (t 25720 39210 449147 983000)) nil (25720 39582 27253 520000) 0 nil])
([nil nil ((8958 . 8969) (8952 . 8958) (#("k" 0 1 (fontified t)) . -8952) (undo-tree-id2359 . -1) 8953 (8939 . 8953) (#("e" 0 1 (fontified t)) . -8939) (undo-tree-id2360 . -1) 8940 (8936 . 8940) (#("i" 0 1 (fontified t)) . -8936) (undo-tree-id2361 . -1) (#("e" 0 1 (fontified t)) . -8937) (undo-tree-id2362 . -1) (#("l" 0 1 (fontified t)) . -8938) (undo-tree-id2363 . -1) 8939 (8935 . 8939) (8914 . 8935) (#("0" 0 1 (fontified t)) . -8914) (undo-tree-id2364 . -1) 8915 (8913 . 8915)) nil (25720 39582 27183 73000) 0 nil])
([nil nil ((9068 . 9088) (#("f" 0 1 (fontified t)) . -9068) (undo-tree-id2341 . -1) (#("u" 0 1 (fontified t)) . -9069) (undo-tree-id2342 . -1) (#("n" 0 1 (fontified t)) . -9070) (undo-tree-id2343 . -1) (#("c" 0 1 (fontified t)) . -9071) (undo-tree-id2344 . -1) (#("t" 0 1 (fontified t)) . -9072) (undo-tree-id2345 . -1) (#("i" 0 1 (fontified t)) . -9073) (undo-tree-id2346 . -1) (#("o" 0 1 (fontified t)) . -9074) (undo-tree-id2347 . -1) 9075 (9056 . 9075) (#("t" 0 1 (fontified t)) . -9056) (undo-tree-id2348 . -1) (#("e" 0 1 (fontified t)) . -9057) (undo-tree-id2349 . -1) (#("l" 0 1 (fontified t)) . -9058) (undo-tree-id2350 . -1) (#("e" 0 1 (fontified t)) . -9059) (undo-tree-id2351 . -1) 9060 (9047 . 9060) (#("i" 0 1 (fontified t)) . -9047) (undo-tree-id2352 . -1) (#("a" 0 1 (fontified t)) . -9048) (undo-tree-id2353 . -1) (#("s" 0 1 (fontified t)) . -9049) (undo-tree-id2354 . -1) 9050 (9048 . 9050) (#("a" 0 1 (fontified t)) . -9048) (undo-tree-id2355 . -1) 9049 (9041 . 9049) (#("f" 0 1 (fontified t)) . -9041) (undo-tree-id2356 . -1) 9042 (9033 . 9042) (#("0" 0 1 (fontified t)) . -9033) (undo-tree-id2357 . -1) 9034 (9033 . 9034) (#(" " 0 1 (fontified t)) . -9033) (undo-tree-id2358 . -1) 9034 (9033 . 9034)) nil (25720 39582 27159 125000) 0 nil])
([nil nil ((8939 . 8948) (#("v" 0 1 (fontified t)) . -8939) (undo-tree-id2338 . -1) 8940 (8935 . 8940) (#("delete" 0 6 (fontified t)) . 8935) (undo-tree-id2339 . -5) (undo-tree-id2340 . -4) 8939) nil (25720 39582 27114 501000) 0 nil])
([nil nil ((8963 . 8967) (8960 . 8963) (#("t" 0 1 (fontified t)) . -8960) (undo-tree-id2335 . -1) 8961 (8956 . 8961) (#("word" 0 4 (fontified t)) . 8956) (undo-tree-id2336 . -3) (undo-tree-id2337 . -1) 8957) nil (25720 39582 27105 377000) 0 nil])
([nil nil ((9068 . 9081) (#("w" 0 1 (fontified t)) . -9068) (undo-tree-id1942 . -1) (#("s" 0 1 (fontified t)) . -9069) (undo-tree-id1943 . -1) 9070 (9069 . 9070) (#("s" 0 1 (fontified t)) . -9069) (undo-tree-id1944 . -1) 9070 (9068 . 9070) (#("delete" 0 6 (fontified t)) . 9068) (undo-tree-id1945 . -5) (undo-tree-id1946 . -3) (undo-tree-id1947 . -6) (undo-tree-id1948 . -6) (undo-tree-id1949 . -6) (undo-tree-id1950 . -6) (undo-tree-id1951 . -6) (undo-tree-id1952 . -6) (undo-tree-id1953 . -6) (undo-tree-id1954 . -6) (undo-tree-id1955 . -6) (undo-tree-id1956 . -6) (undo-tree-id1957 . -6) (undo-tree-id1958 . -6) (undo-tree-id1959 . -6) (undo-tree-id1960 . -6) (undo-tree-id1961 . -6) (undo-tree-id1962 . -6) (undo-tree-id1963 . -6) (undo-tree-id1964 . -6) (undo-tree-id1965 . -6) (undo-tree-id1966 . -6) (undo-tree-id1967 . -6) (undo-tree-id1968 . -6) (undo-tree-id1969 . -6) (undo-tree-id1970 . -6) (undo-tree-id1971 . -6) (undo-tree-id1972 . -6) (undo-tree-id1973 . -6) (undo-tree-id1974 . -6) (undo-tree-id1975 . -6) (undo-tree-id1976 . -6) (undo-tree-id1977 . -6) (undo-tree-id1978 . -6) (undo-tree-id1979 . -6) (undo-tree-id1980 . -6) (undo-tree-id1981 . -6) (undo-tree-id1982 . -6) (undo-tree-id1983 . -6) (undo-tree-id1984 . -6) (undo-tree-id1985 . -6) (undo-tree-id1986 . -6) (undo-tree-id1987 . -6) (undo-tree-id1988 . -6) (undo-tree-id1989 . -6) (undo-tree-id1990 . -6) (undo-tree-id1991 . -6) (undo-tree-id1992 . -6) (undo-tree-id1993 . -6) (undo-tree-id1994 . -6) (undo-tree-id1995 . -6) (undo-tree-id1996 . -6) (undo-tree-id1997 . -6) (undo-tree-id1998 . -6) (undo-tree-id1999 . -6) (undo-tree-id2000 . -6) (undo-tree-id2001 . -6) (undo-tree-id2002 . -5) (undo-tree-id2003 . -5) (undo-tree-id2004 . -5) (undo-tree-id2005 . -5) (undo-tree-id2006 . -5) (undo-tree-id2007 . -5) (undo-tree-id2008 . -5) (undo-tree-id2009 . -5) (undo-tree-id2010 . -5) (undo-tree-id2011 . -5) (undo-tree-id2012 . -5) (undo-tree-id2013 . -5) (undo-tree-id2014 . -5) (undo-tree-id2015 . -5) (undo-tree-id2016 . -5) (undo-tree-id2017 . -5) (undo-tree-id2018 . -5) (undo-tree-id2019 . -5) (undo-tree-id2020 . -5) (undo-tree-id2021 . -5) (undo-tree-id2022 . -5) (undo-tree-id2023 . -5) (undo-tree-id2024 . -5) (undo-tree-id2025 . -5) (undo-tree-id2026 . -5) (undo-tree-id2027 . -5) (undo-tree-id2028 . -5) (undo-tree-id2029 . -5) (undo-tree-id2030 . -5) (undo-tree-id2031 . -5) (undo-tree-id2032 . -5) (undo-tree-id2033 . -5) (undo-tree-id2034 . -5) (undo-tree-id2035 . -5) (undo-tree-id2036 . -5) (undo-tree-id2037 . -5) (undo-tree-id2038 . -5) (undo-tree-id2039 . -5) (undo-tree-id2040 . -5) (undo-tree-id2041 . -5) (undo-tree-id2042 . -5) (undo-tree-id2043 . -5) (undo-tree-id2044 . -5) (undo-tree-id2045 . -5) (undo-tree-id2046 . -5) (undo-tree-id2047 . -5) (undo-tree-id2048 . -5) (undo-tree-id2049 . -5) (undo-tree-id2050 . -5) (undo-tree-id2051 . -5) (undo-tree-id2052 . -5) (undo-tree-id2053 . -5) (undo-tree-id2054 . -5) (undo-tree-id2055 . -5) (undo-tree-id2056 . -5) (undo-tree-id2057 . -4) (undo-tree-id2058 . -4) (undo-tree-id2059 . -4) (undo-tree-id2060 . -4) (undo-tree-id2061 . -4) (undo-tree-id2062 . -4) (undo-tree-id2063 . -4) (undo-tree-id2064 . -4) (undo-tree-id2065 . -4) (undo-tree-id2066 . -4) (undo-tree-id2067 . -4) (undo-tree-id2068 . -4) (undo-tree-id2069 . -4) (undo-tree-id2070 . -4) (undo-tree-id2071 . -4) (undo-tree-id2072 . -4) (undo-tree-id2073 . -4) (undo-tree-id2074 . -4) (undo-tree-id2075 . -4) (undo-tree-id2076 . -4) (undo-tree-id2077 . -4) (undo-tree-id2078 . -4) (undo-tree-id2079 . -4) (undo-tree-id2080 . -4) (undo-tree-id2081 . -4) (undo-tree-id2082 . -4) (undo-tree-id2083 . -4) (undo-tree-id2084 . -4) (undo-tree-id2085 . -4) (undo-tree-id2086 . -4) (undo-tree-id2087 . -4) (undo-tree-id2088 . -4) (undo-tree-id2089 . -4) (undo-tree-id2090 . -4) (undo-tree-id2091 . -4) (undo-tree-id2092 . -4) (undo-tree-id2093 . -4) (undo-tree-id2094 . -4) (undo-tree-id2095 . -4) (undo-tree-id2096 . -4) (undo-tree-id2097 . -4) (undo-tree-id2098 . -4) (undo-tree-id2099 . -4) (undo-tree-id2100 . -4) (undo-tree-id2101 . -4) (undo-tree-id2102 . -4) (undo-tree-id2103 . -4) (undo-tree-id2104 . -4) (undo-tree-id2105 . -4) (undo-tree-id2106 . -4) (undo-tree-id2107 . -4) (undo-tree-id2108 . -4) (undo-tree-id2109 . -4) (undo-tree-id2110 . -4) (undo-tree-id2111 . -4) (undo-tree-id2112 . -3) (undo-tree-id2113 . -3) (undo-tree-id2114 . -3) (undo-tree-id2115 . -3) (undo-tree-id2116 . -3) (undo-tree-id2117 . -3) (undo-tree-id2118 . -3) (undo-tree-id2119 . -3) (undo-tree-id2120 . -3) (undo-tree-id2121 . -3) (undo-tree-id2122 . -3) (undo-tree-id2123 . -3) (undo-tree-id2124 . -3) (undo-tree-id2125 . -3) (undo-tree-id2126 . -3) (undo-tree-id2127 . -3) (undo-tree-id2128 . -3) (undo-tree-id2129 . -3) (undo-tree-id2130 . -3) (undo-tree-id2131 . -3) (undo-tree-id2132 . -3) (undo-tree-id2133 . -3) (undo-tree-id2134 . -3) (undo-tree-id2135 . -3) (undo-tree-id2136 . -3) (undo-tree-id2137 . -3) (undo-tree-id2138 . -3) (undo-tree-id2139 . -3) (undo-tree-id2140 . -3) (undo-tree-id2141 . -3) (undo-tree-id2142 . -3) (undo-tree-id2143 . -3) (undo-tree-id2144 . -3) (undo-tree-id2145 . -3) (undo-tree-id2146 . -3) (undo-tree-id2147 . -3) (undo-tree-id2148 . -3) (undo-tree-id2149 . -3) (undo-tree-id2150 . -3) (undo-tree-id2151 . -3) (undo-tree-id2152 . -3) (undo-tree-id2153 . -3) (undo-tree-id2154 . -3) (undo-tree-id2155 . -3) (undo-tree-id2156 . -3) (undo-tree-id2157 . -3) (undo-tree-id2158 . -3) (undo-tree-id2159 . -3) (undo-tree-id2160 . -3) (undo-tree-id2161 . -3) (undo-tree-id2162 . -3) (undo-tree-id2163 . -3) (undo-tree-id2164 . -3) (undo-tree-id2165 . -3) (undo-tree-id2166 . -3) (undo-tree-id2167 . -3) (undo-tree-id2168 . -3) (undo-tree-id2169 . -3) (undo-tree-id2170 . -3) (undo-tree-id2171 . -3) (undo-tree-id2172 . -3) (undo-tree-id2173 . -3) (undo-tree-id2174 . -3) (undo-tree-id2175 . -3) (undo-tree-id2176 . -3) (undo-tree-id2177 . -3) (undo-tree-id2178 . -3) (undo-tree-id2179 . -3) (undo-tree-id2180 . -3) (undo-tree-id2181 . -3) (undo-tree-id2182 . -3) (undo-tree-id2183 . -3) (undo-tree-id2184 . -3) (undo-tree-id2185 . -3) (undo-tree-id2186 . -3) (undo-tree-id2187 . -3) (undo-tree-id2188 . -3) (undo-tree-id2189 . -3) (undo-tree-id2190 . -3) (undo-tree-id2191 . -3) (undo-tree-id2192 . -3) (undo-tree-id2193 . -3) (undo-tree-id2194 . -3) (undo-tree-id2195 . -3) (undo-tree-id2196 . -3) (undo-tree-id2197 . -3) (undo-tree-id2198 . -3) (undo-tree-id2199 . -3) (undo-tree-id2200 . -3) (undo-tree-id2201 . -3) (undo-tree-id2202 . -3) (undo-tree-id2203 . -3) (undo-tree-id2204 . -3) (undo-tree-id2205 . -3) (undo-tree-id2206 . -3) (undo-tree-id2207 . -3) (undo-tree-id2208 . -3) (undo-tree-id2209 . -3) (undo-tree-id2210 . -3) (undo-tree-id2211 . -3) (undo-tree-id2212 . -3) (undo-tree-id2213 . -3) (undo-tree-id2214 . -3) (undo-tree-id2215 . -3) (undo-tree-id2216 . -3) (undo-tree-id2217 . -3) (undo-tree-id2218 . -3) (undo-tree-id2219 . -3) (undo-tree-id2220 . -3) (undo-tree-id2221 . -3) (undo-tree-id2222 . -3) (undo-tree-id2223 . -3) (undo-tree-id2224 . -3) (undo-tree-id2225 . -3) (undo-tree-id2226 . -3) (undo-tree-id2227 . -3) (undo-tree-id2228 . -3) (undo-tree-id2229 . -3) (undo-tree-id2230 . -3) (undo-tree-id2231 . -3) (undo-tree-id2232 . -3) (undo-tree-id2233 . -3) (undo-tree-id2234 . -3) (undo-tree-id2235 . -3) (undo-tree-id2236 . -3) (undo-tree-id2237 . -3) (undo-tree-id2238 . -3) (undo-tree-id2239 . -3) (undo-tree-id2240 . -3) (undo-tree-id2241 . -3) (undo-tree-id2242 . -3) (undo-tree-id2243 . -3) (undo-tree-id2244 . -3) (undo-tree-id2245 . -3) (undo-tree-id2246 . -3) (undo-tree-id2247 . -3) (undo-tree-id2248 . -3) (undo-tree-id2249 . -3) (undo-tree-id2250 . -3) (undo-tree-id2251 . -3) (undo-tree-id2252 . -3) (undo-tree-id2253 . -3) (undo-tree-id2254 . -3) (undo-tree-id2255 . -3) (undo-tree-id2256 . -3) (undo-tree-id2257 . -3) (undo-tree-id2258 . -3) (undo-tree-id2259 . -3) (undo-tree-id2260 . -3) (undo-tree-id2261 . -3) (undo-tree-id2262 . -3) (undo-tree-id2263 . -3) (undo-tree-id2264 . -3) (undo-tree-id2265 . -3) (undo-tree-id2266 . -3) (undo-tree-id2267 . -3) (undo-tree-id2268 . -3) (undo-tree-id2269 . -3) (undo-tree-id2270 . -3) (undo-tree-id2271 . -3) (undo-tree-id2272 . -3) (undo-tree-id2273 . -3) (undo-tree-id2274 . -3) (undo-tree-id2275 . -3) (undo-tree-id2276 . -3) (undo-tree-id2277 . -3) (undo-tree-id2278 . -3) (undo-tree-id2279 . -3) (undo-tree-id2280 . -3) (undo-tree-id2281 . -3) (undo-tree-id2282 . -3) (undo-tree-id2283 . -3) (undo-tree-id2284 . -3) (undo-tree-id2285 . -3) (undo-tree-id2286 . -3) (undo-tree-id2287 . -3) (undo-tree-id2288 . -3) (undo-tree-id2289 . -3) (undo-tree-id2290 . -3) (undo-tree-id2291 . -3) (undo-tree-id2292 . -3) (undo-tree-id2293 . -3) (undo-tree-id2294 . -3) (undo-tree-id2295 . -3) (undo-tree-id2296 . -3) (undo-tree-id2297 . -3) (undo-tree-id2298 . -3) (undo-tree-id2299 . -3) (undo-tree-id2300 . -3) (undo-tree-id2301 . -3) (undo-tree-id2302 . -3) (undo-tree-id2303 . -3) (undo-tree-id2304 . -3) (undo-tree-id2305 . -3) (undo-tree-id2306 . -3) (undo-tree-id2307 . -3) (undo-tree-id2308 . -3) (undo-tree-id2309 . -3) (undo-tree-id2310 . -3) (undo-tree-id2311 . -3) (undo-tree-id2312 . -3) (undo-tree-id2313 . -3) (undo-tree-id2314 . -3) (undo-tree-id2315 . -3) (undo-tree-id2316 . -3) (undo-tree-id2317 . -3) (undo-tree-id2318 . -3) (undo-tree-id2319 . -3) (undo-tree-id2320 . -3) (undo-tree-id2321 . -3) (undo-tree-id2322 . -3) (undo-tree-id2323 . -3) (undo-tree-id2324 . -3) (undo-tree-id2325 . -3) (undo-tree-id2326 . -3) (undo-tree-id2327 . -3) (undo-tree-id2328 . -3) (undo-tree-id2329 . -3) (undo-tree-id2330 . -3) (undo-tree-id2331 . -3) (undo-tree-id2332 . -3) (undo-tree-id2333 . -6) (undo-tree-id2334 . -6) 9071) nil (25720 39582 27065 828000) 0 nil])
([nil nil ((9093 . 9100) (9089 . 9093) (#("word" 0 4 (fontified t)) . 9089) (undo-tree-id1939 . -3) (undo-tree-id1940 . -4) (undo-tree-id1941 . -4)) nil (25720 39582 26468 576000) 0 nil])
([nil nil ((9193 . 9196) (#("e" 0 1 (fontified t)) . -9193) (undo-tree-id1919 . -1) 9194 (9191 . 9194) (#("t" 0 1 (fontified t)) . -9191) (undo-tree-id1920 . -1) 9192 (9188 . 9192) (#("h" 0 1 (fontified t)) . -9188) (undo-tree-id1921 . -1) (#("e" 0 1 (fontified t)) . -9189) (undo-tree-id1922 . -1) 9190 (9183 . 9190) (#("t" 0 1 (fontified t)) . -9183) (undo-tree-id1923 . -1) 9184 (9178 . 9184) (9177 . 9178) (9176 . 9177) (9171 . 9176) (#("m" 0 1 (fontified t)) . -9171) (undo-tree-id1924 . -1) (#("n" 0 1 (fontified t)) . -9172) (undo-tree-id1925 . -1) (#("e" 0 1 (fontified t)) . -9173) (undo-tree-id1926 . -1) (#("t" 0 1 (fontified t)) . -9174) (undo-tree-id1927 . -1) 9175 (9164 . 9175) (9143 . 9164) (#("s" 0 1 (fontified t)) . -9143) (undo-tree-id1928 . -1) 9144 (9143 . 9144) (#("w" 0 1 (fontified t)) . -9143) (undo-tree-id1929 . -1) (#("t" 0 1 (fontified t)) . -9144) (undo-tree-id1930 . -1) 9145 (9143 . 9145) (9137 . 9143) (#("f" 0 1 (fontified t)) . -9137) (undo-tree-id1931 . -1) (#("e" 0 1 (fontified t)) . -9138) (undo-tree-id1932 . -1) (#("a" 0 1 (fontified t)) . -9139) (undo-tree-id1933 . -1) (#("l" 0 1 (fontified t)) . -9140) (undo-tree-id1934 . -1) 9141 (9130 . 9141) (#("=" 0 1 (fontified t)) . -9130) (undo-tree-id1935 . -1) 9131 (9120 . 9131) (#("s" 0 1 (fontified t)) . -9120) (undo-tree-id1936 . -1) (#("t" 0 1 (fontified t)) . -9121) (undo-tree-id1937 . -1) 9122 (9118 . 9122) (9117 . 9118) (#("o" 0 1 (fontified t)) . -9117) (undo-tree-id1938 . -1) 9118 (9117 . 9118) (9116 . 9117) 9099) nil (25720 39582 26449 263000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -9195) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) 9196 (9195 . 9196)) nil (25720 39582 26372 430000) 0 nil])
([nil nil ((9195 . 9196) (#("s" 0 1 (fontified t)) . 9195) (undo-tree-id1638 . 1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1)) nil (25720 39582 25952 807000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -9196) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) 9197 (9196 . 9197)) nil (25720 39582 25913 843000) 0 nil])
([nil nil ((9196 . 9197) 9195) nil (25720 39582 25013 243000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9400 . 9401) (nil fontified nil 9197 . 9401) (9197 . 9401) (t 25720 39582 52207 222000)) nil (25720 39606 529369 660000) 0 nil])
([nil nil ((9196 . 9197) 9188) nil (25720 39606 529364 345000) 0 nil])
([nil nil ((9402 . 9403) 9331) nil (25720 39606 529351 383000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9403 . 9404) (#("
" 0 1 (fontified nil face org-block-begin-line font-lock-multiline t font-lock-fontified t)) . -9469) (9403 . 9470) (t 25720 39606 552645 904000)) nil (25720 39814 422845 325000) 0 nil])
([nil nil ((9472 . 9479) (#("e" 0 1 (face org-meta-line font-lock-fontified t fontified t)) . -9472) (undo-tree-id2402 . -1) (#("n" 0 1 (face org-meta-line font-lock-fontified t fontified t)) . -9473) (undo-tree-id2403 . -1) (#("d" 0 1 (face org-meta-line font-lock-fontified t fontified t)) . -9474) (undo-tree-id2404 . -1) 9475 (9470 . 9475) (9469 . 9470) 9404) nil (25720 39814 422839 558000) 0 nil])
([nil nil ((9469 . 9470) 9412) nil (25720 39814 422828 763000) 0 nil])
([nil nil ((#("creating_elements_using_js_strings" 0 34 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . 9429) (undo-tree-id2397 . -33) (undo-tree-id2398 . -33) (undo-tree-id2399 . -33) (undo-tree-id2400 . -33) (undo-tree-id2401 . -33) 9462) nil (25720 39814 422824 990000) 0 nil])
([nil nil ((#("j" 0 1 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . -9449) (undo-tree-id2393 . -1) 9450 (9447 . 9450) (#("y" 0 1 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . -9447) (undo-tree-id2394 . -1) 9448 (9441 . 9448) (#("c" 0 1 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . -9441) (undo-tree-id2395 . -1) 9442 (9429 . 9442) (#("n" 0 1 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . -9429) (undo-tree-id2396 . -1) 9430 (9429 . 9430)) nil (25720 39814 422808 376000) 0 nil])
([nil nil ((9466 . 9467) 9465) nil (25720 39814 422789 468000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10314 . 10315) (nil fontified nil 9467 . 10315) (9467 . 10315)) nil (25720 39814 422786 762000) 0 nil])
([nil nil ((9600 . 9602) (#("you" 0 3 (fontified t)) . 9600) (undo-tree-id2392 . -2)) nil (25720 39814 422780 475000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9972 . 9973) (nil fontified nil 9456 . 9973) (9456 . 9973)) nil (25720 39814 422526 995000) 0 nil])
([nil nil ((10727 . 10728) (t 25720 39814 444279 465000)) nil (25720 43277 396954 538000) 0 nil])
([nil nil ((10832 . 10833) (t 25720 43277 421845 230000) 10728) nil (25721 32138 604028 135000) 0 nil])
([nil nil ((10838 . 10845) (10836 . 10838) (#("s" 0 1 (fontified t)) . -10836) (undo-tree-id9 . -1) 10837 (10834 . 10837) (10833 . 10834) (t 25721 32138 628837 131000) 10833) nil (25721 32722 152873 994000) 0 nil])
([nil nil ((#("textContent
" 0 11 (fontified t) 11 12 (fontified t)) . 10834) (undo-tree-id4 . -4) (undo-tree-id5 . -10) (undo-tree-id6 . -12) (undo-tree-id7 . 1) (undo-tree-id8 . -11) 10844) nil (25721 32722 152865 474000) 0 nil])
([nil nil ((10833 . 10834) 10833) nil (25721 32722 152853 391000) 0 nil])
([nil nil ((10833 . 10834) 10833) nil (25721 32722 152849 201000) 0 nil])
([nil nil ((10834 . 10836)) nil (25721 32722 152844 870000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -10834) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("u" 0 1 (fontified t)) . -10835) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 10836) nil (25721 32722 152833 975000) 0 nil])
([nil nil ((10834 . 10838) 7297 (t 25721 32722 189503 931000)) nil (25721 35375 212466 346000) 0 nil])
([nil nil ((10834 . 10835)) nil (25721 35375 212461 666000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2788) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#(" " 0 1 (fontified t)) . -2789) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("|" 0 1 (fontified t face org-table)) . -2790) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 2791 (10869 . 10871) (10868 . 10869) (10867 . 10868) (10850 . 10867) (#(" " 0 1 (fontified t face org-level-3)) . -10850) (undo-tree-id26 . -1) 10851 (10850 . 10851) (10845 . 10850) (10844 . 10845) (10839 . 10844)) nil (25721 35375 212692 309000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face org-level-3)) . 10866)) nil (25721 35501 248206 695000) 0 nil] [nil nil ((#("perties ex" 0 10 (fontified t face org-level-3)) . 10858) (undo-tree-id10 . -9) (undo-tree-id11 . -10) (undo-tree-id12 . -10) (undo-tree-id13 . -10)) ((10858 . 10868)) (25721 35375 212415 495000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t face org-level-3)) . 10866) (undo-tree-id107 . -1)) nil (25721 35501 248202 365000) 0 nil])
nil
([nil nil ((10946 . 10947) (10938 . 10946) (#("s" 0 1 (fontified t)) . -10938) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("e" 0 1 (fontified t)) . -10939) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 10940 (10934 . 10940) (10927 . 10934) (10918 . 10927) (10912 . 10918) (10909 . 10912) (10908 . 10909) (10907 . 10908) (#(" " 0 1 (fontified t)) . -10907) (undo-tree-id57 . -1) 10908 (10907 . 10908) (10902 . 10907) (10901 . 10902) (#("h" 0 1 (fontified t)) . -10901) (undo-tree-id58 . -1) 10902 (10901 . 10902) (#("h" 0 1 (fontified t)) . -10901) (undo-tree-id59 . -1) (#("e" 0 1 (fontified t)) . -10902) (undo-tree-id60 . -1) (#("r" 0 1 (fontified t)) . -10903) (undo-tree-id61 . -1) 10904 (10903 . 10904) (10882 . 10903) (#("J" 0 1 (fontified t)) . -10882) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("a" 0 1 (fontified t)) . -10883) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("v" 0 1 (fontified t)) . -10884) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 10885 (10883 . 10885) (#("v" 0 1 (fontified t)) . -10883) (undo-tree-id68 . -1) 10884 (10883 . 10884) (10882 . 10883) (#("j" 0 1 (fontified t)) . -10882) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("a" 0 1 (fontified t)) . -10883) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("v" 0 1 (fontified t)) . -10884) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("a" 0 1 (fontified t)) . -10885) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 10886 (10882 . 10886) (10881 . 10882) (10867 . 10881) (#("s" 0 1 (fontified t face org-level-3)) . -10867) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("c" 0 1 (fontified t face org-level-3)) . -10868) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("r" 0 1 (fontified t face org-level-3)) . -10869) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("i" 0 1 (fontified t face org-level-3)) . -10870) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("p" 0 1 (fontified t face org-level-3)) . -10871) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("t" 0 1 (fontified t face org-level-3)) . -10872) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#(" " 0 1 (fontified t face org-level-3)) . -10873) (undo-tree-id89 . -1) 10874 (10873 . 10874) (#("Sc" 0 2 (fontified nil face org-level-3)) . 10873) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (10867 . 10873) 10869 (10867 . 10869) (#("s" 0 1 (fontified t face org-level-3)) . -10867) (undo-tree-id92 . -1) (#("c" 0 1 (fontified t face org-level-3)) . -10868) (undo-tree-id93 . -1) (#("r" 0 1 (fontified t face org-level-3)) . -10869) (undo-tree-id94 . -1) (#("i" 0 1 (fontified t face org-level-3)) . -10870) (undo-tree-id95 . -1) (#("p" 0 1 (fontified t face org-level-3)) . -10871) (undo-tree-id96 . -1) (#("t" 0 1 (fontified t face org-level-3)) . -10872) (undo-tree-id97 . -1) (#(" " 0 1 (fontified t face org-level-3)) . -10873) (undo-tree-id98 . -1) 10874 (10873 . 10874) (10867 . 10873) (10855 . 10867) (#("properties " 0 3 (fontified t face org-level-3) 3 11 (fontified t face org-level-3)) . -10855) (undo-tree-id99 . -11) (undo-tree-id100 . -11) (undo-tree-id101 . -11) (undo-tree-id102 . -11) 10866 (#("as" 0 2 (fontified t face org-level-3)) . -10866) (undo-tree-id103 . -2) (undo-tree-id104 . -2) 10868 (#(" " 0 1 (fontified t face org-level-3)) . -10868) (undo-tree-id105 . -1) 10869 (10866 . 10869) (#(" " 0 1 (fontified t face org-level-3)) . -10866) (undo-tree-id106 . -1) 10867 (10866 . 10867)) nil (25721 35501 248169 469000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10947 . 10948) (#("
" 0 1 (face org-block-end-line fontified nil)) . -12122) (10947 . 12123)) nil (25721 35501 247575 526000) 0 nil])
([nil nil ((#(" <!DOCTYPE html>
<html lang=\"en\">
<body>

<div id=\"A\"></div>
<span id=\"B\"></span>
<div id=\"C\"></div>
<div id=\"D\"></div>
<div id=\"E\"></div>

<script> 
//create a strong element and text node and add to html
document.getElementById('A').innerHTML = '<strong>Hi</strong>';

//create a div element and text node to replace <span id=\"B\"></div> (notice span#B is replaced)
document.getElementById('B').outerHTML = '<div id = \"B\" class = \"new\" > Whats shaking <div>'

//create a text node and update the div#C with the text node
document.getElementById('C').textContent = 'dude';

//NON standard extensions below i.e. innerText & outerText

//create a text node and update the div#D with the text node
document.getElementById('D').innerText = 'keep it';

//create a text node and replace the div#E with the text node (notice div#E is gone)
document.getElementById('E').outerText = 'real!';

console.log(document.body.innerHTML);
/* logs
<div id=\"A\"><strong>Hi</strong></div>
<div id=\"B\" class=\"new\">Whats Shaking</div>
<span id=\"C\">dude</span>
<div id=\"D\">Keep it</div>
real!
*/

</script>
</body>
</html>
" 0 1 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 1 2 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 2 10 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 10 15 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 15 16 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 16 18 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 18 22 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 22 23 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 23 27 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-variable-name-face org-block)) 27 28 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 28 32 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 32 35 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 35 39 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 39 43 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 43 46 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 46 47 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 47 49 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-variable-name-face org-block)) 49 50 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 50 53 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 53 56 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 56 59 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 59 62 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 62 66 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 66 67 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 67 69 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-variable-name-face org-block)) 69 70 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 70 73 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 73 76 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 76 80 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 80 83 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 83 86 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 86 87 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 87 89 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-variable-name-face org-block)) 89 90 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 90 93 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 93 96 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 96 99 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 99 102 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 102 105 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 105 106 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 106 108 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-variable-name-face org-block)) 108 109 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 109 112 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 112 115 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 115 118 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 118 121 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 121 124 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 124 125 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 125 127 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-variable-name-face org-block)) 127 128 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 128 131 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 131 134 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 134 137 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 137 141 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 141 147 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 147 166 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 166 247 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 247 248 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 248 249 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 249 255 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 255 256 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 256 258 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (bold org-block)) 258 260 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 260 266 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 266 267 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 267 268 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 268 320 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 320 324 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 324 325 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 325 327 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-variable-name-face org-block)) 327 328 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 328 331 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 331 334 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 334 337 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 337 408 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 408 409 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 409 410 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 410 413 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 413 419 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 419 422 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 422 431 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 431 433 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 433 436 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 436 454 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 454 457 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 457 880 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 880 881 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 881 931 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 931 934 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 934 935 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 935 937 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-variable-name-face org-block)) 937 938 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 938 941 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 941 943 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 943 949 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 949 950 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 950 952 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (bold org-block)) 952 954 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 954 960 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 960 963 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 963 966 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 966 969 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 969 972 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 972 973 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 973 975 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-variable-name-face org-block)) 975 976 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 976 979 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 979 980 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 980 985 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-variable-name-face org-block)) 985 986 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 986 991 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 991 1007 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 1007 1010 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 1010 1013 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 1013 1017 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 1017 1018 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 1018 1020 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-variable-name-face org-block)) 1020 1021 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 1021 1024 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 1024 1031 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 1031 1035 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 1035 1038 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 1038 1041 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 1041 1042 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 1042 1044 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-variable-name-face org-block)) 1044 1045 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 1045 1048 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 1048 1058 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 1058 1061 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 1061 1075 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 1075 1081 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 1081 1085 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 1085 1089 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 1089 1093 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 1093 1097 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-function-name-face org-block)) 1097 1099 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . 11014) (undo-tree-id45 . -1091) (undo-tree-id46 . -1099) (undo-tree-id47 . -1098) (undo-tree-id48 . -367) (undo-tree-id49 . -1091) (undo-tree-id50 . -1091) (undo-tree-id51 . -1091) (undo-tree-id52 . -1091) 12105) nil (25721 35501 247569 798000) 0 nil])
([nil nil ((11013 . 11014) 10948) nil (25721 35501 247546 680000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11687 . 11688) (nil fontified nil 11014 . 11688) (11014 . 11688)) nil (25721 35501 247542 909000) 0 nil])
([nil nil ((#("creating_elements_using_js_strings" 0 34 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 10973) (undo-tree-id40 . -33) (undo-tree-id41 . -33) (undo-tree-id42 . -33) (undo-tree-id43 . -33) (undo-tree-id44 . -33) 11006) nil (25721 35501 247537 42000) 0 nil])
([nil nil ((11006 . 11014) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -11006) (undo-tree-id27 . -1) 11007 (10992 . 11007) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -10992) (undo-tree-id28 . -1) 10993 (10990 . 10993) (#("s" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -10990) (undo-tree-id29 . -1) 10991 (10984 . 10991) (10983 . 10984) (#(")" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -10983) (undo-tree-id30 . -1) 10984 (10983 . 10984) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -10983) (undo-tree-id31 . -1) 10984 (10973 . 10984) (#("y" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -10973) (undo-tree-id32 . -1) (#("s" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -10974) (undo-tree-id33 . -1) 10975 (10973 . 10975) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -10973) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("x" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -10974) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -10975) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 10976 (10973 . 10976)) nil (25721 35501 247509 943000) 0 nil])
([nil nil ((11706 . 11707) (t 25721 35504 969186 16000) 11706) nil (25721 35509 940274 91000) 0 nil])
([nil nil ((11706 . 11707) (t 25721 35509 965345 106000) 11706) nil (25721 35633 367278 953000) 0 nil])
([nil nil ((11706 . 11707) 11706) nil (25721 35633 367264 6000) 0 nil])
([nil nil ((11767 . 11775) (11758 . 11767) (#("docu" 0 4 (fontified nil)) . 11758) (undo-tree-id109 . -4) (undo-tree-id110 . -4) (11750 . 11758) 11754 (11746 . 11754) (11745 . 11746) (11744 . 11745) (#("m" 0 1 (fontified t)) . -11744) (undo-tree-id111 . -1) 11745 (11735 . 11745) (#("t" 0 1 (fontified t)) . -11735) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#(" " 0 1 (fontified t)) . -11736) (undo-tree-id114 . -1) 11737 (11726 . 11737) (#("c" 0 1 (fontified t)) . -11726) (undo-tree-id115 . -1) (#("n" 0 1 (fontified t)) . -11727) (undo-tree-id116 . -1) 11728 (11726 . 11728) (#(" " 0 1 (fontified t)) . -11726) (undo-tree-id117 . -1) (#("c" 0 1 (fontified t)) . -11727) (undo-tree-id118 . -1) 11728 (11707 . 11728) (#("i" 0 1 (fontified t)) . -11707) (undo-tree-id119 . -1) (#("T" 0 1 (fontified t)) . -11708) (undo-tree-id120 . -1) 11709 (11707 . 11709) (t 25721 35633 394364 830000)) nil (25721 35781 495980 938000) 0 nil])
([nil nil ((11750 . 11751) (#("f" 0 1 (fontified t)) . 11750) (11750 . 11751) (#("D" 0 1 (fontified t)) . 11750)) nil (25721 35781 495937 281000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -11775) (undo-tree-id108 . -1) 11776 (11775 . 11776)) nil (25721 35781 495925 197000) 0 nil])
([nil nil ((11844 . 11845) (11841 . 11844) (11836 . 11841) (11826 . 11836) (#(" " 0 1 (fontified t face org-level-3)) . -11826) (undo-tree-id121 . -1) 11827 (11825 . 11827) (#(";" 0 1 (fontified t face org-level-3)) . -11825) (undo-tree-id122 . -1) (#(" " 0 1 (fontified t face org-level-3)) . -11826) (undo-tree-id123 . -1) 11827 (11823 . 11827) (11816 . 11823) (11812 . 11816) (11794 . 11812) (#("d" 0 1 (fontified t face org-level-3)) . -11794) (undo-tree-id124 . -1) (#("o" 0 1 (fontified t face org-level-3)) . -11795) (undo-tree-id125 . -1) 11796 (11781 . 11796) (11776 . 11781) 11777 (t 25721 35781 523889 996000)) nil (25721 35856 345071 498000) 0 nil])
([nil nil ((11845 . 11849)) nil (25721 35856 345028 120000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11850) (undo-tree-id129 . -4) 11854 (11849 . 11854) (t 25721 35856 373841 832000) 11846) nil (25721 35951 612191 661000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11902 . 11903) (nil fontified nil 11850 . 11903) (11850 . 11903)) nil (25721 35951 612183 977000) 0 nil])
([nil nil ((#("(add-to-list 'default-frame-alist '(alpha . (0.85)))
" 0 52 (fontified t) 52 53 (fontified t rear-nonsticky t)) . 11850) (undo-tree-id126 . -52) (undo-tree-id127 . -53) (undo-tree-id128 . -1) 11851) nil (25721 35951 612172 941000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face org-level-2)) . -11949) (undo-tree-id189 . -1) 11950 (11949 . 11950) (11924 . 11925) (11922 . 11924) (11901 . 11922) (11898 . 11901) (11877 . 11898) (11871 . 11877) (11858 . 11871) (11853 . 11858) (11845 . 11853) (t 25721 35951 638957 40000)) nil (25721 36383 852376 702000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -11930) (undo-tree-id188 . -2) 11932 (11929 . 11932) 11928) nil (25721 36383 852365 806000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 12080) (undo-tree-id138 . -3) (12058 . 12080) 12061 (12058 . 12061) (#("-" 0 1 (fontified t)) . -12058) (undo-tree-id139 . -1) (#(" " 0 1 (fontified t)) . -12059) (undo-tree-id140 . -1) 12060 (12058 . 12060) (12057 . 12058) (12049 . 12057) (12028 . 12049) (#("o" 0 1 (fontified t)) . -12028) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (#("s" 0 1 (fontified t)) . -12029) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#(" " 0 1 (fontified t)) . -12030) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("a" 0 1 (fontified t)) . -12031) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#("p" 0 1 (fontified t)) . -12032) (undo-tree-id149 . -1) (undo-tree-id150 . -1) 12033 (12024 . 12033) (#("p" 0 1 (fontified t)) . -12024) (undo-tree-id151 . -1) (#("o" 0 1 (fontified t)) . -12025) (undo-tree-id152 . -1) 12026 (12024 . 12026) (#(" " 0 1 (fontified t)) . -12024) (undo-tree-id153 . -1) 12025 (12024 . 12025) (12022 . 12024) (#("r" 0 1 (fontified t)) . -12022) (undo-tree-id154 . -1) 12023 (12012 . 12023) (11991 . 12012) (11990 . 11991) (11989 . 11990) (#(" " 0 1 (fontified t)) . -11989) (undo-tree-id155 . -1) 11990 (11983 . 11990) (#("d" 0 1 (fontified t)) . -11983) (undo-tree-id156 . -1) 11984 (11981 . 11984) (11976 . 11981) (11975 . 11976) (#("s" 0 1 (fontified t)) . -11975) (undo-tree-id157 . -1) 11976 (11973 . 11976) (#(" " 0 1 (fontified t)) . -11973) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#("t" 0 1 (fontified t)) . -11974) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#("e" 0 1 (fontified t)) . -11975) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("x" 0 1 (fontified t)) . -11976) (undo-tree-id164 . -1) (undo-tree-id165 . -1) 11977 (11968 . 11977) (#("a" 0 1 (fontified t)) . -11968) (undo-tree-id166 . -1) 11969 (11966 . 11969) (11958 . 11966) (#("s" 0 1 (fontified t)) . -11958) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("t" 0 1 (fontified t)) . -11959) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (#("r" 0 1 (fontified t)) . -11960) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (#("o" 0 1 (fontified t)) . -11961) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("n" 0 1 (fontified t)) . -11962) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("g" 0 1 (fontified t)) . -11963) (undo-tree-id177 . -1) (undo-tree-id178 . -1) 11964 (11960 . 11964) (11939 . 11960) (#("t" 0 1 (fontified t)) . -11939) (undo-tree-id179 . -1) (#(" " 0 1 (fontified t)) . -11940) (undo-tree-id180 . -1) 11941 (11938 . 11941) (#("e" 0 1 (fontified t)) . -11938) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (#("s" 0 1 (fontified t)) . -11939) (undo-tree-id183 . -1) (#("r" 0 1 (fontified t)) . -11940) (undo-tree-id184 . -1) 11941 (11927 . 11941) (#("i" 0 1 (fontified t)) . -11927) (undo-tree-id185 . -1) 11928 (11927 . 11928) (#("o" 0 1 (fontified t)) . -11927) (undo-tree-id186 . -1) (#("n" 0 1 (fontified t)) . -11928) (undo-tree-id187 . -1) 11929 (11925 . 11929)) nil (25721 36383 852337 101000) 0 nil])
([nil nil ((12094 . 12102) (12082 . 12094) (12079 . 12082) (12078 . 12079) (#("b" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12078) (undo-tree-id134 . -1) (#("
" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12079) (undo-tree-id135 . -1) (undo-tree-id136 . -1) 12080 (12079 . 12080) (12071 . 12079) (12070 . 12071) (#(" " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12070) (undo-tree-id137 . -1) 12071 (12070 . 12071)) nil (25721 36383 851418 179000) 0 nil])
([nil nil ((12102 . 12103) 12101) nil (25721 36383 851401 557000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12207 . 12208) (nil fontified nil 12103 . 12208) (12103 . 12208)) nil (25721 36383 851397 785000) 0 nil])
([nil nil ((12208 . 12209) 12207) nil (25721 36383 851393 455000) 0 nil])
([nil nil ((12209 . 12210) 12209) nil (25721 36383 851389 683000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12234 . 12235) (nil fontified nil 12210 . 12235) (12210 . 12235)) nil (25721 36383 851385 912000) 0 nil])
([nil nil ((12274 . 12277) (12270 . 12274) (12267 . 12270) (12262 . 12267) (12261 . 12262) (12255 . 12261) (#("i" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -12255) (undo-tree-id133 . -1) 12256 (12250 . 12256) (12240 . 12250) (12236 . 12240) (12229 . 12236) (12224 . 12229) (12220 . 12224) (12209 . 12220) (12208 . 12209) 12171) nil (25721 36383 851380 325000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 12229)) nil (25721 36383 851368 312000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -12310) (undo-tree-id130 . -1) 12311 (12310 . 12311) (12308 . 12310) (12301 . 12308) (12298 . 12301) (12292 . 12298) (12291 . 12292) (#("z" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -12291) (undo-tree-id131 . -1) 12292 (12291 . 12292) (12289 . 12291) (12284 . 12289) (#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -12284) (undo-tree-id132 . -1) 12285 (12284 . 12285) (#("s" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -12284) 12285 (12278 . 12285) (12276 . 12278)) nil (25721 36383 851361 118000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12341 . 12342) (nil fontified nil 12310 . 12342) (12310 . 12342)) nil (25721 36383 851329 689000) 0 nil])
([nil nil ((12397 . 12398) (12395 . 12397) (12387 . 12395) (12383 . 12387) (12375 . 12383) (12366 . 12375) (12355 . 12366) (12352 . 12355) (12346 . 12352) (12343 . 12346) (12342 . 12343) 12341) nil (25721 36383 851324 450000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12397 . 12398) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -12452) (12397 . 12453) 12343) nil (25721 36383 851315 929000) 0 nil])
([nil nil ((12346 . 12347) (#("x" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 12346) (12346 . 12347) (#("c" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 12346)) nil (25721 36383 851310 691000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 12346)) nil (25721 36383 851305 383000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . 12400)) nil (25721 36383 851301 53000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 740)) nil (25721 36383 851289 180000) 0 nil])
([nil nil ((12450 . 12451) (t 25721 36383 878232 363000) 12450) nil (25721 36444 280242 21000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12489 . 12490) (nil fontified nil 12451 . 12490) (12451 . 12490)) nil (25721 36444 280238 668000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -12502) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (#("o" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -12503) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (#("n" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -12504) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (#("s" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -12505) (undo-tree-id966 . -1) (undo-tree-id967 . -1) 12506 (12502 . 12506) (12490 . 12491) 12489) nil (25721 36444 280232 941000) 0 nil])
([nil nil ((12492 . 12494) (12491 . 12492) 12491) nil (25721 36444 280216 807000) 0 nil])
([nil nil ((#("co
" 0 2 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 2 3 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 12492) (undo-tree-id955 . 1) (undo-tree-id956 . -2) (undo-tree-id957 . -3) (undo-tree-id958 . -2) (undo-tree-id959 . -1) 12493) nil (25721 36444 280212 477000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12491 . 12492) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -12494) (12491 . 12495)) nil (25721 36444 280200 604000) 0 nil])
([nil nil ((#("co
" 0 2 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 2 3 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 12492) (undo-tree-id951 . -2) (undo-tree-id952 . -2) (undo-tree-id953 . -3) (undo-tree-id954 . -3)) nil (25721 36444 280195 854000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12490 . 12491) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -12493) (12490 . 12494) 12451) nil (25721 36444 280185 517000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . -12528) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (#("
" 0 1 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . -12529) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) 12530 (12528 . 12530) (12526 . 12528) (12520 . 12526) (12511 . 12520) (#("s" 0 1 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . -12511) (undo-tree-id950 . -1) 12512 (12505 . 12512) (12498 . 12505) (12496 . 12498) (12493 . 12496)) nil (25721 36444 280125 661000) 0 nil])
([nil nil ((12529 . 12530)) nil (25721 36444 278838 934000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -12529) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) 12530) nil (25721 36444 278814 279000) 0 nil])
([nil nil ((12571 . 12575) (t 25721 36444 308189 636000)) nil (25721 36490 192895 969000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -12571) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (#("x" 0 1 (fontified t)) . -12572) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (#("m" 0 1 (fontified t)) . -12573) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (#("s" 0 1 (fontified t)) . -12574) (undo-tree-id1087 . -1) 12575) nil (25721 36490 192876 66000) 0 nil])
([nil nil ((12293 . 12298) (12290 . 12293) (#("Element" 0 7 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 12290) (undo-tree-id1088 . -6) (undo-tree-id1089 . -6) (undo-tree-id1090 . -6) (undo-tree-id1091 . -6) (undo-tree-id1092 . -6) 12296 (t 25721 36490 221579 926000)) nil (25721 36570 934791 589000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . -12450) (undo-tree-id1178 . -1) (#("o" 0 1 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . -12451) (undo-tree-id1179 . -1) 12452 (12450 . 12452) (12593 . 12595) (12587 . 12593) (12572 . 12587) (t 25721 36570 965680 457000)) nil (25721 38274 652766 32000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 12747) (undo-tree-id1164 . -3) (12725 . 12747) 12728 (12725 . 12728) (12724 . 12725) (12722 . 12724) (12701 . 12722) (12700 . 12701) (#("r" 0 1 (fontified t)) . -12700) (undo-tree-id1165 . -1) 12701 (12699 . 12701) (#("d" 0 1 (fontified t)) . -12699) (undo-tree-id1166 . -1) 12700 (12694 . 12700) (#("m" 0 1 (fontified t)) . -12694) (undo-tree-id1167 . -1) (#("e" 0 1 (fontified t)) . -12695) (undo-tree-id1168 . -1) 12696 (12695 . 12696) (#("e" 0 1 (fontified t)) . -12695) (undo-tree-id1169 . -1) (#("m" 0 1 (fontified t)) . -12696) (undo-tree-id1170 . -1) 12697 (12695 . 12697) (#("e" 0 1 (fontified t)) . -12695) (undo-tree-id1171 . -1) 12696 (12680 . 12696) (#("t" 0 1 (fontified t)) . -12680) (undo-tree-id1172 . -1) 12681 (12679 . 12681) (#("w" 0 1 (fontified t)) . -12679) (undo-tree-id1173 . -1) (#("e" 0 1 (fontified t)) . -12680) (undo-tree-id1174 . -1) (#("t" 0 1 (fontified t)) . -12681) (undo-tree-id1175 . -1) 12682 (12675 . 12682) (12654 . 12675) (12652 . 12654) (12651 . 12652) (12644 . 12651) (#("g" 0 1 (fontified t)) . -12644) (undo-tree-id1176 . -1) (#("n" 0 1 (fontified t)) . -12645) (undo-tree-id1177 . -1) 12646 (12631 . 12646) (12617 . 12631) (12596 . 12617) (12595 . 12596)) nil (25721 38274 652746 406000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t font-lock-fontified t face org-meta-line)) . -12731) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (#("_" 0 1 (fontified t font-lock-fontified t face org-meta-line)) . -12732) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (#("S" 0 1 (fontified t font-lock-fontified t)) . -12733) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (#("R" 0 1 (fontified t font-lock-fontified t)) . -12734) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (#("C" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12735) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (#(" " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12736) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (#("h" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12737) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (#("t" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12738) (undo-tree-id1154 . -1) (#("m" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12739) (undo-tree-id1155 . -1) (#("l" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12740) (undo-tree-id1156 . -1) (#(" " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12741) (undo-tree-id1157 . -1) (#("t" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12742) (undo-tree-id1158 . -1) (#("a" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12743) (undo-tree-id1159 . -1) (#("n" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12744) (undo-tree-id1160 . -1) (#("g" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12745) (undo-tree-id1161 . -1) (#("l" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12746) (undo-tree-id1162 . -1) (#("e" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12747) (undo-tree-id1163 . -1) 12748 (12737 . 12748)) nil (25721 38274 652690 112000) 0 nil])
([nil nil ((#("#+BEGI
" 0 6 (fontified t font-lock-fontified t face org-meta-line) 6 7 (fontified t font-lock-fontified t)) . 12725) (undo-tree-id1135 . 1) (undo-tree-id1136 . -6) (undo-tree-id1137 . -7) (undo-tree-id1138 . -6) (undo-tree-id1139 . -5) 12730) nil (25721 38274 652634 865000) 0 nil])
([nil nil ((#("#+END_SRC
" 0 1 (fontified t font-lock-fontified t face org-meta-line) 1 9 (fontified t font-lock-fontified t face org-meta-line) 9 10 (fontified t)) . 12725) (undo-tree-id1127 . 10) (undo-tree-id1128 . -9) (undo-tree-id1129 . -10) (undo-tree-id1130 . -10) (undo-tree-id1131 . -10) (undo-tree-id1132 . -10) (undo-tree-id1133 . -10) (undo-tree-id1134 . -5) 12730) nil (25721 38274 652621 874000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -12726) (undo-tree-id1126 . -2) 12728 (12725 . 12728) 12725) nil (25721 38274 652601 969000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 12748) (undo-tree-id1125 . -3) (12726 . 12748) 12729 (12726 . 12729)) nil (25721 38274 652594 216000) 0 nil])
([nil nil ((12751 . 12770) (12743 . 12751) (#("t" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12743) (undo-tree-id1124 . -1) 12744 (12738 . 12744)) nil (25721 38274 652586 603000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -12771) (undo-tree-id1123 . -1) 12772 (12771 . 12772) (12770 . 12771) 12769) nil (25721 38274 652578 920000) 0 nil])
([nil nil ((12782 . 12783) 12782) nil (25721 38274 652570 958000) 0 nil])
([nil nil ((12783 . 12784) (12782 . 12783) 12782) nil (25721 38274 652567 117000) 0 nil])
([nil nil ((#("q" 0 1 (fontified nil)) . -12827) 12828 (12827 . 12828) (12826 . 12827) 12825 (12820 . 12826) (12799 . 12820) (#("t" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -12799) 12800 (12794 . 12800) (#("src" 0 3 (fontified nil face org-block-end-line)) . 12804) (12782 . 12804) 12785 (12782 . 12785)) nil (25721 38274 652561 250000) 0 nil])
([nil nil ((12781 . 12782) 12772) nil (25721 38274 652552 729000) 0 nil])
([nil nil ((#("@
" 0 1 (fontified t) 1 2 (fontified t)) . 12839) (undo-tree-id1121 . -1) (undo-tree-id1122 . -2)) nil (25721 38274 652548 399000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12933 . 12934) (nil fontified nil 12771 . 12934) (12771 . 12934)) nil (25721 38274 652540 855000) 0 nil])
([nil nil ((12934 . 12935) 12933) nil (25721 38274 652536 595000) 0 nil])
([nil nil ((12935 . 12936) 12935) nil (25721 38274 652533 173000) 0 nil])
([nil nil ((12936 . 12937) 12936) nil (25721 38274 652528 842000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13016 . 13017) (nil fontified nil 12937 . 13017) (12937 . 13017)) nil (25721 38274 652525 490000) 0 nil])
([nil nil ((13037 . 13039) (13029 . 13037) (13021 . 13029) (13015 . 13021) (13014 . 13015) (13008 . 13014) (12999 . 13008) (12994 . 12999) (#("s" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -12994) (undo-tree-id1118 . -1) 12995 (12990 . 12995) (12985 . 12990) (12977 . 12985) (12976 . 12977) (12973 . 12976) (#(")" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -12973) (undo-tree-id1119 . -1) (#(";" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -12974) (undo-tree-id1120 . -1) 12975 (12971 . 12975) (12970 . 12971) (12962 . 12970) (12957 . 12962) (12936 . 12957) (12935 . 12936)) nil (25721 38274 652517 947000) 0 nil])
([nil nil ((13010 . 13011) (#("1" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 13010)) nil (25721 38274 652499 298000) 0 nil])
([nil nil ((13011 . 13012)) nil (25721 38274 652495 946000) 0 nil])
([nil nil ((13039 . 13040) 13039) nil (25721 38274 652492 593000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13071 . 13072) (nil fontified nil 13040 . 13072) (13040 . 13072)) nil (25721 38274 652488 822000) 0 nil])
([nil nil ((13109 . 13110) (#("l" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13109) (undo-tree-id1108 . -1) 13110 (13103 . 13110) (13095 . 13103) (13094 . 13095) (#("t" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13094) (undo-tree-id1109 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13095) (undo-tree-id1110 . -1) (#("T" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13096) (undo-tree-id1111 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13097) (undo-tree-id1112 . -1) (#("x" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13098) (undo-tree-id1113 . -1) (#("t" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13099) (undo-tree-id1114 . -1) (#("N" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13100) (undo-tree-id1115 . -1) (#("o" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13101) (undo-tree-id1116 . -1) (#("d" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13102) (undo-tree-id1117 . -1) (#("e" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13103) 13104 (13083 . 13104) (13072 . 13083)) nil (25721 38274 652478 834000) 0 nil])
([nil nil ((#("createElement" 0 13 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 13090) (undo-tree-id1102 . -12) (undo-tree-id1103 . -12) (undo-tree-id1104 . -12) (undo-tree-id1105 . -5) (undo-tree-id1106 . -12) (undo-tree-id1107 . -12) 13102) nil (25721 38274 652450 268000) 0 nil])
([nil nil ((13097 . 13103) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13097) (undo-tree-id1099 . -1) 13098 (13094 . 13098) (#("t" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13094) (undo-tree-id1100 . -1) (#("S" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13095) (undo-tree-id1101 . -1) 13096 (13090 . 13096)) nil (25721 38274 652433 436000) 0 nil])
([nil nil ((13111 . 13112) 13111) nil (25721 38274 652348 575000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13241 . 13242) (nil fontified nil 13112 . 13242) (13112 . 13242)) nil (25721 38274 652344 804000) 0 nil])
([nil nil ((13260 . 13261) (#("'" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13260) (undo-tree-id1098 . -1) 13261 (13243 . 13261) (13242 . 13243) 13240) nil (25721 38274 652339 915000) 0 nil])
([nil nil ((13262 . 13275) (13261 . 13262) (13259 . 13261)) nil (25721 38274 652332 302000) 0 nil])
([nil nil ((13278 . 13285) (13277 . 13278) 13276) nil (25721 38274 652327 483000) 0 nil])
([nil nil ((13278 . 13279) 13284) nil (25721 38274 652322 803000) 0 nil])
([nil nil ((13314 . 13316) (13311 . 13314) (#("t" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13311) (undo-tree-id1093 . -1) (#("m" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13312) (undo-tree-id1094 . -1) 13313 (13312 . 13313) (13291 . 13312) (#("b" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13291) (undo-tree-id1095 . -1) (#("o" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13292) (undo-tree-id1096 . -1) 13293 (13291 . 13293) (#("'" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13291) (undo-tree-id1097 . -1) 13292 (13286 . 13292)) nil (25721 38274 652309 393000) 0 nil])
([nil nil ((13317 . 13318) (t 25721 38274 684178 270000)) nil (25721 38283 176583 551000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -13317) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) 13318) nil (25721 38283 176547 791000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -13554) (undo-tree-id1869 . -1) (#("j" 0 1 (fontified t)) . -13555) (undo-tree-id1870 . -1) 13556 (13555 . 13556) (13554 . 13555) (13553 . 13554) (13533 . 13553) (#("m" 0 1 (fontified t)) . -13533) (undo-tree-id1871 . -1) (#("n" 0 1 (fontified t)) . -13534) (undo-tree-id1872 . -1) 13535 (13524 . 13535) (13509 . 13524) (#(" " 0 1 (fontified t)) . -13509) (undo-tree-id1873 . -1) 13510 (13509 . 13510) (#("m" 0 1 (fontified t)) . -13509) (undo-tree-id1874 . -1) (#("e" 0 1 (fontified t)) . -13510) (undo-tree-id1875 . -1) (#("n" 0 1 (fontified t)) . -13511) (undo-tree-id1876 . -1) (#("t" 0 1 (fontified t)) . -13512) (undo-tree-id1877 . -1) (#("." 0 1 (fontified t)) . -13513) (undo-tree-id1878 . -1) (#("c" 0 1 (fontified t)) . -13514) (undo-tree-id1879 . -1) (#("r" 0 1 (fontified t)) . -13515) (undo-tree-id1880 . -1) (#("e" 0 1 (fontified t)) . -13516) (undo-tree-id1881 . -1) (#("a" 0 1 (fontified t)) . -13517) (undo-tree-id1882 . -1) (#("t" 0 1 (fontified t)) . -13518) (undo-tree-id1883 . -1) (#("e" 0 1 (fontified t)) . -13519) (undo-tree-id1884 . -1) (#("T" 0 1 (fontified nil)) . -13520) (undo-tree-id1885 . -1) (#("e" 0 1 (fontified nil)) . -13521) (undo-tree-id1886 . -1) (#("x" 0 1 (fontified t)) . -13522) (undo-tree-id1887 . -1) (#("t" 0 1 (fontified nil)) . -13523) (undo-tree-id1888 . -1) (#("N" 0 1 (fontified nil)) . -13524) (undo-tree-id1889 . -1) (#("o" 0 1 (fontified nil)) . -13525) (undo-tree-id1890 . -1) (#("d" 0 1 (fontified t)) . -13526) (undo-tree-id1891 . -1) (#("e" 0 1 (fontified t)) . -13527) (undo-tree-id1892 . -1) 13528 (13508 . 13528) (13497 . 13508) (#("'" 0 1 (fontified t)) . -13497) (undo-tree-id1893 . -1) (#("s" 0 1 (fontified t)) . -13498) (undo-tree-id1894 . -1) (#(" " 0 1 (fontified t)) . -13499) (undo-tree-id1895 . -1) 13500 (13499 . 13500) (13495 . 13499) (13492 . 13495) (13486 . 13492) (13483 . 13486) (#("node " 0 5 (fontified t)) . -13483) (undo-tree-id1896 . -3) (undo-tree-id1897 . -5) 13488 (13487 . 13488) (#("'" 0 1 (fontified t)) . -13487) (undo-tree-id1898 . -1) (#("s" 0 1 (fontified t)) . -13488) (undo-tree-id1899 . -1) (#("=" 0 1 (fontified t)) . -13489) (undo-tree-id1900 . -1) 13490 (13489 . 13490) (13486 . 13489) (13476 . 13486) (13455 . 13476) (13451 . 13455) (13450 . 13451) (13449 . 13450) (13446 . 13449) (13425 . 13446) (13418 . 13425) (13409 . 13418) (13408 . 13409) (t 25721 38283 212524 949000) 13407) nil (25721 38998 239233 585000) 0 nil])
([nil nil ((13612 . 13618) 13555 (13554 . 13555) 13554) nil (25721 38998 239139 156000) 0 nil])
([nil nil ((#("*** 
" 0 2 (fontified t face org-hide keymap (keymap)) 2 3 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 3 4 (fontified t keymap (keymap) face org-level-3) 4 5 (fontified t)) . 13614) (undo-tree-id1865 . 1) (undo-tree-id1866 . -4) (undo-tree-id1867 . -5) (undo-tree-id1868 . -3) 13617) nil (25721 38998 239133 9000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13554 . 13555) (#("
" 0 1 (fontified nil)) . -13559) (13554 . 13560)) nil (25721 38998 239118 412000) 0 nil])
([nil nil ((13796 . 13804) (13787 . 13796) (#(" " 0 1 (fontified t)) . -13787) (undo-tree-id1815 . -1) (#("p" 0 1 (fontified t)) . -13788) (undo-tree-id1816 . -1) 13789 (13779 . 13789) (#("t" 0 1 (fontified t)) . -13779) (undo-tree-id1817 . -1) 13780 (13774 . 13780) (#("e" 0 1 (fontified t)) . -13774) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (#("o" 0 1 (fontified t)) . -13775) (undo-tree-id1820 . -1) (#("p" 0 1 (fontified t)) . -13776) (undo-tree-id1821 . -1) 13777 (13771 . 13777) (13766 . 13771) (13765 . 13766) (#("e" 0 1 (fontified t)) . -13765) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (#("r" 0 1 (fontified t)) . -13766) (undo-tree-id1824 . -1) 13767 (13759 . 13767) (#(" " 0 1 (fontified t)) . -13759) (undo-tree-id1825 . -1) (#("p" 0 1 (fontified t)) . -13760) (undo-tree-id1826 . -1) 13761 (13752 . 13761) (#("k" 0 1 (fontified t)) . -13752) (undo-tree-id1827 . -1) 13753 (13752 . 13753) (#("o" 0 1 (fontified t)) . -13752) (undo-tree-id1828 . -1) (#("l" 0 1 (fontified t)) . -13753) (undo-tree-id1829 . -1) 13754 (13747 . 13754) (#("i" 0 1 (fontified t)) . -13747) (undo-tree-id1830 . -1) (#("t" 0 1 (fontified t)) . -13748) (undo-tree-id1831 . -1) (#("s" 0 1 (fontified t)) . -13749) (undo-tree-id1832 . -1) (#(" " 0 1 (fontified t)) . -13750) (undo-tree-id1833 . -1) 13751 (13747 . 13751) (13746 . 13747) (13727 . 13746) (#("t" 0 1 (fontified t)) . -13727) (undo-tree-id1834 . -1) (#("e" 0 1 (fontified t)) . -13728) (undo-tree-id1835 . -1) 13729 (13710 . 13729) (13689 . 13710) (#("a" 0 1 (fontified t)) . -13689) (undo-tree-id1836 . -1) (#("g" 0 1 (fontified t)) . -13690) (undo-tree-id1837 . -1) 13691 (13687 . 13691) (13686 . 13687) (13676 . 13686) (#("t" 0 1 (fontified t)) . -13676) (undo-tree-id1838 . -1) (#(" " 0 1 (fontified t)) . -13677) (undo-tree-id1839 . -1) 13678 (13676 . 13678) (#(" " 0 1 (fontified t)) . -13676) (undo-tree-id1840 . -1) 13677 (13664 . 13677) (#("b" 0 1 (fontified t)) . -13664) (undo-tree-id1841 . -1) (#("o" 0 1 (fontified t)) . -13665) (undo-tree-id1842 . -1) (#("d" 0 1 (fontified t)) . -13666) (undo-tree-id1843 . -1) (#("e" 0 1 (fontified t)) . -13667) (undo-tree-id1844 . -1) 13668 (13663 . 13668) (13650 . 13663) (13649 . 13650) (#("i" 0 1 (fontified t)) . -13649) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (#("n" 0 1 (fontified t)) . -13650) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (#("g" 0 1 (fontified t)) . -13651) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (#("
" 0 1 (fontified t)) . -13652) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) 13653 (13652 . 13653) (#("process" 0 7 (fontified nil)) . 13652) (undo-tree-id1853 . -7) (undo-tree-id1854 . -7) (13642 . 13652) 13649 (13643 . 13649) (#("r" 0 1 (fontified t)) . -13643) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) 13644 (13642 . 13644) (13623 . 13642) (#("-" 0 1 (fontified t)) . -13623) (undo-tree-id1857 . -1) (#(" " 0 1 (fontified t)) . -13624) (undo-tree-id1858 . -1) 13625 (13623 . 13625) (13622 . 13623) (13610 . 13622) (13589 . 13610) (#("i" 0 1 (fontified t face org-level-3)) . -13589) (undo-tree-id1859 . -1) (#("s" 0 1 (fontified t face org-level-3)) . -13590) (undo-tree-id1860 . -1) (#("n" 0 1 (fontified t face org-level-3)) . -13591) (undo-tree-id1861 . -1) (#("g" 0 1 (fontified t face org-level-3)) . -13592) (undo-tree-id1862 . -1) (#(" " 0 1 (fontified t face org-level-3)) . -13593) (undo-tree-id1863 . -1) (#("r" 0 1 (fontified t face org-level-3)) . -13594) (undo-tree-id1864 . -1) 13595 (13580 . 13595) (13559 . 13580)) nil (25721 38998 239089 567000) 0 nil])
([nil nil ((13776 . 13778) (#("d" 0 1 (fontified t)) . -13776) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (#("o" 0 1 (fontified t)) . -13777) (undo-tree-id1812 . -1) 13778 (13772 . 13778) (#("property" 0 8 (fontified t)) . 13772) (undo-tree-id1813 . -7) (undo-tree-id1814 . -4) 13776) nil (25721 38998 238915 376000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -13857) (undo-tree-id1791 . -1) (#("j" 0 1 (fontified t)) . -13858) (undo-tree-id1792 . -1) 13859 (13857 . 13859) (13856 . 13857) (13855 . 13856) (#("e" 0 1 (fontified t)) . -13855) (undo-tree-id1793 . -1) (#("d" 0 1 (fontified t)) . -13856) (undo-tree-id1794 . -1) (#("
" 0 1 (fontified t)) . -13857) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) 13858 (13857 . 13858) (13842 . 13857) (13823 . 13842) (#("o" 0 1 (fontified t)) . -13823) (undo-tree-id1797 . -1) 13824 (13823 . 13824) (13818 . 13823) (13817 . 13818) (#("f" 0 1 (fontified t)) . -13817) (undo-tree-id1798 . -1) 13818 (13802 . 13818) (#("p" 0 1 (fontified t)) . -13802) (undo-tree-id1799 . -1) 13803 (13802 . 13803) (#(" " 0 1 (fontified t)) . -13802) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (#("p" 0 1 (fontified t)) . -13803) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (#("a" 0 1 (fontified t)) . -13804) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (#("s" 0 1 (fontified t)) . -13805) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (#("s" 0 1 (fontified t)) . -13806) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) 13807 (13802 . 13807)) nil (25721 38998 238889 534000) 0 nil])
([nil nil ((13861 . 13862) (13859 . 13861) (#("o" 0 1 (fontified t)) . -13859) (undo-tree-id1786 . -1) 13860 (13857 . 13860) (13856 . 13857) (#("
" 0 1 (fontified t)) . -13856) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (#(" " 0 1 (fontified t)) . -13857) (undo-tree-id1789 . -1) (#(" " 0 1 (fontified t)) . -13858) (undo-tree-id1790 . -1) 13859 (13856 . 13859) 13747) nil (25721 38998 238828 979000) 0 nil])
([nil nil ((#("q" 0 1 (fontified nil)) . -13907) 13908 (13907 . 13908) (13906 . 13907) 13905 (13900 . 13906) (13879 . 13900) (#("t" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -13879) 13880 (13874 . 13880) (#("src" 0 3 (fontified nil)) . 13884) (13862 . 13884) 13865 (13862 . 13865)) nil (25721 38998 238683 6000) 0 nil])
([nil nil ((#("insertBefore()." 0 15 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 13887) (undo-tree-id1781 . -14) (undo-tree-id1782 . -14) (undo-tree-id1783 . -14) (undo-tree-id1784 . -14) (undo-tree-id1785 . -14) 13901) nil (25721 38998 238673 18000) 0 nil])
([nil nil ((13887 . 13888)) nil (25721 38998 238660 97000) 0 nil])
([nil nil ((13893 . 13900) (#("c" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -13893) (undo-tree-id1779 . -1) 13894 (13890 . 13894) (#("v" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -13890) (undo-tree-id1780 . -1) 13891 (13887 . 13891)) nil (25721 38998 238655 417000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14022 . 14023) (nil fontified nil 13906 . 14023) (13906 . 14023)) nil (25721 38998 238644 941000) 0 nil])
([nil nil ((14023 . 14024) 14022) nil (25721 38998 238640 611000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14163 . 14164) (nil fontified nil 14024 . 14164) (14024 . 14164)) nil (25721 38998 238636 210000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14044) (undo-tree-id1774 . -1) 14045 (14044 . 14045) (14043 . 14044) (#("s" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14043) (undo-tree-id1775 . -1) 14044 (14038 . 14044) (14036 . 14038) (#("i" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14036) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) 14037 (14031 . 14037) (#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14031) (undo-tree-id1778 . -1) 14032 (14024 . 14032) (14023 . 14024) 14008) nil (25721 38998 238628 667000) 0 nil])
([nil nil ((14024 . 14032) (14023 . 14024) 14021) nil (25721 38998 238609 600000) 0 nil])
([nil nil ((14047 . 14067) (14044 . 14047) (#("d" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14044) (undo-tree-id1765 . -1) (#("o" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14045) (undo-tree-id1766 . -1) (#("c" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14046) (undo-tree-id1767 . -1) (#("u" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14047) (undo-tree-id1768 . -1) (#("m" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14048) (undo-tree-id1769 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14049) (undo-tree-id1770 . -1) (#("n" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14050) (undo-tree-id1771 . -1) (#("t" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14051) (undo-tree-id1772 . -1) (#("." 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14052) (undo-tree-id1773 . -1) 14053) nil (25721 38998 238600 520000) 0 nil])
([nil nil ((#("document
" 0 8 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 8 9 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 14024) (undo-tree-id1762 . -8) (undo-tree-id1763 . -9) (undo-tree-id1764 . -7) 14031) nil (25721 38998 238572 94000) 0 nil])
([nil nil ((#("document.body.innerHTML" 0 23 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 14035) (undo-tree-id1760 . -22) (undo-tree-id1761 . -3)) nil (25721 38998 238561 198000) 0 nil])
([nil nil ((14064 . 14066) (14058 . 14064) (14047 . 14058) (14044 . 14047) (#("querySelector." 0 14 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14044) (undo-tree-id1439 . -13) (undo-tree-id1440 . -13) (undo-tree-id1441 . -13) (undo-tree-id1442 . -13) (undo-tree-id1443 . -14) 14058 (14057 . 14058) (#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14057) (undo-tree-id1444 . -1) 14058 (14057 . 14058) (#("query" 0 5 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 14057) (undo-tree-id1445 . -5) (undo-tree-id1446 . -5) (undo-tree-id1447 . -5) (undo-tree-id1448 . -5) (undo-tree-id1449 . -5) (14044 . 14057) 14049 (#("-" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14049) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (#("r" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14050) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (#("e" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14051) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (#("p" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14052) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (#("l" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14053) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (#("a" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14054) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (#("c" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14055) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14056) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (#("-" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14057) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (#("h" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14058) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14059) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (#("l" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14060) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (#("p" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14061) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14062) (undo-tree-id1515 . -1) 14063 (14062 . 14063) (#("query-replace-from-to-separator" 0 31 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14062) (undo-tree-id1516 . -31) (undo-tree-id1517 . -31) (14044 . 14062) 14075 (#("query-replace-from-history-variable" 0 35 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14075) (undo-tree-id1518 . -35) (undo-tree-id1519 . -35) (14044 . 14075) 14079 (#("query-replace-descr" 0 19 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14079) (undo-tree-id1520 . -19) (undo-tree-id1521 . -19) (14044 . 14079) 14063 (#("query-replace-defaults" 0 22 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14063) (undo-tree-id1522 . -22) (undo-tree-id1523 . -22) (14044 . 14063) 14066 (#("query-replace-compile-replacement" 0 33 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14066) (undo-tree-id1524 . -33) (undo-tree-id1525 . -33) (14044 . 14066) 14077 (#("query-replace--split-string" 0 27 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14077) (undo-tree-id1526 . -27) (undo-tree-id1527 . -27) (14044 . 14077) 14071 (#("query-replace" 0 13 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14071) (undo-tree-id1528 . -13) (undo-tree-id1529 . -13) (14044 . 14071) 14057 (#("query-fontset" 0 13 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14057) (undo-tree-id1530 . -13) (undo-tree-id1531 . -13) (14044 . 14057) 14057 (#("query-font" 0 10 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14057) (undo-tree-id1532 . -10) (undo-tree-id1533 . -10) (14044 . 14057) 14054 (#("query" 0 5 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14054) (undo-tree-id1534 . -5) (undo-tree-id1535 . -5) (14044 . 14054) 14049 (#("quail-use-package" 0 17 (fontified nil)) . 14049) (undo-tree-id1536 . -17) (undo-tree-id1537 . -17) (14044 . 14049) 14061 (#("quail-update-leim-list-file" 0 27 (fontified nil)) . 14061) (undo-tree-id1538 . -27) (undo-tree-id1539 . -27) (14044 . 14061) 14071 (#("quail-title" 0 11 (fontified nil)) . 14071) (undo-tree-id1540 . -11) (undo-tree-id1541 . -11) (14044 . 14071) 14055 (#("quail-show-keyboard-layout" 0 26 (fontified nil)) . 14055) (undo-tree-id1542 . -26) (undo-tree-id1543 . -26) (14044 . 14055) 14070 (#("quail-show-key" 0 14 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14070) (undo-tree-id1544 . -14) (undo-tree-id1545 . -14) (14044 . 14070) 14058 (#("quail-set-keyboard-layout" 0 25 (fontified nil)) . 14058) (undo-tree-id1546 . -25) (undo-tree-id1547 . -25) (14044 . 14058) 14069 (#("quail-install-map" 0 17 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14069) (undo-tree-id1548 . -17) (undo-tree-id1549 . -17) (14044 . 14069) 14061 (#("quail-install-decode-map" 0 24 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14061) (undo-tree-id1550 . -24) (undo-tree-id1551 . -24) (14044 . 14061) 14068 (#("quail-defrule-internal" 0 22 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14068) (undo-tree-id1552 . -22) (undo-tree-id1553 . -22) (14044 . 14068) 14066 (#("quail-defrule" 0 13 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14066) (undo-tree-id1554 . -13) (undo-tree-id1555 . -13) (14044 . 14066) 14057 (#("quail-define-rules" 0 18 (fontified nil)) . 14057) (undo-tree-id1556 . -18) (undo-tree-id1557 . -18) (14044 . 14057) 14062 (#("quail-define-package" 0 20 (fontified nil)) . 14062) (undo-tree-id1558 . -20) (undo-tree-id1559 . -20) (14044 . 14062) 14064 (#("quail" 0 5 (fontified nil)) . 14064) (undo-tree-id1560 . -5) (undo-tree-id1561 . -5) (14044 . 14064) 14049 (#("q" 0 1 (fontified nil)) . 14049) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (14044 . 14049) (#("qu" 0 2 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14045) (undo-tree-id1564 . -2) (undo-tree-id1565 . -2) (14044 . 14045) 14046 (#("q" 0 1 (fontified nil)) . 14046) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (14044 . 14046) (#("quit" 0 4 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14045) (undo-tree-id1568 . -4) (undo-tree-id1569 . -4) (14044 . 14045) 14048 (#("q" 0 1 (fontified nil)) . 14048) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (14044 . 14048) (#("querySelector" 0 13 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14045) (undo-tree-id1572 . -13) (undo-tree-id1573 . -13) (undo-tree-id1574 . -13) (14044 . 14045) 14057 (#("q" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14057) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (14044 . 14057) 14045 (#("quoted-printable-encode-region" 0 30 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14045) (undo-tree-id1577 . -30) (undo-tree-id1578 . -30) (14044 . 14045) 14074 (#("quoted-printable-decode-string" 0 30 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14074) (undo-tree-id1579 . -30) (undo-tree-id1580 . -30) (14044 . 14074) 14074 (#("quoted-printable-decode-region" 0 30 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14074) (undo-tree-id1581 . -30) (undo-tree-id1582 . -30) (14044 . 14074) 14074 (#("quoted-insert" 0 13 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14074) (undo-tree-id1583 . -13) (undo-tree-id1584 . -13) (14044 . 14074) 14057 (#("quote" 0 5 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14057) (undo-tree-id1585 . -5) (undo-tree-id1586 . -5) (14044 . 14057) 14049 (#("quit-windows-on" 0 15 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14049) (undo-tree-id1587 . -15) (undo-tree-id1588 . -15) (14044 . 14049) 14059 (#("quit-window-hook" 0 16 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14059) (undo-tree-id1589 . -16) (undo-tree-id1590 . -16) (14044 . 14059) 14060 (#("quit-window" 0 11 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14060) (undo-tree-id1591 . -11) (undo-tree-id1592 . -11) (14044 . 14060) 14055 (#("quit-restore-window" 0 19 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14055) (undo-tree-id1593 . -19) (undo-tree-id1594 . -19) (14044 . 14055) 14063 (#("quit-process" 0 12 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14063) (undo-tree-id1595 . -12) (undo-tree-id1596 . -12) (14044 . 14063) 14056 (#("quit-flag" 0 9 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14056) (undo-tree-id1597 . -9) (undo-tree-id1598 . -9) (14044 . 14056) 14053 (#("quietly-read-abbrev-file" 0 24 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14053) (undo-tree-id1599 . -24) (undo-tree-id1600 . -24) (14044 . 14053) 14068 (#("quickurl-reread-hook-postfix" 0 28 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14068) (undo-tree-id1601 . -28) (undo-tree-id1602 . -28) (14044 . 14068) 14072 (#("quickurl-list-mode" 0 18 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14072) (undo-tree-id1603 . -18) (undo-tree-id1604 . -18) (14044 . 14072) 14062 (#("quickurl-list" 0 13 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14062) (undo-tree-id1605 . -13) (undo-tree-id1606 . -13) (14044 . 14062) 14057 (#("quickurl-edit-urls" 0 18 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14057) (undo-tree-id1607 . -18) (undo-tree-id1608 . -18) (14044 . 14057) 14062 (#("quickurl-browse-url-ask" 0 23 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14062) (undo-tree-id1609 . -23) (undo-tree-id1610 . -23) (14044 . 14062) 14067 (#("quickurl-browse-url" 0 19 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14067) (undo-tree-id1611 . -19) (undo-tree-id1612 . -19) (14044 . 14067) 14063 (#("quickurl-ask" 0 12 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14063) (undo-tree-id1613 . -12) (undo-tree-id1614 . -12) (14044 . 14063) 14056 (#("quickurl-add-url" 0 16 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14056) (undo-tree-id1615 . -16) (undo-tree-id1616 . -16) (14044 . 14056) 14060 (#("quickurl" 0 8 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14060) (undo-tree-id1617 . -8) (undo-tree-id1618 . -8) (14044 . 14060) 14052 (#("quick-calc" 0 10 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14052) (undo-tree-id1619 . -10) (undo-tree-id1620 . -10) (14044 . 14052) 14054 (#("queue-tail--cmacro" 0 18 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14054) (undo-tree-id1621 . -18) (undo-tree-id1622 . -18) (14044 . 14054) 14062 (#("queue-tail" 0 10 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14062) (undo-tree-id1623 . -10) (undo-tree-id1624 . -10) (14044 . 14062) 14054 (#("queue-prepend" 0 13 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14054) (undo-tree-id1625 . -13) (undo-tree-id1626 . -13) (14044 . 14054) 14057 (#("queue-p--cmacro" 0 15 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14057) (undo-tree-id1627 . -15) (undo-tree-id1628 . -15) (14044 . 14057) 14059 (#("queue-p" 0 7 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14059) (undo-tree-id1629 . -7) (undo-tree-id1630 . -7) (14044 . 14059) 14051 (#("queue-nth" 0 9 (fontified nil)) . 14051) (undo-tree-id1631 . -9) (undo-tree-id1632 . -9) (14044 . 14051) 14053 (#("queue-length" 0 12 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14053) (undo-tree-id1633 . -12) (undo-tree-id1634 . -12) (14044 . 14053) 14056 (#("queue-last" 0 10 (fontified nil)) . 14056) (undo-tree-id1635 . -10) (undo-tree-id1636 . -10) (14044 . 14056) 14054 (#("queue-iter" 0 10 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14054) (undo-tree-id1637 . -10) (undo-tree-id1638 . -10) (14044 . 14054) 14054 (#("queue-head--cmacro" 0 18 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14054) (undo-tree-id1639 . -18) (undo-tree-id1640 . -18) (14044 . 14054) 14062 (#("queue-head" 0 10 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14062) (undo-tree-id1641 . -10) (undo-tree-id1642 . -10) (14044 . 14062) 14054 (#("queue-first" 0 11 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14054) (undo-tree-id1643 . -11) (undo-tree-id1644 . -11) (14044 . 14054) 14055 (#("queue-enqueue" 0 13 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14055) (undo-tree-id1645 . -13) (undo-tree-id1646 . -13) (14044 . 14055) 14057 (#("queue-empty" 0 11 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14057) (undo-tree-id1647 . -11) (undo-tree-id1648 . -11) (14044 . 14057) 14055 (#("queue-dequeue" 0 13 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14055) (undo-tree-id1649 . -13) (undo-tree-id1650 . -13) (14044 . 14055) 14057 (#("queue-create--cmacro" 0 20 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14057) (undo-tree-id1651 . -20) (undo-tree-id1652 . -20) (14044 . 14057) 14064 (#("queue-create" 0 12 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14064) (undo-tree-id1653 . -12) (undo-tree-id1654 . -12) (14044 . 14064) 14056 (#("queue-copy" 0 10 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14056) (undo-tree-id1655 . -10) (undo-tree-id1656 . -10) (14044 . 14056) 14054 (#("queue-clear" 0 11 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14054) (undo-tree-id1657 . -11) (undo-tree-id1658 . -11) (14044 . 14054) 14055 (#("queue-append" 0 12 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14055) (undo-tree-id1659 . -12) (undo-tree-id1660 . -12) (14044 . 14055) 14056 (#("queue-all" 0 9 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14056) (undo-tree-id1661 . -9) (undo-tree-id1662 . -9) (14044 . 14056) 14053 (#("queue--when-generators" 0 22 (fontified nil)) . 14053) (undo-tree-id1663 . -22) (undo-tree-id1664 . -22) (14044 . 14053) 14066 (#("queue" 0 5 (fontified nil)) . 14066) (undo-tree-id1665 . -5) (undo-tree-id1666 . -5) (14044 . 14066) 14049 (#("question-mark" 0 13 (fontified nil)) . 14049) (undo-tree-id1667 . -13) (undo-tree-id1668 . -13) (14044 . 14049) 14057 (#("query-replace-to-history-variable" 0 33 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14057) (undo-tree-id1669 . -33) (undo-tree-id1670 . -33) (14044 . 14057) 14077 (#("query-replace-skip-read-only" 0 28 (fontified nil)) . 14077) (undo-tree-id1671 . -28) (undo-tree-id1672 . -28) (14044 . 14077) 14072 (#("query-replace-show-replacement" 0 30 (fontified nil)) . 14072) (undo-tree-id1673 . -30) (undo-tree-id1674 . -30) (14044 . 14072) 14074 (#("query-replace-regexp-eval" 0 25 (fontified nil)) . 14074) (undo-tree-id1675 . -25) (undo-tree-id1676 . -25) (14044 . 14074) 14069 (#("query-replace-regexp" 0 20 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14069) (undo-tree-id1677 . -20) (undo-tree-id1678 . -20) (14044 . 14069) 14064 (#("query-replace-read-to" 0 21 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14064) (undo-tree-id1679 . -21) (undo-tree-id1680 . -21) (14044 . 14064) 14065 (#("query-replace-read-from" 0 23 (fontified nil)) . 14065) (undo-tree-id1681 . -23) (undo-tree-id1682 . -23) (14044 . 14065) 14067 (#("query-replace-read-args" 0 23 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14067) (undo-tree-id1683 . -23) (undo-tree-id1684 . -23) (14044 . 14067) 14067 (#("query-replace-map" 0 17 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14067) (undo-tree-id1685 . -17) (undo-tree-id1686 . -17) (14044 . 14067) 14061 (#("query-replace-lazy-highlight" 0 28 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14061) (undo-tree-id1687 . -28) (undo-tree-id1688 . -28) (14044 . 14061) 14072 (#("query-replace-interactive" 0 25 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14072) (undo-tree-id1689 . -25) (undo-tree-id1690 . -25) (14044 . 14072) 14069 (#("query-replace-history" 0 21 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14069) (undo-tree-id1691 . -21) (undo-tree-id1692 . -21) (14044 . 14069) 14065 (#("query-replace-highlight" 0 23 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14065) (undo-tree-id1693 . -23) (undo-tree-id1694 . -23) (14044 . 14065) 14067 (#("query-replace-help" 0 18 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14067) (undo-tree-id1695 . -18) (undo-tree-id1696 . -18) (14044 . 14067) 14062 (#("query-replace-from-to-separator" 0 31 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14062) (undo-tree-id1697 . -31) (undo-tree-id1698 . -31) (14044 . 14062) 14075 (#("query-replace-from-history-variable" 0 35 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14075) (undo-tree-id1699 . -35) (undo-tree-id1700 . -35) (14044 . 14075) 14079 (#("query-replace-descr" 0 19 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14079) (undo-tree-id1701 . -19) (undo-tree-id1702 . -19) (14044 . 14079) 14063 (#("query-replace-defaults" 0 22 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14063) (undo-tree-id1703 . -22) (undo-tree-id1704 . -22) (14044 . 14063) 14066 (#("query-replace-compile-replacement" 0 33 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14066) (undo-tree-id1705 . -33) (undo-tree-id1706 . -33) (14044 . 14066) 14077 (#("query-replace--split-string" 0 27 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14077) (undo-tree-id1707 . -27) (undo-tree-id1708 . -27) (14044 . 14077) 14071 (#("query-replace" 0 13 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14071) (undo-tree-id1709 . -13) (undo-tree-id1710 . -13) (14044 . 14071) 14057 (#("query-fontset" 0 13 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14057) (undo-tree-id1711 . -13) (undo-tree-id1712 . -13) (14044 . 14057) 14057 (#("query-font" 0 10 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14057) (undo-tree-id1713 . -10) (undo-tree-id1714 . -10) (14044 . 14057) 14054 (#("query" 0 5 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14054) (undo-tree-id1715 . -5) (undo-tree-id1716 . -5) (14044 . 14054) 14049 (#("quail-use-package" 0 17 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14049) (undo-tree-id1717 . -17) (undo-tree-id1718 . -17) (14044 . 14049) 14061 (#("quail-update-leim-list-file" 0 27 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14061) (undo-tree-id1719 . -27) (undo-tree-id1720 . -27) (14044 . 14061) 14071 (#("quail-title" 0 11 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14071) (undo-tree-id1721 . -11) (undo-tree-id1722 . -11) (14044 . 14071) 14055 (#("quail-show-keyboard-layout" 0 26 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14055) (undo-tree-id1723 . -26) (undo-tree-id1724 . -26) (14044 . 14055) 14070 (#("quail-show-key" 0 14 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14070) (undo-tree-id1725 . -14) (undo-tree-id1726 . -14) (14044 . 14070) 14058 (#("quail-set-keyboard-layout" 0 25 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14058) (undo-tree-id1727 . -25) (undo-tree-id1728 . -25) (14044 . 14058) 14069 (#("quail-install-map" 0 17 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14069) (undo-tree-id1729 . -17) (undo-tree-id1730 . -17) (14044 . 14069) 14061 (#("quail-install-decode-map" 0 24 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14061) (undo-tree-id1731 . -24) (undo-tree-id1732 . -24) (14044 . 14061) 14068 (#("quail-defrule-internal" 0 22 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14068) (undo-tree-id1733 . -22) (undo-tree-id1734 . -22) (14044 . 14068) 14066 (#("quail-defrule" 0 13 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14066) (undo-tree-id1735 . -13) (undo-tree-id1736 . -13) (14044 . 14066) 14057 (#("quail-define-rules" 0 18 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14057) (undo-tree-id1737 . -18) (undo-tree-id1738 . -18) (14044 . 14057) 14062 (#("quail-define-package" 0 20 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14062) (undo-tree-id1739 . -20) (undo-tree-id1740 . -20) (14044 . 14062) 14064 (#("quail" 0 5 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14064) (undo-tree-id1741 . -5) (undo-tree-id1742 . -5) (14044 . 14064) 14049 (#("q" 0 1 (fontified nil)) . 14049) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (14044 . 14049) (#("qu" 0 2 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14045) (undo-tree-id1745 . -2) (undo-tree-id1746 . -2) (14044 . 14045) 14046 (#("q" 0 1 (fontified nil)) . 14046) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (14044 . 14046) (#("quit" 0 4 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14045) (undo-tree-id1749 . -4) (undo-tree-id1750 . -4) (14044 . 14045) 14048 (#("q" 0 1 (fontified nil)) . 14048) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (14044 . 14048) (#("querySelector" 0 13 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 14045) (undo-tree-id1753 . -13) (undo-tree-id1754 . -13) (undo-tree-id1755 . -13) (14044 . 14045) 14057 (#("q" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 14057) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (14044 . 14057) 14045 (14043 . 14045) (#("s" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14043) (undo-tree-id1758 . -1) (#("=" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14044) (undo-tree-id1759 . -1) 14045 (14044 . 14045) (14038 . 14044) (14035 . 14038)) nil (25721 38998 238383 376000) 0 nil])
([nil nil ((14189 . 14195) (14188 . 14189) (14179 . 14188) (14176 . 14179) (14168 . 14176) (14164 . 14168) (14163 . 14164) (#("b" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14163) (undo-tree-id1418 . -1) 14164 (14163 . 14164) (#("b" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14163) (undo-tree-id1419 . -1) (#("v" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14164) (undo-tree-id1420 . -1) 14165 (14161 . 14165) (14160 . 14161) (14159 . 14160) (#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14159) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) 14160 (14159 . 14160) (14157 . 14159) (#("_" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14157) (undo-tree-id1423 . -1) 14158 (14155 . 14158) (14154 . 14155) (14133 . 14154) (14126 . 14133) (#("b" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14126) (undo-tree-id1424 . -1) 14127 (14120 . 14127) (#("d" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14120) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (#("v" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14121) (undo-tree-id1427 . -1) 14122 (14121 . 14122) (#("i" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14121) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (#("v" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14122) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) 14123 (14121 . 14123) (14120 . 14121) (14119 . 14120) (#("'" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14119) (undo-tree-id1432 . -1) (#("s" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14120) (undo-tree-id1433 . -1) 14121 (14119 . 14121) (14101 . 14119) (14100 . 14101) (14099 . 14100) (14092 . 14099) (14085 . 14092) (14077 . 14085) (14070 . 14077) (#("r" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14070) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14071) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) 14072 (14070 . 14072) (#("p" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14070) (undo-tree-id1438 . -1) 14071 (14068 . 14071) (14065 . 14068)) nil (25721 38998 237410 871000) 0 nil])
([nil nil ((14165 . 14170) (14159 . 14165)) nil (25721 38998 237316 372000) 0 nil])
([nil nil ((14359 . 14361) (t 25721 38998 277804 270000)) nil (25721 39185 738910 893000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face org-block-end-line)) . -14358) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (#("m" 0 1 (fontified t)) . -14359) (undo-tree-id1903 . -1) (#("x" 0 1 (fontified t)) . -14360) (undo-tree-id1904 . -1) 14361) nil (25721 39185 738904 747000) 0 nil])
([nil nil ((14358 . 14359)) nil (25721 39185 738869 755000) 0 nil])
([nil nil ((14390 . 14394) (14388 . 14390) (14367 . 14388) (#(" " 0 1 (fontified t)) . -14367) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (#("n" 0 1 (fontified t)) . -14368) (undo-tree-id1913 . -1) 14369 (14368 . 14369) (#("t" 0 1 (fontified t)) . -14368) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (#("e" 0 1 (fontified t)) . -14369) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (#("s" 0 1 (fontified t)) . -14370) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (#("t" 0 1 (fontified t)) . -14371) (undo-tree-id1920 . -1) 14372 (14360 . 14372) (14359 . 14360) (t 25721 39185 773520 738000) 14359) nil (25721 39266 574522 623000) 0 nil])
([nil nil ((#("insertBefore(" 0 13 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 14422) (undo-tree-id1906 . -12) (undo-tree-id1907 . -12) (undo-tree-id1908 . -12) (undo-tree-id1909 . -12) (undo-tree-id1910 . -12) 14434) nil (25721 39266 574486 164000) 0 nil])
([nil nil ((14422 . 14434) (#(")" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 14422) (undo-tree-id1905 . 1)) nil (25721 39266 574235 914000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14980 . 14981) (nil fontified nil 14440 . 14981) (14440 . 14981)) nil (25721 39266 573964 431000) 0 nil])
([nil nil ((14599 . 14614) (t 25721 39266 608850 19000)) nil (25721 39382 324483 184000) 0 nil])
([nil nil ((14663 . 14676) (#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14663) (undo-tree-id1976 . -1) 14664 (14660 . 14664)) nil (25721 39382 324478 505000) 0 nil])
([nil nil ((14708 . 14726) (14707 . 14708)) nil (25721 39382 324468 377000) 0 nil])
([nil nil ((14814 . 14828) (#("a" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14814) (undo-tree-id1944 . -1) (#("p" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14815) (undo-tree-id1945 . -1) (#("n" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14816) (undo-tree-id1946 . -1) 14817 (14813 . 14817) (#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14813) (undo-tree-id1947 . -1) (#("p" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14814) (undo-tree-id1948 . -1) (#("s" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14815) (undo-tree-id1949 . -1) (#("a" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14816) (undo-tree-id1950 . -1) 14817 (14813 . 14817) (14797 . 14813) (#("a" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14797) (undo-tree-id1951 . -1) (#("n" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14798) (undo-tree-id1952 . -1) 14799 (14794 . 14799) (14773 . 14794) (#("r" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14773) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14774) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (#("p" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14775) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) 14776 (#("l" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14776) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (#("a" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14777) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (#("c" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14778) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14779) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14780) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (#("s" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14781) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (#("p" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14782) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (#("a" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14783) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (#("n" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14784) (undo-tree-id1975 . -1) 14785 (14770 . 14785)) nil (25721 39382 324376 603000) 0 nil])
([nil nil ((14921 . 14929) (14905 . 14921) (#("l" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14905) (undo-tree-id1928 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14906) (undo-tree-id1929 . -1) 14907 (14904 . 14907) (#("c" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14904) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (#("r" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14905) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14906) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (#("a" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14907) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (#("t" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14908) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14909) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14910) (undo-tree-id1942 . -1) 14911 (14904 . 14911) (#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14904) (undo-tree-id1943 . -1) 14905 (14902 . 14905) (14901 . 14902)) nil (25721 39382 323973 883000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14991) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (#("o" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14992) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (#("d" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14993) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) 14994 (14990 . 14994) (14980 . 14990) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -14980) (undo-tree-id1927 . -1) 14981 (14977 . 14981)) nil (25721 39382 323919 964000) 0 nil])
([nil nil ((15073 . 15075) (15052 . 15073) (15036 . 15052)) nil (25721 39382 323730 966000) 0 nil])
([nil nil ((15181 . 15186) (t 25721 39382 357619 256000)) nil (25721 39798 564402 379000) 0 nil])
([nil nil ((15250 . 15251) (15248 . 15250) (#("s" 0 1 (fontified t)) . -15248) (undo-tree-id2056 . -1) (#("e" 0 1 (fontified t)) . -15249) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (#("s" 0 1 (fontified t)) . -15250) (undo-tree-id2059 . -1) 15251 (15231 . 15251) (15221 . 15231) (#("=" 0 1 (fontified t)) . -15221) (undo-tree-id2060 . -1) (#(" " 0 1 (fontified t)) . -15222) (undo-tree-id2061 . -1) 15223 (15221 . 15223) (#("0" 0 1 (fontified t)) . -15221) (undo-tree-id2062 . -1) (#(" " 0 1 (fontified t)) . -15222) (undo-tree-id2063 . -1) 15223 (15221 . 15223) (15220 . 15221) (15216 . 15220) (15211 . 15216) (15195 . 15211) (#("g" 0 1 (fontified t face org-level-3)) . -15195) (undo-tree-id2064 . -1) (#("i" 0 1 (fontified t face org-level-3)) . -15196) (undo-tree-id2065 . -1) (#("n" 0 1 (fontified t face org-level-3)) . -15197) (undo-tree-id2066 . -1) 15198 (15186 . 15198) (#(" " 0 1 (fontified t face org-level-3)) . -15186) (undo-tree-id2067 . -1) (#("1" 0 1 (fontified t face org-level-3)) . -15187) (undo-tree-id2068 . -1) (#("." 0 1 (fontified t face org-level-3)) . -15188) (undo-tree-id2069 . -1) (#("2" 0 1 (fontified t face org-level-3)) . -15189) (undo-tree-id2070 . -1) 15190 (15186 . 15190)) nil (25721 39798 564386 736000) 0 nil])
([nil nil ((#("q" 0 1 (fontified nil)) . -15296) 15297 (15296 . 15297) (15295 . 15296) 15294 (15289 . 15295) (15268 . 15289) (#("t" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -15268) 15269 (15263 . 15269) (#("src" 0 3 (fontified nil)) . 15273) (15251 . 15273) 15254 (15251 . 15254)) nil (25721 39798 564093 427000) 0 nil])
([nil nil ((#("insertBefore" 0 12 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 15276) (undo-tree-id1977 . -11) (undo-tree-id1978 . -11) (undo-tree-id1979 . -11) (undo-tree-id1980 . -11) (undo-tree-id1981 . -12) (undo-tree-id1982 . -11) (undo-tree-id1983 . -10) (undo-tree-id1984 . -11) (undo-tree-id1985 . -11) (undo-tree-id1986 . -11) (undo-tree-id1987 . -11) (undo-tree-id1988 . -11) (undo-tree-id1989 . -11) (undo-tree-id1990 . -11) (undo-tree-id1991 . -11) (undo-tree-id1992 . -11) (undo-tree-id1993 . -11) (undo-tree-id1994 . -11) (undo-tree-id1995 . -11) (undo-tree-id1996 . -11) (undo-tree-id1997 . -11) (undo-tree-id1998 . -11) (undo-tree-id1999 . -11) (undo-tree-id2000 . -11) (undo-tree-id2001 . -11) (undo-tree-id2002 . -11) (undo-tree-id2003 . -11) (undo-tree-id2004 . -11) (undo-tree-id2005 . -11) (undo-tree-id2006 . -11) (undo-tree-id2007 . -11) (undo-tree-id2008 . -11) (undo-tree-id2009 . -11) (undo-tree-id2010 . -11) (undo-tree-id2011 . -11) (undo-tree-id2012 . -11) (undo-tree-id2013 . -11) (undo-tree-id2014 . -11) (undo-tree-id2015 . -11) (undo-tree-id2016 . -11) (undo-tree-id2017 . -11) (undo-tree-id2018 . -11) (undo-tree-id2019 . -11) (undo-tree-id2020 . -11) (undo-tree-id2021 . -11) (undo-tree-id2022 . -11) (undo-tree-id2023 . -11) (undo-tree-id2024 . -11) (undo-tree-id2025 . -11) (undo-tree-id2026 . -11) (undo-tree-id2027 . -11) (undo-tree-id2028 . -11) (undo-tree-id2029 . -11) (undo-tree-id2030 . -11) (undo-tree-id2031 . -11) (undo-tree-id2032 . -11) (undo-tree-id2033 . -11) (undo-tree-id2034 . -11) (undo-tree-id2035 . -11) (undo-tree-id2036 . -11) (undo-tree-id2037 . -11) (undo-tree-id2038 . -11) (undo-tree-id2039 . -11) (undo-tree-id2040 . -11) (undo-tree-id2041 . -11) (undo-tree-id2042 . -11) (undo-tree-id2043 . -11) (undo-tree-id2044 . -11) (undo-tree-id2045 . -11) (undo-tree-id2046 . -11) (undo-tree-id2047 . -11) (undo-tree-id2048 . -11) (undo-tree-id2049 . -11) (undo-tree-id2050 . -11) (undo-tree-id2051 . -11) (undo-tree-id2052 . -11) (undo-tree-id2053 . -11) (undo-tree-id2054 . -12) (undo-tree-id2055 . -12) 15287) nil (25721 39798 564073 803000) 0 nil])
([nil nil ((15279 . 15285) (15276 . 15279)) nil (25721 39798 563774 907000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -15293) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) 15294 (15293 . 15294) (t 25721 39798 596173 481000)) nil (25721 39805 246961 460000) 0 nil])
([nil nil ((15293 . 15294)) nil (25721 39805 246709 842000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -15293) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) 15294) nil (25721 39805 246325 677000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -15293) (undo-tree-id2477 . -1) 15294 (15293 . 15294) (t 25721 39805 279657 155000)) nil (25721 61115 316124 307000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15384 . 15385) (nil fontified nil 15293 . 15385) (15293 . 15385)) nil (25721 61115 316118 161000) 0 nil])
([nil nil ((15385 . 15386) 15384) nil (25721 61115 316114 459000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15411 . 15412) (nil fontified nil 15386 . 15412) (15386 . 15412)) nil (25721 61115 316111 177000) 0 nil])
([nil nil ((15385 . 15386) 15383) nil (25721 61115 316107 405000) 0 nil])
([nil nil ((15386 . 15397)) nil (25721 61115 316104 542000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -15395) (undo-tree-id2475 . -1) (#("l" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -15396) (undo-tree-id2476 . -1) 15397) nil (25721 61115 316100 700000) 0 nil])
([nil nil ((15403 . 15409) (15395 . 15403)) nil (25721 61115 316093 437000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -15408) (undo-tree-id2474 . -1) 15409) nil (25721 61115 316089 595000) 0 nil])
([nil nil ((15408 . 15409)) nil (25721 61115 316084 776000) 0 nil])
([nil nil ((15411 . 15422) (15409 . 15411)) nil (25721 61115 316082 472000) 0 nil])
([nil nil ((15422 . 15423)) nil (25721 61115 316079 189000) 0 nil])
([nil nil ((15423 . 15431)) nil (25721 61115 316075 906000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -15429) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (#("l" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -15430) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) 15431) nil (25721 61115 316071 646000) 0 nil])
([nil nil ((15433 . 15437) (15429 . 15433)) nil (25721 61115 316060 541000) 0 nil])
([nil nil ((15437 . 15440)) nil (25721 61115 316057 189000) 0 nil])
([nil nil ((15440 . 15442)) nil (25721 61115 316054 325000) 0 nil])
([nil nil ((15442 . 15456)) nil (25721 61115 316050 973000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -15455) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) 15456) nil (25721 61115 316047 271000) 0 nil])
([nil nil ((15457 . 15461) (15455 . 15457)) nil (25721 61115 316038 681000) 0 nil])
([nil nil ((15461 . 15462)) nil (25721 61115 316035 259000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -15461) (undo-tree-id2467 . -1) 15462) nil (25721 61115 316031 906000) 0 nil])
([nil nil ((15472 . 15473) (15466 . 15472) (15461 . 15466)) nil (25721 61115 316025 271000) 0 nil])
([nil nil ((15473 . 15475)) nil (25721 61115 316020 941000) 0 nil])
([nil nil ((15475 . 15476)) nil (25721 61115 316018 147000) 0 nil])
([nil nil ((15476 . 15477)) nil (25721 61115 316014 376000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -15476) (undo-tree-id2466 . -1) 15477) nil (25721 61115 316009 627000) 0 nil])
([nil nil ((15479 . 15483) (15476 . 15479)) nil (25721 61115 316447 744000) 0 nil])
([nil nil ((15505 . 15507) (15499 . 15505) (15495 . 15499) (15491 . 15495) (15488 . 15491) (15483 . 15488)) nil (25721 61165 912691 875000) 0 nil] [nil nil ((15483 . 15485)) ((#(".l" 0 2 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 15483) (undo-tree-id2478 . -2) (undo-tree-id2479 . -2) (undo-tree-id2480 . -2)) (25721 61115 315973 798000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15499 . 15500) (nil fontified nil 15475 . 15500) (15475 . 15500) 15474) nil (25721 61165 912682 447000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 15575 . 15576) (nil fontified nil 15532 . 15576) (15532 . 15576) 15531) nil (25721 61165 912667 81000) 0 nil])
([nil nil ((15426 . 15427) (t 25721 61165 949363 591000)) nil (25722 851 771534 130000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -15615) (undo-tree-id2481 . -1) 15616 (15615 . 15616) (t 25722 851 813378 915000)) nil (25722 931 168750 172000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15808 . 15809) (nil fontified nil 15615 . 15809) (15615 . 15809) (t 25722 931 207593 869000)) nil (25722 46845 651112 401000) 0 nil])
([nil nil ((15860 . 15863) (#("e" 0 1 (fontified nil)) . -15860) (undo-tree-id2585 . -1) (#("n" 0 1 (fontified nil)) . -15861) (undo-tree-id2586 . -1) (#("t" 0 1 (fontified nil)) . -15862) (undo-tree-id2587 . -1) (#("t" 0 1 (fontified nil)) . -15863) (undo-tree-id2588 . -1) 15864 (#("t" 0 1 (fontified nil)) . -15864) (undo-tree-id2589 . -1) (#("t" 0 1 (fontified nil)) . -15865) (undo-tree-id2590 . -1) (#("t" 0 1 (fontified nil)) . -15866) (undo-tree-id2591 . -1) (#("t" 0 1 (fontified nil)) . -15867) (undo-tree-id2592 . -1) (#("t" 0 1 (fontified nil)) . -15868) (undo-tree-id2593 . -1) (#("t" 0 1 (fontified nil)) . -15869) (undo-tree-id2594 . -1) (#("t" 0 1 (fontified nil)) . -15870) (undo-tree-id2595 . -1) (#("t" 0 1 (fontified nil)) . -15871) (undo-tree-id2596 . -1) (#("t" 0 1 (fontified nil)) . -15872) (undo-tree-id2597 . -1) (#("t" 0 1 (fontified nil)) . -15873) (undo-tree-id2598 . -1) (#("t" 0 1 (fontified nil)) . -15874) (undo-tree-id2599 . -1) (#("t" 0 1 (fontified nil)) . -15875) (undo-tree-id2600 . -1) (#("t" 0 1 (fontified nil)) . -15876) (undo-tree-id2601 . -1) (#("t" 0 1 (fontified nil)) . -15877) (undo-tree-id2602 . -1) (#("t" 0 1 (fontified t)) . -15878) (undo-tree-id2603 . -1) (#("t" 0 1 (fontified t)) . -15879) (undo-tree-id2604 . -1) (#("t" 0 1 (fontified t)) . -15880) (undo-tree-id2605 . -1) (#("t" 0 1 (fontified t)) . -15881) (undo-tree-id2606 . -1) (#("t" 0 1 (fontified nil)) . -15882) (undo-tree-id2607 . -1) (#("
" 0 1 (fontified t)) . -15883) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (#("
" 0 1 (fontified t)) . -15884) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) 15885 (15883 . 15885) (15863 . 15883) (15859 . 15863) (#("m" 0 1 (fontified t)) . -15859) (undo-tree-id2612 . -1) (#("n" 0 1 (fontified t)) . -15860) (undo-tree-id2613 . -1) (#("e" 0 1 (fontified t)) . -15861) (undo-tree-id2614 . -1) (#("t" 0 1 (fontified t)) . -15862) (undo-tree-id2615 . -1) (#("
" 0 1 (fontified t)) . -15863) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) 15864 (15863 . 15864) (15846 . 15863) (15839 . 15846) (#("u" 0 1 (fontified t)) . -15839) (undo-tree-id2618 . -1) 15840 (15838 . 15840) (15817 . 15838) (#("h" 0 1 (fontified t)) . -15817) (undo-tree-id2619 . -1) 15818 (15810 . 15818) (15809 . 15810) 15808) nil (25722 46845 651093 683000) 0 nil])
([nil nil ((16434 . 16435) (16433 . 16434) (#("t" 0 1 (fontified t)) . -16433) (undo-tree-id2486 . -1) 16434 (16425 . 16434) (16421 . 16425) (16415 . 16421) (16411 . 16415) (#("c" 0 1 (fontified t)) . -16411) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (#("h" 0 1 (fontified t)) . -16412) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (#("h" 0 1 (fontified t)) . -16413) (undo-tree-id2491 . -1) 16414 (16404 . 16414) (16383 . 16404) (#("n" 0 1 (fontified t)) . -16383) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (#("o" 0 1 (fontified t)) . -16384) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (#("d" 0 1 (fontified t)) . -16385) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (#("e" 0 1 (fontified t)) . -16386) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (#("-" 0 1 (fontified t)) . -16387) (undo-tree-id2500 . -1) (#("l" 0 1 (fontified t)) . -16388) (undo-tree-id2501 . -1) (#("i" 0 1 (fontified t)) . -16389) (undo-tree-id2502 . -1) (#("s" 0 1 (fontified t)) . -16390) (undo-tree-id2503 . -1) (#("t" 0 1 (fontified t)) . -16391) (undo-tree-id2504 . -1) (#(" " 0 1 (fontified t)) . -16392) (undo-tree-id2505 . -1) 16393 (16383 . 16393) (#("s" 0 1 (fontified t)) . -16383) (undo-tree-id2506 . -1) 16384 (16379 . 16384) (#("k" 0 1 (fontified t)) . -16379) (undo-tree-id2507 . -1) (#("e" 0 1 (fontified t)) . -16380) (undo-tree-id2508 . -1) 16381 (16379 . 16381) (#("i" 0 1 (fontified t)) . -16379) (undo-tree-id2509 . -1) (#("e" 0 1 (fontified t)) . -16380) (undo-tree-id2510 . -1) (#(" " 0 1 (fontified t)) . -16381) (undo-tree-id2511 . -1) (#("s" 0 1 (fontified t)) . -16382) (undo-tree-id2512 . -1) 16383 (16380 . 16383) (#("s" 0 1 (fontified t)) . -16380) (undo-tree-id2513 . -1) (#("e" 0 1 (fontified t)) . -16381) (undo-tree-id2514 . -1) 16382 (16380 . 16382) (16359 . 16380) (16358 . 16359) (16349 . 16358) (16330 . 16349) (#("a" 0 1 (fontified t face org-level-3)) . -16330) (undo-tree-id2515 . -1) (#("l" 0 1 (fontified t face org-level-3)) . -16331) (undo-tree-id2516 . -1) 16332 (16328 . 16332) (#("." 0 1 (fontified t face org-level-3)) . -16328) (undo-tree-id2517 . -1) 16329 (16321 . 16329) (16300 . 16321) (16295 . 16300) 16296 (16294 . 16296) (16286 . 16294) (#("e" 0 1 (fontified t)) . -16286) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (#(" " 0 1 (fontified t)) . -16287) (undo-tree-id2520 . -1) (#("l" 0 1 (fontified t)) . -16288) (undo-tree-id2521 . -1) 16289 (16286 . 16289) (#("h" 0 1 (fontified t)) . -16286) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (#(" " 0 1 (fontified t)) . -16287) (undo-tree-id2524 . -1) (#("l" 0 1 (fontified t)) . -16288) (undo-tree-id2525 . -1) 16289 (16273 . 16289) (16252 . 16273) (#("e" 0 1 (fontified t)) . -16252) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) 16253 (16246 . 16253) (16225 . 16246) (16204 . 16225) (16203 . 16204) (16200 . 16203) (#("f" 0 1 (fontified t)) . -16200) (undo-tree-id2528 . -1) 16201 (16189 . 16201) (16168 . 16189) (#("o" 0 1 (fontified t)) . -16168) (undo-tree-id2529 . -1) (#("s" 0 1 (fontified t)) . -16169) (undo-tree-id2530 . -1) 16170 (16153 . 16170) (#("r" 0 1 (fontified t)) . -16153) (undo-tree-id2531 . -1) 16154 (16148 . 16154) (16146 . 16148) (16145 . 16146) (16142 . 16145) (16137 . 16142) (16116 . 16137) (16115 . 16116) (16102 . 16115) (#("u" 0 1 (fontified t)) . -16102) (undo-tree-id2532 . -1) (#("y" 0 1 (fontified t)) . -16103) (undo-tree-id2533 . -1) (#(" " 0 1 (fontified t)) . -16104) (undo-tree-id2534 . -1) 16105 (16102 . 16105) (16101 . 16102) (#("y" 0 1 (fontified t)) . -16101) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (#(" " 0 1 (fontified t)) . -16102) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (#("a" 0 1 (fontified t)) . -16103) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (#("r" 0 1 (fontified t)) . -16104) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (#("r" 0 1 (fontified t)) . -16105) (undo-tree-id2543 . -1) 16106 (16097 . 16106) (#("n" 0 1 (fontified t)) . -16097) (undo-tree-id2544 . -1) 16098 (16089 . 16098) (#("not " 0 4 (fontified t)) . -16089) (undo-tree-id2545 . -4) (undo-tree-id2546 . -4) 16093 (#("real " 0 5 (fontified t)) . -16093) (undo-tree-id2547 . -5) (undo-tree-id2548 . -5) 16098 (#("array " 0 6 (fontified t)) . -16098) (undo-tree-id2549 . -2) (undo-tree-id2550 . -6) 16104 (16095 . 16104) (#("l" 0 1 (fontified t)) . -16095) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) 16096 (16085 . 16096) (#(" " 0 1 (fontified t)) . -16085) (undo-tree-id2553 . -1) 16086 (16079 . 16086) (#("r" 0 1 (fontified t)) . -16079) (undo-tree-id2554 . -1) (#("a" 0 1 (fontified t)) . -16080) (undo-tree-id2555 . -1) 16081 (16078 . 16081) (#("r" 0 1 (fontified t)) . -16078) (undo-tree-id2556 . -1) (#("e" 0 1 (fontified t)) . -16079) (undo-tree-id2557 . -1) 16080 (16066 . 16080) (16065 . 16066) (16058 . 16065) (16051 . 16058) (#("m" 0 1 (fontified t)) . -16051) (undo-tree-id2558 . -1) (#("u" 0 1 (fontified t)) . -16052) (undo-tree-id2559 . -1) 16053 (16046 . 16053) (#("x" 0 1 (fontified t)) . -16046) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (#(" " 0 1 (fontified t)) . -16047) (undo-tree-id2562 . -1) 16048 (16045 . 16048) (#("d" 0 1 (fontified t)) . -16045) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (#("o" 0 1 (fontified t)) . -16046) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) 16047 (16043 . 16047) (#("
" 0 1 (fontified t)) . -16043) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) 16044 (16043 . 16044) (16031 . 16043) (16015 . 16031) (16008 . 16015) (15987 . 16008) (#("r" 0 1 (fontified t)) . -15987) (undo-tree-id2569 . -1) (#(" " 0 1 (fontified t)) . -15988) (undo-tree-id2570 . -1) (#("e" 0 1 (fontified t)) . -15989) (undo-tree-id2571 . -1) 15990 (15988 . 15990) (#("e" 0 1 (fontified t)) . -15988) (undo-tree-id2572 . -1) (#(" " 0 1 (fontified t)) . -15989) (undo-tree-id2573 . -1) 15990 (15981 . 15990) (#("c" 0 1 (fontified t)) . -15981) (undo-tree-id2574 . -1) 15982 (15967 . 15982) (15953 . 15967) (#("p" 0 1 (fontified t)) . -15953) (undo-tree-id2575 . -1) (#("u" 0 1 (fontified t)) . -15954) (undo-tree-id2576 . -1) (#("=" 0 1 (fontified t)) . -15955) (undo-tree-id2577 . -1) 15956 (15955 . 15956) (#("p" 0 1 (fontified t)) . -15955) (undo-tree-id2578 . -1) 15956 (15955 . 15956) (15934 . 15955) (15933 . 15934) (15926 . 15933) (15905 . 15926) (#("m" 0 1 (fontified t face org-level-3)) . -15905) (undo-tree-id2579 . -1) 15906 (15902 . 15906) (15893 . 15902) (#("e" 0 1 (fontified t face org-level-3)) . -15893) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (#("l" 0 1 (fontified t face org-level-3)) . -15894) (undo-tree-id2582 . -1) (#("c" 0 1 (fontified t face org-level-3)) . -15895) (undo-tree-id2583 . -1) (#("t" 0 1 (fontified t face org-level-3)) . -15896) (undo-tree-id2584 . -1) 15897 (15892 . 15897) (15871 . 15892) (15866 . 15871) (15863 . 15866) 15862) nil (25722 46845 650982 635000) 0 nil])
([nil nil ((3802 . 3803) (#("n" 0 1 (fontified t)) . 3802)) nil (25722 46845 650714 864000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t)) . -3800) (undo-tree-id2485 . -1) 3801 (3800 . 3801) (3794 . 3800) 3775) nil (25722 46845 650710 673000) 0 nil])
([nil nil ((16426 . 16427) (#("n" 0 1 (fontified t)) . 16426)) nil (25722 46845 650701 594000) 0 nil])
([nil nil ((16441 . 16443)) nil (25722 46845 650696 775000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -16441) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (#("x" 0 1 (fontified t)) . -16442) (undo-tree-id2484 . -1) 16443) nil (25722 46845 650684 343000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -16779) (undo-tree-id1 . -1) 16780 (16779 . 16780) (t 25722 46845 693052 111000)) nil (25722 47655 987160 901000) 0 nil])
([nil nil ((16440 . 16441) 16366) nil (25722 47655 987152 311000) 0 nil])
([nil nil ((16441 . 16442)) nil (25722 47655 987148 50000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -16441) (undo-tree-id0 . -1) 16442) nil (25722 47655 987137 434000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -16441) (undo-tree-id39 . -1) 16442 (16441 . 16442) (#("x" 0 1 (fontified t)) . -16441) (undo-tree-id40 . -1) 16442 (16441 . 16442) (t 25722 47656 30270 383000)) nil (25722 52149 281437 382000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 16463) (undo-tree-id36 . -3) (16441 . 16463) 16444 (16441 . 16444) (#("s" 0 1 (fontified t)) . -16441) (undo-tree-id37 . -1) (#("r" 0 1 (fontified t)) . -16442) (undo-tree-id38 . -1) 16443 (16441 . 16443)) nil (25722 52149 281353 501000) 0 nil])
([nil nil ((16467 . 16483) (16466 . 16467) (#("document" 0 8 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -16466) (undo-tree-id33 . -8) 16474 (16453 . 16474) (#("h" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -16453) (undo-tree-id34 . -1) 16454 (16453 . 16454) (#(":" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -16453) (undo-tree-id35 . -1) 16454 (16453 . 16454)) nil (25722 52149 281340 161000) 0 nil])
([nil nil ((16466 . 16474)) nil (25722 52149 281327 380000) 0 nil])
([nil nil ((16491 . 16492) 16473) nil (25722 52149 281323 957000) 0 nil])
([nil nil ((17 . 18) 1) nil (25722 52149 281320 116000) 0 nil])
([nil nil ((18 . 401)) nil (25722 52149 281316 275000) 0 nil])
([nil nil ((17 . 18) 1) nil (25722 52149 281312 573000) 0 nil])
([nil nil ((59 . 64) (#("v" 0 1 (fontified t)) . -59) (undo-tree-id32 . -1) 60 (41 . 60) (20 . 41) (18 . 20)) nil (25722 52149 281307 754000) 0 nil])
([nil nil ((65 . 68) (#("r" 0 1 (fontified t)) . -65) (undo-tree-id31 . -1) 66 (65 . 66) (64 . 65) 63) nil (25722 52149 281299 233000) 0 nil])
([nil nil ((#("src
" 0 3 (fontified t) 3 4 (fontified t)) . 65) (undo-tree-id27 . -4) (undo-tree-id28 . 1) (undo-tree-id29 . -1) (undo-tree-id30 . -3) 66) nil (25722 52149 281290 992000) 0 nil])
([nil nil ((64 . 65) 19) nil (25722 52149 281275 347000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 87) (65 . 87) 68 (65 . 68)) nil (25722 52149 281271 575000) 0 nil])
([nil nil ((90 . 107) (#("document" 0 8 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -90) (undo-tree-id22 . -1) (undo-tree-id23 . -8) 98 (77 . 98) (#("h" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -77) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 78 (77 . 78) (#(":" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -77) (undo-tree-id26 . -1) 78 (77 . 78)) nil (25722 52149 281264 870000) 0 nil])
([nil nil ((95 . 98) (90 . 95)) nil (25722 52149 281249 994000) 0 nil])
([nil nil ((115 . 116) 97) nil (25722 52149 281245 803000) 0 nil])
([nil nil ((#("(fset 'inserting\\ an\\ html\\ tangle\\ block
   (kmacro-lambda-form [?\\; ?x ?\\( ?s ?r ?c ?\\C-x ?a ?e escape ?k ?k ?j ?A ?: backspace ?h backspace ?h ?t ?m ?l ?  ?: ?t ?a ?n ?g ?l ?e ?  ?d ?o ?c ?u ?m ?e ?n ?t C-backspace ?c ?h ?i ?l ?d ?N ?o ?d ?e ?s ?\\( ?\\) ?. ?h ?t ?m ?l escape ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?i ?l ?i ?s ?t ?i ?n ?g ?_ escape ?o escape ?i] 0 \"%d\"))
" 0 1 (fontified t) 1 7 (fontified t) 7 41 (fontified t) 41 42 (fontified t) 42 45 (fontified t) 45 65 (fontified t) 65 66 (fontified t) 66 372 (fontified t) 372 373 (fontified t) 373 374 (fontified t) 374 375 (fontified t) 375 376 (fontified t) 376 380 (fontified t) 380 381 (fontified t) 381 383 (fontified t)) . 127) (undo-tree-id15 . -42) (undo-tree-id16 . -383) (undo-tree-id17 . -42) (undo-tree-id18 . -382) (undo-tree-id19 . -42) (undo-tree-id20 . -42) (undo-tree-id21 . -42) 169) nil (25722 52149 281241 54000) 0 nil])
([nil nil ((nil rear-nonsticky nil 116 . 117) (#("
" 0 1 (fontified nil)) . -499) (116 . 500)) nil (25722 52149 281224 711000) 0 nil])
([nil nil ((#("s" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -116) (undo-tree-id14 . -1) 117 (116 . 117)) nil (25722 52149 281220 31000) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t)) . 116) (undo-tree-id12 . -1) (undo-tree-id13 . 1)) nil (25722 52149 281212 977000) 0 nil])
([nil nil ((#(" html :tangle listing_childNodes().html" 0 39 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 76) (undo-tree-id10 . -38) (undo-tree-id11 . -14)) nil (25722 52149 281204 316000) 0 nil])
([nil nil ((83 . 87) (78 . 83) (#("a" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -78) (undo-tree-id4 . -1) (#("m" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -79) (undo-tree-id5 . -1) (#("c" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -80) (undo-tree-id6 . -1) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -81) (undo-tree-id7 . -1) 82 (77 . 82) (#("w" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -77) (undo-tree-id8 . -1) (#("m" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -78) (undo-tree-id9 . -1) 79 (76 . 79)) nil (25722 52149 281192 792000) 0 nil])
([nil nil ((17 . 18) 16) nil (25722 52149 281171 141000) 0 nil])
([nil nil ((16957 . 16959)) nil (25722 52149 281165 344000) 0 nil])
([nil nil ((#("," 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -16957) (undo-tree-id2 . -1) (#("x" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -16958) (undo-tree-id3 . -1) 16959) nil (25722 52149 281154 449000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17049 . 17050) (nil fontified nil 16957 . 17050) (16957 . 17050) (t 25722 52149 321850 390000)) nil (25722 52248 329756 591000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17074 . 17075) (nil fontified nil 17050 . 17075) (17050 . 17075)) nil (25722 52248 329752 261000) 0 nil])
([nil nil ((17117 . 17118) (17116 . 17117) (17115 . 17116) (#("chil" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 17115) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (17105 . 17115) 17109 (17098 . 17109) (#("." 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -17098) (undo-tree-id46 . -1) 17099 (17098 . 17099) (#("q" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 17098) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (17085 . 17098) 17086 (17085 . 17086) (17084 . 17085) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -17084) (undo-tree-id49 . -1) 17085 (17079 . 17085) (17075 . 17079) (17054 . 17075) (17050 . 17054) (17049 . 17050) 17047) nil (25722 52248 329743 670000) 0 nil])
([nil nil ((17149 . 17150) (17148 . 17149) (17131 . 17148) (17130 . 17131) (#("y" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -17130) (undo-tree-id42 . -1) 17131 (17117 . 17131)) nil (25722 52248 329715 524000) 0 nil])
([nil nil ((17151 . 17152)) nil (25722 52248 329704 279000) 0 nil])
([nil nil ((#("x" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -17151) (undo-tree-id41 . -1) 17152) nil (25722 52341 532997 243000) 0 nil])
([nil nil ((#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 17090) (t 25722 52248 368434 722000)) nil (25722 52360 128999 774000) 0 nil] [nil nil ((17090 . 17091) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 17090) (t 25722 52248 368434 722000)) ((17090 . 17091) (#("S" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 17090)) (25722 52341 452103 551000) 0 nil])
([nil nil ((17090 . 17091)) nil (25722 52360 128988 320000) 0 nil])
([nil nil ((#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 17107)) ((17107 . 17108)) (25722 52341 451745 888000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11301) (undo-tree-id70 . -1) (t 25722 52360 166830 196000)) nil (25722 52443 340649 989000) 0 nil])
nil
([nil nil ((17259 . 17260) (#("s" 0 1 (face org-level-3 fontified t)) . -17259) (undo-tree-id51 . -1) 17260 (17259 . 17260) (17245 . 17259) (#("c" 0 1 (face org-level-3 fontified t)) . -17245) (undo-tree-id52 . -1) 17246 (17243 . 17246) (#("j" 0 1 (face org-level-3 fontified t)) . -17243) (undo-tree-id53 . -1) 17244 (17240 . 17244) (#("o" 0 1 (face org-level-3 fontified t)) . -17240) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("r" 0 1 (face org-level-3 fontified t)) . -17241) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#(" " 0 1 (face org-level-3 fontified t)) . -17242) (undo-tree-id58 . -1) 17243 (17239 . 17243) (#("TMLcolle" 0 8 (face org-level-3 fontified nil)) . 17239) (undo-tree-id59 . -8) (undo-tree-id60 . -8) (17226 . 17239) 17234 (17229 . 17234) (#("C" 0 1 (face org-level-3 fontified t)) . -17229) (undo-tree-id61 . -1) (#("O" 0 1 (face org-level-3 fontified nil)) . -17230) (undo-tree-id62 . -1) (#("L" 0 1 (face org-level-3 fontified t)) . -17231) (undo-tree-id63 . -1) (#("L" 0 1 (face org-level-3 fontified t)) . -17232) (undo-tree-id64 . -1) (#("E" 0 1 (face org-level-3 fontified t)) . -17233) (undo-tree-id65 . -1) (#("C" 0 1 (face org-level-3 fontified t)) . -17234) (undo-tree-id66 . -1) (#("T" 0 1 (face org-level-3 fontified t)) . -17235) (undo-tree-id67 . -1) (#("I" 0 1 (face org-level-3 fontified t)) . -17236) (undo-tree-id68 . -1) (#("O" 0 1 (face org-level-3 fontified t)) . -17237) (undo-tree-id69 . -1) (#("N" 0 1 (face org-level-3 fontified nil)) . -17238) 17239 (17229 . 17239) (17225 . 17229) (17213 . 17225) (17192 . 17213) (17188 . 17192) (17187 . 17188) 16766) nil (25722 52443 340634 693000) 0 nil])
([nil nil ((17260 . 17261)) nil (25722 52443 340587 61000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -17260) (undo-tree-id50 . -1) 17261) nil (25722 52443 340578 51000) 0 nil])
([nil nil ((17493 . 17494) (17478 . 17493) (17471 . 17478) (#(" " 0 1 (fontified t)) . -17471) (undo-tree-id98 . -1) 17472 (17454 . 17472) (#("e" 0 1 (fontified t)) . -17454) (undo-tree-id99 . -1) 17455 (17443 . 17455) (17426 . 17443) (#("d" 0 1 (fontified t)) . -17426) (undo-tree-id100 . -1) (#("o" 0 1 (fontified t)) . -17427) (undo-tree-id101 . -1) (#("s" 0 1 (fontified t)) . -17428) (undo-tree-id102 . -1) 17429 (17424 . 17429) (#("h" 0 1 (fontified t)) . -17424) (undo-tree-id103 . -1) (#("t" 0 1 (fontified t)) . -17425) (undo-tree-id104 . -1) 17426 (17405 . 17426) (17396 . 17405) (#("s" 0 1 (fontified t)) . -17396) (undo-tree-id105 . -1) (#("j" 0 1 (fontified t)) . -17397) (undo-tree-id106 . -1) 17398 (17386 . 17398) (#("t" 0 1 (fontified t)) . -17386) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("g" 0 1 (fontified t)) . -17387) (undo-tree-id109 . -1) 17388 (17387 . 17388) (#(" " 0 1 (fontified t)) . -17387) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("t" 0 1 (fontified nil)) . -17388) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("h" 0 1 (fontified t)) . -17389) (undo-tree-id114 . -1) (undo-tree-id115 . -1) 17390 (17378 . 17390) (17376 . 17378) (17375 . 17376) (17367 . 17375) (17359 . 17367) (#(" " 0 1 (fontified t)) . -17359) (undo-tree-id116 . -1) 17360 (17359 . 17360) (17348 . 17359) (17339 . 17348) (#(" " 0 1 (fontified t)) . -17339) (undo-tree-id117 . -1) 17340 (17329 . 17340) (17328 . 17329) (17318 . 17328) (17305 . 17318) (#("i" 0 1 (fontified t)) . -17305) (undo-tree-id118 . -1) 17306 (17292 . 17306) (17271 . 17292) (#("m" 0 1 (fontified t)) . -17271) (undo-tree-id119 . -1) (#("r" 0 1 (fontified t)) . -17272) (undo-tree-id120 . -1) 17273 (17270 . 17273) (#("i" 0 1 (fontified t)) . -17270) (undo-tree-id121 . -1) (#("r" 0 1 (fontified t)) . -17271) (undo-tree-id122 . -1) (#("m" 0 1 (fontified t)) . -17272) (undo-tree-id123 . -1) 17273 (17269 . 17273) (#("n" 0 1 (fontified t)) . -17269) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (#("v" 0 1 (fontified t)) . -17270) (undo-tree-id126 . -1) (undo-tree-id127 . -1) 17271 (17270 . 17271) (17260 . 17270) (t 25722 52443 376316 808000)) nil (25722 52685 350066 805000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17885 . 17886) (nil fontified nil 17494 . 17886) (17494 . 17886)) nil (25722 52685 349952 335000) 0 nil])
([nil nil ((17492 . 17494) (#("c
" 0 2 (fontified t)) . 17492)) nil (25722 52685 349947 516000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -17887) (undo-tree-id97 . -1) 17888 (17887 . 17888) (17886 . 17887) 17764) nil (25722 52685 349936 690000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 17909) (17887 . 17909) 17890 (17887 . 17890) (#("." 0 1 (fontified t)) . -17887) (undo-tree-id96 . -1) 17888 (17887 . 17888)) nil (25722 52685 347976 165000) 0 nil])
([nil nil ((17912 . 17929) (#("document" 0 8 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -17912) (undo-tree-id95 . -8) 17920 (17899 . 17920) (#("h" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -17899) 17900 (17899 . 17900) (#(":" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil)) . -17899) 17900 (17899 . 17900)) nil (25722 52685 347966 107000) 0 nil])
([nil nil ((17912 . 17920)) nil (25722 52685 347957 168000) 0 nil])
([nil nil ((17937 . 17938) 17919) nil (25722 52685 347953 815000) 0 nil])
([nil nil ((#("listing_childNodes(" 0 19 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 17912) (undo-tree-id89 . -18) (undo-tree-id90 . -18) (undo-tree-id91 . -18) (undo-tree-id92 . -19) (undo-tree-id93 . -18) (undo-tree-id94 . -18) 17930) nil (25722 52685 347948 996000) 0 nil])
([nil nil ((17932 . 17937) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -17932) (undo-tree-id79 . -1) 17933 (17930 . 17933) (#("p" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -17930) (undo-tree-id80 . -1) 17931 (17928 . 17931) (#("-" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -17928) (undo-tree-id81 . -1) 17929 (17928 . 17929) (#("+" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -17928) (undo-tree-id82 . -1) (#("t" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -17929) (undo-tree-id83 . -1) 17930 (17920 . 17930) (#("a" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -17920) (undo-tree-id84 . -1) (#("r" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -17921) (undo-tree-id85 . -1) (#("r" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -17922) (undo-tree-id86 . -1) 17923 (17920 . 17923) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -17920) (undo-tree-id87 . -1) 17921 (17912 . 17921) (#(")" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 17912) (undo-tree-id88 . 1)) nil (25722 52685 347925 739000) 0 nil])
([nil nil ((17942 . 17943) 17936) nil (25722 52685 347895 148000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18227 . 18228) (nil fontified nil 17943 . 18228) (17943 . 18228)) nil (25722 52685 347889 910000) 0 nil])
([nil nil ((18269 . 18288) (#("h" 0 1 (fontified t)) . -18269) (undo-tree-id71 . -1) (#("t" 0 1 (fontified t)) . -18270) (undo-tree-id72 . -1) 18271 (18270 . 18271) (#("d" 0 1 (fontified t)) . -18270) (undo-tree-id73 . -1) (#("o" 0 1 (fontified t)) . -18271) (undo-tree-id74 . -1) (#("t" 0 1 (fontified t)) . -18272) (undo-tree-id75 . -1) 18273 (18267 . 18273) (18266 . 18267) (#("m" 0 1 (fontified t)) . -18266) (undo-tree-id76 . -1) 18267 (18253 . 18267) (#("e" 0 1 (fontified t)) . -18253) (undo-tree-id77 . -1) (#("s" 0 1 (fontified t)) . -18254) (undo-tree-id78 . -1) 18255 (18241 . 18255) (18240 . 18241) 18240) nil (25722 52685 347875 523000) 0 nil])
([nil nil ((18306 . 18322) (18296 . 18306) (#("6" 0 1 (face org-level-3 fontified t)) . -18296) (undo-tree-id299 . -1) 18297 (18294 . 18297) (18288 . 18294) 18289 (18288 . 18289) (t 25722 52685 391553 254000) 18286) nil (25722 52803 339462 190000) 0 nil])
([nil nil ((18558 . 18559) (18552 . 18558) (#("e" 0 1 (fontified t)) . -18552) (undo-tree-id128 . -1) (#("i" 0 1 (fontified t)) . -18553) (undo-tree-id129 . -1) (#("b" 0 1 (fontified t)) . -18554) (undo-tree-id130 . -1) 18555 (18549 . 18555) (#("s" 0 1 (fontified t)) . -18549) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("u" 0 1 (fontified t)) . -18550) (undo-tree-id133 . -1) (#(" " 0 1 (fontified t)) . -18551) (undo-tree-id134 . -1) 18552 (18541 . 18552) (#("0" 0 1 (fontified t)) . -18541) (undo-tree-id135 . -1) 18542 (18541 . 18542) (18540 . 18541) (18532 . 18540) (#("s" 0 1 (fontified t)) . -18532) (undo-tree-id136 . -1) 18533 (18527 . 18533) (18526 . 18527) (18523 . 18526) (18521 . 18523) (#("-" 0 1 (fontified t)) . -18521) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("s" 0 1 (fontified t)) . -18522) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("e" 0 1 (fontified t)) . -18523) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#("x" 0 1 (fontified t)) . -18524) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("p" 0 1 (fontified t)) . -18525) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#("-" 0 1 (fontified t)) . -18526) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("s" 0 1 (fontified t)) . -18527) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#("e" 0 1 (fontified t)) . -18528) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("t" 0 1 (fontified t)) . -18529) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("u" 0 1 (fontified t)) . -18530) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (#("p" 0 1 (fontified nil)) . -18531) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("-" 0 1 (fontified nil)) . -18532) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#("p" 0 1 (fontified nil)) . -18533) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#("r" 0 1 (fontified nil)) . -18534) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (#("o" 0 1 (fontified t)) . -18535) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (#("p" 0 1 (fontified t)) . -18536) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (#("s" 0 1 (fontified t)) . -18537) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) 18538 (#("last-repeatable-command" 0 23 (fontified nil)) . 18538) (undo-tree-id222 . -23) (undo-tree-id223 . -23) (undo-tree-id224 . -23) (18517 . 18538) 18540 (#("last-prefix-arg" 0 15 (fontified nil)) . 18540) (undo-tree-id225 . -15) (undo-tree-id226 . -15) (undo-tree-id227 . -15) (18517 . 18540) 18532 (#("last-nonminibuffer-frame" 0 24 (fontified nil)) . 18532) (undo-tree-id228 . -24) (undo-tree-id229 . -24) (undo-tree-id230 . -24) (18517 . 18532) 18541 (#("last-nonmenu-event" 0 18 (fontified nil)) . 18541) (undo-tree-id231 . -18) (undo-tree-id232 . -18) (undo-tree-id233 . -18) (18517 . 18541) 18535 (#("last-next-selection-coding-system" 0 33 (fontified nil)) . 18535) (undo-tree-id234 . -33) (undo-tree-id235 . -33) (undo-tree-id236 . -33) (18517 . 18535) 18550 (#("last-kbd-macro" 0 14 (fontified nil)) . 18550) (undo-tree-id237 . -14) (undo-tree-id238 . -14) (undo-tree-id239 . -14) (18517 . 18550) 18531 (#("last-input-event" 0 16 (fontified nil)) . 18531) (undo-tree-id240 . -16) (undo-tree-id241 . -16) (undo-tree-id242 . -16) (18517 . 18531) 18533 (#("last-event-frame" 0 16 (fontified nil)) . 18533) (undo-tree-id243 . -16) (undo-tree-id244 . -16) (undo-tree-id245 . -16) (18517 . 18533) 18533 (#("last-command-event" 0 18 (fontified nil)) . 18533) (undo-tree-id246 . -18) (undo-tree-id247 . -18) (undo-tree-id248 . -18) (18517 . 18533) 18535 (#("last-command" 0 12 (fontified nil)) . 18535) (undo-tree-id249 . -12) (undo-tree-id250 . -12) (undo-tree-id251 . -12) (18517 . 18535) 18529 (#("last-coding-system-used" 0 23 (fontified nil)) . 18529) (undo-tree-id252 . -23) (undo-tree-id253 . -23) (undo-tree-id254 . -23) (18517 . 18529) 18540 (#("last-coding-system-specified" 0 28 (fontified nil)) . 18540) (undo-tree-id255 . -28) (undo-tree-id256 . -28) (undo-tree-id257 . -28) (18517 . 18540) 18545 (#("last-code-conversion-error" 0 26 (fontified nil)) . 18545) (undo-tree-id258 . -26) (undo-tree-id259 . -26) (undo-tree-id260 . -26) (18517 . 18545) 18543 (#("last-buffer" 0 11 (fontified nil)) . 18543) (undo-tree-id261 . -11) (undo-tree-id262 . -11) (undo-tree-id263 . -11) (18517 . 18543) 18528 (#("last-abbrev-text" 0 16 (fontified nil)) . 18528) (undo-tree-id264 . -16) (undo-tree-id265 . -16) (undo-tree-id266 . -16) (18517 . 18528) 18533 (#("last-abbrev-location" 0 20 (fontified nil)) . 18533) (undo-tree-id267 . -20) (undo-tree-id268 . -20) (undo-tree-id269 . -20) (18517 . 18533) 18537 (#("last-abbrev" 0 11 (fontified nil)) . 18537) (undo-tree-id270 . -11) (undo-tree-id271 . -11) (undo-tree-id272 . -11) (18517 . 18537) 18528 (#("last" 0 4 (fontified nil)) . 18528) (undo-tree-id273 . -4) (undo-tree-id274 . -3) (undo-tree-id275 . -4) (18517 . 18528) 18521 (18515 . 18521) (#("0" 0 1 (fontified t)) . -18515) (undo-tree-id276 . -1) 18516 (18515 . 18516) (18514 . 18515) (#("first" 0 5 (fontified nil)) . 18514) (undo-tree-id277 . -5) (undo-tree-id278 . -5) (undo-tree-id279 . -5) (18504 . 18514) 18509 (#(" " 0 1 (fontified t)) . -18509) (undo-tree-id280 . -1) 18510 (18504 . 18510) (#(" " 0 1 (fontified t)) . -18504) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (#("f" 0 1 (fontified t)) . -18505) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (#("i" 0 1 (fontified t)) . -18506) (undo-tree-id285 . -1) (undo-tree-id286 . -1) 18507 (18504 . 18507) (18502 . 18504) (18501 . 18502) (18497 . 18501) (#(" " 0 1 (fontified t)) . -18497) (undo-tree-id287 . -1) (#("n" 0 1 (fontified t)) . -18498) (undo-tree-id288 . -1) 18499 (18489 . 18499) (18488 . 18489) (18477 . 18488) (18456 . 18477) (#("t" 0 1 (fontified t)) . -18456) (undo-tree-id289 . -1) (#(" " 0 1 (fontified t)) . -18457) (undo-tree-id290 . -1) 18458 (18443 . 18458) (18422 . 18443) (#("a" 0 1 (fontified t)) . -18422) (undo-tree-id291 . -1) (#("g" 0 1 (fontified t)) . -18423) (undo-tree-id292 . -1) (#("e" 0 1 (fontified t)) . -18424) (undo-tree-id293 . -1) (#("t" 0 1 (fontified t)) . -18425) (undo-tree-id294 . -1) (#(" " 0 1 (fontified t)) . -18426) (undo-tree-id295 . -1) 18427 (18424 . 18427) (18406 . 18424) (18385 . 18406) (#(")" 0 1 (fontified t)) . -18385) (undo-tree-id296 . -1) 18386 (18381 . 18386) (18372 . 18381) (18353 . 18372) (18332 . 18353) (#("o" 0 1 (fontified t)) . -18332) (undo-tree-id297 . -1) 18333 (18327 . 18333) (#("f" 0 1 (fontified t)) . -18327) (undo-tree-id298 . -1) 18328 (18327 . 18328) (18322 . 18327) 18321) nil (25722 52803 339122 830000) 0 nil])
([nil nil ((#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18229) (undo-tree-id300 . -1) 18230 (18229 . 18230) (t 25722 52803 376690 596000)) nil (25722 52819 311134 232000) 0 nil])
([nil nil ((18559 . 18561) (t 25722 52819 352827 389000)) nil (25722 53980 206293 259000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -18562) (undo-tree-id316 . -2) 18564 (18561 . 18564) 18560) nil (25722 53980 206288 510000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 18584) (18562 . 18584) 18565 (18562 . 18565)) nil (25722 53980 206076 961000) 0 nil])
([nil nil ((18587 . 18604) (#("document" 0 8 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -18587) (undo-tree-id312 . -8) 18595 (18574 . 18595) (#("h" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -18574) (undo-tree-id313 . -1) (undo-tree-id314 . -1) 18575 (18574 . 18575) (#(":" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -18574) (undo-tree-id315 . -1) 18575 (18574 . 18575)) nil (25722 53980 206069 698000) 0 nil])
([nil nil ((18587 . 18595)) nil (25722 53980 206055 520000) 0 nil])
([nil nil ((18612 . 18613) 18594) nil (25722 53980 206052 168000) 0 nil])
([nil nil ((#("listing_childNodes(" 0 19 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 18587) (undo-tree-id307 . -18) (undo-tree-id308 . -18) (undo-tree-id309 . -18) (undo-tree-id310 . -18) (undo-tree-id311 . -18) 18605) nil (25722 53980 206047 418000) 0 nil])
([nil nil ((#(")" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 18587) (undo-tree-id306 . 1)) nil (25722 53980 206033 939000) 0 nil])
([nil nil ((18609 . 18612) (18597 . 18609) (#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -18597) (undo-tree-id301 . -1) 18598 (18588 . 18598) (#("a" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -18588) (undo-tree-id302 . -1) (#("r" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -18589) (undo-tree-id303 . -1) 18590 (18587 . 18590) (#("r" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -18587) (undo-tree-id304 . -1) (#("t" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -18588) (undo-tree-id305 . -1) 18589 (18587 . 18589)) nil (25722 53980 206025 977000) 0 nil])
([nil nil ((#("a" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 18607)) nil (25722 53980 205996 85000) 0 nil])
([nil nil ((#("_" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 18607)) nil (25722 53980 205992 384000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18770 . 18771) (nil fontified nil 18616 . 18771) (18616 . 18771)) nil (25722 53980 205989 101000) 0 nil])
([nil nil ((18771 . 18772) 18770) nil (25722 53980 205984 911000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18797 . 18798) (nil fontified nil 18772 . 18798) (18772 . 18798)) nil (25722 53980 206601 956000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18806 . 18807) (nil fontified nil 18772 . 18807) (18772 . 18807)) nil (25722 54210 684239 45000) 0 nil] [nil nil ((nil rear-nonsticky nil 18785 . 18786) (nil fontified nil 18751 . 18786) (18751 . 18786) 18750) ((#("//What is the parentNode of the ul?" 0 34 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 34 35 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky nil fontified nil)) . 18751) (undo-tree-id317 . -34) (undo-tree-id318 . -34) (undo-tree-id319 . -34) (undo-tree-id320 . -34) (nil rear-nonsticky t 18785 . 18786)) (25722 53980 205968 987000) 0 nil])
([nil nil ((18807 . 18808) 18806) nil (25722 54210 684234 365000) 0 nil])
nil
([nil nil ((18808 . 18809)) nil (25722 54210 684231 13000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18843 . 18844) (nil fontified nil 18809 . 18844) (18809 . 18844) 18808) nil (25722 54210 684226 752000) 0 nil])
([nil nil ((18844 . 18845) 18843) nil (25722 54210 684222 352000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18879 . 18880) (nil fontified nil 18845 . 18880) (18845 . 18880)) nil (25722 54210 684218 510000) 0 nil])
([nil nil ((18880 . 18881) 18879) nil (25722 54210 684213 761000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18922 . 18923) (nil fontified nil 18881 . 18923) (18881 . 18923)) nil (25722 54210 684209 570000) 0 nil])
([nil nil ((18923 . 18924) 18922) nil (25722 54210 684204 751000) 0 nil])
([nil nil ((18924 . 18925) 18924) nil (25722 54210 684200 490000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18968 . 18969) (nil fontified nil 18924 . 18969) (18924 . 18969)) nil (25722 54210 684196 230000) 0 nil])
([nil nil ((18810 . 18811) (18809 . 18810) (18807 . 18809) (#(")" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18807) (undo-tree-id387 . -1) 18808 (18803 . 18808) (18794 . 18803) (18790 . 18794) (18789 . 18790) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18789) (undo-tree-id388 . -1) 18790 (18784 . 18790) (18779 . 18784) (#("-" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18779) (undo-tree-id389 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18780) (undo-tree-id390 . -1) 18781 (18772 . 18781) (18771 . 18772) 18770) nil (25722 54210 684188 477000) 0 nil])
([nil nil ((18847 . 18848) 18812) nil (25722 54210 684168 990000) 0 nil])
([nil nil ((18883 . 18884) (18882 . 18883) (#("_" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18882) (undo-tree-id337 . -1) 18883 (18882 . 18883) (18878 . 18882) (18873 . 18878) (18868 . 18873) (18863 . 18868) (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18863) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (#("o" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18864) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (#("d" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18865) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18866) (undo-tree-id344 . -1) (#("N" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18867) (undo-tree-id345 . -1) (#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18868) (undo-tree-id346 . -1) (#("m" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18869) (undo-tree-id347 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18870) (undo-tree-id348 . -1) 18871 (18866 . 18871) (18860 . 18866) (#("d" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18860) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (#("o" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18861) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (#("c" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18862) (undo-tree-id353 . -1) (undo-tree-id354 . -1) 18863 (#("u" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18863) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (#("m" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18864) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18865) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18866) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18867) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (#("." 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18868) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (#("q" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18869) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (#("u" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18870) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18871) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (#("r" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18872) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (#("y" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18873) (undo-tree-id375 . -1) (#("S" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18874) (undo-tree-id376 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18875) (undo-tree-id377 . -1) (#("l" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18876) (undo-tree-id378 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18877) (undo-tree-id379 . -1) (#("c" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18878) (undo-tree-id380 . -1) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18879) (undo-tree-id381 . -1) (#("o" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18880) (undo-tree-id382 . -1) (#("r" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18881) (undo-tree-id383 . -1) (#("(" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18882) (undo-tree-id384 . -1) (#("'" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18883) (undo-tree-id385 . -1) 18884 (18883 . 18884) (18882 . 18883) (18873 . 18882) (18868 . 18873) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -18868) (undo-tree-id386 . -1) 18869 (18863 . 18869) (18848 . 18863) (18847 . 18848) 18812) nil (25722 54210 684149 364000) 0 nil])
([nil nil ((18922 . 18923) 18921) nil (25722 54210 684041 593000) 0 nil])
([nil nil ((18922 . 18923) 18886) nil (25722 54210 684037 822000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18923 . 18924) (#("
" 0 1 (fontified nil face (org-block) font-lock-multiline t src-block t font-lock-fontified t)) . -18960) (18923 . 18961)) nil (25722 54210 684033 421000) 0 nil])
([nil nil ((#("
" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky t fontified t)) . 18923) (undo-tree-id336 . -1)) nil (25722 54210 684028 113000) 0 nil])
([nil nil ((18942 . 18948) (18938 . 18942) (#("parentNode" 0 10 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . 18938) (undo-tree-id334 . -9) (undo-tree-id335 . -7) 18945) nil (25722 54210 684006 322000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18996 . 18997) (#("
" 0 1 (fontified nil face (org-block) font-lock-multiline t src-block t font-lock-fontified t)) . -19033) (18996 . 19034) 18985) nil (25722 54210 683998 80000) 0 nil])
([nil nil ((19012 . 19016) (#("first" 0 5 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . 19012) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -4) (undo-tree-id333 . -4) 19016) nil (25722 54210 683973 844000) 0 nil])
([nil nil ((19032 . 19033) 19015) nil (25722 54210 683958 967000) 0 nil])
([nil nil ((19076 . 19077) 19034) nil (25722 54210 683954 706000) 0 nil])
([nil nil ((19077 . 19078) 19077) nil (25722 54210 683950 935000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19077 . 19078) (#("
" 0 1 (fontified nil face (org-block) font-lock-multiline t src-block t font-lock-fontified t)) . -19113) (19077 . 19114)) nil (25722 54210 683946 185000) 0 nil])
([nil nil ((#("
" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky t fontified t)) . 19077) (undo-tree-id328 . -1)) nil (25722 54210 683940 947000) 0 nil])
([nil nil ((19105 . 19107) (19094 . 19105) (19092 . 19094) (#("lastChild" 0 9 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . 19092) (undo-tree-id326 . -8) (undo-tree-id327 . -4) 19096) nil (25722 54210 683914 266000) 0 nil])
([nil nil ((19106 . 19108)) nil (25722 54210 682137 201000) 0 nil])
([nil nil ((19107 . 19109)) nil (25722 54210 682133 849000) 0 nil])
([nil nil ((19115 . 19123) (19111 . 19115)) nil (25722 54210 682130 566000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19181 . 19182) (#("
" 0 1 (fontified nil face (org-block) font-lock-multiline t src-block t font-lock-fontified t)) . -19239) (19181 . 19240) 19180) nil (25722 54210 682125 188000) 0 nil])
([nil nil ((19217 . 19225) (#("next" 0 4 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . 19217) (undo-tree-id321 . -3) (undo-tree-id322 . -3) (undo-tree-id323 . -3) (undo-tree-id324 . -3) (undo-tree-id325 . -3) 19220) nil (25722 54210 682113 664000) 0 nil])
([nil nil ((19753 . 19754) (19748 . 19753) (#("s" 0 1 (fontified t)) . -19748) (undo-tree-id680 . -1) 19749 (19728 . 19749) (#(" " 0 1 (fontified t)) . -19728) (undo-tree-id681 . -1) (#("s" 0 1 (fontified t)) . -19729) (undo-tree-id682 . -1) 19730 (19728 . 19730) (19707 . 19728) (19697 . 19707) (#("c" 0 1 (fontified t)) . -19697) (undo-tree-id683 . -1) 19698 (19685 . 19698) (19684 . 19685) (19683 . 19684) (#("n" 0 1 (fontified t)) . -19683) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (#("
" 0 1 (fontified t)) . -19684) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (#("-" 0 1 (fontified t)) . -19685) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (#(" " 0 1 (fontified t)) . -19686) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (#("w" 0 1 (fontified t)) . -19687) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (#("e" 0 1 (fontified nil)) . -19688) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (#(" " 0 1 (fontified nil)) . -19689) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (#("c" 0 1 (fontified nil)) . -19690) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (#("a" 0 1 (fontified nil)) . -19691) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (#("n" 0 1 (fontified t)) . -19692) (undo-tree-id703 . -1) (undo-tree-id704 . -1) 19693 (#(" " 0 1 (fontified t)) . -19693) (undo-tree-id705 . -1) 19694 (19685 . 19694) (19684 . 19685) (19674 . 19684) (19673 . 19674) (19653 . 19673) (#("r" 0 1 (fontified t)) . -19653) (undo-tree-id706 . -1) (#("p" 0 1 (fontified t)) . -19654) (undo-tree-id707 . -1) 19655 (19651 . 19655) (19650 . 19651) (19634 . 19650) (19632 . 19634) (#("=" 0 1 (fontified t)) . -19632) (undo-tree-id708 . -1) (#(" " 0 1 (fontified t)) . -19633) (undo-tree-id709 . -1) 19634 (19632 . 19634) (19631 . 19632) (19627 . 19631) (#("j" 0 1 (fontified t)) . -19627) (undo-tree-id710 . -1) 19628 (19622 . 19628) (#("l" 0 1 (fontified t)) . -19622) (undo-tree-id711 . -1) 19623 (19621 . 19623) (19614 . 19621) (19613 . 19614) (19612 . 19613) (19604 . 19612) (19600 . 19604) (#(" " 0 1 (fontified t)) . -19600) (undo-tree-id712 . -1) (#("E" 0 1 (fontified t)) . -19601) (undo-tree-id713 . -1) 19602 (19593 . 19602) (#("=" 0 1 (fontified t)) . -19593) (undo-tree-id714 . -1) (#(" " 0 1 (fontified t)) . -19594) (undo-tree-id715 . -1) 19595 (19593 . 19595) (#("=" 0 1 (fontified t)) . -19593) (undo-tree-id716 . -1) (#("f" 0 1 (fontified t)) . -19594) (undo-tree-id717 . -1) 19595 (19593 . 19595) (#("p" 0 1 (fontified t)) . -19593) (undo-tree-id718 . -1) 19594 (19593 . 19594) (19592 . 19593) (19578 . 19592) (19557 . 19578) (19536 . 19557) (19524 . 19536) (#("a" 0 1 (fontified t)) . -19524) (undo-tree-id719 . -1) 19525 (19519 . 19525) (19498 . 19519) (#("n" 0 1 (fontified t)) . -19498) (undo-tree-id720 . -1) 19499 (19483 . 19499) (#("x" 0 1 (fontified t)) . -19483) (undo-tree-id721 . -1) (undo-tree-id722 . -1) 19484 (19482 . 19484) (#("escape " 0 7 (fontified t)) . -19482) (undo-tree-id723 . -7) (undo-tree-id724 . -7) 19489 (#("the " 0 4 (fontified t)) . -19489) (undo-tree-id725 . -4) (undo-tree-id726 . -4) 19493 (#("te" 0 2 (fontified t)) . -19493) (undo-tree-id727 . -2) (undo-tree-id728 . -2) 19495 (19482 . 19495) (#("i" 0 1 (fontified t)) . -19482) (undo-tree-id729 . -1) 19483 (19471 . 19483) (#("i" 0 1 (fontified t)) . -19471) (undo-tree-id730 . -1) 19472 (19468 . 19472) (#("o" 0 1 (fontified t)) . -19468) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (#("n" 0 1 (fontified t)) . -19469) (undo-tree-id733 . -1) 19470 (19458 . 19470) (#(" " 0 1 (fontified t)) . -19458) (undo-tree-id734 . -1) 19459 (19455 . 19459) (19441 . 19455) (#("w" 0 1 (fontified t)) . -19441) (undo-tree-id735 . -1) 19442 (19437 . 19442) (#("v" 0 1 (fontified t)) . -19437) (undo-tree-id736 . -1) (#("b" 0 1 (fontified t)) . -19438) (undo-tree-id737 . -1) (#("u" 0 1 (fontified t)) . -19439) (undo-tree-id738 . -1) 19440 (19430 . 19440) (19409 . 19430) (#("e" 0 1 (fontified t)) . -19409) (undo-tree-id739 . -1) 19410 (19397 . 19410) (19391 . 19397) (#("have " 0 5 (fontified t)) . -19391) (undo-tree-id740 . -5) 19396 (19383 . 19396) (#("w" 0 1 (fontified t)) . -19383) (undo-tree-id741 . -1) (#("n" 0 1 (fontified t)) . -19384) (undo-tree-id742 . -1) 19385 (19378 . 19385) (#("m" 0 1 (fontified t)) . -19378) (undo-tree-id743 . -1) (#(" " 0 1 (fontified t)) . -19379) (undo-tree-id744 . -1) 19380 (19373 . 19380) (#("t" 0 1 (fontified t)) . -19373) (undo-tree-id745 . -1) (#(" " 0 1 (fontified t)) . -19374) (undo-tree-id746 . -1) 19375 (19373 . 19375) (19357 . 19373) (#("e" 0 1 (fontified t)) . -19357) (undo-tree-id747 . -1) (#("a" 0 1 (fontified t)) . -19358) (undo-tree-id748 . -1) 19359 (19358 . 19359) (19337 . 19358) (19316 . 19337) (#("r" 0 1 (fontified t)) . -19316) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (#("a" 0 1 (fontified t)) . -19317) (undo-tree-id751 . -1) (undo-tree-id752 . -1) 19318 (19316 . 19318) (#("t" 0 1 (fontified t)) . -19316) (undo-tree-id753 . -1) 19317 (19316 . 19317) (19312 . 19316) (#("d" 0 1 (fontified t)) . -19312) (undo-tree-id754 . -1) (#("e" 0 1 (fontified t)) . -19313) (undo-tree-id755 . -1) 19314 (19312 . 19314) (#("e" 0 1 (fontified t)) . -19312) (undo-tree-id756 . -1) (#("d" 0 1 (fontified t)) . -19313) (undo-tree-id757 . -1) 19314 (19304 . 19314) (#("o" 0 1 (fontified t)) . -19304) (undo-tree-id758 . -1) (#("s" 0 1 (fontified t)) . -19305) (undo-tree-id759 . -1) 19306 (19302 . 19306) (19281 . 19302) (#(" " 0 1 (fontified t)) . -19281) (undo-tree-id760 . -1) 19282 (19281 . 19282) (t 25722 54210 724893 197000)) nil (25722 54816 263372 622000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 19776) (19754 . 19776) 19757 (19754 . 19757)) nil (25722 54816 263104 496000) 0 nil])
([nil nil ((19779 . 19796) (#("document" 0 8 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19779) (undo-tree-id679 . -8) 19787 (19766 . 19787) (#("h" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19766) 19767 (19766 . 19767) (#(":" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil)) . -19766) 19767 (19766 . 19767)) nil (25722 54816 263097 791000) 0 nil])
([nil nil ((19779 . 19787)) nil (25722 54816 263089 130000) 0 nil])
([nil nil ((19804 . 19805) 19786) nil (25722 54816 263085 917000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19805 . 19806) (#("
" 0 1 (fontified nil face (org-block) font-lock-multiline t src-block t font-lock-fontified t)) . -20460) (19805 . 20461)) nil (25722 54816 263082 146000) 0 nil])
([nil nil ((#("//What is the parentNode of the ul?
" 0 34 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 34 35 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t rear-nonsticky t) 35 36 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . 20002) (undo-tree-id677 . -36) (undo-tree-id678 . -35)) nil (25722 54816 263076 908000) 0 nil])
([nil nil ((20023 . 20033) (20002 . 20023) (20001 . 20002) 20001) nil (25722 54816 263070 552000) 0 nil])
([nil nil ((#(" child of the ul?" 0 16 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 16 17 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t rear-nonsticky t)) . 20091) (undo-tree-id676 . -16)) nil (25722 54816 263064 895000) 0 nil])
([nil nil ((20091 . 20108)) nil (25722 54816 263059 587000) 0 nil])
([nil nil ((#("last child of the ul?" 0 20 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 20 21 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t rear-nonsticky t)) . 20161) (undo-tree-id675 . -20)) nil (25722 54816 263055 815000) 0 nil])
([nil nil ((20179 . 20189) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . -20179) (undo-tree-id670 . -1) 20180 (20174 . 20180) (#("f" 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -20174) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (#("o" 0 1 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . -20175) (undo-tree-id673 . -1) (undo-tree-id674 . -1) 20176 (20161 . 20176)) nil (25722 54816 263046 387000) 0 nil])
([nil nil ((20241 . 20249) (#("f" 0 1 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . -20241) (undo-tree-id667 . -1) 20242 (20241 . 20242) (#("nextSibling" 0 11 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . 20241) (undo-tree-id668 . -10) (undo-tree-id669 . -7) 20248) nil (25722 54816 263031 21000) 0 nil])
([nil nil ((20257 . 20261) (#("first" 0 5 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . 20257) (undo-tree-id665 . -4) (undo-tree-id666 . -3) 20260) nil (25722 54816 263020 126000) 0 nil])
([nil nil ((#("parentNode" 0 10 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . 20049) (undo-tree-id660 . -9) (undo-tree-id661 . -9) (undo-tree-id662 . -9) (undo-tree-id663 . -9) (undo-tree-id664 . -9) 20058) nil (25722 54816 263012 443000) 0 nil])
([nil nil ((20051 . 20066) (20049 . 20051)) nil (25722 54816 263000 500000) 0 nil])
([nil nil ((#("first" 0 5 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . 20093) (undo-tree-id659 . -4)) nil (25722 54816 262995 262000) 0 nil])
([nil nil ((20129 . 20142) (20126 . 20129) (#("firstChild" 0 10 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . 20126) (undo-tree-id391 . -9) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -10) (undo-tree-id658 . -10) 20127) nil (25722 54816 262959 83000) 0 nil])
([nil nil ((#("u" 0 1 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . 20195) (t 25722 54816 303734 270000)) nil (25722 54838 523209 165000) 0 nil])
([nil nil ((20196 . 20197)) nil (25722 54838 523204 415000) 0 nil])
([nil nil ((#("i" 0 1 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . 20196) (undo-tree-id761 . -1)) nil (25722 54838 523141 906000) 0 nil])
([nil nil ((20196 . 20197)) nil (25722 54838 523116 693000) 0 nil])
([nil nil ((20196 . 20197) (t 25722 54838 568273 431000)) nil (25722 54843 300266 291000) 0 nil])
([nil nil ((#("t" 0 1 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . -20196) (undo-tree-id762 . -1) 20197) nil (25722 54843 300254 907000) 0 nil])
([nil nil ((#("
//What is the next sibling of the first li
console.log(ul.lastChild.nodeName);
" 0 1 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 1 43 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 43 44 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t rear-nonsticky t) 44 78 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 78 79 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 79 80 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . 20154) (undo-tree-id785 . -44) (undo-tree-id786 . -80) (undo-tree-id787 . 38) (undo-tree-id788 . -44) (undo-tree-id789 . -79) (undo-tree-id790 . -44) (undo-tree-id791 . -42) (undo-tree-id792 . -42) (undo-tree-id793 . -42) (undo-tree-id794 . -44) (undo-tree-id795 . -44) 20198 (t 25722 54843 340387 232000)) nil (25722 54948 183685 554000) 0 nil])
([nil nil ((20449 . 20450) (20440 . 20441) (20431 . 20432) (20420 . 20421) (20356 . 20357) (20309 . 20310) (20249 . 20250) (20209 . 20210) (20164 . 20165) (20131 . 20132) (20085 . 20086) (20052 . 20053) (20011 . 20012) (19982 . 19983) (19971 . 19972) (19963 . 19964) (19945 . 19946) (19927 . 19928) (19909 . 19910) (19881 . 19882) (19863 . 19864) (19846 . 19847) (19793 . 19794) (19723 . 19724) (19711 . 19712) (19687 . 19688) (19667 . 19668) (19647 . 19648) (19626 . 19627) (19313 . 19314) (19302 . 19303) (19293 . 19294) (19284 . 19285) (19273 . 19274) (19209 . 19210) (19162 . 19163) (19102 . 19103) (19058 . 19059) (19020 . 19021) (18983 . 18984) (18944 . 18945) (18906 . 18907) (18867 . 18868) (18830 . 18831) (18789 . 18790) (18760 . 18761) (18749 . 18750) (18741 . 18742) (18723 . 18724) (18705 . 18706) (18687 . 18688) (18659 . 18660) (18641 . 18642) (18624 . 18625) (18569 . 18570) (18547 . 18548) (18532 . 18533) (18519 . 18520) (18505 . 18506) (18491 . 18492) (18328 . 18329) (nil fontified t 18294 . 18295) (nil keymap (keymap) 18294 . 18295) (nil face org-level-3 18294 . 18295) (nil fontified t 18293 . 18294) (nil composition (2 1 [10040]) 18293 . 18294) (nil keymap (keymap) 18293 . 18294) (nil face org-level-3 18293 . 18294) (nil fontified t 18291 . 18293) (nil face org-hide 18291 . 18293) (nil keymap (keymap) 18291 . 18293) (#("*** " 0 2 (keymap (keymap) face org-hide fontified t) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [10040]) fontified t) 3 4 (face org-level-3 keymap (keymap) fontified t)) . 18290) (18294 . 18299) 20234) nil (25722 54948 183647 420000) 0 nil])
([nil nil ((#("C" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -20296) (undo-tree-id773 . -1) (undo-tree-id774 . -1) 20297 (#("h" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -20297) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -20298) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (#("l" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -20299) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (#("d" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -20300) (undo-tree-id781 . -1) (undo-tree-id782 . -1) 20301 (#("nextEle" 0 7 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . 20301) (undo-tree-id783 . -7) (undo-tree-id784 . -7) (20285 . 20301) 20292 (20289 . 20292)) nil (25722 54948 183602 651000) 0 nil])
([nil nil ((20411 . 20414) (#("n" 0 1 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . -20411) (undo-tree-id771 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . -20412) (undo-tree-id772 . -1) 20413 (20407 . 20413)) nil (25722 54948 183563 959000) 0 nil])
([nil nil ((#(" " 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -20433) (undo-tree-id770 . -1) 20434 (20432 . 20434) 20413) nil (25722 54948 183552 16000) 0 nil])
([nil nil ((#(">" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -20481) (undo-tree-id764 . -1) 20482 (20479 . 20482) (#("?" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -20479) (undo-tree-id765 . -1) 20480 (20479 . 20480) (#("l" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -20479) (undo-tree-id766 . -1) (undo-tree-id767 . -1) 20480 (20463 . 20480) (20456 . 20463) (20435 . 20456) (#("." 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -20435) (undo-tree-id768 . -1) (#("." 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -20436) (undo-tree-id769 . -1) 20437 (20435 . 20437) (20433 . 20435) 20433) nil (25722 54948 183539 723000) 0 nil])
([nil nil ((20507 . 20508) (20505 . 20507) (#(")" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -20505) (undo-tree-id763 . -1) 20506 (20504 . 20506) (20483 . 20504) (20481 . 20483) 20480) nil (25722 54948 183507 805000) 0 nil])
([nil nil ((19833 . 19837) (19828 . 19833) (#("-" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19828) (undo-tree-id798 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19829) (undo-tree-id799 . -1) (#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19830) (undo-tree-id800 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19831) (undo-tree-id801 . -1) (#("m" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19832) (undo-tree-id802 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19833) (undo-tree-id803 . -1) (#("t" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19834) (undo-tree-id804 . -1) (#("n" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19835) (undo-tree-id805 . -1) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19836) (undo-tree-id806 . -1) 19837 (19828 . 19837) (#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19828) (undo-tree-id807 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil)) . -19829) (undo-tree-id808 . -1) (#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil)) . -19830) (undo-tree-id809 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil)) . -19831) (undo-tree-id810 . -1) (#("m" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil)) . -19832) (undo-tree-id811 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil)) . -19833) (undo-tree-id812 . -1) (#("n" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19834) (undo-tree-id813 . -1) (#("t" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19835) (undo-tree-id814 . -1) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19836) (undo-tree-id815 . -1) (#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19837) (undo-tree-id816 . -1) 19838 (19819 . 19838) (#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19819) (undo-tree-id817 . -1) (#("t" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19820) (undo-tree-id818 . -1) (#("r" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19821) (undo-tree-id819 . -1) 19822 (19820 . 19822) (#("t" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19820) (undo-tree-id820 . -1) 19821 (19820 . 19821) (#("i" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19820) (undo-tree-id821 . -1) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19821) (undo-tree-id822 . -1) (#("t" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19822) (undo-tree-id823 . -1) 19823 (#("i" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19823) (undo-tree-id824 . -1) (#("n" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19824) (undo-tree-id825 . -1) (#("g" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil)) . -19825) (undo-tree-id826 . -1) 19826 (#("_" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19826) (undo-tree-id827 . -1) (#("c" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19827) (undo-tree-id828 . -1) (#("h" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19828) (undo-tree-id829 . -1) (#("i" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19829) (undo-tree-id830 . -1) (#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19830) (undo-tree-id831 . -1) (#("_" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19831) (undo-tree-id832 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19832) (undo-tree-id833 . -1) (#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19833) (undo-tree-id834 . -1) (#("m" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19834) (undo-tree-id835 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19835) (undo-tree-id836 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19836) (undo-tree-id837 . -1) (#("n" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil)) . -19837) (undo-tree-id838 . -1) (#("t" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil)) . -19838) (undo-tree-id839 . -1) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil)) . -19839) (undo-tree-id840 . -1) (#("_" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19840) (undo-tree-id841 . -1) (#("u" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19841) (undo-tree-id842 . -1) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19842) (undo-tree-id843 . -1) (#("i" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19843) (undo-tree-id844 . -1) (#("n" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19844) (undo-tree-id845 . -1) (#("g" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19845) (undo-tree-id846 . -1) (#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19846) (undo-tree-id847 . -1) 19847 (19831 . 19847) (#("d" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19831) (undo-tree-id848 . -1) (#("N" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19832) (undo-tree-id849 . -1) (#("o" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19833) (undo-tree-id850 . -1) (#("d" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19834) (undo-tree-id851 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19835) (undo-tree-id852 . -1) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19836) (undo-tree-id853 . -1) (#("_" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19837) (undo-tree-id854 . -1) 19838 (19837 . 19838) (t 25722 54948 226744 245000)) nil (25722 54985 505343 771000) 0 nil])
([nil nil ((#("(" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 19837) (undo-tree-id797 . 1)) nil (25722 54985 505207 928000) 0 nil])
([nil nil ((#(")" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 19837) (undo-tree-id796 . 1)) nil (25722 54985 505195 985000) 0 nil])
([nil nil ((20393 . 20394) (#("A" 0 1 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . 20393) (t 25722 54985 547522 415000)) nil (25722 55097 160183 989000) 0 nil])
([nil nil ((20431 . 20432)) nil (25722 55097 160179 309000) 0 nil])
([nil nil ((#("/" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -20431) (undo-tree-id856 . -1) (undo-tree-id857 . -1) 20432) nil (25722 55097 160174 560000) 0 nil])
([nil nil ((20431 . 20432)) nil (25722 55097 160164 433000) 0 nil])
([nil nil ((#("." 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -20431) (undo-tree-id855 . -1) 20432) nil (25722 55097 160153 957000) 0 nil])
([nil nil ((#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -20505) (undo-tree-id859 . -1) 20506 (20505 . 20506) (t 25722 55097 197689 682000)) nil (25722 55158 474465 740000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -20548) (undo-tree-id858 . -1) 20549 (20547 . 20549) 20546) nil (25722 55158 474394 641000) 0 nil])
([nil nil ((20644 . 20645) (#("'" 0 1 (face org-level-4 fontified t)) . -20644) (undo-tree-id860 . -1) 20645 (20642 . 20645) (20627 . 20642) (20624 . 20627) (20621 . 20624) (20600 . 20621) (20579 . 20600) (20559 . 20579) (#("8" 0 1 (face org-level-4 fontified t)) . -20559) (undo-tree-id861 . -1) 20560 (20558 . 20560) (#("7" 0 1 (face org-level-4 fontified t)) . -20558) (undo-tree-id862 . -1) (#(" " 0 1 (face org-level-4 fontified t)) . -20559) (undo-tree-id863 . -1) 20560 (20558 . 20560) (#("6" 0 1 (face org-level-4 fontified t)) . -20558) (undo-tree-id864 . -1) 20559 (20556 . 20559) (20550 . 20556) (20548 . 20550) (t 25722 55158 514790 507000) 20548) nil (25722 55205 440403 833000) 0 nil])
([nil nil ((20615 . 20616)) nil (25722 55205 440083 327000) 0 nil])
([nil nil ((20646 . 20652) 20615) nil (25722 55205 440072 781000) 0 nil])
([nil nil ((20759 . 20760) (20756 . 20759) (#("l" 0 1 (fontified t)) . -20756) (undo-tree-id882 . -1) 20757 (20749 . 20757) (20747 . 20749) (#("n" 0 1 (fontified t)) . -20747) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (#("o" 0 1 (fontified t)) . -20748) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (#("d" 0 1 (fontified t)) . -20749) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (#("e" 0 1 (fontified t)) . -20750) (undo-tree-id889 . -1) (undo-tree-id890 . -1) 20751 (20737 . 20751) (#("e" 0 1 (fontified t)) . -20737) (undo-tree-id891 . -1) (#("9" 0 1 (fontified t)) . -20738) (undo-tree-id892 . -1) 20739 (20734 . 20739) (20716 . 20734) (#("c" 0 1 (fontified t)) . -20716) (undo-tree-id893 . -1) 20717 (20712 . 20717) (#("w" 0 1 (fontified t)) . -20712) (undo-tree-id894 . -1) (#(" " 0 1 (fontified t)) . -20713) (undo-tree-id895 . -1) 20714 (20708 . 20714) (20687 . 20708) (20669 . 20687) (#("i" 0 1 (fontified t)) . -20669) (undo-tree-id896 . -1) 20670 (20658 . 20670) (#("t" 0 1 (fontified t)) . -20658) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (#("n" 0 1 (fontified t)) . -20659) (undo-tree-id899 . -1) (#(" " 0 1 (fontified t)) . -20660) (undo-tree-id900 . -1) 20661 (20650 . 20661) (t 25722 55205 483596 640000)) nil (25723 6017 434621 622000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 20788) (20766 . 20788) 20769 (20766 . 20769) (#("'" 0 1 (fontified t)) . -20766) (undo-tree-id881 . -1) 20767 (20766 . 20767) (20762 . 20766) 20760) nil (25723 6017 434579 227000) 0 nil])
([nil nil ((20791 . 20808) (#("document" 0 8 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -20791) (undo-tree-id877 . -8) 20799 (20778 . 20799) (#("h" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -20778) (undo-tree-id878 . -1) (undo-tree-id879 . -1) 20779 (20778 . 20779) (#(":" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -20778) (undo-tree-id880 . -1) 20779 (20778 . 20779)) nil (25723 6017 434569 729000) 0 nil])
([nil nil ((20791 . 20799)) nil (25723 6017 434557 716000) 0 nil])
([nil nil ((#("   " 0 3 (fontified nil)) . -20817) 20820 (20816 . 20820) 20798) nil (25723 6017 434554 14000) 0 nil])
([nil nil ((20797 . 20802) (20791 . 20797) (#("t" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -20791) (undo-tree-id865 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -20792) (undo-tree-id866 . -1) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -20793) (undo-tree-id867 . -1) (#("t" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -20794) (undo-tree-id868 . -1) 20795 (20791 . 20795) (#("." 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -20791) (undo-tree-id869 . -1) 20792 (20791 . 20792) (#("listing_childNodes()." 0 21 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 20791) (undo-tree-id870 . -20) (undo-tree-id871 . -20) (undo-tree-id872 . -20) (undo-tree-id873 . -21) (undo-tree-id874 . -20) (undo-tree-id875 . -20) (undo-tree-id876 . -20) 20811) nil (25723 6017 434545 424000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21042 . 21043) (nil fontified nil 20807 . 21043) (20807 . 21043)) nil (25723 6017 434507 220000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 20763)) nil (25723 6017 434503 868000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 20763)) nil (25723 6017 434500 515000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 20763)) nil (25723 6017 434496 185000) 0 nil])
([nil nil ((21050 . 21051) 21041) nil (25723 6017 434487 245000) 0 nil])
([nil nil ((21136 . 21138) (21133 . 21136) (#("f" 0 1 (fontified t)) . -21133) (undo-tree-id901 . -1) (undo-tree-id902 . -1) 21134 (21126 . 21134) (21122 . 21126) (21101 . 21122) (#("d" 0 1 (fontified t)) . -21101) (undo-tree-id903 . -1) (undo-tree-id904 . -1) 21102 (21096 . 21102) (#("e" 0 1 (fontified t)) . -21096) (undo-tree-id905 . -1) 21097 (21090 . 21097) (#("s" 0 1 (fontified t)) . -21090) (undo-tree-id906 . -1) (#(" " 0 1 (fontified t)) . -21091) (undo-tree-id907 . -1) (#("s" 0 1 (fontified t)) . -21092) (undo-tree-id908 . -1) 21093 (21092 . 21093) (21082 . 21092) (#("b" 0 1 (fontified t)) . -21082) (undo-tree-id909 . -1) 21083 (21079 . 21083) (21058 . 21079) (#("e" 0 1 (fontified t)) . -21058) (undo-tree-id910 . -1) (undo-tree-id911 . -1) 21059 (21051 . 21059) (t 25723 6017 475388 37000)) nil (25723 6111 757738 582000) 0 nil])
([nil nil ((21263 . 21264) (21253 . 21263) (21243 . 21253) (#("n" 0 1 (fontified t)) . -21243) (undo-tree-id912 . -1) 21244 (21233 . 21244) (21212 . 21233) (21191 . 21212) (#("e" 0 1 (fontified t)) . -21191) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (#("i" 0 1 (fontified t)) . -21192) (undo-tree-id915 . -1) 21193 (21191 . 21193) (21170 . 21191) (#("relat" 0 5 (fontified t)) . -21170) (undo-tree-id916 . -5) (undo-tree-id917 . -5) 21175 (#("e" 0 1 (fontified t)) . -21175) (undo-tree-id918 . -1) 21176 (21169 . 21176) (#("y" 0 1 (fontified t)) . -21169) (undo-tree-id919 . -1) (#("o" 0 1 (fontified t)) . -21170) (undo-tree-id920 . -1) (#("u" 0 1 (fontified t)) . -21171) (undo-tree-id921 . -1) 21172 (21161 . 21172) (21145 . 21161) (21138 . 21145) (t 25723 6111 801130 374000)) nil (25723 6169 971401 748000) 0 nil])
([nil nil ((21264 . 21265) 21264) nil (25723 6169 971352 649000) 0 nil])
([nil nil ((21264 . 21270) 21265 (t 25723 6170 14213 295000)) nil (25723 6375 694049 30000) 0 nil])
([nil nil ((nil fontified t 21268 . 21269) (nil keymap (keymap) 21268 . 21269) (nil face org-level-4 21268 . 21269) (nil fontified t 21267 . 21268) (nil composition (3 1 [10047]) 21267 . 21268) (nil keymap (keymap) 21267 . 21268) (nil face org-level-4 21267 . 21268) (nil fontified t 21265 . 21267) (nil face org-hide 21265 . 21267) (nil keymap (keymap) 21265 . 21267) (#("**** " 0 3 (keymap (keymap) face org-hide fontified t) 3 4 (face org-level-4 keymap (keymap) composition (3 1 [10047]) fontified t) 4 5 (face org-level-4 keymap (keymap) fontified t)) . 21265) (21270 . 21274) 21269) nil (25723 6375 694043 791000) 0 nil])
([nil nil ((nil fontified t 21267 . 21268) (nil keymap (keymap) 21267 . 21268) (nil face org-level-3 21267 . 21268) (nil fontified t 21266 . 21267) (nil composition (2 1 [10040]) 21266 . 21267) (nil keymap (keymap) 21266 . 21267) (nil face org-level-3 21266 . 21267) (nil fontified t 21265 . 21266) (nil face org-hide 21265 . 21266) (nil keymap (keymap) 21265 . 21266) (#("*** " 0 2 (keymap (keymap) face org-hide fontified t) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [10040]) fontified t) 3 4 (face org-level-3 keymap (keymap) fontified t)) . 21265) (21269 . 21272) 21265) nil (25723 6375 694034 642000) 0 nil])
([nil nil ((nil fontified t 21266 . 21267) (nil keymap (keymap) 21266 . 21267) (nil face org-level-2 21266 . 21267) (nil fontified t 21265 . 21266) (nil composition (1 1 [9675]) 21265 . 21266) (nil keymap (keymap) 21265 . 21266) (nil face org-level-2 21265 . 21266) (#("** " 0 1 (keymap (keymap) face org-hide fontified t) 1 2 (face org-level-2 keymap (keymap) composition (1 1 [9675]) fontified t) 2 3 (face org-level-2 keymap (keymap) fontified t)) . 21265) (21268 . 21270) 21265) nil (25723 6375 694025 702000) 0 nil])
([nil nil ((nil fontified t 21267 . 21268) (nil keymap (keymap) 21267 . 21268) (nil face org-level-1 21267 . 21268) (nil fontified t 21266 . 21267) (nil composition (0 1 [9673]) 21266 . 21267) (nil keymap (keymap) 21266 . 21267) (nil face org-level-1 21266 . 21267) (#("* " 0 1 (face org-level-1 keymap (keymap) composition (0 1 [9673]) fontified t) 1 2 (face org-level-1 keymap (keymap) fontified t)) . 21265) (21267 . 21270) 21265) nil (25723 6375 694017 531000) 0 nil])
([nil nil ((nil fontified t 21268 . 21269) (nil keymap (keymap) 21268 . 21269) (nil face org-level-2 21268 . 21269) (nil fontified t 21267 . 21268) (nil composition (1 1 [9675]) 21267 . 21268) (nil keymap (keymap) 21267 . 21268) (nil face org-level-2 21267 . 21268) (nil fontified t 21266 . 21267) (nil face org-hide 21266 . 21267) (nil keymap (keymap) 21266 . 21267) (#("** " 0 1 (keymap (keymap) face org-hide fontified t) 1 2 (face org-level-2 keymap (keymap) composition (1 1 [9675]) fontified t) 2 3 (face org-level-2 keymap (keymap) fontified t)) . 21265) (21268 . 21272)) nil (25723 6375 694009 848000) 0 nil])
([nil nil ((nil fontified t 21269 . 21270) (nil keymap (keymap) 21269 . 21270) (nil face org-level-3 21269 . 21270) (nil fontified t 21268 . 21269) (nil composition (2 1 [10040]) 21268 . 21269) (nil keymap (keymap) 21268 . 21269) (nil face org-level-3 21268 . 21269) (nil fontified t 21266 . 21268) (nil face org-hide 21266 . 21268) (nil keymap (keymap) 21266 . 21268) (#("*** " 0 2 (keymap (keymap) face org-hide fontified t) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [10040]) fontified t) 3 4 (face org-level-3 keymap (keymap) fontified t)) . 21265) (21269 . 21274) 21267) nil (25723 6375 694001 257000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-end-line font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -20474) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -20466) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -20458) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -20448) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -20421) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -20374) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -20304) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -20258) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -20192) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -20153) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -20109) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -20077) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -20032) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -20000) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -19960) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -19932) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -19922) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -19915) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -19898) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -19881) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -19864) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -19837) (#(" " 0 1 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t)) . -19820) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -19804) (#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -19754) (#(" " 0 1 (fontified t)) . -19685) (#(" " 0 1 (fontified t)) . -19674) (#(" " 0 1 (fontified t)) . -19651) (#(" " 0 1 (fontified t)) . -19632) (#(" " 0 1 (fontified t)) . -19613) (#(" " 0 1 (fontified t)) . -19593) (#(" " 0 1 (fontified t)) . -19281) (#(" " 0 1 (face org-block-end-line font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -19271) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -19263) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -19255) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -19245) (#(" " 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . -19182) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -19136) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -19077) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -19034) (#(" " 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . -18997) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18961) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18923) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18886) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18848) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18812) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18772) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18744) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18734) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18727) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18710) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18693) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18676) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18649) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -18632) (#(" " 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . -18616) (#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -18562) (#(" " 0 1 (fontified t)) . -18541) (#(" " 0 1 (fontified t)) . -18527) (#(" " 0 1 (fontified t)) . -18515) (#(" " 0 1 (fontified t)) . -18502) (#(" " 0 1 (fontified t)) . -18489) (#(" " 0 1 (fontified t)) . -18327) (nil fontified t 18293 . 18294) (nil keymap (keymap) 18293 . 18294) (nil face org-level-4 18293 . 18294) (nil fontified t 18292 . 18293) (nil composition (3 1 [10047]) 18292 . 18293) (nil keymap (keymap) 18292 . 18293) (nil face org-level-4 18292 . 18293) (nil fontified t 18290 . 18292) (nil face org-hide 18290 . 18292) (nil keymap (keymap) 18290 . 18292) (#("**** " 0 3 (keymap (keymap) face org-hide fontified t) 3 4 (face org-level-4 keymap (keymap) composition (3 1 [10047]) fontified t) 4 5 (face org-level-4 keymap (keymap) fontified t)) . 18290) (18295 . 18299) 18293) nil (25723 6375 693977 162000) 0 nil])
([nil nil ((nil fontified t 20490 . 20491) (nil keymap (keymap) 20490 . 20491) (nil face org-level-4 20490 . 20491) (nil fontified t 20489 . 20490) (nil composition (3 1 [10047]) 20489 . 20490) (nil keymap (keymap) 20489 . 20490) (nil face org-level-4 20489 . 20490) (nil fontified t 20487 . 20489) (nil face org-hide 20487 . 20489) (nil keymap (keymap) 20487 . 20489) (#("**** " 0 3 (keymap (keymap) face org-hide fontified t) 3 4 (face org-level-4 keymap (keymap) composition (3 1 [10047]) fontified t) 4 5 (face org-level-4 keymap (keymap) fontified t)) . 20487) (20492 . 20496) 20487) nil (25723 6375 693703 799000) 0 nil])
([nil nil ((nil fontified t 21203 . 21204) (nil keymap (keymap) 21203 . 21204) (nil face org-level-4 21203 . 21204) (nil fontified t 21202 . 21203) (nil composition (3 1 [10047]) 21202 . 21203) (nil keymap (keymap) 21202 . 21203) (nil face org-level-4 21202 . 21203) (nil fontified t 21200 . 21202) (nil face org-hide 21200 . 21202) (nil keymap (keymap) 21200 . 21202) (#("**** " 0 3 (keymap (keymap) face org-hide fontified t) 3 4 (face org-level-4 keymap (keymap) composition (3 1 [10047]) fontified t) 4 5 (face org-level-4 keymap (keymap) fontified t)) . 21200) (21205 . 21209) 21200) nil (25723 6375 693694 301000) 0 nil])
([nil nil ((#(" 
" 0 1 (fontified t) 1 2 (fontified t)) . 20485) (undo-tree-id956 . -1) (undo-tree-id957 . -2)) nil (25723 6375 693685 710000) 0 nil])
([nil nil ((21280 . 21283) (21279 . 21280) (21272 . 21279) (21251 . 21272) (21250 . 21251) (21247 . 21250) (#("f" 0 1 (face org-level-3 fontified t)) . -21247) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (#("c" 0 1 (face org-level-3 fontified t)) . -21248) (undo-tree-id949 . -1) (#("a" 0 1 (face org-level-3 fontified t)) . -21249) (undo-tree-id950 . -1) (#("l" 0 1 (face org-level-3 fontified t)) . -21250) (undo-tree-id951 . -1) 21251 (21248 . 21251) (#("c" 0 1 (face org-level-3 fontified t)) . -21248) (undo-tree-id952 . -1) (#("a" 0 1 (face org-level-3 fontified t)) . -21249) (undo-tree-id953 . -1) (#("l" 0 1 (face org-level-3 fontified t)) . -21250) (undo-tree-id954 . -1) (#(" " 0 1 (face org-level-3 fontified t)) . -21251) (undo-tree-id955 . -1) 21252 (21237 . 21252) (21216 . 21237) (21202 . 21216)) nil (25723 6375 693668 808000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21336 . 21337) (nil fontified nil 21283 . 21337) (21283 . 21337) 21282) nil (25723 6375 693641 989000) 0 nil])
([nil nil ((21336 . 21337) (#("." 0 1 (rear-nonsticky t fontified t)) . 21336)) nil (25723 6375 693637 309000) 0 nil])
([nil nil ((21346 . 21347) (21344 . 21346) (21336 . 21344)) nil (25723 6375 693633 468000) 0 nil])
([nil nil ((21347 . 21350)) nil (25723 6375 693629 627000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21384 . 21385) (nil fontified nil 21350 . 21385) (21350 . 21385) 21349) nil (25723 6375 693626 693000) 0 nil])
([nil nil ((21387 . 21390) (21386 . 21387) 21384) nil (25723 6375 693622 363000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21419 . 21420) (nil fontified nil 21390 . 21420) (21390 . 21420) 21389) nil (25723 6375 693618 103000) 0 nil])
([nil nil ((21390 . 21391)) nil (25723 6375 693613 773000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 21283)) nil (25723 6375 693610 490000) 0 nil])
([nil nil ((21472 . 21478) (#(" " 0 1 (fontified t)) . -21472) (undo-tree-id923 . -1) 21473 (21468 . 21473) (21464 . 21468) (#("h" 0 1 (fontified t)) . -21464) (undo-tree-id924 . -1) (#("t" 0 1 (fontified t)) . -21465) (undo-tree-id925 . -1) 21466 (21459 . 21466) (#("equ" 0 3 (fontified nil)) . 21459) (undo-tree-id926 . -3) (undo-tree-id927 . -3) (21450 . 21459) 21453 (21447 . 21453) (#("i" 0 1 (fontified t)) . -21447) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (#("d" 0 1 (fontified t)) . -21448) (undo-tree-id930 . -1) (undo-tree-id931 . -1) 21449 (21447 . 21449) (21436 . 21447) (#("h" 0 1 (fontified t)) . -21436) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (#("t" 0 1 (fontified t)) . -21437) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (#("i" 0 1 (fontified t)) . -21438) (undo-tree-id936 . -1) (#("s" 0 1 (fontified t)) . -21439) (undo-tree-id937 . -1) (#(" " 0 1 (fontified t)) . -21440) (undo-tree-id938 . -1) 21441 (21436 . 21441) (#("h" 0 1 (fontified t)) . -21436) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (#("t" 0 1 (fontified t)) . -21437) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (#("i" 0 1 (fontified t)) . -21438) (undo-tree-id943 . -1) (#("s" 0 1 (fontified t)) . -21439) (undo-tree-id944 . -1) 21440 (21436 . 21440) (#("i" 0 1 (fontified t)) . -21436) (undo-tree-id945 . -1) 21437 (21432 . 21437) (#("y" 0 1 (fontified t)) . -21432) (undo-tree-id946 . -1) 21433 (21422 . 21433) (21421 . 21422) 21421) nil (25723 6375 693595 683000) 0 nil])
([nil nil ((21478 . 21479) 21477) nil (25723 6375 693534 222000) 0 nil])
([nil nil ((21479 . 21480)) nil (25723 6375 693529 822000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -21479) (undo-tree-id922 . -1) 21480) nil (25723 6375 693519 905000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 21502) (21480 . 21502) 21483 (21480 . 21483) (#("i" 0 1 (fontified t)) . -21480) (undo-tree-id967 . -1) 21481 (21480 . 21481) (#("s" 0 1 (fontified t)) . -21480) (undo-tree-id968 . -1) (#("r" 0 1 (fontified t)) . -21481) (undo-tree-id969 . -1) 21482 (21480 . 21482) (21479 . 21480) (t 25723 6375 738077 449000) 21479) nil (25723 6407 633073 631000) 0 nil])
([nil nil ((21505 . 21522) (#("document" 0 8 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -21505) (undo-tree-id965 . -8) 21513 (21492 . 21513) (#("h" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -21492) 21493 (21492 . 21493) (#(":" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -21492) (undo-tree-id966 . -1) 21493 (21492 . 21493)) nil (25723 6407 633057 288000) 0 nil])
([nil nil ((21505 . 21513)) nil (25723 6407 633047 790000) 0 nil])
([nil nil ((21530 . 21531) 21512) nil (25723 6407 633044 926000) 0 nil])
([nil nil ((#("listing_childNodes()" 0 20 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 21505) (undo-tree-id960 . -19) (undo-tree-id961 . -19) (undo-tree-id962 . -19) (undo-tree-id963 . -19) (undo-tree-id964 . -19) 21524) nil (25723 6407 633040 247000) 0 nil])
([nil nil ((#("." 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 21505) (undo-tree-id959 . 1)) nil (25723 6407 633439 954000) 0 nil])
([nil nil ((21505 . 21506)) nil (25723 6417 906055 839000) 0 nil] [nil nil ((#("h" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 21505) (undo-tree-id958 . 1)) ((21505 . 21506)) (25723 6407 633012 310000) 0 nil])
([nil nil ((21505 . 21518) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -21505) (undo-tree-id970 . -1) (#("i" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -21506) (undo-tree-id971 . -1) 21507 (21505 . 21507)) nil (25723 6417 906045 992000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 21712 . 21713) (nil fontified nil 21524 . 21713) (21524 . 21713) (t 25723 6417 946876 126000)) nil (25723 6934 112132 859000) 0 nil])
([nil nil ((21713 . 21714) 21712) nil (25723 6934 112128 528000) 0 nil])
([nil nil ((21714 . 21715) 21714) nil (25723 6934 112125 106000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21739 . 21740) (nil fontified nil 21715 . 21740) (21715 . 21740)) nil (25723 6934 112121 265000) 0 nil])
([nil nil ((21803 . 21805) (21802 . 21803) (21800 . 21802) (#("_" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21800) (undo-tree-id996 . -1) 21801 (21800 . 21801) (#("]" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21800) (undo-tree-id997 . -1) 21801 (21791 . 21801) (#("eq" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 21791) (undo-tree-id998 . -2) (undo-tree-id999 . -2) (21782 . 21791) 21784 (21781 . 21784) (#("n" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21781) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21782) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) 21783 (21780 . 21783) (21759 . 21780) (21758 . 21759) (21757 . 21758) (21755 . 21757) (#(")" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21755) (undo-tree-id1004 . -1) 21756 (21748 . 21756) (21739 . 21748) (21731 . 21739) (21714 . 21731) (21713 . 21714) 21673) nil (25723 6934 112112 325000) 0 nil])
([nil nil ((#("p" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21805) (undo-tree-id995 . -1) 21806 (21805 . 21806)) nil (25723 6934 112084 109000) 0 nil])
([nil nil ((#("p" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21805) (undo-tree-id994 . -1) 21806 (21805 . 21806)) nil (25723 6934 112077 613000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21862 . 21863) (nil fontified nil 21805 . 21863) (21805 . 21863)) nil (25723 6934 112071 467000) 0 nil])
([nil nil ((21917 . 21923) 21880 (21876 . 21880) (#("-" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21876) (undo-tree-id992 . -1) 21877 (21875 . 21877) (#("d" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21875) (undo-tree-id993 . -1) 21876 (21871 . 21876) (21863 . 21871)) nil (25723 6934 112064 832000) 0 nil])
([nil nil ((21963 . 21964) (21962 . 21963) (#("'" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21962) (undo-tree-id972 . -1) 21963 (21958 . 21963) (21953 . 21958) (21949 . 21953) (21940 . 21949) (21938 . 21940) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21938) (undo-tree-id973 . -1) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21939) (undo-tree-id974 . -1) 21940 (21934 . 21940) (21930 . 21934) (21926 . 21930) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21926) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21927) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (#("x" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21928) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21929) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -21930) (undo-tree-id983 . -1) (#("r" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21931) (undo-tree-id984 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21932) (undo-tree-id985 . -1) (#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -21933) 21934 (21930 . 21934) (21914 . 21930) (21913 . 21914) (21912 . 21913) (#("'" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21912) (undo-tree-id986 . -1) 21913 (21906 . 21913) (#("A" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21906) (undo-tree-id987 . -1) (#("r" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21907) (undo-tree-id988 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21908) (undo-tree-id989 . -1) (#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21909) (undo-tree-id990 . -1) 21910 (21900 . 21910) (21889 . 21900) (21886 . 21889) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -21886) (undo-tree-id991 . -1) 21887 (21881 . 21887) (21880 . 21881)) nil (25723 6934 112038 851000) 0 nil])
([nil nil ((21202 . 21210) 21965 (t 25723 6934 156744 336000)) nil (25723 6937 685017 491000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22273 . 22274) (nil fontified nil 22010 . 22274) (22010 . 22274) (t 25723 6938 818 305000)) nil (25723 6969 826683 842000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -22275) (undo-tree-id1005 . -1) (#("j" 0 1 (fontified t)) . -22276) (undo-tree-id1006 . -1) 22277 (22275 . 22277) (22275 . 22276) (#("*** 
" 0 2 (keymap (keymap) face org-hide fontified t) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [10040]) fontified t) 3 4 (face org-level-3 keymap (keymap) fontified t) 4 5 (fontified t)) . 22275) (undo-tree-id1007 . -4) (undo-tree-id1008 . -5) (undo-tree-id1009 . -3) 22278) nil (25723 6969 826671 480000) 0 nil])
([nil nil ((#("C" 0 1 (face org-special-keyword fontified t)) . 21202) (t 25723 6969 873431 796000)) nil (25723 6989 909766 220000) 0 nil])
([nil nil ((#("O" 0 1 (face org-level-3 fontified t)) . 21202)) nil (25723 6989 909762 518000) 0 nil])
([nil nil ((#("M" 0 1 (face org-level-3 fontified t)) . 21202)) nil (25723 6989 909759 166000) 0 nil])
([nil nil ((#("M" 0 1 (face org-level-3 fontified t)) . 21202)) nil (25723 6989 909755 883000) 0 nil])
([nil nil ((#("E" 0 1 (face org-level-3 fontified nil)) . 21202)) nil (25723 6989 909753 20000) 0 nil])
([nil nil ((#("N" 0 1 (face org-level-3 fontified t)) . 21202)) nil (25723 6989 909749 109000) 0 nil])
([nil nil ((#("T" 0 1 (face org-level-3 fontified t)) . 21202)) nil (25723 6989 909745 826000) 0 nil])
([nil nil ((#(" " 0 1 (face org-level-3 fontified t)) . 21202)) nil (25723 6989 909741 77000) 0 nil])
([nil nil ((22267 . 22268) 21201) nil (25723 6989 909729 832000) 0 nil])
([nil nil ((14029 . 14034) (t 25723 6989 961818 626000)) nil (25723 7186 925305 219000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 22273) (undo-tree-id1028 . -1)) nil (25723 7186 925301 377000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -22291) (undo-tree-id1027 . -3) 22294 (22290 . 22294) 22276) nil (25723 7186 925295 580000) 0 nil])
([nil nil ((22290 . 22295) 22291) nil (25723 7186 925288 876000) 0 nil])
([nil nil ((nil fontified t 22295 . 22296) (nil keymap (keymap) 22295 . 22296) (nil face org-level-2 22295 . 22296) (nil fontified t 22294 . 22295) (nil composition (1 1 [9675]) 22294 . 22295) (nil keymap (keymap) 22294 . 22295) (nil face org-level-2 22294 . 22295) (nil fontified t 22293 . 22294) (nil face org-hide 22293 . 22294) (nil keymap (keymap) 22293 . 22294) (#("** " 0 1 (keymap (keymap) face org-hide fontified t) 1 2 (face org-level-2 keymap (keymap) composition (1 1 [9675]) fontified t) 2 3 (face org-level-2 keymap (keymap) fontified t)) . 22292) (22295 . 22299) 22294) nil (25723 7186 925284 196000) 0 nil])
([nil nil ((22451 . 22456) (22450 . 22451) (22439 . 22450) (#("d" 0 1 (face org-level-3 fontified t)) . -22439) (undo-tree-id1011 . -1) (#("c" 0 1 (face org-level-3 fontified t)) . -22440) (undo-tree-id1012 . -1) (#("h" 0 1 (face org-level-3 fontified t)) . -22441) (undo-tree-id1013 . -1) 22442 (22434 . 22442) (#("e" 0 1 (face org-level-3 fontified t)) . -22434) (undo-tree-id1014 . -1) (#("m" 0 1 (face org-level-3 fontified t)) . -22435) (undo-tree-id1015 . -1) (#("n" 0 1 (face org-level-3 fontified t)) . -22436) (undo-tree-id1016 . -1) 22437 (22426 . 22437) (22420 . 22426) (#("j" 0 1 (face org-level-3 fontified t)) . -22420) (undo-tree-id1017 . -1) 22421 (22408 . 22421) (22396 . 22408) (22375 . 22396) (#("0" 0 1 (face org-level-3 fontified t)) . -22375) (undo-tree-id1018 . -1) (#("3" 0 1 (face org-level-3 fontified t)) . -22376) (undo-tree-id1019 . -1) 22377 (22374 . 22377) (22368 . 22374) (22347 . 22368) (#("o" 0 1 (face org-level-3 fontified t)) . -22347) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (#("r" 0 1 (face org-level-3 fontified t)) . -22348) (undo-tree-id1022 . -1) (#("p" 0 1 (face org-level-3 fontified t)) . -22349) (undo-tree-id1023 . -1) (#("e" 0 1 (face org-level-3 fontified t)) . -22350) (undo-tree-id1024 . -1) (#("r" 0 1 (face org-level-3 fontified t)) . -22351) (undo-tree-id1025 . -1) 22352 (22349 . 22352) (22328 . 22349) (22322 . 22328) (22312 . 22322) (#(" " 0 1 (face org-level-3 fontified t)) . -22312) (undo-tree-id1026 . -1) 22313 (22296 . 22313)) nil (25723 7186 925267 923000) 0 nil])
([nil nil ((22455 . 22460)) nil (25723 7186 925223 154000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22538 . 22539) (nil fontified nil 22460 . 22539) (22460 . 22539) 22459) nil (25723 7186 925219 871000) 0 nil])
([nil nil ((22545 . 22550) (22540 . 22545) 22538) nil (25723 7186 925216 30000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22634 . 22635) (nil fontified nil 22550 . 22635) (22550 . 22635) 22549) nil (25723 7186 925212 189000) 0 nil])
([nil nil ((22635 . 22640)) nil (25723 7186 925208 836000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22699 . 22700) (nil fontified nil 22640 . 22700) (22640 . 22700) 22639) nil (25723 7186 925205 484000) 0 nil])
([nil nil ((22700 . 22706) 22699) nil (25723 7186 925201 154000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22780 . 22781) (nil fontified nil 22706 . 22781) (22706 . 22781) 22705) nil (25723 7186 925197 801000) 0 nil])
([nil nil ((22781 . 22786)) nil (25723 7186 925194 30000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22850 . 22851) (nil fontified nil 22786 . 22851) (22786 . 22851) 22785) nil (25723 7186 925190 677000) 0 nil])
([nil nil ((22851 . 22856)) nil (25723 7186 925186 487000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22931 . 22932) (nil fontified nil 22856 . 22932) (22856 . 22932) 22855) nil (25723 7186 925182 296000) 0 nil])
([nil nil ((22858 . 22859) (#("!" 0 1 (face org-level-3 fontified t)) . 22858) (22858 . 22859) (#("9" 0 1 (face org-level-3 fontified t)) . 22858)) nil (25723 7186 925176 150000) 0 nil])
([nil nil ((22859 . 22860) (#("-" 0 1 (face org-level-3 fontified t)) . -22859) (undo-tree-id1010 . -1) 22860 (22859 . 22860)) nil (25723 7186 925165 674000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -22323) (undo-tree-id1038 . -4) 22327 (22322 . 22327) (t 25723 7186 973618 131000) 22292) nil (25723 7286 98575 184000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22478 . 22479) (nil fontified nil 22323 . 22479) (22323 . 22479)) nil (25723 7286 98568 968000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . 22476)) nil (25723 7286 98565 57000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 22476)) nil (25723 7286 98561 705000) 0 nil])
([nil nil ((22556 . 22557) (22537 . 22556) (#("t" 0 1 (fontified t)) . -22537) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (#(" " 0 1 (fontified t)) . -22538) (undo-tree-id1035 . -1) 22539 (22520 . 22539) (22499 . 22520) (22486 . 22499) (#("u" 0 1 (fontified t)) . -22486) (undo-tree-id1036 . -1) 22487 (22478 . 22487) (#("w" 0 1 (fontified t)) . -22478) (undo-tree-id1037 . -1) 22479 (22478 . 22479) (22477 . 22478) 22476) nil (25723 7286 98555 140000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 22579) (22557 . 22579) 22560 (22557 . 22560)) nil (25723 7286 98537 190000) 0 nil])
([nil nil ((22582 . 22599) ("document" . -22582) (undo-tree-id1029 . -8) 22590 (22569 . 22590) (#("h" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -22569) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) 22570 (22569 . 22570) (#(":" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -22569) (undo-tree-id1032 . -1) 22570 (22569 . 22570)) nil (25723 7286 98529 996000) 0 nil])
([nil nil ((22582 . 22590)) nil (25723 7286 98503 37000) 0 nil])
([nil nil ((22607 . 22608) 22589) nil (25723 7286 98961 63000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22871 . 22872) (nil fontified nil 22608 . 22872) (22608 . 22872)) nil (25723 7362 167914 696000) 0 nil] [nil nil ((nil rear-nonsticky nil 22615 . 22616) (nil fontified nil 22608 . 22616) (22608 . 22616)) ((#("document" 0 7 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil) 7 8 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky nil fontified nil)) . 22608) (undo-tree-id1039 . -7) (undo-tree-id1040 . -7) (undo-tree-id1041 . -7) (undo-tree-id1042 . -7) (nil rear-nonsticky t 22615 . 22616)) (25723 7286 98487 672000) 0 nil])
([nil nil ((22586 . 22604) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -22586) (undo-tree-id1043 . -1) (#("m" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -22587) (undo-tree-id1044 . -1) (#("n" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -22588) (undo-tree-id1045 . -1) 22589 (22582 . 22589) (#("listing_childNodes()" 0 20 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 22582) (undo-tree-id1046 . -19) (undo-tree-id1047 . -19) (undo-tree-id1048 . -19) (undo-tree-id1049 . -19) (undo-tree-id1050 . -19) 22601) nil (25723 7362 167901 775000) 0 nil])
nil
([nil nil ((22885 . 22887) (t 25723 7362 217004 675000)) nil (25723 7972 282292 762000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -22885) (undo-tree-id1051 . -1) (#("x" 0 1 (fontified t)) . -22886) (undo-tree-id1052 . -1) 22887) nil (25723 7972 282282 355000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 23035) (23013 . 23035) 23016 (23013 . 23016) (23012 . 23013) (23008 . 23012) (#("l" 0 1 (fontified t)) . -23008) (undo-tree-id1072 . -1) 23009 (23005 . 23009) (#(" " 0 1 (fontified t)) . -23005) (undo-tree-id1073 . -1) (#("b" 0 1 (fontified t)) . -23006) (undo-tree-id1074 . -1) 23007 (22999 . 23007) (22994 . 22999) (#("d" 0 1 (fontified t)) . -22994) (undo-tree-id1075 . -1) 22995 (22987 . 22995) (#("t" 0 1 (fontified t)) . -22987) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (#("e" 0 1 (fontified t)) . -22988) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) 22989 (22984 . 22989) (22963 . 22984) (#(" " 0 1 (fontified t)) . -22963) (undo-tree-id1080 . -1) (#("s" 0 1 (fontified t)) . -22964) (undo-tree-id1081 . -1) 22965 (22952 . 22965) (22931 . 22952) (#(" " 0 1 (fontified t)) . -22931) (undo-tree-id1082 . -1) (#(" " 0 1 (fontified t)) . -22932) (undo-tree-id1083 . -1) (#(" " 0 1 (fontified t)) . -22933) (undo-tree-id1084 . -1) (#(" " 0 1 (fontified t)) . -22934) (undo-tree-id1085 . -1) 22935 (22930 . 22935) (t 25723 7972 326146 86000) 22886) nil (25723 8564 715266 416000) 0 nil])
([nil nil ((23050 . 23055) (23038 . 23050) (#("document" 0 8 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -23038) (undo-tree-id1068 . -8) 23046 (23025 . 23046) (#("h" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -23025) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) 23026 (23025 . 23026) (#(":" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -23025) (undo-tree-id1071 . -1) 23026 (23025 . 23026)) nil (25723 8564 715222 974000) 0 nil])
([nil nil ((23038 . 23046)) nil (25723 8564 715206 840000) 0 nil])
([nil nil ((23063 . 23064) 23045) nil (25723 8564 715203 418000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23111 . 23112) (nil fontified nil 23064 . 23112) (23064 . 23112)) nil (25723 8564 715199 996000) 0 nil])
([nil nil ((23112 . 23113) 23111) nil (25723 8564 715195 247000) 0 nil])
([nil nil ((23113 . 23114) 23113) nil (25723 8564 715191 894000) 0 nil])
([nil nil ((23114 . 23115) 23114) nil (25723 8564 715187 704000) 0 nil])
([nil nil ((23115 . 23116) 23115) nil (25723 8564 715183 374000) 0 nil])
([nil nil ((23116 . 23117) 23116) nil (25723 8564 715179 602000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23141 . 23142) (nil fontified nil 23117 . 23142) (23117 . 23142)) nil (25723 8564 715175 831000) 0 nil])
([nil nil ((23181 . 23182) (23172 . 23181) (23168 . 23172) (23165 . 23168) (#("c" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -23165) (undo-tree-id1062 . -1) (#("o" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -23166) (undo-tree-id1063 . -1) (#("u" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -23167) (undo-tree-id1064 . -1) 23168 (23151 . 23168) (23140 . 23151) (23139 . 23140) (23129 . 23139) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -23129) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (#("o" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -23130) (undo-tree-id1067 . -1) 23131 (23113 . 23131)) nil (25723 8564 715162 351000) 0 nil])
([nil nil ((23181 . 23182)) nil (25723 8564 714476 364000) 0 nil])
([nil nil ((#("c" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -23181) (undo-tree-id1061 . -1) 23182) nil (25723 8564 714472 33000) 0 nil])
([nil nil ((23064 . 23664) (#("<!DOCTYPE html>
<html lang=\"en\">
<body>
<script>
//document own properties 
console.log(Object.keys(document).sort());



</script>
</body>
</html>
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1 9 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 9 14 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 14 15 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 15 17 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 17 21 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 21 22 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 22 26 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 26 27 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 27 31 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 31 34 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 34 38 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 38 41 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 41 47 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 47 48 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t) 48 117 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 117 118 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 118 119 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 119 120 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 120 121 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 121 122 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 122 124 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 124 130 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 130 134 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 134 138 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 138 142 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 142 146 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 146 147 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t) 147 148 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 23064) (undo-tree-id1053 . 30) (undo-tree-id1054 . -117) (undo-tree-id1055 . -122) (undo-tree-id1056 . -146) (undo-tree-id1057 . -117) (undo-tree-id1058 . -117) (undo-tree-id1059 . -122) (undo-tree-id1060 . -117) 23181) nil (25723 8564 714458 624000) 0 nil])
([nil nil ((23064 . 23664) (#("  <!DOCTYPE html>
  <html lang=\"en\">
  <body>
  <script>
  //document own properties 
  console.log(Object.keys(document).sort());

  //document own properties and inherited properties
  var documentPropertiesInherited = [];
  for(var p in document){
	      documentPropertiesInherited.push(p);
  }
  console.log(documentPropertiesInherited.sort());

  //document inherited properties only

  for(var p in document){
  if(
	      !document.hasOwnProperty(p)){documentPropertiesOnlyInherited.push(p)};
     }
  }
  console.log(documentPropertiesOnlyInherited.sort());

  </script>
  </body>
  </html>
" 0 600 (fontified nil)) . 23064) 23664 (t 25723 8564 761983 760000)) nil (25723 8574 94957 299000) 0 nil])
([nil nil ((23064 . 23664) (#("  <!DOCTYPE html>
  <html lang=\"en\">
  <body>
  <script>
  //document own properties 
  console.log(Object.keys(document).sort());

  //document own properties and inherited properties
  var documentPropertiesInherited = [];
  for(var p in document){
	      documentPropertiesInherited.push(p);
  }
  console.log(documentPropertiesInherited.sort());

  //document inherited properties only

  for(var p in document){
  if(
	      !document.hasOwnProperty(p)){documentPropertiesOnlyInherited.push(p)};
     }
  }
  console.log(documentPropertiesOnlyInherited.sort());

  </script>
  </body>
  </html>
" 0 600 (fontified nil)) . 23064) 23664 (t 25723 8574 142141 557000)) nil (25723 8594 44826 384000) 0 nil])
([nil nil ((23064 . 23660) (#("  <!DOCTYPE html>
  <html lang=\"en\">
  <body>
  <script>
  //document own properties 
  console.log(Object.keys(document).sort());

  //document own properties and inherited properties
  var documentPropertiesInherited = [];
  for(var p in document){
	      documentPropertiesInherited.push(p);
  }
  console.log(documentPropertiesInherited.sort());

  //document inherited properties only

  for(var p in document){
  if(
	      !document.hasOwnProperty(p)){documentPropertiesOnlyInherited.push(p)};
     }
  }
  console.log(documentPropertiesOnlyInherited.sort());

  </script>
  </body>
  </html>
" 0 600 (fontified nil)) . 23064) 23664 (t 25723 8594 90610 841000)) nil (25723 8623 313048 148000) 0 nil])
([nil nil ((23064 . 23704) (#("  <!DOCTYPE html>
  <html lang=\"en\">
  <body>
  <script>
  //document own properties 
  console.log(Object.keys(document).sort());

  //document own properties and inherited properties
  var documentPropertiesInherited = [];
  for(var p in document){
	      documentPropertiesInherited.push(p);
  }
  console.log(documentPropertiesInherited.sort());

  //document inherited properties only

  for(var p in document){
  if(
	      !document.hasOwnProperty(p)){documentPropertiesOnlyInherited.push(p)};
     }
  console.log(documentPropertiesOnlyInherited.sort());

  </script>
  </body>
  </html>
" 0 596 (fontified nil)) . 23064) 23660 (t 25723 8623 355582 209000)) nil (25723 8669 646272 445000) 0 nil])
([nil nil ((23064 . 23704) (#("  <!DOCTYPE html>
  <html lang=\"en\">
  <body>
  <script>
  //document own properties 
  console.log(Object.keys(document).sort());

  //document own properties and inherited properties
  var documentPropertiesInherited = [];
  for(var p in document){
	      documentPropertiesInherited.push(p);
  }
  console.log(documentPropertiesInherited.sort());

  //document inherited properties only
  var documentPropertiesOnlyInherited = [];

  for(var p in document){
  if(
	      !document.hasOwnProperty(p)){documentPropertiesOnlyInherited.push(p)};
     }
  console.log(documentPropertiesOnlyInherited.sort());

  </script>
  </body>
  </html>
" 0 640 (fontified nil)) . 23064) 23704 (t 25723 8669 689658 294000)) nil (25723 8705 247306 332000) 0 nil])
([nil nil ((#("listing_childNodes()." 0 21 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 23038) (undo-tree-id1092 . -20) (undo-tree-id1093 . -20) (undo-tree-id1094 . -20) (undo-tree-id1095 . -20) (undo-tree-id1096 . -20) 23058 (t 25723 8705 291589 82000)) nil (25723 9031 449418 411000) 0 nil])
([nil nil ((23038 . 23039)) nil (25723 9031 449403 256000) 0 nil])
([nil nil ((23049 . 23069) (#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -23049) (undo-tree-id1086 . -1) 23050 (23045 . 23050) (#("a" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -23045) (undo-tree-id1087 . -1) (#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -23046) (undo-tree-id1088 . -1) (#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -23047) (undo-tree-id1089 . -1) 23048 (23045 . 23048) (#("+" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -23045) (undo-tree-id1090 . -1) 23046 (23045 . 23046) (#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -23045) (undo-tree-id1091 . -1) 23046 (23038 . 23046)) nil (25723 9031 449391 173000) 0 nil])
([nil nil ((23725 . 23746) (t 25723 9031 494006 83000)) nil (25723 9137 644281 757000) 0 nil])
([nil nil ((23746 . 23755)) nil (25723 9137 644278 474000) 0 nil])
([nil nil ((23755 . 23756)) nil (25723 9137 644275 680000) 0 nil])
([nil nil ((23756 . 23759)) nil (25723 9137 644272 398000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -23756) (undo-tree-id1145 . -1) (#("-" 0 1 (fontified t)) . -23757) (undo-tree-id1146 . -1) (#(" " 0 1 (fontified t)) . -23758) (undo-tree-id1147 . -1) 23759) nil (25723 9137 644242 296000) 0 nil])
([nil nil ((23756 . 23763)) nil (25723 9137 644100 586000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -23756) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (#("o" 0 1 (fontified t)) . -23757) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (#("c" 0 1 (fontified t)) . -23758) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (#("t" 0 1 (fontified t)) . -23759) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (#("y" 0 1 (fontified t)) . -23760) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (#("p" 0 1 (fontified t)) . -23761) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (#("e" 0 1 (fontified t)) . -23762) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) 23763) nil (25723 9137 644093 462000) 0 nil])
([nil nil ((23756 . 23766)) nil (25723 9137 644058 960000) 0 nil])
([nil nil ((23766 . 23767)) nil (25723 9137 644056 96000) 0 nil])
([nil nil ((23767 . 23770)) nil (25723 9137 644053 303000) 0 nil])
([nil nil ((23770 . 23785)) nil (25723 9137 644050 20000) 0 nil])
([nil nil ((23785 . 23786)) nil (25723 9137 644047 226000) 0 nil])
([nil nil ((23795 . 23803) (23786 . 23795)) nil (25723 9137 644044 363000) 0 nil])
([nil nil ((23803 . 23804)) nil (25723 9137 644041 11000) 0 nil])
([nil nil ((23804 . 23813)) nil (25723 9137 644038 77000) 0 nil])
([nil nil ((23813 . 23820)) nil (25723 9137 644035 144000) 0 nil])
([nil nil ((23820 . 23821)) nil (25723 9137 644032 280000) 0 nil])
([nil nil ((23821 . 23828)) nil (25723 9137 644029 417000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -23826) (undo-tree-id1129 . -1) (#("y" 0 1 (fontified t)) . -23827) (undo-tree-id1130 . -1) 23828) nil (25723 9137 644024 598000) 0 nil])
([nil nil ((23826 . 23828)) nil (25723 9137 644017 613000) 0 nil])
([nil nil ((23828 . 23830)) nil (25723 9137 644014 261000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -23829) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) 23830) nil (25723 9137 644010 489000) 0 nil])
([nil nil ((23829 . 23830)) nil (25723 9137 644002 248000) 0 nil])
([nil nil ((23830 . 23831)) nil (25723 9137 643999 385000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -23830) (undo-tree-id1126 . -1) 23831) nil (25723 9137 643995 54000) 0 nil])
([nil nil ((23836 . 23838) (23830 . 23836)) nil (25723 9137 643989 397000) 0 nil])
([nil nil ((23838 . 23839)) nil (25723 9137 643986 603000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -23836) (undo-tree-id1122 . -1) (#("r" 0 1 (fontified t)) . -23837) (undo-tree-id1123 . -1) (#("
" 0 1 (fontified t)) . -23838) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) 23839) nil (25723 9137 643982 343000) 0 nil])
([nil nil ((23836 . 23837)) nil (25723 9137 643970 260000) 0 nil])
([nil nil ((23837 . 23845)) nil (25723 9137 643967 886000) 0 nil])
([nil nil ((23845 . 23846)) nil (25723 9137 643965 92000) 0 nil])
([nil nil ((23846 . 23847)) nil (25723 9137 643962 229000) 0 nil])
([nil nil ((23847 . 23861)) nil (25723 9137 643959 365000) 0 nil])
([nil nil ((23861 . 23862)) nil (25723 9137 643956 501000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -23860) (undo-tree-id1119 . -1) (#("
" 0 1 (fontified t)) . -23861) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) 23862) nil (25723 9137 643951 822000) 0 nil])
([nil nil ((23860 . 23861)) nil (25723 9137 643868 780000) 0 nil])
([nil nil ((23861 . 23862)) nil (25723 9137 643865 986000) 0 nil])
([nil nil ((23862 . 23868)) nil (25723 9137 643863 53000) 0 nil])
([nil nil ((23868 . 23873)) nil (25723 9137 643859 770000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -23872) (undo-tree-id1118 . -1) 23873) nil (25723 9137 643855 929000) 0 nil])
([nil nil ((23872 . 23874)) nil (25723 9137 643850 621000) 0 nil])
([nil nil ((23874 . 23875)) nil (25723 9137 643847 198000) 0 nil])
([nil nil ((23875 . 23877)) nil (25723 9137 643844 405000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -23876) (undo-tree-id1117 . -1) 23877) nil (25723 9137 643840 563000) 0 nil])
([nil nil ((23876 . 23883)) nil (25723 9137 643833 998000) 0 nil])
([nil nil ((23883 . 23884)) nil (25723 9137 643831 205000) 0 nil])
([nil nil ((23884 . 23890)) nil (25723 9137 643828 271000) 0 nil])
([nil nil ((23890 . 23900)) nil (25723 9137 643825 408000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -23897) (undo-tree-id1114 . -1) (#("i" 0 1 (fontified t)) . -23898) (undo-tree-id1115 . -1) (#("w" 0 1 (fontified t)) . -23899) (undo-tree-id1116 . -1) 23900) nil (25723 9137 643820 589000) 0 nil])
([nil nil ((23897 . 23900)) nil (25723 9137 643811 20000) 0 nil])
([nil nil ((23900 . 23901)) nil (25723 9137 643807 738000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -23895) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (#("v" 0 1 (fontified t)) . -23896) (undo-tree-id1108 . -1) (#("i" 0 1 (fontified t)) . -23897) (undo-tree-id1109 . -1) (#("e" 0 1 (fontified t)) . -23898) (undo-tree-id1110 . -1) (#("w" 0 1 (fontified t)) . -23899) (undo-tree-id1111 . -1) (#("
" 0 1 (fontified t)) . -23900) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) 23901) nil (25723 9137 643800 614000) 0 nil])
([nil nil ((23895 . 23899)) nil (25723 9137 643781 547000) 0 nil])
([nil nil ((23899 . 23900)) nil (25723 9137 643778 753000) 0 nil])
([nil nil ((23900 . 23903)) nil (25723 9137 643775 890000) 0 nil])
([nil nil ((23903 . 23914)) nil (25723 9137 643772 956000) 0 nil])
([nil nil ((23914 . 23915)) nil (25723 9137 643770 93000) 0 nil])
([nil nil ((23915 . 23917)) nil (25723 9137 643767 299000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -23916) (undo-tree-id1105 . -1) 23917) nil (25723 9137 643763 528000) 0 nil])
([nil nil ((23916 . 23925)) nil (25723 9137 643758 359000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -23924) (undo-tree-id1104 . -1) 23925) nil (25723 9137 643754 937000) 0 nil])
([nil nil ((23925 . 23932) (23924 . 23925)) nil (25723 9137 643749 629000) 0 nil])
([nil nil ((23932 . 23933)) nil (25723 9137 643746 277000) 0 nil])
([nil nil ((23933 . 23937)) nil (25723 9137 643743 413000) 0 nil])
([nil nil ((#("3" 0 1 (fontified nil)) . -23934) (undo-tree-id1101 . -1) (#("-" 0 1 (fontified t)) . -23935) (undo-tree-id1102 . -1) (#(" " 0 1 (fontified t)) . -23936) (undo-tree-id1103 . -1) 23937) nil (25723 9137 643739 83000) 0 nil])
([nil nil ((23934 . 23936)) nil (25723 9137 643729 235000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -23935) (undo-tree-id1100 . -1) 23936) nil (25723 9137 643725 394000) 0 nil])
([nil nil ((23935 . 23940)) nil (25723 9137 643719 597000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -23937) (undo-tree-id1097 . -1) (#("j" 0 1 (fontified t)) . -23938) (undo-tree-id1098 . -1) (#("s" 0 1 (fontified t)) . -23939) (undo-tree-id1099 . -1) 23940) nil (25723 9137 643714 778000) 0 nil])
([nil nil ((23937 . 23947)) nil (25723 9137 643692 9000) 0 nil])
([nil nil ((23947 . 23948)) nil (25723 9137 643688 98000) 0 nil])
([nil nil ((23948 . 23949)) nil (25723 9137 643677 203000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -24001) (undo-tree-id1160 . -1) (#(" " 0 1 (fontified t)) . -24002) (undo-tree-id1161 . -1) (#(" " 0 1 (fontified t)) . -24003) (undo-tree-id1162 . -1) (#(" " 0 1 (fontified t)) . -24004) (undo-tree-id1163 . -1) 24005 (24001 . 24005) (t 25723 9137 694738 49000)) nil (25723 9296 660222 383000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -24002) (undo-tree-id1159 . -4) 24006 (24001 . 24006) 24001) nil (25723 9296 660208 135000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24094 . 24095) (nil fontified nil 24001 . 24095) (24001 . 24095)) nil (25723 9296 660201 779000) 0 nil])
([nil nil ((#("getting general html document information " 0 42 (face org-level-3 fontified t)) . 23958) (undo-tree-id1158 . -41)) nil (25723 9296 660197 519000) 0 nil])
([nil nil ((#("2.3 Getting general HTML document information (title, url, referrer, lastModified, compatMode)" 0 93 (fontified t) 93 94 (rear-nonsticky t fontified t)) . 23959) (undo-tree-id1157 . -93)) nil (25723 9296 660191 791000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24051 . 24052) (nil fontified nil 23958 . 24052) (23958 . 24052) 23957) nil (25723 9296 660186 64000) 0 nil])
([nil nil ((#("2.3" 0 3 (face org-level-3 fontified t)) . 23958) (undo-tree-id1152 . -2) (undo-tree-id1153 . -2) (undo-tree-id1154 . -2) (undo-tree-id1155 . -2) (undo-tree-id1156 . -2) 23960) nil (25723 9296 660180 477000) 0 nil])
([nil nil ((#(" " 0 1 (face org-level-3 fontified t)) . 23957) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1)) nil (25723 9296 660160 292000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 24155) (24133 . 24155) 24136 (24133 . 24136) (24132 . 24133) (24121 . 24132) (#("n" 0 1 (fontified t)) . -24121) (undo-tree-id1174 . -1) 24122 (24107 . 24122) (24106 . 24107) (24099 . 24106) (24078 . 24099) (#("g" 0 1 (fontified t)) . -24078) (undo-tree-id1175 . -1) 24079 (24078 . 24079) (#("t" 0 1 (fontified t)) . -24078) (undo-tree-id1176 . -1) 24079 (24065 . 24079) (24056 . 24065) (#("m" 0 1 (fontified t)) . -24056) (undo-tree-id1177 . -1) 24057 (24049 . 24057) (#("w" 0 1 (fontified t)) . -24049) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (#("e" 0 1 (fontified nil)) . -24050) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (#(" " 0 1 (fontified t)) . -24051) (undo-tree-id1182 . -1) 24052 (24049 . 24052) (t 25723 9296 703404 822000)) nil (25723 10161 284099 390000) 0 nil])
([nil nil ((24158 . 24175) (#("document" 0 8 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil)) . -24158) (undo-tree-id1170 . -1) 24166 (24145 . 24166) (#("h" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -24145) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) 24146 (24145 . 24146) (#(":" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -24145) (undo-tree-id1173 . -1) 24146 (24145 . 24146)) nil (25723 10161 283950 496000) 0 nil])
([nil nil ((24158 . 24166)) nil (25723 10161 283935 621000) 0 nil])
([nil nil ((24183 . 24184) 24165) nil (25723 10161 283931 850000) 0 nil])
([nil nil ((#("k" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -24184) (undo-tree-id1169 . -1) 24185 (24184 . 24185)) nil (25723 10161 283927 520000) 0 nil])
([nil nil ((24158 . 24170) (#("listing_childNodes()" 0 20 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 24158) (undo-tree-id1164 . -19) (undo-tree-id1165 . -19) (undo-tree-id1166 . -19) (undo-tree-id1167 . -19) (undo-tree-id1168 . -19) 24177) nil (25723 10161 283918 581000) 0 nil])
([nil nil ((24175 . 24176) 24169) nil (25723 10161 283592 719000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24541 . 24542) (nil fontified nil 24176 . 24542) (24176 . 24542)) nil (25723 10161 283371 194000) 0 nil])
([nil nil ((24554 . 24555) (t 25723 10161 330743 41000)) nil (25723 10185 944131 365000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -24554) (undo-tree-id1183 . -1) 24555) nil (25723 10185 944122 356000) 0 nil])
([nil nil ((24554 . 24556) (t 25723 10185 989635 466000)) nil (25723 10222 827121 389000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -24554) (undo-tree-id282 . -1) (#("x" 0 1 (fontified t)) . -24555) (undo-tree-id283 . -1) 24556) nil (25723 10222 827116 710000) 0 nil])
([nil nil ((24554 . 24555)) nil (25723 10222 827107 212000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -24554) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) 24555) nil (25723 10307 650006 321000) 0 nil])
([nil nil ((nil rear-nonsticky nil 525 . 526) (nil fontified nil 482 . 526) (482 . 526) (t 25723 10222 876308 621000)) nil (25723 10361 105055 214000) 0 nil] [nil nil ((#("#" 0 1 (font-lock-multiline t font-lock-fontified t fontified t)) . 66) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (t 25723 10222 876308 621000)) ((66 . 67)) (25723 10307 648986 28000) 0 nil])
([nil nil ((481 . 482) 472) nil (25723 10361 105051 373000) 0 nil])
nil
([nil nil ((#("(set-buffer-file-coding-system 'utf-8-unix)
" 0 43 (fontified t) 43 44 (rear-nonsticky t fontified t)) . 483) (undo-tree-id237 . -44) (undo-tree-id238 . -43)) nil (25723 10361 105047 113000) 0 nil])
([nil nil ((nil fontified t 89 . 90) (nil font-lock-fontified t 89 . 90) (nil help-echo nil 89 . 90) (nil prettify-symbols-start nil 89 . 90) (nil prettify-symbols-end nil 89 . 90) (nil font-lock-multiline t 89 . 90) (nil face org-block-begin-line 89 . 90) (89 . 90)) nil (25723 10361 105041 525000) 0 nil])
([nil nil ((nil rear-nonsticky nil 89 . 90) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -133) (90 . 134) (nil fontified t 89 . 90) (nil font-lock-fontified t 89 . 90) (nil font-lock-multiline t 89 . 90) (nil face org-block-begin-line 89 . 90) (nil help-echo nil 89 . 90) (nil prettify-symbols-start nil 89 . 90) (nil prettify-symbols-end nil 89 . 90) (89 . 90)) nil (25723 10361 105035 240000) 0 nil])
([nil nil ((#("(set-buffer-file-coding-system 'utf-8-unix)
" 0 43 (src-block t prettify-symbols-end nil prettify-symbols-start nil composition nil help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 43 44 (composition nil face (org-block) font-lock-multiline t src-block t prettify-symbols-end nil prettify-symbols-start nil help-echo nil font-lock-fontified t fontified t)) . 90) (undo-tree-id233 . -43) (undo-tree-id234 . -44) (undo-tree-id235 . 1) (undo-tree-id236 . -43)) nil (25723 10361 105027 976000) 0 nil])
([nil nil ((nil rear-nonsticky nil 89 . 90) (#("
" 0 1 (fontified nil face (org-block) font-lock-multiline t src-block t prettify-symbols-end nil prettify-symbols-start nil font-lock-fontified t)) . -133) (90 . 134) (nil fontified t 89 . 90) (nil font-lock-fontified t 89 . 90) (nil help-echo nil 89 . 90) (nil prettify-symbols-start nil 89 . 90) (nil prettify-symbols-end nil 89 . 90) (nil font-lock-multiline t 89 . 90) (nil face org-block-begin-line 89 . 90) (89 . 90)) nil (25723 10361 105017 81000) 0 nil])
([nil nil ((88 . 89) 66) nil (25723 10361 105010 27000) 0 nil])
([nil nil ((nil fontified t 134 . 135) (nil font-lock-fontified t 134 . 135) (nil help-echo nil 134 . 135) (nil prettify-symbols-start nil 134 . 135) (nil prettify-symbols-end nil 134 . 135) (nil src-block t 134 . 135) (nil font-lock-multiline t 134 . 135) (nil face (org-block) 134 . 135) (134 . 135) 91) nil (25723 10361 105005 697000) 0 nil])
([nil nil ((#("
" 0 1 (composition nil face (org-block) font-lock-multiline t src-block t prettify-symbols-end nil prettify-symbols-start nil help-echo nil font-lock-fontified t rear-nonsticky t fontified t)) . 90) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1)) nil (25723 10361 104998 434000) 0 nil])
([nil nil ((#("
" 0 1 (composition nil face (org-block) font-lock-multiline t src-block t prettify-symbols-end nil prettify-symbols-start nil help-echo nil font-lock-fontified t fontified t)) . 89) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1)) nil (25723 10361 104968 402000) 0 nil])
([nil nil ((528 . 1006) (#("
" 0 1 (fontified nil)) . 528) (527 . 529)) nil (25723 10390 196563 168000) 0 nil])
([nil nil ((#("#+RESULTS:
| lambda | (&optional arg) | Keyboard macro. | (interactive p) | (kmacro-exec-ring-item '([59 120 40 115 114 99 24 97 101 escape 107 107 106 65 58 backspace 104 backspace 104 116 109 108 32 58 116 97 110 103 108 101 32 100 111 99 117 109 101 110 116 C-backspace 99 104 105 108 100 78 111 100 101 115 40 41 46 104 116 109 108 escape 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 105 108 105 115 116 105 110 103 95 escape 111 escape 105] 0 %d) arg) |
" 0 10 (face org-meta-line font-lock-fontified t fontified t) 10 11 (fontified t) 11 477 (face org-table fontified t) 477 478 (fontified t)) . 528) (undo-tree-id239 . -11) (undo-tree-id240 . -11) (undo-tree-id241 . -478) (undo-tree-id242 . -477) (undo-tree-id243 . -11) (undo-tree-id244 . -11) (undo-tree-id245 . -478) (undo-tree-id246 . -11) (undo-tree-id247 . -11) (undo-tree-id248 . -11) (undo-tree-id249 . -478) 539) nil (25723 10390 196441 365000) 0 nil])
([nil nil ((528 . 529)) nil (25723 10390 196389 962000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -528) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) 529 (t 25723 10390 242022 999000)) nil (25723 10401 376748 163000) 0 nil])
([nil nil ((#("(set-buffer-file-coding-system 'utf-8-unix)
" 0 43 (composition nil face (org-block) font-lock-multiline t help-echo nil fontified t src-block t prettify-symbols-end nil prettify-symbols-start nil font-lock-fontified t) 43 44 (composition nil face (org-block) font-lock-multiline t src-block t prettify-symbols-end nil prettify-symbols-start nil help-echo nil font-lock-fontified t fontified t)) . 89) (undo-tree-id949 . -44) (undo-tree-id950 . -43) (undo-tree-id951 . -44)) nil (25723 10401 376737 757000) 0 nil])
([nil nil ((484 . 485)) nil (25723 10401 376726 164000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -484) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) 485) nil (25723 10401 376697 319000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -483) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) 484) nil (25723 10401 375607 799000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -483) (undo-tree-id957 . -1) 484 (483 . 484) (t 25723 10401 422034 714000)) nil (25723 10443 598795 994000) 0 nil])
([nil nil ((483 . 484)) nil (25723 10443 598784 610000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -483) (undo-tree-id956 . -1) 484) nil (25723 10443 598586 51000) 0 nil])
([nil nil ((65 . 66) (t 25723 10443 646216 492000) 19) nil (25723 10518 186103 47000) 0 nil])
([nil nil ((483 . 484) 474) nil (25723 10518 186098 717000) 0 nil])
([nil nil ((483 . 484) 474) nil (25723 10518 186095 435000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -474) (undo-tree-id676 . -3) 477 (473 . 477) 133) nil (25723 10518 186091 104000) 0 nil])
([nil nil ((24560 . 24562)) nil (25723 10518 186055 345000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -24560) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (#("x" 0 1 (fontified t)) . -24561) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) 24562) nil (25723 10518 185977 122000) 0 nil])
([nil nil ((24560 . 24561) (t 25723 10518 234988 880000) 24560) nil (25723 10806 482843 3000) 0 nil])
([nil nil ((24560 . 24561) 24560) nil (25723 10806 482838 324000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -24561) (undo-tree-id12 . -1) (#("i" 0 1 (fontified t)) . -24562) (undo-tree-id13 . -1) 24563 (24561 . 24563) (#("n" 0 1 (fontified t)) . -24561) (undo-tree-id14 . -1) (#("s" 0 1 (fontified t)) . -24562) (undo-tree-id15 . -1) 24563 (24561 . 24563)) nil (25723 10806 482827 498000) 0 nil])
([nil nil ((24560 . 24561) 24560) nil (25723 10806 481681 796000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -24561) (undo-tree-id11 . -1) 24562 (24561 . 24562)) nil (25723 10806 481676 488000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24561 . 24562) (#("
" 0 1 (fontified nil face org-block-begin-line font-lock-multiline t font-lock-fontified t)) . -24604) (24561 . 24605)) nil (25723 10806 481667 338000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24605 . 24606) (#("
" 0 1 (fontified nil face org-block-end-line)) . -24615) (24605 . 24616)) nil (25723 10806 481662 100000) 0 nil])
([nil nil ((#("#+BEGIN_SRC html :tangle general_info.html

#+END_SRC
" 0 42 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 42 43 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 43 44 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky t fontified t) 44 53 (face org-block-end-line font-lock-multiline t fontified t font-lock-fontified t) 53 54 (face org-block-end-line fontified t)) . 24562) (undo-tree-id3 . -44) (undo-tree-id4 . -54) (undo-tree-id5 . 12) (undo-tree-id6 . -53) (undo-tree-id7 . -44) (undo-tree-id8 . -44) (undo-tree-id9 . -44) (undo-tree-id10 . -44) 24606) nil (25723 10806 481654 68000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24561 . 24562) (#("
" 0 1 (fontified nil face org-block-end-line)) . -24615) (24561 . 24616)) nil (25723 10806 481519 62000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -24560) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 24561) nil (25723 10806 481511 868000) 0 nil])
([nil nil ((24614 . 24615) 24605) nil (25723 10806 481194 293000) 0 nil])
([nil nil ((24615 . 24616) 24615) nil (25723 10806 483004 899000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24616 . 24617) (#("
" 0 1 (fontified nil face org-block-end-line)) . -24670) (24616 . 24671)) nil (25723 10816 361220 80000) 0 nil] [nil nil ((24616 . 24774)) ((#("(fset 'testing
   (kmacro-lambda-form [escape ?p ?k ?k ?k ?y ?y ?j ?j ?j ?j ?j ?k ?p ?k ?k ?V ?j ?j ?d ?k ?p ?k ?i escape ?j ?j ?i escape ?i escape] 0 \"%d\"))
" 0 7 (fontified t) 7 14 (fontified t) 14 15 (fontified t) 15 18 (fontified t) 18 38 (fontified t) 38 39 (fontified t) 39 147 (fontified t) 147 148 (fontified t) 148 149 (fontified t) 149 150 (fontified t) 150 151 (fontified t) 151 155 (fontified t) 155 156 (fontified t) 156 158 (fontified t)) . 24616) (undo-tree-id16 . -158) (undo-tree-id17 . -158) (undo-tree-id18 . -158) (undo-tree-id19 . -158)) (25723 10806 480934 617000) 0 nil])
([nil nil ((#("#+BEGIN_SRC html :tangle general_info.html

#+END_SRC


#+BEGIN_SRC html :tangle general_info.html

#+END_SRC
" 0 42 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 42 43 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 43 44 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t rear-nonsticky t) 44 53 (face org-block-end-line font-lock-multiline t fontified t font-lock-fontified t) 53 54 (face org-block-end-line fontified t) 54 55 (fontified t) 55 56 (rear-nonsticky t fontified t) 56 98 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 98 99 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 99 100 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t rear-nonsticky t) 100 101 (font-lock-multiline t face org-block-end-line fontified t font-lock-fontified t) 101 109 (font-lock-multiline t face org-block-end-line fontified t font-lock-fontified t) 109 110 (face org-block-end-line rear-nonsticky t fontified t)) . 24561) (undo-tree-id96 . -100) (undo-tree-id97 . -110) (undo-tree-id98 . 55) (undo-tree-id99 . -109) (undo-tree-id100 . -100) (undo-tree-id101 . -100) (undo-tree-id102 . -55) (undo-tree-id103 . -100) (undo-tree-id104 . -100) (undo-tree-id105 . -100) 24661) nil (25723 10827 811603 343000) 0 nil] [nil nil ((nil rear-nonsticky nil 24660 . 24661) (#("
" 0 1 (fontified nil face org-block-end-line)) . -24670) (24660 . 24671)) ((#("
#+END_SRC
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky nil fontified nil) 1 10 (face org-block-end-line font-lock-multiline t fontified nil font-lock-fontified t) 10 11 (fontified nil face org-block-end-line)) . 24660) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (24670 . 24671) (nil rear-nonsticky t 24660 . 24661)) (25723 10815 251689 623000) 0 nil])
nil
([nil nil ((24561 . 24562)) nil (25723 10831 35805 682000) 0 nil] [nil nil ((nil rear-nonsticky nil 24561 . 24562) (#("
" 0 1 (fontified nil face org-block-end-line rear-nonsticky t)) . -24671) (24561 . 24672)) ((#("
#+BEGIN_SRC html :tangle general_info.html

#+END_SRC


#+BEGIN_SRC html :tangle general_info.html

#+END_SRC
" 0 1 (rear-nonsticky nil fontified nil) 1 43 (face org-block-begin-line font-lock-multiline t fontified nil font-lock-fontified t) 43 44 (face org-block-begin-line font-lock-multiline t fontified nil font-lock-fontified t) 44 45 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t rear-nonsticky t) 45 46 (font-lock-multiline t face org-block-end-line fontified nil font-lock-fontified t) 46 54 (font-lock-multiline t face org-block-end-line fontified nil font-lock-fontified t) 54 55 (face org-block-end-line fontified nil) 55 56 (fontified t) 56 57 (fontified t rear-nonsticky t) 57 99 (face org-block-begin-line font-lock-multiline t fontified nil font-lock-fontified t) 99 100 (face org-block-begin-line font-lock-multiline t fontified nil font-lock-fontified t) 100 101 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t rear-nonsticky t) 101 102 (face org-block-end-line font-lock-multiline t fontified nil font-lock-fontified t) 102 110 (face org-block-end-line font-lock-multiline t fontified nil font-lock-fontified t) 110 111 (fontified nil face org-block-end-line rear-nonsticky t)) . 24561) (undo-tree-id640 . -44) (undo-tree-id641 . -45) (undo-tree-id642 . 111) (undo-tree-id643 . -1) (undo-tree-id644 . 66) (undo-tree-id645 . -1) (undo-tree-id646 . -44) (undo-tree-id647 . -44) (undo-tree-id648 . -44) (undo-tree-id649 . -45) (undo-tree-id650 . -44) (undo-tree-id651 . -44) (undo-tree-id652 . -44) (undo-tree-id653 . -44) (undo-tree-id654 . -44) (undo-tree-id655 . -44) (undo-tree-id656 . -44) (undo-tree-id657 . -44) (undo-tree-id658 . -44) (undo-tree-id659 . -44) (undo-tree-id660 . -44) (undo-tree-id661 . -44) (undo-tree-id662 . -44) (undo-tree-id663 . -44) (undo-tree-id664 . -44) (undo-tree-id665 . -44) (undo-tree-id666 . -44) (undo-tree-id667 . -44) (undo-tree-id668 . -44) (undo-tree-id669 . -44) (undo-tree-id670 . -44) (undo-tree-id671 . -44) (undo-tree-id672 . -44) (undo-tree-id673 . -44) (undo-tree-id674 . -44) (undo-tree-id675 . -44) (undo-tree-id676 . -44) (undo-tree-id677 . -44) (undo-tree-id678 . -44) (undo-tree-id679 . -44) (undo-tree-id680 . -44) (undo-tree-id681 . -44) (undo-tree-id682 . -44) (undo-tree-id683 . -44) (undo-tree-id684 . -44) (undo-tree-id685 . -44) (undo-tree-id686 . -44) (undo-tree-id687 . -44) (undo-tree-id688 . -44) (undo-tree-id689 . -44) (undo-tree-id690 . -44) (undo-tree-id691 . -44) (undo-tree-id692 . -44) (undo-tree-id693 . -44) (undo-tree-id694 . -44) (undo-tree-id695 . -44) (undo-tree-id696 . -44) (undo-tree-id697 . -44) (undo-tree-id698 . -44) (undo-tree-id699 . -44) (undo-tree-id700 . -44) (undo-tree-id701 . -44) (undo-tree-id702 . -44) (undo-tree-id703 . -44) (undo-tree-id704 . -44) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -44) (undo-tree-id757 . -44) (undo-tree-id758 . -44) (undo-tree-id759 . -44) (undo-tree-id760 . -44) (undo-tree-id761 . -44) (undo-tree-id762 . -44) (undo-tree-id763 . -44) (undo-tree-id764 . -44) (undo-tree-id765 . -44) (undo-tree-id766 . -44) (undo-tree-id767 . -44) (undo-tree-id768 . -44) (undo-tree-id769 . -44) (undo-tree-id770 . -44) (undo-tree-id771 . -44) (undo-tree-id772 . -44) (undo-tree-id773 . -44) (undo-tree-id774 . -44) (undo-tree-id775 . -44) (undo-tree-id776 . -44) (undo-tree-id777 . -44) (undo-tree-id778 . -44) (undo-tree-id779 . -44) (undo-tree-id780 . -44) (undo-tree-id781 . -44) (undo-tree-id782 . -44) (undo-tree-id783 . -44) (undo-tree-id784 . -44) (undo-tree-id785 . -44) (undo-tree-id786 . -44) (undo-tree-id787 . -44) (undo-tree-id788 . -44) (undo-tree-id789 . -44) (undo-tree-id790 . -44) (undo-tree-id791 . -44) (undo-tree-id792 . -44) (undo-tree-id793 . -44) (undo-tree-id794 . -44) (undo-tree-id795 . -44) (undo-tree-id796 . -44) (undo-tree-id797 . -44) (undo-tree-id798 . -44) (undo-tree-id799 . -44) (undo-tree-id800 . -44) (undo-tree-id801 . -44) (undo-tree-id802 . -44) (undo-tree-id803 . -44) (undo-tree-id804 . -44) (undo-tree-id805 . -44) (undo-tree-id806 . -44) (undo-tree-id807 . -44) (undo-tree-id808 . -44) (undo-tree-id809 . -44) (undo-tree-id810 . -44) (undo-tree-id811 . -44) (undo-tree-id812 . -44) (undo-tree-id813 . -44) (undo-tree-id814 . -44) (undo-tree-id815 . -44) (undo-tree-id816 . -44) (undo-tree-id817 . -44) (undo-tree-id818 . -44) (undo-tree-id819 . -44) (undo-tree-id820 . -44) (undo-tree-id821 . -44) (undo-tree-id822 . -44) (undo-tree-id823 . -44) (undo-tree-id824 . -44) (undo-tree-id825 . -44) (undo-tree-id826 . -44) (undo-tree-id827 . -44) (undo-tree-id828 . -44) (undo-tree-id829 . -44) (undo-tree-id830 . -44) (undo-tree-id831 . -44) (undo-tree-id832 . -44) (undo-tree-id833 . -44) (undo-tree-id834 . -44) (undo-tree-id835 . -44) (undo-tree-id836 . -44) (undo-tree-id837 . -44) (undo-tree-id838 . -44) (undo-tree-id839 . -44) (undo-tree-id840 . -44) (undo-tree-id841 . -44) (undo-tree-id842 . -44) (undo-tree-id843 . -44) (undo-tree-id844 . -44) (undo-tree-id845 . -44) (undo-tree-id846 . -44) (undo-tree-id847 . -44) (undo-tree-id848 . -44) (undo-tree-id849 . -44) (undo-tree-id850 . -44) (undo-tree-id851 . -44) (undo-tree-id852 . -44) (undo-tree-id853 . -44) (undo-tree-id854 . -44) (undo-tree-id855 . -44) (undo-tree-id856 . -44) (undo-tree-id857 . -44) (undo-tree-id858 . -44) (undo-tree-id859 . -44) (undo-tree-id860 . -44) (undo-tree-id861 . -44) (undo-tree-id862 . -44) (undo-tree-id863 . -44) (undo-tree-id864 . -44) (undo-tree-id865 . -44) (undo-tree-id866 . -44) (undo-tree-id867 . -44) (undo-tree-id868 . -44) (undo-tree-id869 . -44) (undo-tree-id870 . -44) (undo-tree-id871 . -44) (undo-tree-id872 . -44) (undo-tree-id873 . -44) (undo-tree-id874 . -44) (undo-tree-id875 . -44) (undo-tree-id876 . -44) (undo-tree-id877 . -44) (undo-tree-id878 . -44) (undo-tree-id879 . -44) (undo-tree-id880 . -44) (undo-tree-id881 . -44) (undo-tree-id882 . -44) (undo-tree-id883 . -44) (undo-tree-id884 . -44) (undo-tree-id885 . -44) (undo-tree-id886 . -44) (undo-tree-id887 . -44) (undo-tree-id888 . -44) (undo-tree-id889 . -44) (undo-tree-id890 . -44) (undo-tree-id891 . -44) (undo-tree-id892 . -44) (undo-tree-id893 . -44) (undo-tree-id894 . -44) (undo-tree-id895 . -44) (undo-tree-id896 . -44) (undo-tree-id897 . -44) (undo-tree-id898 . -44) (undo-tree-id899 . -44) (undo-tree-id900 . -44) (undo-tree-id901 . -44) (undo-tree-id902 . -44) (undo-tree-id903 . -44) (undo-tree-id904 . -44) (undo-tree-id905 . -44) (undo-tree-id906 . -44) (undo-tree-id907 . -44) (undo-tree-id908 . -44) (undo-tree-id909 . -44) (undo-tree-id910 . -44) (undo-tree-id911 . -44) (undo-tree-id912 . -44) (undo-tree-id913 . -44) (undo-tree-id914 . -44) (undo-tree-id915 . -44) (undo-tree-id916 . -44) (undo-tree-id917 . -44) (undo-tree-id918 . -44) (undo-tree-id919 . -44) (undo-tree-id920 . -44) (undo-tree-id921 . -44) (undo-tree-id922 . -44) (undo-tree-id923 . -44) (undo-tree-id924 . -44) (undo-tree-id925 . -44) (undo-tree-id926 . -44) (undo-tree-id927 . -44) (undo-tree-id928 . -44) (undo-tree-id929 . -44) (undo-tree-id930 . -44) (undo-tree-id931 . -44) (undo-tree-id932 . -44) (undo-tree-id933 . -44) (undo-tree-id934 . -44) (undo-tree-id935 . -44) (undo-tree-id936 . -44) (undo-tree-id937 . -44) (undo-tree-id938 . -44) (undo-tree-id939 . -44) (undo-tree-id940 . -44) (undo-tree-id941 . -44) (undo-tree-id942 . -44) (undo-tree-id943 . -44) (undo-tree-id944 . -44) (undo-tree-id945 . -44) (undo-tree-id946 . -44) (undo-tree-id947 . -44) (undo-tree-id948 . -44) (undo-tree-id949 . -44) (undo-tree-id950 . -44) (undo-tree-id951 . -44) (undo-tree-id952 . -44) (undo-tree-id953 . -44) (undo-tree-id954 . -44) (undo-tree-id955 . -44) (undo-tree-id956 . -44) (undo-tree-id957 . -44) (undo-tree-id958 . -44) (undo-tree-id959 . -44) (undo-tree-id960 . -44) (undo-tree-id961 . -44) (undo-tree-id962 . -44) (undo-tree-id963 . -44) (undo-tree-id964 . -44) (undo-tree-id965 . -44) (undo-tree-id966 . -44) (undo-tree-id967 . -44) (undo-tree-id968 . -44) (undo-tree-id969 . -44) (undo-tree-id970 . -44) (undo-tree-id971 . -44) (undo-tree-id972 . -44) (undo-tree-id973 . -44) (undo-tree-id974 . -44) (undo-tree-id975 . -44) (undo-tree-id976 . -44) (undo-tree-id977 . -44) (undo-tree-id978 . -44) (undo-tree-id979 . -44) (undo-tree-id980 . -44) (undo-tree-id981 . -44) (undo-tree-id982 . -44) (undo-tree-id983 . -44) (undo-tree-id984 . -44) (undo-tree-id985 . -44) (undo-tree-id986 . -44) (undo-tree-id987 . -44) (undo-tree-id988 . -44) (undo-tree-id989 . -44) (undo-tree-id990 . -44) (undo-tree-id991 . -44) (undo-tree-id992 . -44) (undo-tree-id993 . -44) (undo-tree-id994 . -44) (undo-tree-id995 . -44) (undo-tree-id996 . -44) (undo-tree-id997 . -44) (undo-tree-id998 . -44) (undo-tree-id999 . -44) (undo-tree-id1000 . -44) (undo-tree-id1001 . -44) (undo-tree-id1002 . -44) (undo-tree-id1003 . -44) (undo-tree-id1004 . -44) (undo-tree-id1005 . -44) (undo-tree-id1006 . -44) (undo-tree-id1007 . -44) (undo-tree-id1008 . -44) (undo-tree-id1009 . -44) (undo-tree-id1010 . -44) (undo-tree-id1011 . -44) (undo-tree-id1012 . -44) (undo-tree-id1013 . -44) (undo-tree-id1014 . -44) (undo-tree-id1015 . -44) (undo-tree-id1016 . -44) (undo-tree-id1017 . -44) (undo-tree-id1018 . -44) (undo-tree-id1019 . -44) (undo-tree-id1020 . -44) (undo-tree-id1021 . -44) (undo-tree-id1022 . -44) (undo-tree-id1023 . -44) (undo-tree-id1024 . -44) (undo-tree-id1025 . -44) (undo-tree-id1026 . -44) (undo-tree-id1027 . -44) (undo-tree-id1028 . -44) (undo-tree-id1029 . -44) (undo-tree-id1030 . -44) (undo-tree-id1031 . -44) (undo-tree-id1032 . -44) (undo-tree-id1033 . -44) (undo-tree-id1034 . -44) (undo-tree-id1035 . -44) (undo-tree-id1036 . -44) (undo-tree-id1037 . -44) (undo-tree-id1038 . -44) (undo-tree-id1039 . -44) (undo-tree-id1040 . -44) (undo-tree-id1041 . -44) (undo-tree-id1042 . -44) (undo-tree-id1043 . -44) (undo-tree-id1044 . -44) (undo-tree-id1045 . -44) (undo-tree-id1046 . -44) (undo-tree-id1047 . -44) (undo-tree-id1048 . -44) (undo-tree-id1049 . -44) (undo-tree-id1050 . -44) (undo-tree-id1051 . -44) (undo-tree-id1052 . -44) (undo-tree-id1053 . -44) (undo-tree-id1054 . -44) (undo-tree-id1055 . -44) (undo-tree-id1056 . -44) (undo-tree-id1057 . -44) (undo-tree-id1058 . -44) (undo-tree-id1059 . -44) (undo-tree-id1060 . -44) (undo-tree-id1061 . -44) (undo-tree-id1062 . -44) (undo-tree-id1063 . -44) (undo-tree-id1064 . -44) (undo-tree-id1065 . -44) (undo-tree-id1066 . -44) (undo-tree-id1067 . -44) (undo-tree-id1068 . -44) (undo-tree-id1069 . -44) (undo-tree-id1070 . -44) (undo-tree-id1071 . -44) (undo-tree-id1072 . -44) (undo-tree-id1073 . -44) (undo-tree-id1074 . -44) (undo-tree-id1075 . -44) (undo-tree-id1076 . -44) (undo-tree-id1077 . -44) (undo-tree-id1078 . -44) (undo-tree-id1079 . -44) (undo-tree-id1080 . -44) (undo-tree-id1081 . -44) (undo-tree-id1082 . -44) (undo-tree-id1083 . -44) (undo-tree-id1084 . -44) (undo-tree-id1085 . -44) (undo-tree-id1086 . -44) (undo-tree-id1087 . -44) (undo-tree-id1088 . -44) (undo-tree-id1089 . -44) (undo-tree-id1090 . -44) (undo-tree-id1091 . -44) (undo-tree-id1092 . -44) (undo-tree-id1093 . -44) (undo-tree-id1094 . -44) (undo-tree-id1095 . -44) (undo-tree-id1096 . -44) (undo-tree-id1097 . -44) (undo-tree-id1098 . -44) (undo-tree-id1099 . -44) (undo-tree-id1100 . -44) (undo-tree-id1101 . -44) (undo-tree-id1102 . -44) (undo-tree-id1103 . -44) (undo-tree-id1104 . -44) (undo-tree-id1105 . -44) (undo-tree-id1106 . -44) (undo-tree-id1107 . -44) (undo-tree-id1108 . -44) (undo-tree-id1109 . -44) (undo-tree-id1110 . -44) (undo-tree-id1111 . -44) (undo-tree-id1112 . -44) (undo-tree-id1113 . -44) (undo-tree-id1114 . -44) (undo-tree-id1115 . -44) (undo-tree-id1116 . -44) (undo-tree-id1117 . -44) (undo-tree-id1118 . -44) (undo-tree-id1119 . -44) (undo-tree-id1120 . -44) (undo-tree-id1121 . -44) (undo-tree-id1122 . -44) (undo-tree-id1123 . -44) (undo-tree-id1124 . -44) (undo-tree-id1125 . -44) (undo-tree-id1126 . -44) (undo-tree-id1127 . -44) (undo-tree-id1128 . -44) (undo-tree-id1129 . -44) (undo-tree-id1130 . -44) (undo-tree-id1131 . -44) (undo-tree-id1132 . -44) (undo-tree-id1133 . -44) (undo-tree-id1134 . -44) (undo-tree-id1135 . -44) (undo-tree-id1136 . -44) (undo-tree-id1137 . -44) (undo-tree-id1138 . -44) (undo-tree-id1139 . -44) (undo-tree-id1140 . -44) (undo-tree-id1141 . -44) (undo-tree-id1142 . -44) (undo-tree-id1143 . -44) (undo-tree-id1144 . -44) (undo-tree-id1145 . -44) (undo-tree-id1146 . -44) (undo-tree-id1147 . -44) (undo-tree-id1148 . -44) (undo-tree-id1149 . -44) (undo-tree-id1150 . -44) (undo-tree-id1151 . -44) (undo-tree-id1152 . -44) (undo-tree-id1153 . -44) (undo-tree-id1154 . -44) (undo-tree-id1155 . -44) (undo-tree-id1156 . -44) (undo-tree-id1157 . -44) (undo-tree-id1158 . -44) (undo-tree-id1159 . -44) (undo-tree-id1160 . -44) (undo-tree-id1161 . -44) (undo-tree-id1162 . -44) (undo-tree-id1163 . -44) (undo-tree-id1164 . -44) (undo-tree-id1165 . -44) (undo-tree-id1166 . -44) (undo-tree-id1167 . -44) (undo-tree-id1168 . -44) (undo-tree-id1169 . -44) (undo-tree-id1170 . -44) (undo-tree-id1171 . -44) (undo-tree-id1172 . -44) (undo-tree-id1173 . -44) (undo-tree-id1174 . -44) (undo-tree-id1175 . -44) (undo-tree-id1176 . -44) (undo-tree-id1177 . -44) (undo-tree-id1178 . -44) (undo-tree-id1179 . -44) (undo-tree-id1180 . -44) (undo-tree-id1181 . -44) (undo-tree-id1182 . -44) (undo-tree-id1183 . -44) (undo-tree-id1184 . -44) (undo-tree-id1185 . -44) (undo-tree-id1186 . -44) (undo-tree-id1187 . -44) (undo-tree-id1188 . -44) (undo-tree-id1189 . -44) (undo-tree-id1190 . -44) (undo-tree-id1191 . -44) (undo-tree-id1192 . -44) (undo-tree-id1193 . -44) (undo-tree-id1194 . -44) (undo-tree-id1195 . -44) (undo-tree-id1196 . -44) (undo-tree-id1197 . -44) (undo-tree-id1198 . -44) (undo-tree-id1199 . -44) (undo-tree-id1200 . -44) (undo-tree-id1201 . -44) (undo-tree-id1202 . -44) (undo-tree-id1203 . -44) (undo-tree-id1204 . -44) (undo-tree-id1205 . -44) (undo-tree-id1206 . -44) (undo-tree-id1207 . -44) (undo-tree-id1208 . -44) (undo-tree-id1209 . -44) (undo-tree-id1210 . -44) (undo-tree-id1211 . -44) (undo-tree-id1212 . -44) (undo-tree-id1213 . -44) (undo-tree-id1214 . -44) (undo-tree-id1215 . -44) (undo-tree-id1216 . -44) (undo-tree-id1217 . -44) (undo-tree-id1218 . -44) (undo-tree-id1219 . -44) (undo-tree-id1220 . -44) (undo-tree-id1221 . -44) (undo-tree-id1222 . -44) (undo-tree-id1223 . -44) (undo-tree-id1224 . -44) (undo-tree-id1225 . -1) (undo-tree-id1226 . -44) (undo-tree-id1227 . -44) (undo-tree-id1228 . -44) (undo-tree-id1229 . -44) (undo-tree-id1230 . -44) (undo-tree-id1231 . -44) (undo-tree-id1232 . -44) (undo-tree-id1233 . -44) (undo-tree-id1234 . -44) (undo-tree-id1235 . -44) (undo-tree-id1236 . -44) (undo-tree-id1237 . -44) (undo-tree-id1238 . -44) (undo-tree-id1239 . -44) (undo-tree-id1240 . -44) (undo-tree-id1241 . -44) (undo-tree-id1242 . -44) (undo-tree-id1243 . -44) (undo-tree-id1244 . -44) (undo-tree-id1245 . -44) (undo-tree-id1246 . -44) (undo-tree-id1247 . -44) (undo-tree-id1248 . -44) (undo-tree-id1249 . -44) (undo-tree-id1250 . -44) (undo-tree-id1251 . -44) (undo-tree-id1252 . -44) (undo-tree-id1253 . -44) (undo-tree-id1254 . -44) (undo-tree-id1255 . -44) (undo-tree-id1256 . -44) (undo-tree-id1257 . -44) (undo-tree-id1258 . -44) (undo-tree-id1259 . -44) (undo-tree-id1260 . -44) (undo-tree-id1261 . -44) (undo-tree-id1262 . -44) (undo-tree-id1263 . -44) (undo-tree-id1264 . -44) (undo-tree-id1265 . -44) (undo-tree-id1266 . -44) (undo-tree-id1267 . -44) (undo-tree-id1268 . -44) (undo-tree-id1269 . -44) (undo-tree-id1270 . -44) (undo-tree-id1271 . -44) (undo-tree-id1272 . -44) (undo-tree-id1273 . -44) (undo-tree-id1274 . -44) (undo-tree-id1275 . -44) (undo-tree-id1276 . -44) (undo-tree-id1277 . -44) (undo-tree-id1278 . -44) (undo-tree-id1279 . -44) (undo-tree-id1280 . -44) (undo-tree-id1281 . -44) (undo-tree-id1282 . -44) (undo-tree-id1283 . -44) (undo-tree-id1284 . -44) (undo-tree-id1285 . -44) (undo-tree-id1286 . -44) (undo-tree-id1287 . -44) (undo-tree-id1288 . -44) (undo-tree-id1289 . -44) (undo-tree-id1290 . -44) (undo-tree-id1291 . -44) (undo-tree-id1292 . -44) (undo-tree-id1293 . -44) (undo-tree-id1294 . -44) (undo-tree-id1295 . -44) (undo-tree-id1296 . -44) (undo-tree-id1297 . -44) (undo-tree-id1298 . -44) (undo-tree-id1299 . -44) (undo-tree-id1300 . -44) (undo-tree-id1301 . -44) (undo-tree-id1302 . -44) (undo-tree-id1303 . -44) (undo-tree-id1304 . -44) (undo-tree-id1305 . -44) (undo-tree-id1306 . -44) (undo-tree-id1307 . -44) (undo-tree-id1308 . -44) (undo-tree-id1309 . -44) (undo-tree-id1310 . -44) (undo-tree-id1311 . -44) (undo-tree-id1312 . -44) (undo-tree-id1313 . -44) (undo-tree-id1314 . -44) (undo-tree-id1315 . -44) (undo-tree-id1316 . -44) (undo-tree-id1317 . -44) (undo-tree-id1318 . -44) (undo-tree-id1319 . -44) (undo-tree-id1320 . -44) (undo-tree-id1321 . -44) (undo-tree-id1322 . -44) (undo-tree-id1323 . -44) (undo-tree-id1324 . -44) (undo-tree-id1325 . -44) (undo-tree-id1326 . -44) (undo-tree-id1327 . -44) (undo-tree-id1328 . -44) (undo-tree-id1329 . -44) (undo-tree-id1330 . -44) (undo-tree-id1331 . -44) (undo-tree-id1332 . -44) (undo-tree-id1333 . -44) (undo-tree-id1334 . -44) (undo-tree-id1335 . -44) (undo-tree-id1336 . -44) (undo-tree-id1337 . -44) (undo-tree-id1338 . -44) (undo-tree-id1339 . -44) (undo-tree-id1340 . -44) (undo-tree-id1341 . -44) (undo-tree-id1342 . -44) (undo-tree-id1343 . -44) (undo-tree-id1344 . -44) (undo-tree-id1345 . -44) (undo-tree-id1346 . -44) (undo-tree-id1347 . -44) (undo-tree-id1348 . -44) (undo-tree-id1349 . -44) (undo-tree-id1350 . -44) (undo-tree-id1351 . -44) (undo-tree-id1352 . -44) (undo-tree-id1353 . -44) (undo-tree-id1354 . -44) (undo-tree-id1355 . -44) (undo-tree-id1356 . -44) (undo-tree-id1357 . -44) (undo-tree-id1358 . -44) (undo-tree-id1359 . -44) (undo-tree-id1360 . -44) (undo-tree-id1361 . -44) (undo-tree-id1362 . -44) (undo-tree-id1363 . -44) (undo-tree-id1364 . -44) (undo-tree-id1365 . -44) (undo-tree-id1366 . -44) (undo-tree-id1367 . -44) (undo-tree-id1368 . -44) (undo-tree-id1369 . -44) (undo-tree-id1370 . -44) (undo-tree-id1371 . -44) (undo-tree-id1372 . -44) (undo-tree-id1373 . -44) (undo-tree-id1374 . -44) (undo-tree-id1375 . -44) (undo-tree-id1376 . -44) (undo-tree-id1377 . -44) (undo-tree-id1378 . -44) (undo-tree-id1379 . -44) (undo-tree-id1380 . -44) (undo-tree-id1381 . -44) (undo-tree-id1382 . -44) (undo-tree-id1383 . -44) (undo-tree-id1384 . -44) (24671 . 24672) (nil rear-nonsticky t 24561 . 24562)) (25723 10827 390832 848000) 0 nil])
([nil nil ((#("#+BEGIN_SRC html :tangle general_info.html

#+END_SRC
" 0 42 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 42 43 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 43 44 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky t fontified t) 44 53 (face org-block-end-line font-lock-multiline t fontified t font-lock-fontified t) 53 54 (face org-block-end-line fontified t src-block t font-lock-fontified t rear-nonsticky t)) . 24617) (undo-tree-id20 . -44) (undo-tree-id21 . -54) (undo-tree-id22 . -53) (undo-tree-id23 . -44) (undo-tree-id24 . -44) 24661) ((24617 . 24671)) (25723 10813 460456 705000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -24561) (undo-tree-id1385 . -1) 24562) nil (25723 10831 35795 694000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24605 . 24606) (#("
" 0 1 (fontified nil face org-block-end-line)) . -24615) (24605 . 24616)) ((#("
#+END_SRC
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky nil fontified nil) 1 10 (face org-block-end-line font-lock-multiline t fontified nil font-lock-fontified t) 10 11 (fontified nil face org-block-end-line)) . 24605) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (24615 . 24616) (nil rear-nonsticky t 24605 . 24606)) (25723 10826 713935 811000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24616 . 24617) (#("
" 0 1 (fontified nil face org-block-end-line src-block t font-lock-fontified t rear-nonsticky t)) . -24670) (24616 . 24671)) ((#("
#+BEGIN_SRC html :tangle general_info.html

#+END_SRC
" 0 1 (rear-nonsticky nil fontified nil) 1 43 (face org-block-begin-line font-lock-multiline t fontified nil font-lock-fontified t) 43 44 (face org-block-begin-line font-lock-multiline t fontified nil font-lock-fontified t) 44 45 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t rear-nonsticky t) 45 54 (face org-block-end-line font-lock-multiline t fontified nil font-lock-fontified t) 54 55 (fontified nil face org-block-end-line src-block t font-lock-fontified t rear-nonsticky t)) . 24616) (undo-tree-id25 . 11) (undo-tree-id26 . -1) (undo-tree-id27 . -54) (undo-tree-id28 . -54) (24670 . 24671) (nil rear-nonsticky t 24616 . 24617)) (25723 10813 460149 396000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24560 . 24561) (#("
" 0 1 (fontified nil face org-block-end-line src-block t font-lock-fontified t rear-nonsticky t)) . -24614) (24560 . 24615) (t 25723 10831 85982 920000)) nil (25723 10860 375576 623000) 0 nil])
([nil nil ((#("#+BEGIN_SRC html :tangle general_info.html

#+END_SRC
" 0 42 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 42 43 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 43 44 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky t fontified t) 44 53 (face org-block-end-line font-lock-multiline t fontified t font-lock-fontified t) 53 54 (face org-block-end-line fontified t src-block t font-lock-fontified t rear-nonsticky t)) . 24562) (undo-tree-id31 . -44) (undo-tree-id32 . -54) (undo-tree-id33 . -53) (undo-tree-id34 . -44) (undo-tree-id35 . -44) (undo-tree-id36 . -43) (undo-tree-id37 . -54) (undo-tree-id38 . -43) (undo-tree-id39 . -44) (undo-tree-id40 . -44) (undo-tree-id41 . -44) (undo-tree-id42 . -44) (undo-tree-id43 . -44) (undo-tree-id44 . -44) (undo-tree-id45 . -44) (undo-tree-id46 . -44) (undo-tree-id47 . -44) (undo-tree-id48 . -44) (undo-tree-id49 . -44) (undo-tree-id50 . -44) (undo-tree-id51 . -44) (undo-tree-id52 . -44) (undo-tree-id53 . -44) (undo-tree-id54 . -44) (undo-tree-id55 . -44) (undo-tree-id56 . -44) (undo-tree-id57 . -44) (undo-tree-id58 . -44) (undo-tree-id59 . -44) (undo-tree-id60 . -44) (undo-tree-id61 . -44) (undo-tree-id62 . -44) (undo-tree-id63 . -44) (undo-tree-id64 . -44) (undo-tree-id65 . -44) (undo-tree-id66 . -44) (undo-tree-id67 . -44) (undo-tree-id68 . -44) (undo-tree-id69 . -44) (undo-tree-id70 . -44) (undo-tree-id71 . -44) (undo-tree-id72 . -44) (undo-tree-id73 . -44) (undo-tree-id74 . -44) (undo-tree-id75 . -44) (undo-tree-id76 . -44) (undo-tree-id77 . -44) (undo-tree-id78 . -44) (undo-tree-id79 . -44) (undo-tree-id80 . -44) (undo-tree-id81 . -44) (undo-tree-id82 . -44) (undo-tree-id83 . -44) (undo-tree-id84 . -44) (undo-tree-id85 . -44) (undo-tree-id86 . -44) (undo-tree-id87 . -44) (undo-tree-id88 . -44) (undo-tree-id89 . -44) (undo-tree-id90 . -43) (undo-tree-id91 . -54) (undo-tree-id92 . -43) (undo-tree-id93 . -44) (undo-tree-id94 . -44) (undo-tree-id95 . -54) 24606) ((24562 . 24616)) (25723 10825 837214 350000) 0 nil])
nil
([nil nil ((24592 . 24594)) nil (25723 10860 375570 407000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24561 . 24562) (#("
" 0 1 (fontified nil face org-block-end-line src-block t font-lock-fontified t rear-nonsticky t)) . -24615) (24561 . 24616)) ((#("
#+BEGIN_SRC html :tangle general_info.html

#+END_SRC
" 0 1 (rear-nonsticky nil fontified nil) 1 43 (face org-block-begin-line font-lock-multiline t fontified nil font-lock-fontified t) 43 44 (face org-block-begin-line font-lock-multiline t fontified nil font-lock-fontified t) 44 45 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t rear-nonsticky t) 45 54 (face org-block-end-line font-lock-multiline t fontified nil font-lock-fontified t) 54 55 (fontified nil face org-block-end-line src-block t font-lock-fontified t rear-nonsticky t)) . 24561) (undo-tree-id106 . -44) (undo-tree-id107 . -45) (undo-tree-id108 . 11) (undo-tree-id109 . -1) (undo-tree-id110 . -54) (undo-tree-id111 . -54) (undo-tree-id112 . -44) (undo-tree-id113 . -44) (undo-tree-id114 . -44) (24615 . 24616) (nil rear-nonsticky t 24561 . 24562)) (25723 10825 834766 147000) 0 nil])
([nil nil ((24588 . 24592) (#("t" 0 1 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . -24588) (undo-tree-id1386 . -1) 24589 (24586 . 24589) (#("generahhl_info." 0 15 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . 24586) (undo-tree-id1387 . 7) (undo-tree-id1388 . -14) (undo-tree-id1389 . -14) (undo-tree-id1390 . -14) (undo-tree-id1391 . -14) (undo-tree-id1392 . -14) 24600) nil (25723 10860 375558 603000) 0 nil])
nil
([nil nil ((#("k" 0 1 (fontified t)) . -25257) (undo-tree-id1521 . -1) 25258 (25257 . 25258) (t 25723 10860 426818 928000)) nil (25723 10984 708664 959000) 0 nil])
([nil nil ((#("#+auto_tangle: t
" 0 16 (face org-meta-line font-lock-fontified t fontified t) 16 17 (fontified t)) . 1) (undo-tree-id1519 . -17) (undo-tree-id1520 . -16)) nil (25723 10984 708658 813000) 0 nil])
([nil nil ((1 . 3)) nil (25723 10984 708652 248000) 0 nil])
([nil nil ((53 . 57) (#("a" 0 1 (face org-meta-line font-lock-fontified t fontified t)) . -53) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (#("u" 0 1 (face org-meta-line font-lock-fontified t fontified t)) . -54) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) 55 (53 . 55) (#("a" 0 1 (face org-meta-line font-lock-fontified t fontified t)) . -53) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) 54 (53 . 54) (#(" " 0 1 (font-lock-fontified t fontified t)) . -53) (undo-tree-id1516 . -1) 54 (51 . 54) (50 . 51) (45 . 50) (44 . 45) (31 . 44) (28 . 31) (#(" " 0 1 (font-lock-fontified t fontified t)) . -28) (undo-tree-id1517 . -1) 29 (28 . 29) (23 . 28) (19 . 23) (18 . 19) (11 . 18) (6 . 11) (2 . 6) (#("A" 0 1 (font-lock-fontified t fontified t)) . -2) (undo-tree-id1518 . -1) 3 (1 . 3)) nil (25723 10984 708644 76000) 0 nil])
([nil nil ((50 . 51) 24) nil (25723 10984 708611 669000) 0 nil])
([nil nil ((nil rear-nonsticky nil 65 . 66) (nil fontified nil 51 . 66) (51 . 66)) nil (25723 10984 708606 361000) 0 nil])
([nil nil ((65 . 66)) nil (25723 10984 708302 546000) 0 nil])
([nil nil ((#("#+auto
" 0 6 (face org-meta-line font-lock-fontified t fontified t) 6 7 (font-lock-fontified t fontified t)) . 68) (undo-tree-id1393 . -7) (undo-tree-id1394 . -6) (undo-tree-id1395 . -5) (undo-tree-id1396 . -5) (undo-tree-id1397 . -5) (undo-tree-id1398 . -5) (undo-tree-id1399 . -5) (undo-tree-id1400 . -5) (undo-tree-id1401 . -5) (undo-tree-id1402 . -5) (undo-tree-id1403 . -5) (undo-tree-id1404 . -5) (undo-tree-id1405 . -5) (undo-tree-id1406 . -5) (undo-tree-id1407 . -5) (undo-tree-id1408 . -5) (undo-tree-id1409 . -5) (undo-tree-id1410 . -5) (undo-tree-id1411 . -5) (undo-tree-id1412 . -5) (undo-tree-id1413 . -5) (undo-tree-id1414 . -5) (undo-tree-id1415 . -5) (undo-tree-id1416 . -5) (undo-tree-id1417 . -5) (undo-tree-id1418 . -5) (undo-tree-id1419 . -5) (undo-tree-id1420 . -5) (undo-tree-id1421 . -5) (undo-tree-id1422 . -5) (undo-tree-id1423 . -5) (undo-tree-id1424 . -5) (undo-tree-id1425 . -5) (undo-tree-id1426 . -5) (undo-tree-id1427 . -5) (undo-tree-id1428 . -5) (undo-tree-id1429 . -5) (undo-tree-id1430 . -5) (undo-tree-id1431 . -5) (undo-tree-id1432 . -5) (undo-tree-id1433 . -5) (undo-tree-id1434 . -5) (undo-tree-id1435 . -5) (undo-tree-id1436 . -5) (undo-tree-id1437 . -5) (undo-tree-id1438 . -5) (undo-tree-id1439 . -5) (undo-tree-id1440 . -5) (undo-tree-id1441 . -5) (undo-tree-id1442 . -5) (undo-tree-id1443 . -5) (undo-tree-id1444 . -5) (undo-tree-id1445 . -5) (undo-tree-id1446 . -5) (undo-tree-id1447 . -5) (undo-tree-id1448 . -5) (undo-tree-id1449 . -5) (undo-tree-id1450 . -5) (undo-tree-id1451 . -5) (undo-tree-id1452 . -5) (undo-tree-id1453 . -5) (undo-tree-id1454 . -5) (undo-tree-id1455 . -5) (undo-tree-id1456 . -5) (undo-tree-id1457 . -5) (undo-tree-id1458 . -5) (undo-tree-id1459 . -5) (undo-tree-id1460 . -5) (undo-tree-id1461 . -5) (undo-tree-id1462 . -5) (undo-tree-id1463 . -5) (undo-tree-id1464 . -5) (undo-tree-id1465 . -5) (undo-tree-id1466 . -5) (undo-tree-id1467 . -5) (undo-tree-id1468 . -5) (undo-tree-id1469 . -5) (undo-tree-id1470 . -5) (undo-tree-id1471 . -5) (undo-tree-id1472 . -5) (undo-tree-id1473 . -5) (undo-tree-id1474 . -5) (undo-tree-id1475 . -5) (undo-tree-id1476 . -5) (undo-tree-id1477 . -5) (undo-tree-id1478 . -5) (undo-tree-id1479 . -5) (undo-tree-id1480 . -5) (undo-tree-id1481 . -5) (undo-tree-id1482 . -5) (undo-tree-id1483 . -5) (undo-tree-id1484 . -5) (undo-tree-id1485 . -5) (undo-tree-id1486 . -5) (undo-tree-id1487 . -5) (undo-tree-id1488 . -5) (undo-tree-id1489 . -5) (undo-tree-id1490 . -5) (undo-tree-id1491 . -5) (undo-tree-id1492 . -5) (undo-tree-id1493 . -5) (undo-tree-id1494 . -5) (undo-tree-id1495 . -5) (undo-tree-id1496 . -5) (undo-tree-id1497 . -5) (undo-tree-id1498 . -5) (undo-tree-id1499 . -5) (undo-tree-id1500 . -5) (undo-tree-id1501 . -5) (undo-tree-id1502 . -5) (undo-tree-id1503 . -5) (undo-tree-id1504 . -5) (undo-tree-id1505 . -5) (undo-tree-id1506 . -5) (undo-tree-id1507 . -5) (undo-tree-id1508 . -5) (undo-tree-id1509 . -7) 73) nil (25723 10984 708280 755000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 537) (undo-tree-id1556 . -1) (undo-tree-id1557 . 1) (t 25723 10984 762164 797000)) nil (25723 11164 647661 896000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 537) (undo-tree-id1554 . -1) (undo-tree-id1555 . 1)) nil (25723 11164 647653 375000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 537) (undo-tree-id1552 . -1) (undo-tree-id1553 . 1)) nil (25723 11164 647645 832000) 0 nil])
([nil nil ((537 . 1015) (#("
" 0 1 (fontified nil)) . 537) (536 . 538)) nil (25723 11164 647638 499000) 0 nil])
([nil nil ((#("| lambda | (&optional arg) | Keyboard macro. | (interactive p) | (kmacro-exec-ring-item '([59 120 40 115 114 99 24 97 101 escape 107 107 106 65 58 backspace 104 backspace 104 116 109 108 32 58 116 97 110 103 108 101 32 100 111 99 117 109 101 110 116 C-backspace 99 104 105 108 100 78 111 100 101 115 40 41 46 104 116 109 108 escape 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 105 108 105 115 116 105 110 103 95 escape 111 escape 105] 0 %d) arg) |
" 0 466 (face org-table fontified t) 466 467 (fontified t)) . 548) (undo-tree-id1549 . -467) (undo-tree-id1550 . -466) (undo-tree-id1551 . -467)) nil (25723 11164 647633 260000) 0 nil])
([nil nil ((#("#+RESULTS:
" 0 10 (face org-meta-line font-lock-fontified t fontified t) 10 11 (fontified t)) . 537) (undo-tree-id1545 . -11) (undo-tree-id1546 . -10) (undo-tree-id1547 . -11) (undo-tree-id1548 . -11)) nil (25723 11164 647623 832000) 0 nil])
([nil nil ((536 . 919) (#("x" 0 1 (fontified t)) . -536) (undo-tree-id1544 . -1) 537 (536 . 537)) nil (25723 11164 647611 888000) 0 nil])
([nil nil ((#("(fset 'inserting\\ an\\ html\\ tangle\\ block
" 0 7 (fontified t) 7 41 (fontified t) 41 42 (fontified t)) . 536) (undo-tree-id1542 . -42) (undo-tree-id1543 . -41)) nil (25723 11164 647604 206000) 0 nil])
([nil nil ((#("   (kmacro-lambda-form [?\\; ?x ?\\( ?s ?r ?c ?\\C-x ?a ?e escape ?k ?k ?j ?A ?: backspace ?h backspace ?h ?t ?m ?l ?  ?: ?t ?a ?n ?g ?l ?e ?  ?d ?o ?c ?u ?m ?e ?n ?t C-backspace ?c ?h ?i ?l ?d ?N ?o ?d ?e ?s ?\\( ?\\) ?. ?h ?t ?m ?l escape ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?i ?l ?i ?s ?t ?i ?n ?g ?_ escape ?o escape ?i] 0 \"%d\"))
" 0 1 (fontified t) 1 3 (fontified t) 3 23 (fontified t) 23 24 (fontified t) 24 330 (fontified t) 330 331 (fontified t) 331 332 (fontified t) 332 333 (fontified t) 333 334 (fontified t) 334 338 (fontified t) 338 339 (fontified t) 339 341 (fontified t)) . 536) (undo-tree-id1540 . -341) (undo-tree-id1541 . -340)) nil (25723 11164 647596 593000) 0 nil])
([nil nil ((nil rear-nonsticky nil 539 . 540) (#("
" 0 1 (fontified nil)) . -877) (536 . 878)) nil (25723 11164 647567 957000) 0 nil])
([nil nil ((nil rear-nonsticky nil 878 . 879) (#("
" 0 1 (fontified nil src-block t face (org-block) font-lock-multiline t font-lock-fontified t)) . -879) (878 . 880)) nil (25723 11164 647563 278000) 0 nil])
([nil nil ((#("   (kmacro-lambda-form [?\\; ?x ?\\( ?s ?r ?c ?\\C-x ?a ?e escape ?k ?k ?j ?A ?: backspace ?h backspace ?h ?t ?m ?l ?  ?: ?t ?a ?n ?g ?l ?e ?  ?d ?o ?c ?u ?m ?e ?n ?t C-backspace ?c ?h ?i ?l ?d ?N ?o ?d ?e ?s ?\\( ?\\) ?. ?h ?t ?m ?l escape ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?i ?l ?i ?s ?t ?i ?n ?g ?_ escape ?o escape ?i] 0 \"%d\"))


" 0 1 (fontified t) 1 2 (fontified t) 2 3 (rear-nonsticky t fontified t) 3 23 (fontified t) 23 24 (fontified t) 24 330 (fontified t) 330 331 (fontified t) 331 332 (fontified t) 332 333 (fontified t) 333 334 (fontified t) 334 338 (fontified t) 338 339 (fontified t) 339 340 (fontified t) 340 341 (fontified t) 341 342 (rear-nonsticky t fontified t) 342 343 (fontified t)) . 537) (undo-tree-id1530 . -342) (undo-tree-id1531 . -343) (undo-tree-id1532 . 3) (undo-tree-id1533 . -342) (undo-tree-id1534 . -342) (undo-tree-id1535 . -342) (undo-tree-id1536 . -343) (undo-tree-id1537 . -343) (undo-tree-id1538 . -341) (undo-tree-id1539 . -341) 879) nil (25723 11164 647557 62000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -879) (536 . 880)) nil (25723 11164 647512 851000) 0 nil])
([nil nil ((#("   (kmacro-lambda-form [?\\; ?x ?\\( ?s ?r ?c ?\\C-x ?a ?e escape ?k ?k ?j ?A ?: backspace ?h backspace ?h ?t ?m ?l ?  ?: ?t ?a ?n ?g ?l ?e ?  ?d ?o ?c ?u ?m ?e ?n ?t C-backspace ?c ?h ?i ?l ?d ?N ?o ?d ?e ?s ?\\( ?\\) ?. ?h ?t ?m ?l escape ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?i ?l ?i ?s ?t ?i ?n ?g ?_ escape ?o escape ?i] 0 \"%d\"))
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t rear-nonsticky t) 3 23 (fontified t) 23 24 (fontified t) 24 330 (fontified t) 330 331 (fontified t) 331 332 (fontified t) 332 333 (fontified t) 333 334 (fontified t) 334 338 (fontified t) 338 339 (fontified t) 339 340 (fontified t) 340 341 (fontified t)) . 537) (undo-tree-id1528 . -341) (undo-tree-id1529 . -340)) nil (25723 11213 274519 39000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 536) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (t 25723 11217 408326 381000)) nil (25723 11221 865511 138000) 0 nil] [nil nil ((nil rear-nonsticky nil 537 . 538) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -581) (537 . 582)) ((#("


(fset 'inserting\\ an\\ html\\ tangle\\ block
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified t) 2 3 (fontified t rear-nonsticky t) 3 4 (fontified nil) 4 44 (fontified nil) 44 45 (fontified nil rear-nonsticky t)) . 537) (undo-tree-id2912 . -2) (undo-tree-id2913 . -3) (undo-tree-id2914 . 45) (undo-tree-id2915 . -1) (undo-tree-id2916 . 42) (undo-tree-id2917 . -1) (undo-tree-id2918 . -2) (undo-tree-id2919 . -2) (undo-tree-id2920 . -2) (undo-tree-id2921 . -2) (undo-tree-id2922 . -2) (undo-tree-id2923 . -2) (undo-tree-id2924 . -2) (undo-tree-id2925 . -2) (undo-tree-id2926 . -2) (undo-tree-id2927 . -2) (undo-tree-id2928 . -2) (undo-tree-id2929 . -2) (undo-tree-id2930 . -2) (undo-tree-id2931 . -2) (undo-tree-id2932 . -2) (undo-tree-id2933 . -2) (undo-tree-id2934 . -2) (undo-tree-id2935 . -2) (undo-tree-id2936 . -2) (undo-tree-id2937 . -2) (undo-tree-id2938 . -2) (undo-tree-id2939 . -2) (undo-tree-id2940 . -2) (undo-tree-id2941 . -2) (undo-tree-id2942 . -2) (undo-tree-id2943 . -2) (undo-tree-id2944 . -2) (undo-tree-id2945 . -2) (undo-tree-id2946 . -2) (undo-tree-id2947 . -2) (undo-tree-id2948 . -2) (undo-tree-id2949 . -2) (undo-tree-id2950 . -2) (undo-tree-id2951 . -2) (undo-tree-id2952 . -2) (undo-tree-id2953 . -2) (undo-tree-id2954 . -2) (undo-tree-id2955 . -2) (undo-tree-id2956 . -2) (undo-tree-id2957 . -2) (undo-tree-id2958 . -2) (undo-tree-id2959 . -2) (undo-tree-id2960 . -2) (undo-tree-id2961 . -2) (undo-tree-id2962 . -2) (undo-tree-id2963 . -2) (undo-tree-id2964 . -2) (undo-tree-id2965 . -2) (undo-tree-id2966 . -2) (undo-tree-id2967 . -2) (undo-tree-id2968 . -2) (undo-tree-id2969 . -2) (undo-tree-id2970 . -2) (undo-tree-id2971 . -2) (undo-tree-id2972 . -2) (undo-tree-id2973 . -2) (undo-tree-id2974 . -2) (undo-tree-id2975 . -2) (undo-tree-id2976 . -2) (undo-tree-id2977 . -2) (undo-tree-id2978 . -2) (undo-tree-id2979 . -2) (undo-tree-id2980 . -2) (undo-tree-id2981 . -2) (undo-tree-id2982 . -2) (undo-tree-id2983 . -2) (undo-tree-id2984 . -2) (undo-tree-id2985 . -2) (undo-tree-id2986 . -2) (undo-tree-id2987 . -2) (undo-tree-id2988 . -2) (undo-tree-id2989 . -2) (undo-tree-id2990 . -2) (undo-tree-id2991 . -2) (undo-tree-id2992 . -2) (undo-tree-id2993 . -2) (undo-tree-id2994 . -2) (undo-tree-id2995 . -2) (undo-tree-id2996 . -2) (undo-tree-id2997 . -2) (undo-tree-id2998 . -2) (undo-tree-id2999 . -2) (undo-tree-id3000 . -2) (undo-tree-id3001 . -2) (undo-tree-id3002 . -2) (undo-tree-id3003 . -2) (undo-tree-id3004 . -2) (undo-tree-id3005 . -2) (undo-tree-id3006 . -2) (undo-tree-id3007 . -2) (undo-tree-id3008 . -2) (undo-tree-id3009 . -2) (undo-tree-id3010 . -2) (undo-tree-id3011 . -2) (undo-tree-id3012 . -2) (undo-tree-id3013 . -2) (undo-tree-id3014 . -2) (undo-tree-id3015 . -2) (undo-tree-id3016 . -2) (undo-tree-id3017 . -2) (undo-tree-id3018 . -2) (undo-tree-id3019 . -2) (undo-tree-id3020 . -2) (undo-tree-id3021 . -2) (undo-tree-id3022 . -2) (undo-tree-id3023 . -2) (undo-tree-id3024 . -2) (undo-tree-id3025 . -2) (undo-tree-id3026 . -2) (undo-tree-id3027 . -2) (undo-tree-id3028 . -2) (undo-tree-id3029 . -2) (undo-tree-id3030 . -2) (undo-tree-id3031 . -2) (undo-tree-id3032 . -2) (undo-tree-id3033 . -2) (undo-tree-id3034 . -2) (undo-tree-id3035 . -2) (undo-tree-id3036 . -2) (undo-tree-id3037 . -2) (undo-tree-id3038 . -2) (undo-tree-id3039 . -2) (undo-tree-id3040 . -2) (undo-tree-id3041 . -2) (undo-tree-id3042 . -2) (undo-tree-id3043 . -2) (undo-tree-id3044 . -2) (undo-tree-id3045 . -2) (undo-tree-id3046 . -2) (undo-tree-id3047 . -2) (undo-tree-id3048 . -2) (undo-tree-id3049 . -2) (undo-tree-id3050 . -2) (undo-tree-id3051 . -2) (undo-tree-id3052 . -2) (undo-tree-id3053 . -2) (undo-tree-id3054 . -2) (undo-tree-id3055 . -2) (undo-tree-id3056 . -2) (undo-tree-id3057 . -2) (undo-tree-id3058 . -2) (undo-tree-id3059 . -2) (undo-tree-id3060 . -2) (undo-tree-id3061 . -2) (undo-tree-id3062 . -2) (undo-tree-id3063 . -2) (undo-tree-id3064 . -2) (undo-tree-id3065 . -2) (undo-tree-id3066 . -2) (undo-tree-id3067 . -2) (undo-tree-id3068 . -2) (undo-tree-id3069 . -2) (undo-tree-id3070 . -2) (undo-tree-id3071 . -2) (undo-tree-id3072 . -2) (undo-tree-id3073 . -2) (undo-tree-id3074 . -2) (undo-tree-id3075 . -2) (undo-tree-id3076 . -2) (undo-tree-id3077 . -2) (undo-tree-id3078 . -2) (undo-tree-id3079 . -2) (undo-tree-id3080 . -2) (undo-tree-id3081 . -2) (undo-tree-id3082 . -2) (undo-tree-id3083 . -2) (undo-tree-id3084 . -2) (undo-tree-id3085 . -2) (undo-tree-id3086 . -2) (undo-tree-id3087 . -2) (undo-tree-id3088 . -2) (undo-tree-id3089 . -2) (undo-tree-id3090 . -2) (undo-tree-id3091 . -2) (undo-tree-id3092 . -2) (undo-tree-id3093 . -2) (undo-tree-id3094 . -2) (undo-tree-id3095 . -2) (undo-tree-id3096 . -2) (undo-tree-id3097 . -2) (undo-tree-id3098 . -2) (undo-tree-id3099 . -2) (undo-tree-id3100 . -2) (undo-tree-id3101 . -2) (undo-tree-id3102 . -2) (undo-tree-id3103 . -2) (undo-tree-id3104 . -2) (undo-tree-id3105 . -2) (undo-tree-id3106 . -2) (undo-tree-id3107 . -2) (undo-tree-id3108 . -2) (undo-tree-id3109 . -2) (undo-tree-id3110 . -2) (undo-tree-id3111 . -2) (undo-tree-id3112 . -2) (undo-tree-id3113 . -2) (undo-tree-id3114 . -2) (undo-tree-id3115 . -2) (undo-tree-id3116 . -2) (undo-tree-id3117 . -2) (undo-tree-id3118 . -2) (undo-tree-id3119 . -2) (undo-tree-id3120 . -2) (undo-tree-id3121 . -2) (undo-tree-id3122 . -2) (undo-tree-id3123 . -2) (undo-tree-id3124 . -2) (undo-tree-id3125 . -2) (undo-tree-id3126 . -2) (undo-tree-id3127 . -2) (undo-tree-id3128 . -2) (undo-tree-id3129 . -2) (undo-tree-id3130 . -2) (undo-tree-id3131 . -2) (undo-tree-id3132 . -2) (undo-tree-id3133 . -2) (undo-tree-id3134 . -2) (undo-tree-id3135 . -2) (undo-tree-id3136 . -2) (undo-tree-id3137 . -2) (undo-tree-id3138 . -2) (undo-tree-id3139 . -2) (undo-tree-id3140 . -2) (undo-tree-id3141 . -2) (undo-tree-id3142 . -2) (undo-tree-id3143 . -2) (undo-tree-id3144 . -2) (undo-tree-id3145 . -2) (undo-tree-id3146 . -2) (undo-tree-id3147 . -2) (undo-tree-id3148 . -2) (undo-tree-id3149 . -2) (undo-tree-id3150 . -2) (undo-tree-id3151 . -2) (undo-tree-id3152 . -2) (undo-tree-id3153 . -2) (undo-tree-id3154 . -2) (undo-tree-id3155 . -2) (undo-tree-id3156 . -2) (undo-tree-id3157 . -2) (undo-tree-id3158 . -2) (undo-tree-id3159 . -2) (undo-tree-id3160 . -2) (undo-tree-id3161 . -2) (undo-tree-id3162 . -2) (undo-tree-id3163 . -2) (undo-tree-id3164 . -2) (undo-tree-id3165 . -2) (undo-tree-id3166 . -2) (undo-tree-id3167 . -2) (undo-tree-id3168 . -2) (undo-tree-id3169 . -2) (undo-tree-id3170 . -2) (undo-tree-id3171 . -2) (undo-tree-id3172 . -2) (undo-tree-id3173 . -2) (undo-tree-id3174 . -2) (undo-tree-id3175 . -2) (undo-tree-id3176 . -2) (undo-tree-id3177 . -2) (undo-tree-id3178 . -2) (undo-tree-id3179 . -2) (undo-tree-id3180 . -2) (undo-tree-id3181 . -2) (undo-tree-id3182 . -2) (undo-tree-id3183 . -2) (undo-tree-id3184 . -2) (undo-tree-id3185 . -2) (undo-tree-id3186 . -2) (undo-tree-id3187 . -2) (undo-tree-id3188 . -2) (undo-tree-id3189 . -2) (undo-tree-id3190 . -2) (undo-tree-id3191 . -2) (undo-tree-id3192 . -2) (undo-tree-id3193 . -2) (undo-tree-id3194 . -2) (undo-tree-id3195 . -2) (undo-tree-id3196 . -2) (undo-tree-id3197 . -2) (undo-tree-id3198 . -2) (undo-tree-id3199 . -2) (undo-tree-id3200 . -2) (undo-tree-id3201 . -2) (undo-tree-id3202 . -2) (undo-tree-id3203 . -2) (undo-tree-id3204 . -2) (undo-tree-id3205 . -2) (undo-tree-id3206 . -2) (undo-tree-id3207 . -2) (undo-tree-id3208 . -2) (undo-tree-id3209 . -2) (undo-tree-id3210 . -2) (undo-tree-id3211 . -2) (undo-tree-id3212 . -2) (undo-tree-id3213 . -2) (undo-tree-id3214 . -2) (undo-tree-id3215 . -2) (undo-tree-id3216 . -2) (undo-tree-id3217 . -2) (undo-tree-id3218 . -2) (undo-tree-id3219 . -2) (undo-tree-id3220 . -2) (undo-tree-id3221 . -2) (undo-tree-id3222 . -2) (undo-tree-id3223 . -2) (undo-tree-id3224 . -2) (undo-tree-id3225 . -2) (undo-tree-id3226 . -2) (undo-tree-id3227 . -2) (undo-tree-id3228 . -2) (undo-tree-id3229 . -2) (undo-tree-id3230 . -2) (undo-tree-id3231 . -2) (undo-tree-id3232 . -2) (undo-tree-id3233 . -2) (undo-tree-id3234 . -2) (undo-tree-id3235 . -2) (undo-tree-id3236 . -2) (undo-tree-id3237 . -2) (undo-tree-id3238 . -2) (undo-tree-id3239 . -2) (undo-tree-id3240 . -2) (undo-tree-id3241 . -2) (undo-tree-id3242 . -2) (undo-tree-id3243 . -2) (undo-tree-id3244 . -2) (undo-tree-id3245 . -2) (undo-tree-id3246 . -2) (undo-tree-id3247 . -2) (undo-tree-id3248 . -2) (581 . 582) (nil rear-nonsticky t 537 . 538)) (25723 11212 912116 206000) 0 nil] [nil nil ((nil rear-nonsticky nil 920 . 921) (nil fontified nil 536 . 921) (536 . 921)) ((#("
(fset 'inserting\\ an\\ html\\ tangle\\ block
   (kmacro-lambda-form [?\\; ?x ?\\( ?s ?r ?c ?\\C-x ?a ?e escape ?k ?k ?j ?A ?: backspace ?h backspace ?h ?t ?m ?l ?  ?: ?t ?a ?n ?g ?l ?e ?  ?d ?o ?c ?u ?m ?e ?n ?t C-backspace ?c ?h ?i ?l ?d ?N ?o ?d ?e ?s ?\\( ?\\) ?. ?h ?t ?m ?l escape ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?i ?l ?i ?s ?t ?i ?n ?g ?_ escape ?o escape ?i] 0 \"%d\"))

" 0 384 (fontified nil) 384 385 (rear-nonsticky nil fontified nil)) . 536) (undo-tree-id1847 . 1) (undo-tree-id1848 . -384) (undo-tree-id1849 . -384) (undo-tree-id1850 . -384) (undo-tree-id1851 . -385) (undo-tree-id1852 . -385) (undo-tree-id1853 . -384) (undo-tree-id1854 . -384) (undo-tree-id1855 . -384) (undo-tree-id1856 . -384) (undo-tree-id1857 . -384) (undo-tree-id1858 . -384) (undo-tree-id1859 . -384) (undo-tree-id1860 . -384) (undo-tree-id1861 . -384) (undo-tree-id1862 . -384) (undo-tree-id1863 . -384) (undo-tree-id1864 . -384) (undo-tree-id1865 . -384) (undo-tree-id1866 . -384) (undo-tree-id1867 . -384) (undo-tree-id1868 . -384) (undo-tree-id1869 . -384) (undo-tree-id1870 . -384) (undo-tree-id1871 . -384) (undo-tree-id1872 . -384) (undo-tree-id1873 . -384) (undo-tree-id1874 . -384) (undo-tree-id1875 . -384) (undo-tree-id1876 . -384) (undo-tree-id1877 . -384) (undo-tree-id1878 . -384) (undo-tree-id1879 . -384) (undo-tree-id1880 . -384) (undo-tree-id1881 . -384) (undo-tree-id1882 . -384) (undo-tree-id1883 . -384) (undo-tree-id1884 . -384) (undo-tree-id1885 . -384) (undo-tree-id1886 . -384) (undo-tree-id1887 . -384) (undo-tree-id1888 . -384) (undo-tree-id1889 . -384) (undo-tree-id1890 . -384) (undo-tree-id1891 . -384) (undo-tree-id1892 . -384) (undo-tree-id1893 . -384) (undo-tree-id1894 . -384) (undo-tree-id1895 . -384) (undo-tree-id1896 . -384) (undo-tree-id1897 . -384) (undo-tree-id1898 . -384) (undo-tree-id1899 . -384) (undo-tree-id1900 . -384) (undo-tree-id1901 . -384) (undo-tree-id1902 . -384) (undo-tree-id1903 . -384) (undo-tree-id1904 . -384) (undo-tree-id1905 . -384) (undo-tree-id1906 . -384) (undo-tree-id1907 . -384) (undo-tree-id1908 . -384) (undo-tree-id1909 . -384) (undo-tree-id1910 . -384) (undo-tree-id1911 . -384) (undo-tree-id1912 . -384) (undo-tree-id1913 . -384) (undo-tree-id1914 . -384) (undo-tree-id1915 . -384) (undo-tree-id1916 . -384) (undo-tree-id1917 . -384) (undo-tree-id1918 . -384) (undo-tree-id1919 . -384) (undo-tree-id1920 . -384) (undo-tree-id1921 . -384) (undo-tree-id1922 . -384) (undo-tree-id1923 . -384) (undo-tree-id1924 . -384) (undo-tree-id1925 . -384) (undo-tree-id1926 . -384) (undo-tree-id1927 . -384) (undo-tree-id1928 . -384) (undo-tree-id1929 . -384) (undo-tree-id1930 . -384) (undo-tree-id1931 . -384) (undo-tree-id1932 . -384) (undo-tree-id1933 . -384) (undo-tree-id1934 . -384) (undo-tree-id1935 . -384) (undo-tree-id1936 . -384) (undo-tree-id1937 . -384) (undo-tree-id1938 . -384) (undo-tree-id1939 . -384) (undo-tree-id1940 . -384) (undo-tree-id1941 . -384) (undo-tree-id1942 . -384) (undo-tree-id1943 . -384) (undo-tree-id1944 . -384) (undo-tree-id1945 . -384) (undo-tree-id1946 . -384) (undo-tree-id1947 . -384) (undo-tree-id1948 . -384) (undo-tree-id1949 . -384) (undo-tree-id1950 . -384) (undo-tree-id1951 . -384) (undo-tree-id1952 . -384) (undo-tree-id1953 . -384) (undo-tree-id1954 . -384) (undo-tree-id1955 . -384) (undo-tree-id1956 . -384) (undo-tree-id1957 . -384) (undo-tree-id1958 . -384) (undo-tree-id1959 . -384) (undo-tree-id1960 . -384) (undo-tree-id1961 . -384) (undo-tree-id1962 . -384) (undo-tree-id1963 . -384) (undo-tree-id1964 . -384) (undo-tree-id1965 . -384) (undo-tree-id1966 . -384) (undo-tree-id1967 . -384) (undo-tree-id1968 . -384) (undo-tree-id1969 . -384) (undo-tree-id1970 . -384) (undo-tree-id1971 . -384) (undo-tree-id1972 . -384) (undo-tree-id1973 . -384) (undo-tree-id1974 . -384) (undo-tree-id1975 . -384) (undo-tree-id1976 . -384) (undo-tree-id1977 . -384) (undo-tree-id1978 . -384) (undo-tree-id1979 . -384) (undo-tree-id1980 . -384) (undo-tree-id1981 . -384) (undo-tree-id1982 . -384) (undo-tree-id1983 . -384) (undo-tree-id1984 . -384) (undo-tree-id1985 . -384) (undo-tree-id1986 . -384) (undo-tree-id1987 . -384) (undo-tree-id1988 . -384) (undo-tree-id1989 . -384) (undo-tree-id1990 . -384) (undo-tree-id1991 . -384) (undo-tree-id1992 . -384) (undo-tree-id1993 . -384) (undo-tree-id1994 . -384) (undo-tree-id1995 . -384) (undo-tree-id1996 . -384) (undo-tree-id1997 . -384) (undo-tree-id1998 . -384) (undo-tree-id1999 . -384) (undo-tree-id2000 . -384) (undo-tree-id2001 . -384) (undo-tree-id2002 . -384) (undo-tree-id2003 . -384) (undo-tree-id2004 . -384) (undo-tree-id2005 . -384) (undo-tree-id2006 . -384) (undo-tree-id2007 . -384) (undo-tree-id2008 . -384) (undo-tree-id2009 . -384) (undo-tree-id2010 . -384) (undo-tree-id2011 . -384) (undo-tree-id2012 . -384) (undo-tree-id2013 . -384) (undo-tree-id2014 . -384) (undo-tree-id2015 . -384) (undo-tree-id2016 . -384) (undo-tree-id2017 . -384) (undo-tree-id2018 . -384) (undo-tree-id2019 . -384) (undo-tree-id2020 . -384) (undo-tree-id2021 . -384) (undo-tree-id2022 . -384) (undo-tree-id2023 . -384) (undo-tree-id2024 . -384) (undo-tree-id2025 . -384) (undo-tree-id2026 . -384) (undo-tree-id2027 . -384) (undo-tree-id2028 . -384) (undo-tree-id2029 . -384) (undo-tree-id2030 . -384) (undo-tree-id2031 . -384) (undo-tree-id2032 . -384) (undo-tree-id2033 . -384) (undo-tree-id2034 . -384) (undo-tree-id2035 . -384) (undo-tree-id2036 . -384) (undo-tree-id2037 . -384) (undo-tree-id2038 . -384) (undo-tree-id2039 . -384) (undo-tree-id2040 . -384) (undo-tree-id2041 . -384) (undo-tree-id2042 . -384) (undo-tree-id2043 . -384) (undo-tree-id2044 . -384) (undo-tree-id2045 . -384) (undo-tree-id2046 . -384) (undo-tree-id2047 . -384) (undo-tree-id2048 . -384) (undo-tree-id2049 . -384) (undo-tree-id2050 . -384) (undo-tree-id2051 . -384) (undo-tree-id2052 . -384) (undo-tree-id2053 . -384) (undo-tree-id2054 . -384) (undo-tree-id2055 . -384) (undo-tree-id2056 . -384) (undo-tree-id2057 . -384) (undo-tree-id2058 . -384) (undo-tree-id2059 . -384) (undo-tree-id2060 . -384) (undo-tree-id2061 . -384) (undo-tree-id2062 . -384) (undo-tree-id2063 . -384) (undo-tree-id2064 . -384) (undo-tree-id2065 . -384) (undo-tree-id2066 . -384) (undo-tree-id2067 . -384) (undo-tree-id2068 . -384) (undo-tree-id2069 . -384) (undo-tree-id2070 . -384) (undo-tree-id2071 . -384) (undo-tree-id2072 . -384) (undo-tree-id2073 . -384) (undo-tree-id2074 . -384) (undo-tree-id2075 . -384) (undo-tree-id2076 . -384) (undo-tree-id2077 . -384) (undo-tree-id2078 . -384) (undo-tree-id2079 . -384) (undo-tree-id2080 . -384) (undo-tree-id2081 . -384) (undo-tree-id2082 . -384) (undo-tree-id2083 . -384) (undo-tree-id2084 . -384) (undo-tree-id2085 . -384) (undo-tree-id2086 . -384) (undo-tree-id2087 . -384) (undo-tree-id2088 . -384) (undo-tree-id2089 . -384) (undo-tree-id2090 . -384) (undo-tree-id2091 . -384) (undo-tree-id2092 . -384) (undo-tree-id2093 . -384) (undo-tree-id2094 . -384) (undo-tree-id2095 . -384) (undo-tree-id2096 . -384) (undo-tree-id2097 . -384) (undo-tree-id2098 . -384) (undo-tree-id2099 . -384) (undo-tree-id2100 . -384) (undo-tree-id2101 . -384) (undo-tree-id2102 . -384) (undo-tree-id2103 . -384) (undo-tree-id2104 . -384) (undo-tree-id2105 . -384) (undo-tree-id2106 . -384) (undo-tree-id2107 . -384) (undo-tree-id2108 . -384) (undo-tree-id2109 . -384) (undo-tree-id2110 . -384) (undo-tree-id2111 . -384) (undo-tree-id2112 . -384) (undo-tree-id2113 . -384) (undo-tree-id2114 . -384) (undo-tree-id2115 . -384) (undo-tree-id2116 . -384) (undo-tree-id2117 . -384) (undo-tree-id2118 . -384) (undo-tree-id2119 . -384) (undo-tree-id2120 . -384) (undo-tree-id2121 . -384) (undo-tree-id2122 . -384) (undo-tree-id2123 . -384) (undo-tree-id2124 . -384) (undo-tree-id2125 . -384) (undo-tree-id2126 . -384) (undo-tree-id2127 . -384) (undo-tree-id2128 . -384) (undo-tree-id2129 . -384) (undo-tree-id2130 . -384) (undo-tree-id2131 . -384) (undo-tree-id2132 . -384) (undo-tree-id2133 . -384) (undo-tree-id2134 . -384) (undo-tree-id2135 . -384) (undo-tree-id2136 . -384) (undo-tree-id2137 . -384) (undo-tree-id2138 . -384) (undo-tree-id2139 . -384) (undo-tree-id2140 . -384) (undo-tree-id2141 . -384) (undo-tree-id2142 . -384) (undo-tree-id2143 . -384) (undo-tree-id2144 . -384) (undo-tree-id2145 . -384) (undo-tree-id2146 . -384) (undo-tree-id2147 . -384) (undo-tree-id2148 . -384) (undo-tree-id2149 . -384) (undo-tree-id2150 . -384) (undo-tree-id2151 . -384) (undo-tree-id2152 . -384) (undo-tree-id2153 . -384) (undo-tree-id2154 . -384) (undo-tree-id2155 . -384) (undo-tree-id2156 . -384) (undo-tree-id2157 . -384) (undo-tree-id2158 . -384) (undo-tree-id2159 . -384) (undo-tree-id2160 . -384) (undo-tree-id2161 . -384) (undo-tree-id2162 . -384) (undo-tree-id2163 . -384) (undo-tree-id2164 . -384) (undo-tree-id2165 . -384) (undo-tree-id2166 . -384) (undo-tree-id2167 . -384) (undo-tree-id2168 . -384) (undo-tree-id2169 . -384) (undo-tree-id2170 . -384) (undo-tree-id2171 . -384) (undo-tree-id2172 . -384) (undo-tree-id2173 . -384) (undo-tree-id2174 . -384) (undo-tree-id2175 . -384) (undo-tree-id2176 . -384) (undo-tree-id2177 . -384) (undo-tree-id2178 . -384) (undo-tree-id2179 . -384) (undo-tree-id2180 . -384) (undo-tree-id2181 . -384) (undo-tree-id2182 . -384) (undo-tree-id2183 . -384) (undo-tree-id2184 . -384) (undo-tree-id2185 . -384) (undo-tree-id2186 . -384) (undo-tree-id2187 . -384) (undo-tree-id2188 . -384) (undo-tree-id2189 . -384) (undo-tree-id2190 . -384) (undo-tree-id2191 . -384) (undo-tree-id2192 . -384) (undo-tree-id2193 . -384) (undo-tree-id2194 . -384) (undo-tree-id2195 . -384) (undo-tree-id2196 . -384) (undo-tree-id2197 . -384) (undo-tree-id2198 . -384) (undo-tree-id2199 . -384) (undo-tree-id2200 . -384) (undo-tree-id2201 . -384) (undo-tree-id2202 . -384) (undo-tree-id2203 . -384) (undo-tree-id2204 . -384) (undo-tree-id2205 . -384) (undo-tree-id2206 . -384) (undo-tree-id2207 . -384) (undo-tree-id2208 . -384) (undo-tree-id2209 . -384) (undo-tree-id2210 . -384) (undo-tree-id2211 . -384) (undo-tree-id2212 . -384) (undo-tree-id2213 . -384) (undo-tree-id2214 . -384) (undo-tree-id2215 . -384) (undo-tree-id2216 . -384) (undo-tree-id2217 . -384) (undo-tree-id2218 . -384) (undo-tree-id2219 . -384) (undo-tree-id2220 . -384) (undo-tree-id2221 . -384) (undo-tree-id2222 . -384) (undo-tree-id2223 . -384) (undo-tree-id2224 . -384) (undo-tree-id2225 . -384) (undo-tree-id2226 . -384) (undo-tree-id2227 . -384) (undo-tree-id2228 . -384) (undo-tree-id2229 . -384) (undo-tree-id2230 . -384) (undo-tree-id2231 . -384) (undo-tree-id2232 . -384) (undo-tree-id2233 . -384) (undo-tree-id2234 . -384) (undo-tree-id2235 . -384) (undo-tree-id2236 . -384) (undo-tree-id2237 . -384) (undo-tree-id2238 . -384) (undo-tree-id2239 . -384) (undo-tree-id2240 . -384) (undo-tree-id2241 . -384) (undo-tree-id2242 . -384) (undo-tree-id2243 . -384) (undo-tree-id2244 . -384) (undo-tree-id2245 . -384) (undo-tree-id2246 . -384) (undo-tree-id2247 . -384) (undo-tree-id2248 . -384) (undo-tree-id2249 . -384) (undo-tree-id2250 . -384) (undo-tree-id2251 . -384) (undo-tree-id2252 . -384) (undo-tree-id2253 . -384) (undo-tree-id2254 . -384) (undo-tree-id2255 . -384) (undo-tree-id2256 . -384) (undo-tree-id2257 . -384) (undo-tree-id2258 . -384) (undo-tree-id2259 . -384) (undo-tree-id2260 . -384) (undo-tree-id2261 . -384) (undo-tree-id2262 . -384) (undo-tree-id2263 . -384) (undo-tree-id2264 . -384) (undo-tree-id2265 . -384) (undo-tree-id2266 . -384) (undo-tree-id2267 . -384) (undo-tree-id2268 . -384) (undo-tree-id2269 . -384) (undo-tree-id2270 . -384) (undo-tree-id2271 . -384) (undo-tree-id2272 . -384) (undo-tree-id2273 . -384) (undo-tree-id2274 . -384) (undo-tree-id2275 . -384) (undo-tree-id2276 . -384) (undo-tree-id2277 . -384) (undo-tree-id2278 . -384) (undo-tree-id2279 . -384) (undo-tree-id2280 . -384) (undo-tree-id2281 . -384) (undo-tree-id2282 . -384) (undo-tree-id2283 . -384) (undo-tree-id2284 . -384) (undo-tree-id2285 . -384) (undo-tree-id2286 . -384) (undo-tree-id2287 . -384) (undo-tree-id2288 . -384) (undo-tree-id2289 . -384) (undo-tree-id2290 . -384) (undo-tree-id2291 . -384) (undo-tree-id2292 . -384) (undo-tree-id2293 . -384) (undo-tree-id2294 . -384) (undo-tree-id2295 . -384) (undo-tree-id2296 . -384) (undo-tree-id2297 . -384) (undo-tree-id2298 . -384) (undo-tree-id2299 . -384) (undo-tree-id2300 . -384) (undo-tree-id2301 . -384) (undo-tree-id2302 . -384) (undo-tree-id2303 . -384) (undo-tree-id2304 . -384) (undo-tree-id2305 . -384) (undo-tree-id2306 . -384) (undo-tree-id2307 . -384) (undo-tree-id2308 . -384) (undo-tree-id2309 . -384) (undo-tree-id2310 . -384) (undo-tree-id2311 . -384) (undo-tree-id2312 . -384) (undo-tree-id2313 . -384) (undo-tree-id2314 . -384) (undo-tree-id2315 . -384) (undo-tree-id2316 . -384) (undo-tree-id2317 . -384) (undo-tree-id2318 . -384) (undo-tree-id2319 . -384) (undo-tree-id2320 . -384) (undo-tree-id2321 . -384) (undo-tree-id2322 . -384) (undo-tree-id2323 . -384) (undo-tree-id2324 . -384) (undo-tree-id2325 . -384) (undo-tree-id2326 . -384) (undo-tree-id2327 . -384) (undo-tree-id2328 . -384) (undo-tree-id2329 . -384) (undo-tree-id2330 . -384) (undo-tree-id2331 . -384) (undo-tree-id2332 . -384) (undo-tree-id2333 . -384) (undo-tree-id2334 . -384) (undo-tree-id2335 . -384) (undo-tree-id2336 . -384) (undo-tree-id2337 . -384) (undo-tree-id2338 . -384) (undo-tree-id2339 . -384) (undo-tree-id2340 . -384) (undo-tree-id2341 . -384) (undo-tree-id2342 . -384) (undo-tree-id2343 . -384) (undo-tree-id2344 . -384) (undo-tree-id2345 . -384) (undo-tree-id2346 . -384) (undo-tree-id2347 . -384) (undo-tree-id2348 . -384) (undo-tree-id2349 . -384) (undo-tree-id2350 . -384) (undo-tree-id2351 . -384) (undo-tree-id2352 . -384) (undo-tree-id2353 . -384) (undo-tree-id2354 . -384) (undo-tree-id2355 . -384) (undo-tree-id2356 . -384) (undo-tree-id2357 . -384) (undo-tree-id2358 . -384) (undo-tree-id2359 . -384) (undo-tree-id2360 . -384) (undo-tree-id2361 . -384) (undo-tree-id2362 . -384) (undo-tree-id2363 . -384) (undo-tree-id2364 . -384) (undo-tree-id2365 . -384) (undo-tree-id2366 . -384) (undo-tree-id2367 . -384) (undo-tree-id2368 . -384) (undo-tree-id2369 . -384) (undo-tree-id2370 . -384) (undo-tree-id2371 . -384) (undo-tree-id2372 . -384) (undo-tree-id2373 . -384) (undo-tree-id2374 . -384) (undo-tree-id2375 . -384) (undo-tree-id2376 . -384) (undo-tree-id2377 . -384) (undo-tree-id2378 . -384) (undo-tree-id2379 . -384) (undo-tree-id2380 . -384) (undo-tree-id2381 . -384) (undo-tree-id2382 . -384) (undo-tree-id2383 . -384) (undo-tree-id2384 . -384) (undo-tree-id2385 . -384) (undo-tree-id2386 . -384) (undo-tree-id2387 . -384) (undo-tree-id2388 . -384) (undo-tree-id2389 . -384) (undo-tree-id2390 . -384) (undo-tree-id2391 . -384) (undo-tree-id2392 . -384) (undo-tree-id2393 . -384) (undo-tree-id2394 . -384) (undo-tree-id2395 . -384) (undo-tree-id2396 . -384) (undo-tree-id2397 . -384) (undo-tree-id2398 . -384) (undo-tree-id2399 . -384) (undo-tree-id2400 . -384) (undo-tree-id2401 . -43) (undo-tree-id2402 . -43) (undo-tree-id2403 . -43) (undo-tree-id2404 . -43) (undo-tree-id2405 . -43) (undo-tree-id2406 . -43) (undo-tree-id2407 . -43) (undo-tree-id2408 . -43) (undo-tree-id2409 . -43) (undo-tree-id2410 . -43) (undo-tree-id2411 . -43) (undo-tree-id2412 . -43) (undo-tree-id2413 . -43) (undo-tree-id2414 . -43) (undo-tree-id2415 . -43) (undo-tree-id2416 . -43) (undo-tree-id2417 . -43) (undo-tree-id2418 . -43) (undo-tree-id2419 . -43) (undo-tree-id2420 . -43) (undo-tree-id2421 . -43) (undo-tree-id2422 . -43) (undo-tree-id2423 . -43) (undo-tree-id2424 . -43) (undo-tree-id2425 . -43) (undo-tree-id2426 . -43) (undo-tree-id2427 . -43) (undo-tree-id2428 . -43) (undo-tree-id2429 . -43) (undo-tree-id2430 . -43) (undo-tree-id2431 . -43) (undo-tree-id2432 . -43) (undo-tree-id2433 . -43) (undo-tree-id2434 . -43) (undo-tree-id2435 . -43) (undo-tree-id2436 . -43) (undo-tree-id2437 . -43) (undo-tree-id2438 . -43) (undo-tree-id2439 . -43) (undo-tree-id2440 . -43) (undo-tree-id2441 . -43) (undo-tree-id2442 . -43) (undo-tree-id2443 . -43) (undo-tree-id2444 . -43) (undo-tree-id2445 . -43) (undo-tree-id2446 . -43) (undo-tree-id2447 . -43) (undo-tree-id2448 . -43) (undo-tree-id2449 . -43) (undo-tree-id2450 . -43) (undo-tree-id2451 . -43) (undo-tree-id2452 . -43) (undo-tree-id2453 . -43) (undo-tree-id2454 . -43) (undo-tree-id2455 . -43) (undo-tree-id2456 . -43) (undo-tree-id2457 . -43) (undo-tree-id2458 . -43) (undo-tree-id2459 . -43) (undo-tree-id2460 . -43) (undo-tree-id2461 . -43) (undo-tree-id2462 . -43) (undo-tree-id2463 . -43) (undo-tree-id2464 . -43) (undo-tree-id2465 . -43) (undo-tree-id2466 . -43) (undo-tree-id2467 . -43) (undo-tree-id2468 . -43) (undo-tree-id2469 . -43) (undo-tree-id2470 . -43) (undo-tree-id2471 . -43) (undo-tree-id2472 . -43) (undo-tree-id2473 . -43) (undo-tree-id2474 . -43) (undo-tree-id2475 . -43) (undo-tree-id2476 . -43) (undo-tree-id2477 . -43) (undo-tree-id2478 . -43) (undo-tree-id2479 . -43) (undo-tree-id2480 . -43) (undo-tree-id2481 . -43) (undo-tree-id2482 . -43) (undo-tree-id2483 . -43) (undo-tree-id2484 . -43) (undo-tree-id2485 . -43) (undo-tree-id2486 . -43) (undo-tree-id2487 . -43) (undo-tree-id2488 . -43) (undo-tree-id2489 . -43) (undo-tree-id2490 . -43) (undo-tree-id2491 . -43) (undo-tree-id2492 . -43) (undo-tree-id2493 . -43) (undo-tree-id2494 . -43) (undo-tree-id2495 . -43) (undo-tree-id2496 . -43) (undo-tree-id2497 . -43) (undo-tree-id2498 . -43) (undo-tree-id2499 . -43) (undo-tree-id2500 . -43) (undo-tree-id2501 . -43) (undo-tree-id2502 . -43) (undo-tree-id2503 . -43) (undo-tree-id2504 . -43) (undo-tree-id2505 . -43) (undo-tree-id2506 . -43) (undo-tree-id2507 . -43) (undo-tree-id2508 . -43) (undo-tree-id2509 . -43) (undo-tree-id2510 . -43) (undo-tree-id2511 . -43) (undo-tree-id2512 . -43) (undo-tree-id2513 . -43) (undo-tree-id2514 . -43) (undo-tree-id2515 . -43) (undo-tree-id2516 . -43) (undo-tree-id2517 . -43) (undo-tree-id2518 . -43) (undo-tree-id2519 . -43) (undo-tree-id2520 . -43) (undo-tree-id2521 . -43) (undo-tree-id2522 . -43) (undo-tree-id2523 . -43) (undo-tree-id2524 . -43) (undo-tree-id2525 . -43) (undo-tree-id2526 . -43) (undo-tree-id2527 . -43) (undo-tree-id2528 . -43) (undo-tree-id2529 . -43) (undo-tree-id2530 . -43) (undo-tree-id2531 . -43) (undo-tree-id2532 . -43) (undo-tree-id2533 . -43) (undo-tree-id2534 . -43) (undo-tree-id2535 . -43) (undo-tree-id2536 . -43) (undo-tree-id2537 . -43) (undo-tree-id2538 . -43) (undo-tree-id2539 . -43) (undo-tree-id2540 . -43) (undo-tree-id2541 . -43) (undo-tree-id2542 . -43) (undo-tree-id2543 . -43) (undo-tree-id2544 . -43) (undo-tree-id2545 . -43) (undo-tree-id2546 . -43) (undo-tree-id2547 . -43) (undo-tree-id2548 . -43) (undo-tree-id2549 . -43) (undo-tree-id2550 . -43) (undo-tree-id2551 . -43) (undo-tree-id2552 . -43) (undo-tree-id2553 . -43) (undo-tree-id2554 . -43) (undo-tree-id2555 . -43) (undo-tree-id2556 . -43) (undo-tree-id2557 . -43) (undo-tree-id2558 . -43) (undo-tree-id2559 . -43) (undo-tree-id2560 . -43) (undo-tree-id2561 . -43) (undo-tree-id2562 . -43) (undo-tree-id2563 . -43) (undo-tree-id2564 . -43) (undo-tree-id2565 . -43) (undo-tree-id2566 . -43) (undo-tree-id2567 . -43) (undo-tree-id2568 . -43) (undo-tree-id2569 . -43) (undo-tree-id2570 . -43) (undo-tree-id2571 . -43) (undo-tree-id2572 . -43) (undo-tree-id2573 . -43) (undo-tree-id2574 . -43) (undo-tree-id2575 . -43) (undo-tree-id2576 . -43) (undo-tree-id2577 . -43) (undo-tree-id2578 . -43) (undo-tree-id2579 . -43) (undo-tree-id2580 . -43) (undo-tree-id2581 . -43) (undo-tree-id2582 . -43) (undo-tree-id2583 . -43) (undo-tree-id2584 . -43) (undo-tree-id2585 . -43) (undo-tree-id2586 . -43) (undo-tree-id2587 . -43) (undo-tree-id2588 . -43) (undo-tree-id2589 . -43) (undo-tree-id2590 . -43) (undo-tree-id2591 . -43) (undo-tree-id2592 . -43) (undo-tree-id2593 . -43) (undo-tree-id2594 . -43) (undo-tree-id2595 . -43) (undo-tree-id2596 . -43) (undo-tree-id2597 . -43) (undo-tree-id2598 . -43) (undo-tree-id2599 . -43) (undo-tree-id2600 . -43) (undo-tree-id2601 . -43) (undo-tree-id2602 . -43) (undo-tree-id2603 . -43) (undo-tree-id2604 . -43) (undo-tree-id2605 . -43) (undo-tree-id2606 . -43) (undo-tree-id2607 . -43) (undo-tree-id2608 . -43) (undo-tree-id2609 . -43) (undo-tree-id2610 . -43) (undo-tree-id2611 . -43) (undo-tree-id2612 . -43) (undo-tree-id2613 . -43) (undo-tree-id2614 . -43) (undo-tree-id2615 . -43) (undo-tree-id2616 . -43) (undo-tree-id2617 . -43) (undo-tree-id2618 . -43) (undo-tree-id2619 . -43) (nil fontified t 536 . 920) (nil rear-nonsticky t 920 . 921)) (25723 11166 377436 24000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 536) (undo-tree-id3249 . -1) (undo-tree-id3250 . 1) (undo-tree-id3251 . 1)) nil (25723 11221 865241 684000) 0 nil])
([nil nil ((nil rear-nonsticky nil 539 . 540) (#("
" 0 1 (fontified nil face org-block-end-line)) . -549) (539 . 550)) ((#("
#+END_SRC
" 0 1 (rear-nonsticky nil fontified nil) 1 10 (face org-meta-line fontified nil font-lock-fontified t) 10 11 (fontified nil face org-block-end-line)) . 539) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (549 . 550) (nil rear-nonsticky t 539 . 540)) (25723 11212 360793 624000) 0 nil])
([nil nil ((nil rear-nonsticky nil 922 . 923) (#("
" 0 1 (fontified nil)) . -964) (922 . 965)) ((#("
(fset 'inserting\\ an\\ html\\ tangle\\ block
" 0 1 (rear-nonsticky nil fontified nil) 1 42 (fontified nil) 42 43 (fontified nil)) . 922) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (964 . 965) (nil rear-nonsticky t 922 . 923)) (25723 11165 830525 897000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -24687) (undo-tree-id3258 . -4) 24691 (24686 . 24691) (t 25723 11221 920452 206000) 24686) nil (25723 11287 444546 884000) 0 nil])
([nil nil ((#("

#+END_SRC
" 0 1 (fontified t) 1 2 (rear-nonsticky t fontified t) 2 11 (face org-meta-line fontified t font-lock-fontified t) 11 12 (fontified t rear-nonsticky t)) . 538) (undo-tree-id2620 . -2) (undo-tree-id2621 . -12) (undo-tree-id2622 . -11) (undo-tree-id2623 . -2) (undo-tree-id2624 . -2) 540) ((538 . 550)) (25723 11211 600000 237000) 0 nil])
([nil nil ((#("

(fset 'inserting\\ an\\ html\\ tangle\\ block
" 0 1 (fontified t) 1 2 (rear-nonsticky t fontified t) 2 43 (fontified t) 43 44 (fontified t rear-nonsticky t)) . 921) (undo-tree-id1522 . -2) (undo-tree-id1523 . -44) (undo-tree-id1524 . 44) (undo-tree-id1525 . -43) (undo-tree-id1526 . -2) (undo-tree-id1527 . -2) 923) ((921 . 965)) (25723 11164 647898 873000) 0 nil])
([nil nil ((24686 . 24691) 24686) nil (25723 11287 444527 258000) 0 nil])
([nil nil ((nil rear-nonsticky nil 537 . 538) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -549) (537 . 550)) ((#("


#+END_SRC
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil) 2 3 (fontified nil rear-nonsticky t) 3 12 (face org-meta-line fontified nil font-lock-fontified t) 12 13 (fontified nil rear-nonsticky t)) . 537) (undo-tree-id2625 . -2) (undo-tree-id2626 . -3) (undo-tree-id2627 . 11) (undo-tree-id2628 . -1) (undo-tree-id2629 . -12) (undo-tree-id2630 . -12) (undo-tree-id2631 . -2) (undo-tree-id2632 . -2) (undo-tree-id2633 . -2) (549 . 550) (nil rear-nonsticky t 537 . 538)) (25723 11211 599677 772000) 0 nil])
([nil nil ((nil rear-nonsticky nil 920 . 921) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -964) (920 . 965)) ((#("


(fset 'inserting\\ an\\ html\\ tangle\\ block
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified t) 2 3 (fontified t rear-nonsticky t) 3 44 (fontified nil) 44 45 (fontified nil rear-nonsticky t)) . 920) (undo-tree-id1558 . -2) (undo-tree-id1559 . -3) (undo-tree-id1560 . 43) (undo-tree-id1561 . -1) (undo-tree-id1562 . -44) (undo-tree-id1563 . -44) (undo-tree-id1564 . -2) (undo-tree-id1565 . -2) (undo-tree-id1566 . -2) (964 . 965) (nil rear-nonsticky t 920 . 921)) (25723 11164 647437 631000) 0 nil])
([nil nil ((24686 . 24692) (#("
    
" 0 5 (fontified t) 5 6 (fontified t)) . 24686)) nil (25723 11287 444513 80000) 0 nil])
nil
nil
([nil nil ((nil rear-nonsticky nil 24656 . 24657) (#("
" 0 1 (fontified nil face org-block-end-line rear-nonsticky t)) . -24703) (24656 . 24704) (t 25723 11287 502303 215000)) nil (25723 11354 435016 151000) 0 nil])
([nil nil ((#("#+BEGIN_SRC html :tangle empty.html

#+END_SRC
" 0 35 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 35 36 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 36 37 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t rear-nonsticky t) 37 46 (face org-block-end-line font-lock-multiline t fontified t font-lock-fontified t) 46 47 (face org-block-end-line rear-nonsticky t fontified t)) . 24609) (undo-tree-id3278 . -36) (undo-tree-id3279 . -46) (undo-tree-id3280 . -37) (undo-tree-id3281 . -37) (undo-tree-id3282 . -36) (undo-tree-id3283 . -25) (undo-tree-id3284 . -36) (undo-tree-id3285 . -36) (undo-tree-id3286 . -36) (undo-tree-id3287 . -36) (undo-tree-id3288 . -37) (undo-tree-id3289 . -47) (undo-tree-id3290 . -37) (undo-tree-id3291 . -37) 24646) nil (25723 11354 435009 27000) 0 nil])
([nil nil ((24609 . 24610)) nil (25723 11354 434977 108000) 0 nil])
([nil nil ((#("@
" 0 1 (fontified t) 1 2 (rear-nonsticky t fontified t)) . 24609) (undo-tree-id3274 . 1) (undo-tree-id3275 . -1) (undo-tree-id3276 . 1) (undo-tree-id3277 . -2)) nil (25723 11354 434972 918000) 0 nil])
([nil nil ((#("#+BEGIN_SRC html :tangle empty.html
" 0 35 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 35 36 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . 24609) (undo-tree-id3269 . 36) (undo-tree-id3270 . -35) (undo-tree-id3271 . 36) (undo-tree-id3272 . -36) (undo-tree-id3273 . -36)) nil (25723 11354 434960 975000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t src-block t font-lock-fontified t rear-nonsticky t)) . 24609) (undo-tree-id3265 . 1) (undo-tree-id3266 . 1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1)) nil (25723 11354 434945 609000) 0 nil])
([nil nil ((#("#+END_SRC
" 0 1 (face org-meta-line fontified t font-lock-fontified t) 1 9 (face org-meta-line fontified t font-lock-fontified t) 9 10 (fontified t)) . 24609) (undo-tree-id3259 . 10) (undo-tree-id3260 . -9) (undo-tree-id3261 . 10) (undo-tree-id3262 . -10) (undo-tree-id3263 . -10) (undo-tree-id3264 . -10)) nil (25723 11354 434927 101000) 0 nil])
([nil nil ((24657 . 24664) (#(" " 0 1 (fontified t)) . -24657) (undo-tree-id3318 . -1) 24658 (24657 . 24658) (24646 . 24657) (24642 . 24646) (24638 . 24642) (t 25723 11354 488233 70000)) nil (25723 64144 686698 208000) 0 nil])
([nil nil ((24740 . 24745) (#("e" 0 1 (fontified t)) . -24740) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (#("s" 0 1 (fontified t)) . -24741) (undo-tree-id3295 . -1) (#(" " 0 1 (fontified t)) . -24742) (undo-tree-id3296 . -1) 24743 (24731 . 24743) (#("i" 0 1 (fontified t)) . -24731) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (#("s" 0 1 (fontified t)) . -24732) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (#(" " 0 1 (fontified t)) . -24733) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (#("s" 0 1 (fontified t)) . -24734) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (#("h" 0 1 (fontified t)) . -24735) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (#("o" 0 1 (fontified t)) . -24736) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (#("u" 0 1 (fontified t)) . -24737) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (#("l" 0 1 (fontified t)) . -24738) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (#("d" 0 1 (fontified t)) . -24739) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (#(" " 0 1 (fontified t)) . -24740) (undo-tree-id3315 . -1) 24741 (24727 . 24741) (#("-" 0 1 (fontified t)) . -24727) (undo-tree-id3316 . -1) (#(" " 0 1 (fontified t)) . -24728) (undo-tree-id3317 . -1) 24729 (24728 . 24729) (24724 . 24728) (24710 . 24724) (24706 . 24710) (24698 . 24706) (24677 . 24698) (24672 . 24677) (24665 . 24672) (24664 . 24665)) nil (25723 64144 686679 560000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24759 . 24760) (nil fontified nil 24745 . 24760) (24745 . 24760) 24744) nil (25723 64144 686618 29000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 24740)) nil (25723 64144 686613 210000) 0 nil])
([nil nil ((24759 . 24764)) nil (25723 64144 686609 928000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24780 . 24781) (nil fontified nil 24764 . 24781) (24764 . 24781) 24763) nil (25723 64144 688333 209000) 0 nil])
([nil nil ((24781 . 24782) 24780) nil (25723 64193 945060 764000) 0 nil] [nil nil ((24909 . 24912) (#("src" 0 3 (fontified nil)) . 24909) (undo-tree-id3292 . -3) (24887 . 24909) 24890 (24887 . 24890) (24886 . 24887) (24879 . 24886) (24878 . 24879) (24870 . 24878) (24849 . 24870) (24845 . 24849) (24824 . 24845) (24803 . 24824) (24782 . 24803) (24781 . 24782) 24780) ((#("
" 0 1 (fontified t)) . 24781) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (#("so if we ask for chil" 0 21 (fontified nil)) . 24782) (undo-tree-id3324 . -21) (undo-tree-id3325 . -21) (undo-tree-id3326 . -21) (undo-tree-id3327 . -21) (undo-tree-id3328 . -21) (#("dren of an html docum" 0 21 (fontified nil)) . 24803) (undo-tree-id3329 . -21) (undo-tree-id3330 . -21) (undo-tree-id3331 . -21) (undo-tree-id3332 . -21) (undo-tree-id3333 . -21) (#("ent we will get these" 0 21 (fontified nil)) . 24824) (undo-tree-id3334 . -21) (undo-tree-id3335 . -21) (undo-tree-id3336 . -21) (undo-tree-id3337 . -21) (undo-tree-id3338 . -21) (#(" two" 0 4 (fontified nil)) . 24845) (undo-tree-id3339 . -4) (undo-tree-id3340 . -4) (undo-tree-id3341 . -4) (undo-tree-id3342 . -4) (undo-tree-id3343 . -4) (#(" things in the array " 0 21 (fontified nil)) . 24849) (undo-tree-id3344 . -21) (undo-tree-id3345 . -21) (undo-tree-id3346 . -21) (undo-tree-id3347 . -21) (undo-tree-id3348 . -21) (#("at least" 0 8 (fontified nil)) . 24870) (undo-tree-id3349 . -8) (undo-tree-id3350 . -8) (undo-tree-id3351 . -8) (undo-tree-id3352 . -8) (undo-tree-id3353 . -8) (#("
" 0 1 (fontified t)) . 24878) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (#("example" 0 7 (fontified nil)) . 24879) (undo-tree-id3359 . -7) (undo-tree-id3360 . -7) (undo-tree-id3361 . -7) (undo-tree-id3362 . -7) (undo-tree-id3363 . -7) (#("
" 0 1 (fontified t)) . 24886) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (#("src" 0 3 (fontified nil)) . 24887) (undo-tree-id3368 . -3) (#("#+BEGIN_SRC 
#+END_SRC" 0 13 (font-lock-fontified t fontified nil) 13 22 (face org-meta-line font-lock-fontified t fontified nil)) . 24887) (undo-tree-id3369 . -13) (undo-tree-id3370 . -22) (undo-tree-id3371 . -22) (24909 . 24912) (#("uuu" 0 3 (face org-meta-line font-lock-fontified t fontified t)) . 24909) (undo-tree-id3372 . -2) (undo-tree-id3373 . -2) (undo-tree-id3374 . -2)) (25723 64144 686593 305000) 0 nil])
([nil nil ((24851 . 24858) (#("e" 0 1 (fontified t)) . -24851) (undo-tree-id3380 . -1) (#("t" 0 1 (fontified t)) . -24852) (undo-tree-id3381 . -1) 24853 (24835 . 24853) (24824 . 24835) (24803 . 24824) (24782 . 24803)) nil (25723 64193 945056 84000) 0 nil])
nil
([nil nil ((#("src" 0 3 (fontified nil)) . 24883) (undo-tree-id3379 . -3) (24861 . 24883) 24864 (24861 . 24864)) nil (25723 64193 945046 586000) 0 nil])
([nil nil ((24886 . 24895) (24873 . 24886) (#(":" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -24873) (undo-tree-id3376 . -1) (#("t" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -24874) (undo-tree-id3377 . -1) (#("a" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -24875) (undo-tree-id3378 . -1) 24876 (24873 . 24876)) nil (25723 64194 378501 86000) 0 nil])
([nil nil ((#("  " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 1 2 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -24859) 24894) nil (25723 64251 920655 525000) 0 nil] [nil nil ((#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -24896) (undo-tree-id3375 . -2) 24898 (24895 . 24898) 24894) ((#("
  " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil) 1 3 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil)) . 24895) (undo-tree-id3382 . -1) (24896 . 24898)) (25723 64193 945407 599000) 0 nil])
([nil nil ((24893 . 24894) 24892) nil (25723 64251 920651 684000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 24859)) ((24859 . 24860)) (25723 64193 944989 804000) 0 nil])
([nil nil ((#("q" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -24894) (undo-tree-id3383 . -1) 24895 (24894 . 24895)) nil (25723 64251 920646 516000) 0 nil])
nil
([nil nil ((24907 . 24908) 24907) nil (25723 64251 920628 357000) 0 nil])
([nil nil ((24908 . 24909) 24908) nil (25723 64262 218325 208000) 0 nil])
([nil nil ((24908 . 24910)) nil (25723 64275 932830 408000) 0 nil] [nil nil ((24908 . 24912)) ((#("isrc" 0 4 (fontified t)) . 24908)) (25723 64261 586095 982000) 0 nil] [nil nil ((24908 . 25231)) ((#("(fset 'testing\\ the\\ macro
   (kmacro-lambda-form [?i ?s ?r ?c ?\\; ?x ?a ?e escape ?k ?A ?: ?t ?a backspace backspace backspace ?h ?t ?m ?l ?  ?: ?t ?a ?n ?g ?l ?e ?  ?t ?e ?s ?t ?. ?h ?t ?m ?l escape ?o escape ?k ?x ?j ?k ?u ?u ?< ?< ?o escape escape ?i ?q backspace ?\\M-x ?e ?n ?d backspace backspace backspace] 0 \"%d\"))
" 0 7 (fontified t) 7 26 (fontified t) 26 30 (fontified t) 30 50 (fontified t) 50 51 (fontified t) 51 312 (fontified t) 312 313 (fontified t) 313 314 (fontified t) 314 315 (fontified t) 315 316 (fontified t) 316 320 (fontified t) 320 321 (fontified t) 321 323 (fontified t)) . 24908) (undo-tree-id3384 . -323) (undo-tree-id3385 . -323) (undo-tree-id3386 . -323) (undo-tree-id3387 . -323)) (25723 64251 920610 338000) 0 nil])
([nil nil ((24908 . 24913)) nil (25723 64275 932827 614000) 0 nil])
([nil nil ((24928 . 24929) (24907 . 24928) (#(":" 0 1 (face org-block-end-line fontified nil)) . -24907) (undo-tree-id3392 . -1) (undo-tree-id3394 . -1) (undo-tree-id3396 . -1) (undo-tree-id3398 . -1) (#("t" 0 1 (face org-block-end-line fontified nil)) . -24908) (undo-tree-id3400 . -1) (undo-tree-id3402 . -1) (#("a" 0 1 (face org-block-end-line fontified nil)) . -24909) (undo-tree-id3404 . -1) 24910 (24907 . 24910)) ((#(":ta" 0 1 (face org-block-end-line fontified nil) 1 2 (face org-block-end-line fontified nil) 2 3 (face org-block-end-line fontified nil)) . 24907) (24907 . 24910) (#("html :tangle test.htm" 0 1 (fontified nil) 1 2 (fontified nil) 2 21 (fontified nil)) . 24907) (undo-tree-id3798 . -21) (undo-tree-id3799 . -21) (undo-tree-id3800 . -21) (undo-tree-id3801 . -21) (undo-tree-id3802 . -21) (undo-tree-id3803 . -21) (undo-tree-id3804 . -21) (undo-tree-id3805 . -21) (undo-tree-id3806 . -21) (undo-tree-id3807 . -21) (undo-tree-id3808 . -21) (undo-tree-id3809 . -21) (undo-tree-id3810 . -21) (undo-tree-id3811 . -21) (undo-tree-id3812 . -21) (undo-tree-id3813 . -21) (undo-tree-id3814 . -21) (undo-tree-id3815 . -21) (undo-tree-id3816 . -21) (undo-tree-id3817 . -21) (undo-tree-id3818 . -21) (undo-tree-id3819 . -21) (undo-tree-id3820 . -21) (undo-tree-id3821 . -21) (undo-tree-id3822 . -21) (undo-tree-id3823 . -21) (undo-tree-id3824 . -21) (undo-tree-id3825 . -21) (undo-tree-id3826 . -21) (undo-tree-id3827 . -21) (undo-tree-id3828 . -21) (undo-tree-id3829 . -21) (undo-tree-id3830 . -21) (undo-tree-id3831 . -21) (undo-tree-id3832 . -21) (undo-tree-id3833 . -21) (undo-tree-id3834 . -21) (undo-tree-id3835 . -21) (undo-tree-id3836 . -21) (undo-tree-id3837 . -21) (undo-tree-id3838 . -21) (undo-tree-id3839 . -21) (undo-tree-id3840 . -21) (undo-tree-id3841 . -21) (undo-tree-id3842 . -21) (undo-tree-id3843 . -21) (undo-tree-id3844 . -21) (undo-tree-id3845 . -21) (undo-tree-id3846 . -21) (undo-tree-id3847 . -21) (undo-tree-id3848 . -21) (undo-tree-id3849 . -21) (undo-tree-id3850 . -21) (undo-tree-id3851 . -21) (undo-tree-id3852 . -21) (undo-tree-id3853 . -21) (undo-tree-id3854 . -21) (undo-tree-id3855 . -21) (undo-tree-id3856 . -21) (undo-tree-id3857 . -21) (undo-tree-id3858 . -21) (undo-tree-id3859 . -21) (undo-tree-id3860 . -21) (undo-tree-id3861 . -21) (undo-tree-id3862 . -21) (undo-tree-id3863 . -21) (undo-tree-id3864 . -21) (undo-tree-id3865 . -21) (undo-tree-id3866 . -21) (undo-tree-id3867 . -21) (undo-tree-id3868 . -21) (undo-tree-id3869 . -21) (undo-tree-id3870 . -21) (undo-tree-id3871 . -21) (undo-tree-id3872 . -21) (undo-tree-id3873 . -21) (undo-tree-id3874 . -21) (undo-tree-id3875 . -21) (undo-tree-id3876 . -21) (undo-tree-id3877 . -21) (undo-tree-id3878 . -21) (undo-tree-id3879 . -21) (undo-tree-id3880 . -21) (undo-tree-id3881 . -21) (undo-tree-id3882 . -21) (undo-tree-id3883 . -21) (undo-tree-id3884 . -21) (undo-tree-id3885 . -21) (undo-tree-id3886 . -21) (undo-tree-id3887 . -21) (undo-tree-id3888 . -21) (undo-tree-id3889 . -21) (undo-tree-id3890 . -21) (undo-tree-id3891 . -21) (undo-tree-id3892 . -21) (undo-tree-id3893 . -21) (undo-tree-id3894 . -21) (undo-tree-id3895 . -21) (undo-tree-id3896 . -21) (undo-tree-id3897 . -21) (undo-tree-id3898 . -21) (undo-tree-id3899 . -21) (undo-tree-id3900 . -21) (undo-tree-id3901 . -21) (undo-tree-id3902 . -21) (undo-tree-id3903 . -21) (undo-tree-id3904 . -21) (undo-tree-id3905 . -21) (undo-tree-id3906 . -21) (undo-tree-id3907 . -21) (undo-tree-id3908 . -21) (undo-tree-id3909 . -21) (undo-tree-id3910 . -21) (undo-tree-id3911 . -21) (undo-tree-id3912 . -21) (undo-tree-id3913 . -21) (undo-tree-id3914 . -21) (undo-tree-id3915 . -21) (undo-tree-id3916 . -21) (undo-tree-id3917 . -21) (undo-tree-id3918 . -21) (undo-tree-id3919 . -21) (undo-tree-id3920 . -21) (undo-tree-id3921 . -21) (undo-tree-id3922 . -21) (undo-tree-id3923 . -21) (undo-tree-id3924 . -21) (undo-tree-id3925 . -21) (undo-tree-id3926 . -21) (undo-tree-id3927 . -21) (undo-tree-id3928 . -21) (undo-tree-id3929 . -21) (undo-tree-id3930 . -21) (undo-tree-id3931 . -21) (undo-tree-id3932 . -21) (undo-tree-id3933 . -21) (undo-tree-id3934 . -21) (undo-tree-id3935 . -21) (undo-tree-id3936 . -21) (undo-tree-id3937 . -21) (undo-tree-id3938 . -21) (undo-tree-id3939 . -21) (undo-tree-id3940 . -21) (undo-tree-id3941 . -21) (undo-tree-id3942 . -21) (undo-tree-id3943 . -21) (undo-tree-id3944 . -21) (undo-tree-id3945 . -21) (undo-tree-id3946 . -21) (undo-tree-id3947 . -21) (undo-tree-id3948 . -21) (undo-tree-id3949 . -21) (undo-tree-id3950 . -21) (undo-tree-id3951 . -21) (undo-tree-id3952 . -21) (undo-tree-id3953 . -21) (undo-tree-id3954 . -21) (undo-tree-id3955 . -21) (undo-tree-id3956 . -21) (undo-tree-id3957 . -21) (undo-tree-id3958 . -21) (undo-tree-id3959 . -21) (undo-tree-id3960 . -21) (undo-tree-id3961 . -21) (undo-tree-id3962 . -21) (undo-tree-id3963 . -21) (undo-tree-id3964 . -21) (undo-tree-id3965 . -21) (undo-tree-id3966 . -21) (undo-tree-id3967 . -21) (undo-tree-id3968 . -21) (undo-tree-id3969 . -21) (undo-tree-id3970 . -21) (undo-tree-id3971 . -21) (undo-tree-id3972 . -21) (undo-tree-id3973 . -21) (undo-tree-id3974 . -21) (undo-tree-id3975 . -21) (undo-tree-id3976 . -21) (undo-tree-id3977 . -21) (undo-tree-id3978 . -21) (undo-tree-id3979 . -21) (undo-tree-id3980 . -21) (undo-tree-id3981 . -21) (undo-tree-id3982 . -21) (undo-tree-id3983 . -21) (undo-tree-id3984 . -21) (undo-tree-id3985 . -21) (undo-tree-id3986 . -21) (undo-tree-id3987 . -21) (undo-tree-id3988 . -21) (undo-tree-id3989 . -21) (undo-tree-id3990 . -21) (undo-tree-id3991 . -21) (undo-tree-id3992 . -21) (undo-tree-id3993 . -21) (undo-tree-id3994 . -21) (undo-tree-id3995 . -21) (undo-tree-id3996 . -21) (undo-tree-id3997 . -21) (undo-tree-id3998 . -21) (undo-tree-id3999 . -21) (undo-tree-id4000 . -21) (undo-tree-id4001 . -21) (undo-tree-id4002 . -21) (undo-tree-id4003 . -21) (undo-tree-id4004 . -21) (undo-tree-id4005 . -21) (undo-tree-id4006 . -21) (undo-tree-id4007 . -21) (undo-tree-id4008 . -21) (undo-tree-id4009 . -21) (undo-tree-id4010 . -21) (undo-tree-id4011 . -21) (undo-tree-id4012 . -21) (undo-tree-id4013 . -21) (undo-tree-id4014 . -21) (undo-tree-id4015 . -21) (undo-tree-id4016 . -21) (undo-tree-id4017 . -21) (undo-tree-id4018 . -21) (undo-tree-id4019 . -21) (undo-tree-id4020 . -21) (undo-tree-id4021 . -21) (undo-tree-id4022 . -21) (undo-tree-id4023 . -21) (undo-tree-id4024 . -21) (undo-tree-id4025 . -21) (undo-tree-id4026 . -21) (undo-tree-id4027 . -21) (undo-tree-id4028 . -21) (undo-tree-id4029 . -21) (undo-tree-id4030 . -21) (undo-tree-id4031 . -21) (undo-tree-id4032 . -21) (undo-tree-id4033 . -21) (undo-tree-id4034 . -21) (undo-tree-id4035 . -21) (undo-tree-id4036 . -21) (undo-tree-id4037 . -21) (undo-tree-id4038 . -21) (undo-tree-id4039 . -21) (undo-tree-id4040 . -21) (undo-tree-id4041 . -21) (undo-tree-id4042 . -21) (undo-tree-id4043 . -21) (undo-tree-id4044 . -21) (undo-tree-id4045 . -21) (undo-tree-id4046 . -21) (undo-tree-id4047 . -21) (undo-tree-id4048 . -21) (undo-tree-id4049 . -21) (undo-tree-id4050 . -21) (undo-tree-id4051 . -21) (undo-tree-id4052 . -21) (undo-tree-id4053 . -21) (undo-tree-id4054 . -21) (undo-tree-id4055 . -21) (undo-tree-id4056 . -21) (undo-tree-id4057 . -21) (undo-tree-id4058 . -21) (undo-tree-id4059 . -21) (undo-tree-id4060 . -21) (undo-tree-id4061 . -21) (undo-tree-id4062 . -21) (undo-tree-id4063 . -21) (undo-tree-id4064 . -21) (undo-tree-id4065 . -21) (undo-tree-id4066 . -21) (undo-tree-id4067 . -21) (undo-tree-id4068 . -21) (undo-tree-id4069 . -21) (undo-tree-id4070 . -21) (undo-tree-id4071 . -21) (undo-tree-id4072 . -21) (undo-tree-id4073 . -21) (undo-tree-id4074 . -21) (undo-tree-id4075 . -21) (undo-tree-id4076 . -21) (undo-tree-id4077 . -21) (undo-tree-id4078 . -21) (undo-tree-id4079 . -21) (undo-tree-id4080 . -21) (undo-tree-id4081 . -21) (undo-tree-id4082 . -21) (undo-tree-id4083 . -21) (undo-tree-id4084 . -21) (undo-tree-id4085 . -21) (undo-tree-id4086 . -21) (undo-tree-id4087 . -21) (undo-tree-id4088 . -21) (undo-tree-id4089 . -21) (undo-tree-id4090 . -21) (undo-tree-id4091 . -21) (undo-tree-id4092 . -21) (undo-tree-id4093 . -21) (undo-tree-id4094 . -21) (undo-tree-id4095 . -21) (undo-tree-id4096 . -21) (undo-tree-id4097 . -21) (undo-tree-id4098 . -21) (undo-tree-id4099 . -21) (undo-tree-id4100 . -21) (undo-tree-id4101 . -21) (undo-tree-id4102 . -21) (undo-tree-id4103 . -21) (undo-tree-id4104 . -21) (undo-tree-id4105 . -21) (undo-tree-id4106 . -21) (undo-tree-id4107 . -21) (undo-tree-id4108 . -21) (undo-tree-id4109 . -21) (undo-tree-id4110 . -21) (undo-tree-id4111 . -21) (undo-tree-id4112 . -21) (undo-tree-id4113 . -21) (undo-tree-id4114 . -21) (undo-tree-id4115 . -21) (undo-tree-id4116 . -21) (undo-tree-id4117 . -21) (undo-tree-id4118 . -21) (undo-tree-id4119 . -21) (undo-tree-id4120 . -21) (undo-tree-id4121 . -21) (undo-tree-id4122 . -21) (undo-tree-id4123 . -21) (undo-tree-id4124 . -21) (undo-tree-id4125 . -21) (undo-tree-id4126 . -21) (undo-tree-id4127 . -21) (undo-tree-id4128 . -21) (undo-tree-id4129 . -21) (undo-tree-id4130 . -21) (undo-tree-id4131 . -21) (undo-tree-id4132 . -21) (undo-tree-id4133 . -21) (undo-tree-id4134 . -21) (undo-tree-id4135 . -21) (undo-tree-id4136 . -21) (undo-tree-id4137 . -21) (undo-tree-id4138 . -21) (undo-tree-id4139 . -21) (undo-tree-id4140 . -21) (undo-tree-id4141 . -21) (undo-tree-id4142 . -21) (undo-tree-id4143 . -21) (undo-tree-id4144 . -21) (undo-tree-id4145 . -21) (undo-tree-id4146 . -21) (undo-tree-id4147 . -21) (undo-tree-id4148 . -21) (undo-tree-id4149 . -21) (undo-tree-id4150 . -21) (undo-tree-id4151 . -21) (undo-tree-id4152 . -21) (undo-tree-id4153 . -21) (undo-tree-id4154 . -21) (undo-tree-id4155 . -21) (undo-tree-id4156 . -21) (undo-tree-id4157 . -21) (undo-tree-id4158 . -21) (undo-tree-id4159 . -21) (undo-tree-id4160 . -21) (undo-tree-id4161 . -21) (undo-tree-id4162 . -21) (undo-tree-id4163 . -21) (undo-tree-id4164 . -21) (undo-tree-id4165 . -21) (undo-tree-id4166 . -21) (undo-tree-id4167 . -21) (undo-tree-id4168 . -21) (undo-tree-id4169 . -21) (undo-tree-id4170 . -21) (undo-tree-id4171 . -21) (undo-tree-id4172 . -21) (undo-tree-id4173 . -21) (undo-tree-id4174 . -21) (undo-tree-id4175 . -21) (undo-tree-id4176 . -21) (undo-tree-id4177 . -21) (undo-tree-id4178 . -21) (undo-tree-id4179 . -21) (undo-tree-id4180 . -21) (undo-tree-id4181 . -21) (undo-tree-id4182 . -21) (undo-tree-id4183 . -21) (undo-tree-id4184 . -21) (undo-tree-id4185 . -21) (undo-tree-id4186 . -21) (undo-tree-id4187 . -21) (undo-tree-id4188 . -21) (undo-tree-id4189 . -21) (undo-tree-id4190 . -21) (undo-tree-id4191 . -21) (undo-tree-id4192 . -21) (undo-tree-id4193 . -21) (undo-tree-id4194 . -21) (undo-tree-id4195 . -21) (undo-tree-id4196 . -21) (undo-tree-id4197 . -21) (undo-tree-id4198 . -21) (undo-tree-id4199 . -21) (undo-tree-id4200 . -21) (undo-tree-id4201 . -21) (undo-tree-id4202 . -21) (undo-tree-id4203 . -21) (undo-tree-id4204 . -21) (undo-tree-id4205 . -21) (undo-tree-id4206 . -21) (undo-tree-id4207 . -21) (undo-tree-id4208 . -21) (undo-tree-id4209 . -21) (undo-tree-id4210 . -21) (undo-tree-id4211 . -21) (undo-tree-id4212 . -21) (undo-tree-id4213 . -21) (undo-tree-id4214 . -21) (undo-tree-id4215 . -21) (undo-tree-id4216 . -21) (undo-tree-id4217 . -21) (undo-tree-id4218 . -21) (undo-tree-id4219 . -21) (undo-tree-id4220 . -21) (undo-tree-id4221 . -21) (undo-tree-id4222 . -21) (undo-tree-id4223 . -21) (undo-tree-id4224 . -21) (undo-tree-id4225 . -21) (undo-tree-id4226 . -21) (undo-tree-id4227 . -21) (undo-tree-id4228 . -21) (undo-tree-id4229 . -21) (undo-tree-id4230 . -21) (undo-tree-id4231 . -21) (undo-tree-id4232 . -21) (undo-tree-id4233 . -21) (undo-tree-id4234 . -21) (undo-tree-id4235 . -21) (undo-tree-id4236 . -21) (undo-tree-id4237 . -21) (undo-tree-id4238 . -21) (undo-tree-id4239 . -21) (undo-tree-id4240 . -21) (undo-tree-id4241 . -21) (undo-tree-id4242 . -21) (undo-tree-id4243 . -21) (undo-tree-id4244 . -21) (undo-tree-id4245 . -21) (undo-tree-id4246 . -21) (undo-tree-id4247 . -21) (undo-tree-id4248 . -21) (undo-tree-id4249 . -21) (undo-tree-id4250 . -21) (undo-tree-id4251 . -21) (undo-tree-id4252 . -21) (undo-tree-id4253 . -21) (undo-tree-id4254 . -21) (undo-tree-id4255 . -21) (undo-tree-id4256 . -21) (undo-tree-id4257 . -21) (undo-tree-id4258 . -21) (undo-tree-id4259 . -21) (undo-tree-id4260 . -21) (undo-tree-id4261 . -21) (undo-tree-id4262 . -21) (undo-tree-id4263 . -21) (undo-tree-id4264 . -21) (undo-tree-id4265 . -21) (undo-tree-id4266 . -21) (undo-tree-id4267 . -21) (undo-tree-id4268 . -21) (undo-tree-id4269 . -21) (undo-tree-id4270 . -21) (undo-tree-id4271 . -21) (undo-tree-id4272 . -21) (undo-tree-id4273 . -21) (undo-tree-id4274 . -21) (undo-tree-id4275 . -21) (undo-tree-id4276 . -21) (undo-tree-id4277 . -21) (undo-tree-id4278 . -21) (undo-tree-id4279 . -21) (undo-tree-id4280 . -21) (undo-tree-id4281 . -21) (undo-tree-id4282 . -21) (undo-tree-id4283 . -21) (undo-tree-id4284 . -21) (undo-tree-id4285 . -21) (undo-tree-id4286 . -21) (undo-tree-id4287 . -21) (undo-tree-id4288 . -21) (undo-tree-id4289 . -21) (undo-tree-id4290 . -21) (undo-tree-id4291 . -21) (undo-tree-id4292 . -21) (undo-tree-id4293 . -21) (undo-tree-id4294 . -21) (undo-tree-id4295 . -21) (undo-tree-id4296 . -21) (undo-tree-id4297 . -21) (undo-tree-id4298 . -21) (undo-tree-id4299 . -21) (undo-tree-id4300 . -21) (undo-tree-id4301 . -21) (undo-tree-id4302 . -21) (undo-tree-id4303 . -21) (undo-tree-id4304 . -21) (undo-tree-id4305 . -21) (undo-tree-id4306 . -21) (undo-tree-id4307 . -21) (undo-tree-id4308 . -21) (undo-tree-id4309 . -21) (undo-tree-id4310 . -21) (undo-tree-id4311 . -21) (undo-tree-id4312 . -21) (undo-tree-id4313 . -21) (undo-tree-id4314 . -21) (undo-tree-id4315 . -21) (undo-tree-id4316 . -21) (undo-tree-id4317 . -21) (undo-tree-id4318 . -21) (undo-tree-id4319 . -21) (undo-tree-id4320 . -21) (undo-tree-id4321 . -21) (undo-tree-id4322 . -21) (undo-tree-id4323 . -21) (undo-tree-id4324 . -21) (undo-tree-id4325 . -21) (undo-tree-id4326 . -21) (undo-tree-id4327 . -21) (undo-tree-id4328 . -21) (undo-tree-id4329 . -21) (undo-tree-id4330 . -21) (undo-tree-id4331 . -21) (undo-tree-id4332 . -21) (undo-tree-id4333 . -21) (undo-tree-id4334 . -21) (undo-tree-id4335 . -21) (undo-tree-id4336 . -21) (undo-tree-id4337 . -21) (undo-tree-id4338 . -21) (undo-tree-id4339 . -21) (undo-tree-id4340 . -21) (undo-tree-id4341 . -21) (undo-tree-id4342 . -21) (undo-tree-id4343 . -21) (undo-tree-id4344 . -21) (undo-tree-id4345 . -21) (undo-tree-id4346 . -21) (undo-tree-id4347 . -21) (undo-tree-id4348 . -21) (undo-tree-id4349 . -21) (undo-tree-id4350 . -21) (undo-tree-id4351 . -21) (undo-tree-id4352 . -21) (undo-tree-id4353 . -21) (undo-tree-id4354 . -21) (undo-tree-id4355 . -21) (undo-tree-id4356 . -21) (undo-tree-id4357 . -21) (undo-tree-id4358 . -21) (undo-tree-id4359 . -21) (undo-tree-id4360 . -21) (undo-tree-id4361 . -21) (undo-tree-id4362 . -21) (undo-tree-id4363 . -21) (undo-tree-id4364 . -21) (undo-tree-id4365 . -21) (undo-tree-id4366 . -21) (undo-tree-id4367 . -21) (undo-tree-id4368 . -21) (undo-tree-id4369 . -21) (undo-tree-id4370 . -21) (undo-tree-id4371 . -21) (undo-tree-id4372 . -21) (undo-tree-id4373 . -21) (undo-tree-id4374 . -21) (undo-tree-id4375 . -21) (undo-tree-id4376 . -21) (undo-tree-id4377 . -21) (undo-tree-id4378 . -21) (undo-tree-id4379 . -21) (undo-tree-id4380 . -21) (undo-tree-id4381 . -21) (undo-tree-id4382 . -21) (undo-tree-id4383 . -21) (undo-tree-id4384 . -21) (undo-tree-id4385 . -21) (undo-tree-id4386 . -21) (undo-tree-id4387 . -21) (undo-tree-id4388 . -21) (undo-tree-id4389 . -21) (undo-tree-id4390 . -21) (undo-tree-id4391 . -21) (undo-tree-id4392 . -21) (undo-tree-id4393 . -21) (undo-tree-id4394 . -21) (undo-tree-id4395 . -21) (undo-tree-id4396 . -21) (undo-tree-id4397 . -21) (undo-tree-id4398 . -21) (undo-tree-id4399 . -21) (undo-tree-id4400 . -21) (undo-tree-id4401 . -21) (undo-tree-id4402 . -21) (undo-tree-id4403 . -21) (undo-tree-id4404 . -21) (undo-tree-id4405 . -21) (undo-tree-id4406 . -21) (undo-tree-id4407 . -21) (undo-tree-id4408 . -21) (undo-tree-id4409 . -21) (undo-tree-id4410 . -21) (undo-tree-id4411 . -21) (undo-tree-id4412 . -21) (undo-tree-id4413 . -21) (undo-tree-id4414 . -21) (undo-tree-id4415 . -21) (undo-tree-id4416 . -21) (undo-tree-id4417 . -21) (undo-tree-id4418 . -21) (undo-tree-id4419 . -21) (undo-tree-id4420 . -21) (undo-tree-id4421 . -21) (undo-tree-id4422 . -21) (undo-tree-id4423 . -21) (undo-tree-id4424 . -21) (undo-tree-id4425 . -21) (undo-tree-id4426 . -21) (undo-tree-id4427 . -21) (undo-tree-id4428 . -21) (undo-tree-id4429 . -21) (undo-tree-id4430 . -21) (undo-tree-id4431 . -21) (undo-tree-id4432 . -21) (undo-tree-id4433 . -21) (undo-tree-id4434 . -21) (undo-tree-id4435 . -21) (undo-tree-id4436 . -21) (undo-tree-id4437 . -21) (undo-tree-id4438 . -21) (undo-tree-id4439 . -21) (undo-tree-id4440 . -21) (undo-tree-id4441 . -21) (undo-tree-id4442 . -21) (undo-tree-id4443 . -21) (undo-tree-id4444 . -21) (undo-tree-id4445 . -21) (undo-tree-id4446 . -21) (undo-tree-id4447 . -21) (undo-tree-id4448 . -21) (undo-tree-id4449 . -21) (undo-tree-id4450 . -21) (undo-tree-id4451 . -21) (undo-tree-id4452 . -21) (undo-tree-id4453 . -21) (undo-tree-id4454 . -21) (undo-tree-id4455 . -21) (undo-tree-id4456 . -21) (undo-tree-id4457 . -21) (undo-tree-id4458 . -21) (undo-tree-id4459 . -21) (undo-tree-id4460 . -21) (undo-tree-id4461 . -21) (undo-tree-id4462 . -21) (undo-tree-id4463 . -21) (undo-tree-id4464 . -21) (undo-tree-id4465 . -21) (undo-tree-id4466 . -21) (undo-tree-id4467 . -21) (undo-tree-id4468 . -21) (undo-tree-id4469 . -21) (undo-tree-id4470 . -21) (undo-tree-id4471 . -21) (undo-tree-id4472 . -21) (undo-tree-id4473 . -21) (undo-tree-id4474 . -21) (undo-tree-id4475 . -21) (undo-tree-id4476 . -21) (undo-tree-id4477 . -21) (undo-tree-id4478 . -21) (undo-tree-id4479 . -21) (undo-tree-id4480 . -21) (undo-tree-id4481 . -21) (undo-tree-id4482 . -21) (undo-tree-id4483 . -21) (undo-tree-id4484 . -21) (undo-tree-id4485 . -21) (undo-tree-id4486 . -21) (undo-tree-id4487 . -21) (undo-tree-id4488 . -21) (undo-tree-id4489 . -21) (undo-tree-id4490 . -21) (undo-tree-id4491 . -21) (undo-tree-id4492 . -21) (undo-tree-id4493 . -21) (undo-tree-id4494 . -21) (undo-tree-id4495 . -21) (undo-tree-id4496 . -21) (undo-tree-id4497 . -21) (undo-tree-id4498 . -21) (undo-tree-id4499 . -21) (undo-tree-id4500 . -21) (undo-tree-id4501 . -21) (undo-tree-id4502 . -21) (undo-tree-id4503 . -21) (undo-tree-id4504 . -21) (undo-tree-id4505 . -21) (undo-tree-id4506 . -21) (undo-tree-id4507 . -21) (undo-tree-id4508 . -21) (undo-tree-id4509 . -21) (undo-tree-id4510 . -21) (undo-tree-id4511 . -21) (undo-tree-id4512 . -21) (undo-tree-id4513 . -21) (undo-tree-id4514 . -21) (undo-tree-id4515 . -21) (undo-tree-id4516 . -21) (undo-tree-id4517 . -21) (undo-tree-id4518 . -21) (undo-tree-id4519 . -21) (undo-tree-id4520 . -21) (undo-tree-id4521 . -21) (undo-tree-id4522 . -21) (undo-tree-id4523 . -21) (undo-tree-id4524 . -21) (undo-tree-id4525 . -21) (undo-tree-id4526 . -21) (undo-tree-id4527 . -21) (undo-tree-id4528 . -21) (undo-tree-id4529 . -21) (undo-tree-id4530 . -21) (undo-tree-id4531 . -21) (undo-tree-id4532 . -21) (undo-tree-id4533 . -21) (undo-tree-id4534 . -21) (undo-tree-id4535 . -21) (undo-tree-id4536 . -21) (undo-tree-id4537 . -21) (undo-tree-id4538 . -21) (undo-tree-id4539 . -21) (undo-tree-id4540 . -21) (undo-tree-id4541 . -21) (undo-tree-id4542 . -21) (undo-tree-id4543 . -21) (undo-tree-id4544 . -21) (undo-tree-id4545 . -21) (undo-tree-id4546 . -21) (undo-tree-id4547 . -21) (undo-tree-id4548 . -21) (undo-tree-id4549 . -21) (undo-tree-id4550 . -21) (undo-tree-id4551 . -21) (undo-tree-id4552 . -21) (undo-tree-id4553 . -21) (undo-tree-id4554 . -21) (undo-tree-id4555 . -21) (undo-tree-id4556 . -21) (undo-tree-id4557 . -21) (undo-tree-id4558 . -21) (undo-tree-id4559 . -21) (undo-tree-id4560 . -21) (undo-tree-id4561 . -21) (undo-tree-id4562 . -21) (undo-tree-id4563 . -21) (undo-tree-id4564 . -21) (undo-tree-id4565 . -21) (undo-tree-id4566 . -21) (undo-tree-id4567 . -21) (undo-tree-id4568 . -21) (undo-tree-id4569 . -21) (undo-tree-id4570 . -21) (undo-tree-id4571 . -21) (undo-tree-id4572 . -21) (undo-tree-id4573 . -21) (undo-tree-id4574 . -21) (undo-tree-id4575 . -21) (undo-tree-id4576 . -21) (undo-tree-id4577 . -21) (undo-tree-id4578 . -21) (undo-tree-id4579 . -21) (undo-tree-id4580 . -21) (undo-tree-id4581 . -21) (undo-tree-id4582 . -21) (undo-tree-id4583 . -21) (undo-tree-id4584 . -21) (undo-tree-id4585 . -21) (undo-tree-id4586 . -21) (undo-tree-id4587 . -21) (undo-tree-id4588 . -21) (undo-tree-id4589 . -21) (undo-tree-id4590 . -21) (undo-tree-id4591 . -21) (undo-tree-id4592 . -21) (undo-tree-id4593 . -21) (undo-tree-id4594 . -21) (undo-tree-id4595 . -21) (undo-tree-id4596 . -21) (undo-tree-id4597 . -21) (undo-tree-id4598 . -21) (undo-tree-id4599 . -21) (undo-tree-id4600 . -21) (undo-tree-id4601 . -21) (undo-tree-id4602 . -21) (undo-tree-id4603 . -21) (undo-tree-id4604 . -21) (undo-tree-id4605 . -21) (undo-tree-id4606 . -21) (undo-tree-id4607 . -21) (undo-tree-id4608 . -21) (undo-tree-id4609 . -21) (undo-tree-id4610 . -21) (undo-tree-id4611 . -21) (undo-tree-id4612 . -21) (undo-tree-id4613 . -21) (undo-tree-id4614 . -21) (undo-tree-id4615 . -21) (undo-tree-id4616 . -21) (undo-tree-id4617 . -21) (undo-tree-id4618 . -21) (undo-tree-id4619 . -21) (undo-tree-id4620 . -21) (undo-tree-id4621 . -21) (undo-tree-id4622 . -21) (undo-tree-id4623 . -21) (undo-tree-id4624 . -21) (undo-tree-id4625 . -21) (undo-tree-id4626 . -21) (undo-tree-id4627 . -21) (undo-tree-id4628 . -21) (undo-tree-id4629 . -21) (undo-tree-id4630 . -21) (undo-tree-id4631 . -21) (undo-tree-id4632 . -21) (undo-tree-id4633 . -21) (undo-tree-id4634 . -21) (undo-tree-id4635 . -21) (undo-tree-id4636 . -21) (undo-tree-id4637 . -21) (undo-tree-id4638 . -21) (undo-tree-id4639 . -21) (undo-tree-id4640 . -21) (undo-tree-id4641 . -21) (undo-tree-id4642 . -21) (undo-tree-id4643 . -21) (undo-tree-id4644 . -21) (undo-tree-id4645 . -21) (undo-tree-id4646 . -21) (undo-tree-id4647 . -21) (undo-tree-id4648 . -21) (undo-tree-id4649 . -21) (undo-tree-id4650 . -21) (undo-tree-id4651 . -21) (undo-tree-id4652 . -21) (undo-tree-id4653 . -21) (undo-tree-id4654 . -21) (undo-tree-id4655 . -21) (undo-tree-id4656 . -21) (undo-tree-id4657 . -21) (undo-tree-id4658 . -21) (undo-tree-id4659 . -21) (undo-tree-id4660 . -21) (undo-tree-id4661 . -21) (undo-tree-id4662 . -21) (undo-tree-id4663 . -21) (undo-tree-id4664 . -21) (undo-tree-id4665 . -21) (undo-tree-id4666 . -21) (undo-tree-id4667 . -21) (undo-tree-id4668 . -21) (undo-tree-id4669 . -21) (undo-tree-id4670 . -21) (undo-tree-id4671 . -21) (undo-tree-id4672 . -21) (undo-tree-id4673 . -21) (undo-tree-id4674 . -21) (undo-tree-id4675 . -21) (undo-tree-id4676 . -21) (undo-tree-id4677 . -21) (undo-tree-id4678 . -21) (#("l" 0 1 (fontified t)) . 24928) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1)) (25723 64260 956846 352000) 0 nil])
nil
([nil nil ((24928 . 24929) (24907 . 24928) (#(":" 0 1 (face org-block-end-line fontified nil)) . -24907) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (#("t" 0 1 (face org-block-end-line fontified nil)) . -24908) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (#("a" 0 1 (face org-block-end-line fontified nil)) . -24909) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) 24910 (24907 . 24910)) nil (25723 64275 933337 810000) 0 nil])
([nil nil ((24929 . 24930) 24928) ((#("
" 0 1 (fontified t)) . 24929) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1)) (25723 64259 922012 134000) 0 nil] [nil nil ((24929 . 24930) 24928) ((#("
" 0 1 (fontified nil)) . 24929) (undo-tree-id3405 . -1)) (25723 64255 282653 354000) 0 nil])
([nil nil ((24929 . 24930) 24928) nil (25723 64348 12156 801000) 0 nil] [nil nil ((24929 . 24930) 24928) ((#("
" 0 1 (fontified nil)) . 24929) (undo-tree-id5080 . -1)) (25723 64275 933017 235000) 0 nil])
([nil nil ((24930 . 25088) (#("q" 0 1 (fontified nil)) . -24930) 24931 (24930 . 24931)) ((#("q" 0 1 (fontified nil)) . 24930) (24930 . 24931) (#("(fset 'testing
   (kmacro-lambda-form [escape ?p ?k ?k ?k ?y ?y ?j ?j ?j ?j ?j ?k ?p ?k ?k ?V ?j ?j ?d ?k ?p ?k ?i escape ?j ?j ?i escape ?i escape] 0 \"%d\"))
" 0 7 (fontified t) 7 14 (fontified t) 14 18 (fontified t) 18 38 (fontified t) 38 39 (fontified t) 39 147 (fontified t) 147 148 (fontified t) 148 149 (fontified t) 149 150 (fontified t) 150 151 (fontified t) 151 155 (fontified t) 155 156 (fontified t) 156 158 (fontified t)) . 24930) (undo-tree-id3406 . -15) (undo-tree-id3407 . -158) (undo-tree-id3408 . -158) (undo-tree-id3409 . -15) (undo-tree-id3410 . -15) (undo-tree-id3411 . -15)) (25723 64259 921620 41000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 24907) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1)) ((24907 . 24908)) (25723 64255 282439 288000) 0 nil])
([nil nil ((24930 . 25088) (#("q" 0 1 (fontified nil)) . -24930) 24931 (24930 . 24931)) nil (25723 64348 12151 982000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 24907) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1)) ((24907 . 24908)) (25723 64275 932757 214000) 0 nil])
nil
nil
([nil nil ((#("html :tangle test.html
(fset 'testing
   (kmacro-lambda-form [escape ?p ?k ?k ?k ?y ?y ?j ?j ?j ?j ?j ?k ?p ?k ?k ?V ?j ?j ?d ?k ?p ?k ?i escape ?j ?j ?i escape ?i escape] 0 \"%d\"))

 isrc  
" 0 1 (fontified t) 1 2 (fontified t) 2 22 (fontified t) 22 23 (fontified t) 23 30 (fontified t) 30 37 (fontified t) 37 41 (fontified t) 41 61 (fontified t) 61 62 (fontified t) 62 170 (fontified t) 170 171 (fontified t) 171 172 (fontified t) 172 173 (fontified t) 173 174 (fontified t) 174 178 (fontified t) 178 179 (fontified t) 179 181 (fontified t) 181 182 (fontified t) 182 187 (fontified t) 187 189 (fontified t) 189 190 (fontified t)) . 24907) (undo-tree-id5093 . 9) (undo-tree-id5094 . -189) (undo-tree-id5095 . -182) (undo-tree-id5096 . -182) (undo-tree-id5097 . -182) (undo-tree-id5098 . -190) (undo-tree-id5099 . -181) (undo-tree-id5100 . -182) (undo-tree-id5101 . -182) 25089) nil (25723 64348 12145 836000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 25243 . 25244) (nil fontified nil 24894 . 25244) (24894 . 25244)) nil (25723 64348 12124 813000) 0 nil])
([nil nil ((#("test." 0 5 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 24884) (undo-tree-id5088 . -4) (undo-tree-id5089 . -4) (undo-tree-id5090 . -4) (undo-tree-id5091 . -4) (undo-tree-id5092 . -4) 24888) nil (25723 64348 12119 86000) 0 nil])
([nil nil ((24884 . 24885)) nil (25723 64348 12104 70000) 0 nil])
([nil nil ((24898 . 24904) (#("+" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -24898) (undo-tree-id5081 . -1) 24899 (24898 . 24899) (#("-" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -24898) (undo-tree-id5082 . -1) (#("h" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -24899) (undo-tree-id5083 . -1) 24900 (24892 . 24900) (#("+" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -24892) (undo-tree-id5084 . -1) 24893 (24892 . 24893) (#("+" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -24892) (undo-tree-id5085 . -1) (#("c" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -24893) (undo-tree-id5086 . -1) 24894 (24884 . 24894) (#("c" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -24884) (undo-tree-id5087 . -1) 24885 (24884 . 24885)) nil (25723 64348 12089 683000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25367 . 25368) (#("
" 0 1 (fontified nil face (org-block) font-lock-multiline t src-block t font-lock-fontified t)) . -25467) (25367 . 25468) 25274 (t 25723 64348 69888 900000)) nil (25723 64592 118852 24000) 0 nil])
([nil nil ((25471 . 25477) (25469 . 25471) (#("=" 0 1 (font-lock-fontified t fontified t)) . -25469) (undo-tree-id5103 . -1) 25470 (25468 . 25470) (25467 . 25468) 25459) nil (25723 64592 118844 411000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -25368) (undo-tree-id5102 . -4) 25372 (25367 . 25372) 25280) nil (25723 64592 118586 765000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25520 . 25521) (nil fontified nil 25368 . 25521) (25368 . 25521)) nil (25723 64592 118378 7000) 0 nil])
([nil nil ((25621 . 25622) 25613) nil (25723 64592 118372 280000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25896 . 25897) (nil fontified nil 25622 . 25897) (25622 . 25897)) nil (25723 64592 118300 762000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25997 . 25998) (#("
" 0 1 (fontified nil face org-block-end-line)) . -26383) (25997 . 26384) 25908 (t 25723 64592 181241 912000)) nil (25723 64667 1144 588000) 0 nil])
([nil nil ((26089 . 26090) (26088 . 26089) (#(" " 0 1 (fontified t)) . -26088) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (#("t" 0 1 (fontified t)) . -26089) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (#("o" 0 1 (fontified t)) . -26090) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (#(" " 0 1 (fontified t)) . -26091) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (#("a" 0 1 (fontified t)) . -26092) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (#("s" 0 1 (fontified t)) . -26093) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (#("k" 0 1 (fontified t)) . -26094) (undo-tree-id5201 . -1) (#(" " 0 1 (fontified t)) . -26095) (undo-tree-id5202 . -1) 26096 (26085 . 26096) (26078 . 26085) (#("r" 0 1 (fontified t)) . -26078) (undo-tree-id5203 . -1) (#("e" 0 1 (fontified t)) . -26079) (undo-tree-id5204 . -1) 26080 (26072 . 26080) (#("e" 0 1 (fontified t)) . -26072) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) 26073 (26052 . 26073) (26045 . 26052) (#("e" 0 1 (fontified t)) . -26045) (undo-tree-id5207 . -1) (#("r" 0 1 (fontified t)) . -26046) (undo-tree-id5208 . -1) (#("t" 0 1 (fontified t)) . -26047) (undo-tree-id5209 . -1) 26048 (26036 . 26048) (#("s" 0 1 (fontified t)) . -26036) (undo-tree-id5210 . -1) (#(" " 0 1 (fontified t)) . -26037) (undo-tree-id5211 . -1) 26038 (26023 . 26038) (#("u" 0 1 (fontified t)) . -26023) (undo-tree-id5212 . -1) (#("c" 0 1 (fontified t)) . -26024) (undo-tree-id5213 . -1) (#("l" 0 1 (fontified t)) . -26025) (undo-tree-id5214 . -1) 26026 (26023 . 26026) (26002 . 26023) (25997 . 26002) 25908) nil (25723 64667 1128 106000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26317 . 26318) (nil fontified nil 26191 . 26318) (26191 . 26318) (#("console.log(document.doctype); // logs DocumentType {nodeType=10, ownerDocument=document, ...}

console.log(document.documentElement); // logs <html lang=\"en\">

console.log(document.head); // logs <head>

console.log(document.body); // logs <body>

" 0 144 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 144 148 (face (font-lock-function-name-face org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 148 149 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 149 153 (face (font-lock-variable-name-face org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 153 154 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 154 158 (face (font-lock-string-face org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 158 198 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 198 202 (face (font-lock-function-name-face org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 202 242 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 242 246 (face (font-lock-function-name-face org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 246 249 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . 26191) (undo-tree-id5104 . -248) (undo-tree-id5105 . -249) (undo-tree-id5106 . -248) (undo-tree-id5107 . -248) (undo-tree-id5108 . -249) (undo-tree-id5109 . -248) (undo-tree-id5110 . -249) (undo-tree-id5111 . -248) (undo-tree-id5112 . -249) (undo-tree-id5113 . -248) (undo-tree-id5114 . -248) (undo-tree-id5115 . -248) (undo-tree-id5116 . -248) (undo-tree-id5117 . -248) (undo-tree-id5118 . -248) (undo-tree-id5119 . -248) (undo-tree-id5120 . -248) (undo-tree-id5121 . -248) (undo-tree-id5122 . -248) (undo-tree-id5123 . -248) (undo-tree-id5124 . -248) (undo-tree-id5125 . -248) (undo-tree-id5126 . -248) (undo-tree-id5127 . -248) (undo-tree-id5128 . -248) (undo-tree-id5129 . -248) (undo-tree-id5130 . -248) (undo-tree-id5131 . -248) (undo-tree-id5132 . -248) (undo-tree-id5133 . -248) (undo-tree-id5134 . -248) (undo-tree-id5135 . -248) (undo-tree-id5136 . -248) (undo-tree-id5137 . -248) (undo-tree-id5138 . -248) (undo-tree-id5139 . -248) (undo-tree-id5140 . -248) (undo-tree-id5141 . -248) (undo-tree-id5142 . -248) (undo-tree-id5143 . -248) (undo-tree-id5144 . -248) (undo-tree-id5145 . -248) (undo-tree-id5146 . -248) (undo-tree-id5147 . -248) (undo-tree-id5148 . -248) (undo-tree-id5149 . -248) (undo-tree-id5150 . -248) (undo-tree-id5151 . -248) (undo-tree-id5152 . -248) (undo-tree-id5153 . -248) (undo-tree-id5154 . -248) (undo-tree-id5155 . -248) (undo-tree-id5156 . -248) (undo-tree-id5157 . -248) (undo-tree-id5158 . -248) (undo-tree-id5159 . -248) (undo-tree-id5160 . -248) (undo-tree-id5161 . -248) (undo-tree-id5162 . -248) (undo-tree-id5163 . -248) (undo-tree-id5164 . -248) (undo-tree-id5165 . -248) (undo-tree-id5166 . -248) (undo-tree-id5167 . -248) (undo-tree-id5168 . -248) (undo-tree-id5169 . -248) (undo-tree-id5170 . -248) (undo-tree-id5171 . -248) (undo-tree-id5172 . -248) (undo-tree-id5173 . -248) (undo-tree-id5174 . -248) (undo-tree-id5175 . -248) (undo-tree-id5176 . -248) (undo-tree-id5177 . -248) (undo-tree-id5178 . -248) (undo-tree-id5179 . -248) (undo-tree-id5180 . -248) (undo-tree-id5181 . -248) (undo-tree-id5182 . -248) (undo-tree-id5183 . -248) (undo-tree-id5184 . -248) (undo-tree-id5185 . -248) (undo-tree-id5186 . -249) (undo-tree-id5187 . -249) (undo-tree-id5188 . -249) 26440) nil (25723 64667 1057 565000) 0 nil])
([nil nil ((26130 . 26134) (#("h" 0 1 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . -26130) (undo-tree-id5215 . -1) (#("t" 0 1 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . -26131) (undo-tree-id5216 . -1) 26132 (26119 . 26132) (#(" " 0 1 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . -26119) (undo-tree-id5217 . -1) (#("f" 0 1 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . -26120) (undo-tree-id5218 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . -26121) (undo-tree-id5219 . -1) (#("r" 0 1 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . -26122) (undo-tree-id5220 . -1) 26123 (26115 . 26123) (#(" document_child_nodes" 0 21 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t)) . 26115) (undo-tree-id5221 . 19) (undo-tree-id5222 . -20) (undo-tree-id5223 . -20) (undo-tree-id5224 . -20) (undo-tree-id5225 . -20) 26135 (t 25723 64667 70243 757000)) nil (25723 64693 259150 340000) 0 nil])
([nil nil ((26353 . 26354) 26358 (t 25723 64693 318592 541000)) nil (25723 64979 734436 773000) 0 nil])
([nil nil ((26353 . 26359) (#("
*** 2" 0 1 (fontified t) 1 3 (keymap (keymap) face org-hide fontified t) 3 4 (face org-level-3 keymap (keymap) composition (2 1 [10040]) fontified t) 4 5 (face org-level-3 keymap (keymap) fontified t) 5 6 (face org-level-3 fontified t)) . 26353)) nil (25723 64979 734431 605000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -26353) (undo-tree-id5268 . -1) 26354 (26353 . 26354)) nil (25723 64979 734426 297000) 0 nil])
([nil nil ((26352 . 26353) (#("
" 0 1 (face org-block-end-line fontified t)) . -26352) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) 26353 (#("ii" 0 2 (fontified t)) . -26353) (undo-tree-id5266 . -1) (undo-tree-id5267 . -2) 26355 (26354 . 26355) (26353 . 26354)) nil (25723 64979 734410 24000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -26420) (undo-tree-id5258 . -4) 26424 (26419 . 26424) 26354) nil (25723 64979 734104 955000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26420 . 26421) (#("
" 0 1 (fontified nil face org-block-end-line font-lock-fontified t)) . -26682) (26420 . 26683)) nil (25723 64979 734096 853000) 0 nil])
([nil nil ((26627 . 26630) (26621 . 26627) (26610 . 26621) (26609 . 26610) (26588 . 26609) (#("c" 0 1 (fontified t)) . -26588) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (#("n" 0 1 (fontified t)) . -26589) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (#("e" 0 1 (fontified t)) . -26590) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) 26591 (26585 . 26591) (26572 . 26585) (26551 . 26572) (26530 . 26551) (#("c" 0 1 (fontified t)) . -26530) (undo-tree-id5249 . -1) 26531 (26523 . 26531) (26522 . 26523) (26513 . 26522) (26510 . 26513) (#("y" 0 1 (fontified t)) . -26510) (undo-tree-id5250 . -1) (#("s" 0 1 (fontified t)) . -26511) (undo-tree-id5251 . -1) 26512 (26491 . 26512) (#("u" 0 1 (fontified t)) . -26491) (undo-tree-id5252 . -1) (#("c" 0 1 (fontified t)) . -26492) (undo-tree-id5253 . -1) 26493 (26489 . 26493) (#("o" 0 1 (fontified t)) . -26489) (undo-tree-id5254 . -1) (#("d" 0 1 (fontified t)) . -26490) (undo-tree-id5255 . -1) 26491 (26480 . 26491) (#(" " 0 1 (fontified t)) . -26480) (undo-tree-id5256 . -1) 26481 (26475 . 26481) (26469 . 26475) (26448 . 26469) (26441 . 26448) (26434 . 26441) (#("s" 0 1 (fontified t)) . -26434) (undo-tree-id5257 . -1) 26435 (26430 . 26435) (26420 . 26430)) nil (25723 64979 734082 186000) 0 nil])
([nil nil ((#("
console.log(document.implementation.hasFeature('Core','2.0'));
console.log(document.implementation.hasFeature('Core','3.0')); </script>

" 0 126 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 126 127 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t rear-nonsticky t) 127 129 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 129 135 (face (font-lock-function-name-face org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t) 135 138 (face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . 26729) (undo-tree-id5236 . -137) (undo-tree-id5237 . -137) (undo-tree-id5238 . -137) (undo-tree-id5239 . -138) (undo-tree-id5240 . -137) (undo-tree-id5241 . -137) (undo-tree-id5242 . -137) 26866) nil (25723 64979 734027 291000) 0 nil])
([nil nil ((26728 . 26729) 26720) nil (25723 64979 734007 665000) 0 nil])
([nil nil ((26732 . 26738) (26729 . 26732)) nil (25723 64979 734002 916000) 0 nil])
([nil nil ((#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -26737) (undo-tree-id5235 . -1) 26738) nil (25723 64979 733998 167000) 0 nil])
([nil nil ((26740 . 26751) (26737 . 26740)) nil (25723 64979 733992 160000) 0 nil])
([nil nil ((26751 . 26752)) nil (25723 64979 733988 808000) 0 nil])
([nil nil ((#("." 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -26751) (undo-tree-id5234 . -1) 26752) nil (25723 64979 733984 59000) 0 nil])
([nil nil ((26757 . 26762) (26751 . 26757)) nil (25723 64979 733977 773000) 0 nil])
([nil nil ((26767 . 26776) (26762 . 26767)) nil (25723 64979 733973 862000) 0 nil])
([nil nil ((#("/" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -26769) (undo-tree-id5227 . -1) (#("a" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -26770) (undo-tree-id5228 . -1) (#("c" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -26771) (undo-tree-id5229 . -1) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -26772) (undo-tree-id5230 . -1) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -26773) (undo-tree-id5231 . -1) (#("v" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -26774) (undo-tree-id5232 . -1) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -26775) (undo-tree-id5233 . -1) 26776) nil (25723 64979 733965 271000) 0 nil])
([nil nil ((26769 . 26771)) nil (25723 64979 733943 900000) 0 nil])
([nil nil ((26771 . 26772)) nil (25723 64979 733940 547000) 0 nil])
([nil nil ((26772 . 26773)) nil (25723 64979 733937 195000) 0 nil])
([nil nil ((26773 . 26784)) nil (25723 64979 733934 331000) 0 nil])
([nil nil ((26789 . 26794) (26784 . 26789)) nil (25723 64979 733930 560000) 0 nil])
([nil nil ((#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -26793) (undo-tree-id5226 . -1) 26794) nil (25723 64979 733925 392000) 0 nil])
([nil nil ((26797 . 26807) (26793 . 26797)) nil (25723 64979 733906 185000) 0 nil])
([nil nil ((26807 . 26808)) nil (25723 64979 733900 947000) 0 nil])
([nil nil ((26808 . 26809)) nil (25723 64979 733774 673000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26809 . 26810) (#("
" 0 1 (fontified nil face (org-block) font-lock-multiline t src-block t font-lock-fontified t)) . -26818) (26809 . 26819) 26780 (t 25723 64979 794336 836000)) nil (25723 64996 875 517000) 0 nil])
([nil nil ((26811 . 26812)) nil (25723 64996 870 209000) 0 nil])
([nil nil ((26845 . 26846) 26836) nil (25723 64996 866 438000) 0 nil])
([nil nil ((26846 . 26848)) nil (25723 64996 861 758000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -26846) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (#("x" 0 1 (fontified t)) . -26847) (undo-tree-id5275 . -1) 26848) nil (25723 64996 856 590000) 0 nil])
([nil nil ((26846 . 26849)) nil (25723 64996 843 739000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -26846) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (#("x" 0 1 (fontified t)) . -26847) (undo-tree-id5271 . -1) (#("." 0 1 (fontified t)) . -26848) (undo-tree-id5272 . -1) 26849) nil (25723 64996 831 936000) 0 nil])
([nil nil ((26924 . 26925) (26905 . 26924) (26894 . 26905) (26873 . 26894) (#("k" 0 1 (fontified t)) . -26873) (undo-tree-id5295 . -1) 26874 (26855 . 26874) (#("t" 0 1 (fontified t)) . -26855) (undo-tree-id5296 . -1) (#("n" 0 1 (fontified t)) . -26856) (undo-tree-id5297 . -1) 26857 (26856 . 26857) (#("n" 0 1 (fontified t)) . -26856) (undo-tree-id5298 . -1) 26857 (26853 . 26857) (#("a" 0 1 (fontified t)) . -26853) (undo-tree-id5299 . -1) 26854 (26847 . 26854) (26846 . 26847) (t 25723 64996 58546 646000) 26355) nil (25723 65181 987113 379000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -26925) (undo-tree-id5294 . -1) 26926 (26925 . 26926)) nil (25723 65181 987095 359000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 26947) (undo-tree-id5293 . -3) (26925 . 26947) 26928 (26925 . 26928)) nil (25723 65181 987088 794000) 0 nil])
([nil nil ((26991 . 27003) (26970 . 26991) (#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -26970) (undo-tree-id5276 . -1) (#("m" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -26971) (undo-tree-id5277 . -1) 26972 (26971 . 26972) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -26971) (undo-tree-id5278 . -1) (#("m" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -26972) (undo-tree-id5279 . -1) (#("t" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -26973) (undo-tree-id5280 . -1) 26974 (26970 . 26974) (26969 . 26970) (#("m" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -26969) (undo-tree-id5281 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -26970) (undo-tree-id5282 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -26971) (undo-tree-id5283 . -1) (#("n" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -26972) (undo-tree-id5284 . -1) 26973 (26959 . 26973) (#("t" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -26959) (undo-tree-id5285 . -1) 26960 (26956 . 26960) (#("c" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -26956) (undo-tree-id5286 . -1) (#("n" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -26957) (undo-tree-id5287 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -26958) (undo-tree-id5288 . -1) 26959 (26956 . 26959) (#("c" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -26956) (undo-tree-id5289 . -1) (#("n" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -26957) (undo-tree-id5290 . -1) 26958 (26950 . 26958) (#("f" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -26950) (undo-tree-id5291 . -1) 26951 (26950 . 26951) (26945 . 26950) (#("b" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -26945) (undo-tree-id5292 . -1) 26946 (26937 . 26946)) nil (25723 65181 987072 940000) 0 nil])
([nil nil ((27003 . 27004) 27002) nil (25723 65181 987015 740000) 0 nil])
([nil nil ((27014 . 27015) 27005) nil (25723 65181 987012 317000) 0 nil])
([nil nil ((27015 . 27016) 27015) nil (25723 65183 661467 137000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -27016) (undo-tree-id9297 . -1) 27017 (27016 . 27017)) nil (25723 65190 451567 494000) 0 nil] [nil nil ((27016 . 27020)) ((#("isrc" 0 4 (fontified t)) . 27016)) (25723 65182 670283 510000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27239 . 27240) (nil fontified nil 27004 . 27240) (27004 . 27240) (t 25723 65190 513038 569000)) nil (25723 65200 999140 453000) 0 nil])
([nil nil ((27069 . 27081) (27048 . 27069) (#("l" 0 1 (face org-block-end-line fontified nil)) . -27048) (#("m" 0 1 (face org-block-end-line fontified nil)) . -27049) 27050 (27049 . 27050) (#("e" 0 1 (face org-block-end-line fontified nil)) . -27049) (#("m" 0 1 (face org-block-end-line fontified nil)) . -27050) (#("t" 0 1 (face org-block-end-line fontified nil)) . -27051) 27052 (27047 . 27052) (#("m" 0 1 (face org-block-end-line fontified nil)) . -27047) (#("e" 0 1 (face org-block-end-line fontified nil)) . -27048) (#("e" 0 1 (face org-block-end-line fontified nil)) . -27049) (#("n" 0 1 (face org-block-end-line fontified nil)) . -27050) 27051 (27037 . 27051) (#("t" 0 1 (face org-block-end-line fontified nil)) . -27037) 27038 (27034 . 27038) (#("c" 0 1 (face org-block-end-line fontified nil)) . -27034) (#("n" 0 1 (face org-block-end-line fontified nil)) . -27035) (#("e" 0 1 (face org-block-end-line fontified nil)) . -27036) 27037 (27034 . 27037) (#("c" 0 1 (face org-block-end-line fontified nil)) . -27034) (#("n" 0 1 (face org-block-end-line fontified nil)) . -27035) 27036 (27028 . 27036) (#("f" 0 1 (face org-block-end-line fontified nil)) . -27028) 27029 (27023 . 27029) (#("b" 0 1 (face org-block-end-line fontified nil)) . -27023) 27024 (27015 . 27024)) ((#("html :tab" 0 8 (fontified nil) 8 9 (face org-block-end-line fontified nil)) . 27015) (undo-tree-id5305 . -8) (undo-tree-id5306 . -8) (undo-tree-id5307 . -8) (undo-tree-id5308 . -8) (undo-tree-id5309 . -8) (undo-tree-id5310 . -8) (undo-tree-id5311 . -8) (undo-tree-id5312 . -8) (undo-tree-id5313 . -8) (undo-tree-id5314 . -8) (undo-tree-id5315 . -8) (undo-tree-id5316 . -8) (undo-tree-id5317 . -8) (undo-tree-id5318 . -8) (undo-tree-id5319 . -8) (undo-tree-id5320 . -8) (undo-tree-id5321 . -8) (undo-tree-id5322 . -8) (undo-tree-id5323 . -8) (undo-tree-id5324 . -8) (undo-tree-id5325 . -8) (undo-tree-id5326 . -8) (undo-tree-id5327 . -8) (undo-tree-id5328 . -8) (undo-tree-id5329 . -8) (undo-tree-id5330 . -8) (undo-tree-id5331 . -8) (undo-tree-id5332 . -8) (undo-tree-id5333 . -8) (undo-tree-id5334 . -8) (undo-tree-id5335 . -8) (undo-tree-id5336 . -8) (undo-tree-id5337 . -8) (undo-tree-id5338 . -8) (undo-tree-id5339 . -8) (undo-tree-id5340 . -8) (undo-tree-id5341 . -8) (undo-tree-id5342 . -8) (undo-tree-id5343 . -8) (undo-tree-id5344 . -8) (undo-tree-id5345 . -8) (undo-tree-id5346 . -8) (undo-tree-id5347 . -8) (undo-tree-id5348 . -8) (undo-tree-id5349 . -8) (undo-tree-id5350 . -8) (undo-tree-id5351 . -8) (undo-tree-id5352 . -8) (undo-tree-id5353 . -8) (undo-tree-id5354 . -8) (undo-tree-id5355 . -8) (undo-tree-id5356 . -8) (undo-tree-id5357 . -8) (undo-tree-id5358 . -8) (undo-tree-id5359 . -8) (undo-tree-id5360 . -8) (undo-tree-id5361 . -8) (undo-tree-id5362 . -8) (undo-tree-id5363 . -8) (undo-tree-id5364 . -8) (undo-tree-id5365 . -8) (undo-tree-id5366 . -8) (undo-tree-id5367 . -8) (undo-tree-id5368 . -8) (undo-tree-id5369 . -8) (undo-tree-id5370 . -8) (undo-tree-id5371 . -8) (undo-tree-id5372 . -8) (undo-tree-id5373 . -8) (undo-tree-id5374 . -8) (undo-tree-id5375 . -8) (undo-tree-id5376 . -8) (undo-tree-id5377 . -8) (undo-tree-id5378 . -8) (undo-tree-id5379 . -8) (undo-tree-id5380 . -8) (undo-tree-id5381 . -8) (undo-tree-id5382 . -8) (undo-tree-id5383 . -8) (undo-tree-id5384 . -8) (undo-tree-id5385 . -8) (undo-tree-id5386 . -8) (undo-tree-id5387 . -8) (undo-tree-id5388 . -8) (undo-tree-id5389 . -8) (undo-tree-id5390 . -8) (undo-tree-id5391 . -8) (undo-tree-id5392 . -8) (undo-tree-id5393 . -8) (undo-tree-id5394 . -8) (undo-tree-id5395 . -8) (undo-tree-id5396 . -8) (undo-tree-id5397 . -8) (undo-tree-id5398 . -8) (undo-tree-id5399 . -8) (undo-tree-id5400 . -8) (undo-tree-id5401 . -8) (undo-tree-id5402 . -8) (undo-tree-id5403 . -8) (undo-tree-id5404 . -8) (undo-tree-id5405 . -8) (undo-tree-id5406 . -8) (undo-tree-id5407 . -8) (undo-tree-id5408 . -8) (undo-tree-id5409 . -8) (undo-tree-id5410 . -8) (undo-tree-id5411 . -8) (undo-tree-id5412 . -8) (undo-tree-id5413 . -8) (undo-tree-id5414 . -8) (undo-tree-id5415 . -8) (undo-tree-id5416 . -8) (undo-tree-id5417 . -8) (undo-tree-id5418 . -8) (undo-tree-id5419 . -8) (undo-tree-id5420 . -8) (undo-tree-id5421 . -8) (undo-tree-id5422 . -8) (undo-tree-id5423 . -8) (undo-tree-id5424 . -8) (undo-tree-id5425 . -8) (undo-tree-id5426 . -8) (undo-tree-id5427 . -8) (undo-tree-id5428 . -8) (undo-tree-id5429 . -8) (undo-tree-id5430 . -8) (undo-tree-id5431 . -8) (undo-tree-id5432 . -8) (undo-tree-id5433 . -8) (undo-tree-id5434 . -8) (undo-tree-id5435 . -8) (undo-tree-id5436 . -8) (undo-tree-id5437 . -8) (undo-tree-id5438 . -8) (undo-tree-id5439 . -8) (undo-tree-id5440 . -8) (undo-tree-id5441 . -8) (undo-tree-id5442 . -8) (undo-tree-id5443 . -8) (undo-tree-id5444 . -8) (undo-tree-id5445 . -8) (undo-tree-id5446 . -8) (undo-tree-id5447 . -8) (undo-tree-id5448 . -8) (undo-tree-id5449 . -8) (undo-tree-id5450 . -8) (undo-tree-id5451 . -8) (undo-tree-id5452 . -8) (undo-tree-id5453 . -8) (undo-tree-id5454 . -8) (undo-tree-id5455 . -8) (undo-tree-id5456 . -8) (undo-tree-id5457 . -8) (undo-tree-id5458 . -8) (undo-tree-id5459 . -8) (undo-tree-id5460 . -8) (undo-tree-id5461 . -8) (undo-tree-id5462 . -8) (undo-tree-id5463 . -8) (undo-tree-id5464 . -8) (undo-tree-id5465 . -8) (undo-tree-id5466 . -8) (undo-tree-id5467 . -8) (undo-tree-id5468 . -8) (undo-tree-id5469 . -8) (undo-tree-id5470 . -8) (undo-tree-id5471 . -8) (undo-tree-id5472 . -8) (undo-tree-id5473 . -8) (undo-tree-id5474 . -8) (undo-tree-id5475 . -8) (undo-tree-id5476 . -8) (undo-tree-id5477 . -8) (undo-tree-id5478 . -8) (undo-tree-id5479 . -8) (undo-tree-id5480 . -8) (undo-tree-id5481 . -8) (undo-tree-id5482 . -8) (undo-tree-id5483 . -8) (undo-tree-id5484 . -8) (undo-tree-id5485 . -8) (undo-tree-id5486 . -8) (undo-tree-id5487 . -8) (undo-tree-id5488 . -8) (undo-tree-id5489 . -8) (undo-tree-id5490 . -8) (undo-tree-id5491 . -8) (undo-tree-id5492 . -8) (undo-tree-id5493 . -8) (undo-tree-id5494 . -8) (undo-tree-id5495 . -8) (undo-tree-id5496 . -8) (undo-tree-id5497 . -8) (undo-tree-id5498 . -8) (undo-tree-id5499 . -8) (undo-tree-id5500 . -8) (undo-tree-id5501 . -8) (undo-tree-id5502 . -8) (undo-tree-id5503 . -8) (undo-tree-id5504 . -8) (undo-tree-id5505 . -8) (undo-tree-id5506 . -8) (undo-tree-id5507 . -8) (undo-tree-id5508 . -8) (undo-tree-id5509 . -8) (undo-tree-id5510 . -8) (undo-tree-id5511 . -8) (undo-tree-id5512 . -8) (undo-tree-id5513 . -8) (undo-tree-id5514 . -8) (undo-tree-id5515 . -8) (undo-tree-id5516 . -8) (undo-tree-id5517 . -8) (undo-tree-id5518 . -8) (undo-tree-id5519 . -8) (undo-tree-id5520 . -8) (undo-tree-id5521 . -8) (undo-tree-id5522 . -8) (undo-tree-id5523 . -8) (undo-tree-id5524 . -8) (undo-tree-id5525 . -8) (undo-tree-id5526 . -8) (undo-tree-id5527 . -8) (undo-tree-id5528 . -8) (undo-tree-id5529 . -8) (undo-tree-id5530 . -8) (undo-tree-id5531 . -8) (undo-tree-id5532 . -8) (undo-tree-id5533 . -8) (undo-tree-id5534 . -8) (undo-tree-id5535 . -8) (undo-tree-id5536 . -8) (undo-tree-id5537 . -8) (undo-tree-id5538 . -8) (undo-tree-id5539 . -8) (undo-tree-id5540 . -8) (undo-tree-id5541 . -8) (undo-tree-id5542 . -8) (undo-tree-id5543 . -8) (undo-tree-id5544 . -8) (undo-tree-id5545 . -8) (undo-tree-id5546 . -8) (undo-tree-id5547 . -8) (undo-tree-id5548 . -8) (undo-tree-id5549 . -8) (undo-tree-id5550 . -8) (undo-tree-id5551 . -8) (undo-tree-id5552 . -8) (undo-tree-id5553 . -8) (undo-tree-id5554 . -8) (undo-tree-id5555 . -8) (undo-tree-id5556 . -8) (undo-tree-id5557 . -8) (undo-tree-id5558 . -8) (undo-tree-id5559 . -8) (undo-tree-id5560 . -8) (undo-tree-id5561 . -8) (undo-tree-id5562 . -8) (undo-tree-id5563 . -8) (undo-tree-id5564 . -8) (undo-tree-id5565 . -8) (undo-tree-id5566 . -8) (undo-tree-id5567 . -8) (undo-tree-id5568 . -8) (undo-tree-id5569 . -8) (undo-tree-id5570 . -8) (undo-tree-id5571 . -8) (undo-tree-id5572 . -8) (undo-tree-id5573 . -8) (undo-tree-id5574 . -8) (undo-tree-id5575 . -8) (undo-tree-id5576 . -8) (undo-tree-id5577 . -8) (undo-tree-id5578 . -8) (undo-tree-id5579 . -8) (undo-tree-id5580 . -8) (undo-tree-id5581 . -8) (undo-tree-id5582 . -8) (undo-tree-id5583 . -8) (undo-tree-id5584 . -8) (undo-tree-id5585 . -8) (undo-tree-id5586 . -8) (undo-tree-id5587 . -8) (undo-tree-id5588 . -8) (undo-tree-id5589 . -8) (undo-tree-id5590 . -8) (undo-tree-id5591 . -8) (undo-tree-id5592 . -8) (undo-tree-id5593 . -8) (undo-tree-id5594 . -8) (undo-tree-id5595 . -8) (undo-tree-id5596 . -8) (undo-tree-id5597 . -8) (undo-tree-id5598 . -8) (undo-tree-id5599 . -8) (undo-tree-id5600 . -8) (undo-tree-id5601 . -8) (undo-tree-id5602 . -8) (undo-tree-id5603 . -8) (undo-tree-id5604 . -8) (undo-tree-id5605 . -8) (undo-tree-id5606 . -8) (undo-tree-id5607 . -8) (undo-tree-id5608 . -8) (undo-tree-id5609 . -8) (undo-tree-id5610 . -8) (undo-tree-id5611 . -8) (undo-tree-id5612 . -8) (undo-tree-id5613 . -8) (undo-tree-id5614 . -8) (undo-tree-id5615 . -8) (undo-tree-id5616 . -8) (undo-tree-id5617 . -8) (undo-tree-id5618 . -8) (undo-tree-id5619 . -8) (undo-tree-id5620 . -8) (undo-tree-id5621 . -8) (undo-tree-id5622 . -8) (undo-tree-id5623 . -8) (undo-tree-id5624 . -8) (undo-tree-id5625 . -8) (undo-tree-id5626 . -8) (undo-tree-id5627 . -8) (undo-tree-id5628 . -8) (undo-tree-id5629 . -8) (undo-tree-id5630 . -8) (undo-tree-id5631 . -8) (undo-tree-id5632 . -8) (undo-tree-id5633 . -8) (undo-tree-id5634 . -8) (undo-tree-id5635 . -8) (undo-tree-id5636 . -8) (undo-tree-id5637 . -8) (undo-tree-id5638 . -8) (undo-tree-id5639 . -8) (undo-tree-id5640 . -8) (undo-tree-id5641 . -8) (undo-tree-id5642 . -8) (undo-tree-id5643 . -8) (undo-tree-id5644 . -8) (undo-tree-id5645 . -8) (undo-tree-id5646 . -8) (undo-tree-id5647 . -8) (undo-tree-id5648 . -8) (undo-tree-id5649 . -8) (undo-tree-id5650 . -8) (undo-tree-id5651 . -8) (undo-tree-id5652 . -8) (undo-tree-id5653 . -8) (undo-tree-id5654 . -8) (undo-tree-id5655 . -8) (undo-tree-id5656 . -8) (undo-tree-id5657 . -8) (undo-tree-id5658 . -8) (undo-tree-id5659 . -8) (undo-tree-id5660 . -8) (undo-tree-id5661 . -8) (undo-tree-id5662 . -8) (undo-tree-id5663 . -8) (undo-tree-id5664 . -8) (undo-tree-id5665 . -8) (undo-tree-id5666 . -8) (undo-tree-id5667 . -8) (undo-tree-id5668 . -8) (undo-tree-id5669 . -8) (undo-tree-id5670 . -8) (undo-tree-id5671 . -8) (undo-tree-id5672 . -8) (undo-tree-id5673 . -8) (undo-tree-id5674 . -8) (undo-tree-id5675 . -8) (undo-tree-id5676 . -8) (undo-tree-id5677 . -8) (undo-tree-id5678 . -8) (undo-tree-id5679 . -8) (undo-tree-id5680 . -8) (undo-tree-id5681 . -8) (undo-tree-id5682 . -8) (undo-tree-id5683 . -8) (undo-tree-id5684 . -8) (undo-tree-id5685 . -8) (undo-tree-id5686 . -8) (undo-tree-id5687 . -8) (undo-tree-id5688 . -8) (undo-tree-id5689 . -8) (undo-tree-id5690 . -8) (undo-tree-id5691 . -8) (undo-tree-id5692 . -8) (undo-tree-id5693 . -8) (undo-tree-id5694 . -8) (undo-tree-id5695 . -8) (undo-tree-id5696 . -8) (undo-tree-id5697 . -8) (undo-tree-id5698 . -8) (undo-tree-id5699 . -8) (undo-tree-id5700 . -8) (undo-tree-id5701 . -8) (undo-tree-id5702 . -8) (undo-tree-id5703 . -8) (undo-tree-id5704 . -8) (undo-tree-id5705 . -8) (undo-tree-id5706 . -8) (undo-tree-id5707 . -8) (undo-tree-id5708 . -8) (undo-tree-id5709 . -8) (undo-tree-id5710 . -8) (undo-tree-id5711 . -8) (undo-tree-id5712 . -8) (undo-tree-id5713 . -8) (undo-tree-id5714 . -8) (undo-tree-id5715 . -8) (undo-tree-id5716 . -8) (undo-tree-id5717 . -8) (undo-tree-id5718 . -8) (undo-tree-id5719 . -8) (undo-tree-id5720 . -8) (undo-tree-id5721 . -8) (undo-tree-id5722 . -8) (undo-tree-id5723 . -8) (undo-tree-id5724 . -8) (undo-tree-id5725 . -8) (undo-tree-id5726 . -8) (undo-tree-id5727 . -8) (undo-tree-id5728 . -8) (undo-tree-id5729 . -8) (undo-tree-id5730 . -8) (undo-tree-id5731 . -8) (undo-tree-id5732 . -8) (undo-tree-id5733 . -8) (undo-tree-id5734 . -8) (undo-tree-id5735 . -8) (undo-tree-id5736 . -8) (undo-tree-id5737 . -8) (undo-tree-id5738 . -8) (undo-tree-id5739 . -8) (undo-tree-id5740 . -8) (undo-tree-id5741 . -8) (undo-tree-id5742 . -8) (undo-tree-id5743 . -8) (undo-tree-id5744 . -8) (undo-tree-id5745 . -8) (undo-tree-id5746 . -8) (undo-tree-id5747 . -8) (undo-tree-id5748 . -8) (undo-tree-id5749 . -8) (undo-tree-id5750 . -8) (undo-tree-id5751 . -8) (undo-tree-id5752 . -8) (undo-tree-id5753 . -8) (undo-tree-id5754 . -8) (undo-tree-id5755 . -8) (undo-tree-id5756 . -8) (undo-tree-id5757 . -8) (undo-tree-id5758 . -8) (undo-tree-id5759 . -8) (undo-tree-id5760 . -8) (undo-tree-id5761 . -8) (undo-tree-id5762 . -8) (undo-tree-id5763 . -8) (undo-tree-id5764 . -8) (undo-tree-id5765 . -8) (undo-tree-id5766 . -8) (undo-tree-id5767 . -8) (undo-tree-id5768 . -8) (undo-tree-id5769 . -8) (undo-tree-id5770 . -8) (undo-tree-id5771 . -8) (undo-tree-id5772 . -8) (undo-tree-id5773 . -8) (undo-tree-id5774 . -8) (undo-tree-id5775 . -8) (undo-tree-id5776 . -8) (undo-tree-id5777 . -8) (undo-tree-id5778 . -8) (undo-tree-id5779 . -8) (undo-tree-id5780 . -8) (undo-tree-id5781 . -8) (undo-tree-id5782 . -8) (undo-tree-id5783 . -8) (undo-tree-id5784 . -8) (undo-tree-id5785 . -8) (undo-tree-id5786 . -8) (undo-tree-id5787 . -8) (undo-tree-id5788 . -8) (undo-tree-id5789 . -8) (undo-tree-id5790 . -8) (undo-tree-id5791 . -8) (undo-tree-id5792 . -8) (undo-tree-id5793 . -8) (undo-tree-id5794 . -8) (undo-tree-id5795 . -8) (undo-tree-id5796 . -8) (undo-tree-id5797 . -8) (undo-tree-id5798 . -8) (undo-tree-id5799 . -8) (undo-tree-id5800 . -8) (undo-tree-id5801 . -8) (undo-tree-id5802 . -8) (undo-tree-id5803 . -8) (27023 . 27024) (#("ngle f" 0 5 (fontified nil) 5 6 (face org-block-end-line fontified nil)) . 27023) (undo-tree-id5804 . -5) (undo-tree-id5805 . -5) (undo-tree-id5806 . -5) (undo-tree-id5807 . -5) (undo-tree-id5808 . -5) (undo-tree-id5809 . -5) (undo-tree-id5810 . -5) (undo-tree-id5811 . -5) (undo-tree-id5812 . -5) (undo-tree-id5813 . -5) (undo-tree-id5814 . -5) (undo-tree-id5815 . -5) (undo-tree-id5816 . -5) (undo-tree-id5817 . -5) (undo-tree-id5818 . -5) (undo-tree-id5819 . -5) (undo-tree-id5820 . -5) (undo-tree-id5821 . -5) (undo-tree-id5822 . -5) (undo-tree-id5823 . -5) (undo-tree-id5824 . -5) (undo-tree-id5825 . -5) (undo-tree-id5826 . -5) (undo-tree-id5827 . -5) (undo-tree-id5828 . -5) (undo-tree-id5829 . -5) (undo-tree-id5830 . -5) (undo-tree-id5831 . -5) (undo-tree-id5832 . -5) (undo-tree-id5833 . -5) (undo-tree-id5834 . -5) (undo-tree-id5835 . -5) (undo-tree-id5836 . -5) (undo-tree-id5837 . -5) (undo-tree-id5838 . -5) (undo-tree-id5839 . -5) (undo-tree-id5840 . -5) (undo-tree-id5841 . -5) (undo-tree-id5842 . -5) (undo-tree-id5843 . -5) (undo-tree-id5844 . -5) (undo-tree-id5845 . -5) (undo-tree-id5846 . -5) (undo-tree-id5847 . -5) (undo-tree-id5848 . -5) (undo-tree-id5849 . -5) (undo-tree-id5850 . -5) (undo-tree-id5851 . -5) (undo-tree-id5852 . -5) (undo-tree-id5853 . -5) (undo-tree-id5854 . -5) (undo-tree-id5855 . -5) (undo-tree-id5856 . -5) (undo-tree-id5857 . -5) (undo-tree-id5858 . -5) (undo-tree-id5859 . -5) (undo-tree-id5860 . -5) (undo-tree-id5861 . -5) (undo-tree-id5862 . -5) (undo-tree-id5863 . -5) (undo-tree-id5864 . -5) (undo-tree-id5865 . -5) (undo-tree-id5866 . -5) (undo-tree-id5867 . -5) (undo-tree-id5868 . -5) (undo-tree-id5869 . -5) (undo-tree-id5870 . -5) (undo-tree-id5871 . -5) (undo-tree-id5872 . -5) (undo-tree-id5873 . -5) (undo-tree-id5874 . -5) (undo-tree-id5875 . -5) (undo-tree-id5876 . -5) (undo-tree-id5877 . -5) (undo-tree-id5878 . -5) (undo-tree-id5879 . -5) (undo-tree-id5880 . -5) (undo-tree-id5881 . -5) (undo-tree-id5882 . -5) (undo-tree-id5883 . -5) (undo-tree-id5884 . -5) (undo-tree-id5885 . -5) (undo-tree-id5886 . -5) (undo-tree-id5887 . -5) (undo-tree-id5888 . -5) (undo-tree-id5889 . -5) (undo-tree-id5890 . -5) (undo-tree-id5891 . -5) (undo-tree-id5892 . -5) (undo-tree-id5893 . -5) (undo-tree-id5894 . -5) (undo-tree-id5895 . -5) (undo-tree-id5896 . -5) (undo-tree-id5897 . -5) (undo-tree-id5898 . -5) (undo-tree-id5899 . -5) (undo-tree-id5900 . -5) (undo-tree-id5901 . -5) (undo-tree-id5902 . -5) (undo-tree-id5903 . -5) (undo-tree-id5904 . -5) (undo-tree-id5905 . -5) (undo-tree-id5906 . -5) (undo-tree-id5907 . -5) (undo-tree-id5908 . -5) (undo-tree-id5909 . -5) (undo-tree-id5910 . -5) (undo-tree-id5911 . -5) (undo-tree-id5912 . -5) (undo-tree-id5913 . -5) (undo-tree-id5914 . -5) (undo-tree-id5915 . -5) (undo-tree-id5916 . -5) (undo-tree-id5917 . -5) (undo-tree-id5918 . -5) (undo-tree-id5919 . -5) (undo-tree-id5920 . -5) (undo-tree-id5921 . -5) (undo-tree-id5922 . -5) (undo-tree-id5923 . -5) (undo-tree-id5924 . -5) (undo-tree-id5925 . -5) (undo-tree-id5926 . -5) (undo-tree-id5927 . -5) (undo-tree-id5928 . -5) (undo-tree-id5929 . -5) (undo-tree-id5930 . -5) (undo-tree-id5931 . -5) (undo-tree-id5932 . -5) (undo-tree-id5933 . -5) (undo-tree-id5934 . -5) (undo-tree-id5935 . -5) (undo-tree-id5936 . -5) (undo-tree-id5937 . -5) (undo-tree-id5938 . -5) (undo-tree-id5939 . -5) (undo-tree-id5940 . -5) (undo-tree-id5941 . -5) (undo-tree-id5942 . -5) (undo-tree-id5943 . -5) (undo-tree-id5944 . -5) (undo-tree-id5945 . -5) (undo-tree-id5946 . -5) (undo-tree-id5947 . -5) (undo-tree-id5948 . -5) (undo-tree-id5949 . -5) (undo-tree-id5950 . -5) (undo-tree-id5951 . -5) (undo-tree-id5952 . -5) (undo-tree-id5953 . -5) (undo-tree-id5954 . -5) (undo-tree-id5955 . -5) (undo-tree-id5956 . -5) (undo-tree-id5957 . -5) (undo-tree-id5958 . -5) (undo-tree-id5959 . -5) (undo-tree-id5960 . -5) (undo-tree-id5961 . -5) (undo-tree-id5962 . -5) (undo-tree-id5963 . -5) (undo-tree-id5964 . -5) (undo-tree-id5965 . -5) (undo-tree-id5966 . -5) (undo-tree-id5967 . -5) (undo-tree-id5968 . -5) (undo-tree-id5969 . -5) (undo-tree-id5970 . -5) (undo-tree-id5971 . -5) (undo-tree-id5972 . -5) (undo-tree-id5973 . -5) (undo-tree-id5974 . -5) (undo-tree-id5975 . -5) (undo-tree-id5976 . -5) (undo-tree-id5977 . -5) (undo-tree-id5978 . -5) (undo-tree-id5979 . -5) (undo-tree-id5980 . -5) (undo-tree-id5981 . -5) (undo-tree-id5982 . -5) (undo-tree-id5983 . -5) (undo-tree-id5984 . -5) (undo-tree-id5985 . -5) (undo-tree-id5986 . -5) (undo-tree-id5987 . -5) (undo-tree-id5988 . -5) (undo-tree-id5989 . -5) (undo-tree-id5990 . -5) (undo-tree-id5991 . -5) (undo-tree-id5992 . -5) (undo-tree-id5993 . -5) (undo-tree-id5994 . -5) (undo-tree-id5995 . -5) (undo-tree-id5996 . -5) (undo-tree-id5997 . -5) (undo-tree-id5998 . -5) (undo-tree-id5999 . -5) (undo-tree-id6000 . -5) (undo-tree-id6001 . -5) (undo-tree-id6002 . -5) (undo-tree-id6003 . -5) (undo-tree-id6004 . -5) (undo-tree-id6005 . -5) (undo-tree-id6006 . -5) (undo-tree-id6007 . -5) (undo-tree-id6008 . -5) (undo-tree-id6009 . -5) (undo-tree-id6010 . -5) (undo-tree-id6011 . -5) (undo-tree-id6012 . -5) (undo-tree-id6013 . -5) (undo-tree-id6014 . -5) (undo-tree-id6015 . -5) (undo-tree-id6016 . -5) (undo-tree-id6017 . -5) (undo-tree-id6018 . -5) (undo-tree-id6019 . -5) (undo-tree-id6020 . -5) (undo-tree-id6021 . -5) (undo-tree-id6022 . -5) (undo-tree-id6023 . -5) (undo-tree-id6024 . -5) (undo-tree-id6025 . -5) (undo-tree-id6026 . -5) (undo-tree-id6027 . -5) (undo-tree-id6028 . -5) (undo-tree-id6029 . -5) (undo-tree-id6030 . -5) (undo-tree-id6031 . -5) (undo-tree-id6032 . -5) (undo-tree-id6033 . -5) (undo-tree-id6034 . -5) (undo-tree-id6035 . -5) (undo-tree-id6036 . -5) (undo-tree-id6037 . -5) (undo-tree-id6038 . -5) (undo-tree-id6039 . -5) (undo-tree-id6040 . -5) (undo-tree-id6041 . -5) (undo-tree-id6042 . -5) (undo-tree-id6043 . -5) (undo-tree-id6044 . -5) (undo-tree-id6045 . -5) (undo-tree-id6046 . -5) (undo-tree-id6047 . -5) (undo-tree-id6048 . -5) (undo-tree-id6049 . -5) (undo-tree-id6050 . -5) (undo-tree-id6051 . -5) (undo-tree-id6052 . -5) (undo-tree-id6053 . -5) (undo-tree-id6054 . -5) (undo-tree-id6055 . -5) (undo-tree-id6056 . -5) (undo-tree-id6057 . -5) (undo-tree-id6058 . -5) (undo-tree-id6059 . -5) (undo-tree-id6060 . -5) (undo-tree-id6061 . -5) (undo-tree-id6062 . -5) (undo-tree-id6063 . -5) (undo-tree-id6064 . -5) (undo-tree-id6065 . -5) (undo-tree-id6066 . -5) (undo-tree-id6067 . -5) (undo-tree-id6068 . -5) (undo-tree-id6069 . -5) (undo-tree-id6070 . -5) (undo-tree-id6071 . -5) (undo-tree-id6072 . -5) (undo-tree-id6073 . -5) (undo-tree-id6074 . -5) (undo-tree-id6075 . -5) (undo-tree-id6076 . -5) (undo-tree-id6077 . -5) (undo-tree-id6078 . -5) (undo-tree-id6079 . -5) (undo-tree-id6080 . -5) (undo-tree-id6081 . -5) (undo-tree-id6082 . -5) (undo-tree-id6083 . -5) (undo-tree-id6084 . -5) (undo-tree-id6085 . -5) (undo-tree-id6086 . -5) (undo-tree-id6087 . -5) (undo-tree-id6088 . -5) (undo-tree-id6089 . -5) (undo-tree-id6090 . -5) (undo-tree-id6091 . -5) (undo-tree-id6092 . -5) (undo-tree-id6093 . -5) (undo-tree-id6094 . -5) (undo-tree-id6095 . -5) (undo-tree-id6096 . -5) (undo-tree-id6097 . -5) (undo-tree-id6098 . -5) (undo-tree-id6099 . -5) (undo-tree-id6100 . -5) (undo-tree-id6101 . -5) (undo-tree-id6102 . -5) (undo-tree-id6103 . -5) (undo-tree-id6104 . -5) (undo-tree-id6105 . -5) (undo-tree-id6106 . -5) (undo-tree-id6107 . -5) (undo-tree-id6108 . -5) (undo-tree-id6109 . -5) (undo-tree-id6110 . -5) (undo-tree-id6111 . -5) (undo-tree-id6112 . -5) (undo-tree-id6113 . -5) (undo-tree-id6114 . -5) (undo-tree-id6115 . -5) (undo-tree-id6116 . -5) (undo-tree-id6117 . -5) (undo-tree-id6118 . -5) (undo-tree-id6119 . -5) (undo-tree-id6120 . -5) (undo-tree-id6121 . -5) (undo-tree-id6122 . -5) (undo-tree-id6123 . -5) (undo-tree-id6124 . -5) (undo-tree-id6125 . -5) (undo-tree-id6126 . -5) (undo-tree-id6127 . -5) (undo-tree-id6128 . -5) (undo-tree-id6129 . -5) (undo-tree-id6130 . -5) (undo-tree-id6131 . -5) (undo-tree-id6132 . -5) (undo-tree-id6133 . -5) (undo-tree-id6134 . -5) (undo-tree-id6135 . -5) (undo-tree-id6136 . -5) (undo-tree-id6137 . -5) (undo-tree-id6138 . -5) (undo-tree-id6139 . -5) (undo-tree-id6140 . -5) (undo-tree-id6141 . -5) (undo-tree-id6142 . -5) (undo-tree-id6143 . -5) (undo-tree-id6144 . -5) (undo-tree-id6145 . -5) (undo-tree-id6146 . -5) (undo-tree-id6147 . -5) (undo-tree-id6148 . -5) (undo-tree-id6149 . -5) (undo-tree-id6150 . -5) (undo-tree-id6151 . -5) (undo-tree-id6152 . -5) (undo-tree-id6153 . -5) (undo-tree-id6154 . -5) (undo-tree-id6155 . -5) (undo-tree-id6156 . -5) (undo-tree-id6157 . -5) (undo-tree-id6158 . -5) (undo-tree-id6159 . -5) (undo-tree-id6160 . -5) (undo-tree-id6161 . -5) (undo-tree-id6162 . -5) (undo-tree-id6163 . -5) (undo-tree-id6164 . -5) (undo-tree-id6165 . -5) (undo-tree-id6166 . -5) (undo-tree-id6167 . -5) (undo-tree-id6168 . -5) (undo-tree-id6169 . -5) (undo-tree-id6170 . -5) (undo-tree-id6171 . -5) (undo-tree-id6172 . -5) (undo-tree-id6173 . -5) (undo-tree-id6174 . -5) (undo-tree-id6175 . -5) (undo-tree-id6176 . -5) (undo-tree-id6177 . -5) (undo-tree-id6178 . -5) (undo-tree-id6179 . -5) (undo-tree-id6180 . -5) (undo-tree-id6181 . -5) (undo-tree-id6182 . -5) (undo-tree-id6183 . -5) (undo-tree-id6184 . -5) (undo-tree-id6185 . -5) (undo-tree-id6186 . -5) (undo-tree-id6187 . -5) (undo-tree-id6188 . -5) (undo-tree-id6189 . -5) (undo-tree-id6190 . -5) (undo-tree-id6191 . -5) (undo-tree-id6192 . -5) (undo-tree-id6193 . -5) (undo-tree-id6194 . -5) (undo-tree-id6195 . -5) (undo-tree-id6196 . -5) (undo-tree-id6197 . -5) (undo-tree-id6198 . -5) (undo-tree-id6199 . -5) (undo-tree-id6200 . -5) (undo-tree-id6201 . -5) (undo-tree-id6202 . -5) (undo-tree-id6203 . -5) (undo-tree-id6204 . -5) (undo-tree-id6205 . -5) (undo-tree-id6206 . -5) (undo-tree-id6207 . -5) (undo-tree-id6208 . -5) (undo-tree-id6209 . -5) (undo-tree-id6210 . -5) (undo-tree-id6211 . -5) (undo-tree-id6212 . -5) (undo-tree-id6213 . -5) (undo-tree-id6214 . -5) (undo-tree-id6215 . -5) (undo-tree-id6216 . -5) (undo-tree-id6217 . -5) (undo-tree-id6218 . -5) (undo-tree-id6219 . -5) (undo-tree-id6220 . -5) (undo-tree-id6221 . -5) (undo-tree-id6222 . -5) (undo-tree-id6223 . -5) (undo-tree-id6224 . -5) (undo-tree-id6225 . -5) (undo-tree-id6226 . -5) (undo-tree-id6227 . -5) (undo-tree-id6228 . -5) (undo-tree-id6229 . -5) (undo-tree-id6230 . -5) (undo-tree-id6231 . -5) (undo-tree-id6232 . -5) (undo-tree-id6233 . -5) (undo-tree-id6234 . -5) (undo-tree-id6235 . -5) (undo-tree-id6236 . -5) (undo-tree-id6237 . -5) (undo-tree-id6238 . -5) (undo-tree-id6239 . -5) (undo-tree-id6240 . -5) (undo-tree-id6241 . -5) (undo-tree-id6242 . -5) (undo-tree-id6243 . -5) (undo-tree-id6244 . -5) (undo-tree-id6245 . -5) (undo-tree-id6246 . -5) (undo-tree-id6247 . -5) (undo-tree-id6248 . -5) (undo-tree-id6249 . -5) (undo-tree-id6250 . -5) (undo-tree-id6251 . -5) (undo-tree-id6252 . -5) (undo-tree-id6253 . -5) (undo-tree-id6254 . -5) (undo-tree-id6255 . -5) (undo-tree-id6256 . -5) (undo-tree-id6257 . -5) (undo-tree-id6258 . -5) (undo-tree-id6259 . -5) (undo-tree-id6260 . -5) (undo-tree-id6261 . -5) (undo-tree-id6262 . -5) (undo-tree-id6263 . -5) (undo-tree-id6264 . -5) (undo-tree-id6265 . -5) (undo-tree-id6266 . -5) (undo-tree-id6267 . -5) (undo-tree-id6268 . -5) (undo-tree-id6269 . -5) (undo-tree-id6270 . -5) (undo-tree-id6271 . -5) (undo-tree-id6272 . -5) (undo-tree-id6273 . -5) (undo-tree-id6274 . -5) (undo-tree-id6275 . -5) (undo-tree-id6276 . -5) (undo-tree-id6277 . -5) (undo-tree-id6278 . -5) (undo-tree-id6279 . -5) (undo-tree-id6280 . -5) (undo-tree-id6281 . -5) (undo-tree-id6282 . -5) (undo-tree-id6283 . -5) (undo-tree-id6284 . -5) (undo-tree-id6285 . -5) (undo-tree-id6286 . -5) (undo-tree-id6287 . -5) (undo-tree-id6288 . -5) (undo-tree-id6289 . -5) (undo-tree-id6290 . -5) (undo-tree-id6291 . -5) (undo-tree-id6292 . -5) (undo-tree-id6293 . -5) (undo-tree-id6294 . -5) (undo-tree-id6295 . -5) (undo-tree-id6296 . -5) (undo-tree-id6297 . -5) (undo-tree-id6298 . -5) (undo-tree-id6299 . -5) (undo-tree-id6300 . -5) (undo-tree-id6301 . -5) (undo-tree-id6302 . -5) (27028 . 27029) (#("referecn" 0 6 (fontified nil) 6 7 (face org-block-end-line fontified nil) 7 8 (face org-block-end-line fontified nil)) . 27028) (undo-tree-id6303 . -6) (undo-tree-id6304 . -6) (undo-tree-id6305 . -6) (undo-tree-id6306 . -6) (undo-tree-id6307 . -6) (undo-tree-id6308 . -6) (undo-tree-id6309 . -6) (undo-tree-id6310 . -6) (undo-tree-id6311 . -6) (undo-tree-id6312 . -6) (undo-tree-id6313 . -6) (undo-tree-id6314 . -6) (undo-tree-id6315 . -6) (undo-tree-id6316 . -6) (undo-tree-id6317 . -6) (undo-tree-id6318 . -6) (undo-tree-id6319 . -6) (undo-tree-id6320 . -6) (undo-tree-id6321 . -6) (undo-tree-id6322 . -6) (undo-tree-id6323 . -6) (undo-tree-id6324 . -6) (undo-tree-id6325 . -6) (undo-tree-id6326 . -6) (undo-tree-id6327 . -6) (undo-tree-id6328 . -6) (undo-tree-id6329 . -6) (undo-tree-id6330 . -6) (undo-tree-id6331 . -6) (undo-tree-id6332 . -6) (undo-tree-id6333 . -6) (undo-tree-id6334 . -6) (undo-tree-id6335 . -6) (undo-tree-id6336 . -6) (undo-tree-id6337 . -6) (undo-tree-id6338 . -6) (undo-tree-id6339 . -6) (undo-tree-id6340 . -6) (undo-tree-id6341 . -6) (undo-tree-id6342 . -6) (undo-tree-id6343 . -6) (undo-tree-id6344 . -6) (undo-tree-id6345 . -6) (undo-tree-id6346 . -6) (undo-tree-id6347 . -6) (undo-tree-id6348 . -6) (undo-tree-id6349 . -6) (undo-tree-id6350 . -6) (undo-tree-id6351 . -6) (undo-tree-id6352 . -6) (undo-tree-id6353 . -6) (undo-tree-id6354 . -6) (undo-tree-id6355 . -6) (undo-tree-id6356 . -6) (undo-tree-id6357 . -6) (undo-tree-id6358 . -6) (undo-tree-id6359 . -6) (undo-tree-id6360 . -6) (undo-tree-id6361 . -6) (undo-tree-id6362 . -6) (undo-tree-id6363 . -6) (undo-tree-id6364 . -6) (undo-tree-id6365 . -6) (undo-tree-id6366 . -6) (undo-tree-id6367 . -6) (undo-tree-id6368 . -6) (undo-tree-id6369 . -6) (undo-tree-id6370 . -6) (undo-tree-id6371 . -6) (undo-tree-id6372 . -6) (undo-tree-id6373 . -6) (undo-tree-id6374 . -6) (undo-tree-id6375 . -6) (undo-tree-id6376 . -6) (undo-tree-id6377 . -6) (undo-tree-id6378 . -6) (undo-tree-id6379 . -6) (undo-tree-id6380 . -6) (undo-tree-id6381 . -6) (undo-tree-id6382 . -6) (undo-tree-id6383 . -6) (undo-tree-id6384 . -6) (undo-tree-id6385 . -6) (undo-tree-id6386 . -6) (undo-tree-id6387 . -6) (undo-tree-id6388 . -6) (undo-tree-id6389 . -6) (undo-tree-id6390 . -6) (undo-tree-id6391 . -6) (undo-tree-id6392 . -6) (undo-tree-id6393 . -6) (undo-tree-id6394 . -6) (undo-tree-id6395 . -6) (undo-tree-id6396 . -6) (undo-tree-id6397 . -6) (undo-tree-id6398 . -6) (undo-tree-id6399 . -6) (undo-tree-id6400 . -6) (undo-tree-id6401 . -6) (undo-tree-id6402 . -6) (undo-tree-id6403 . -6) (undo-tree-id6404 . -6) (undo-tree-id6405 . -6) (undo-tree-id6406 . -6) (undo-tree-id6407 . -6) (undo-tree-id6408 . -6) (undo-tree-id6409 . -6) (undo-tree-id6410 . -6) (undo-tree-id6411 . -6) (undo-tree-id6412 . -6) (undo-tree-id6413 . -6) (undo-tree-id6414 . -6) (undo-tree-id6415 . -6) (undo-tree-id6416 . -6) (undo-tree-id6417 . -6) (undo-tree-id6418 . -6) (undo-tree-id6419 . -6) (undo-tree-id6420 . -6) (undo-tree-id6421 . -6) (undo-tree-id6422 . -6) (undo-tree-id6423 . -6) (undo-tree-id6424 . -6) (undo-tree-id6425 . -6) (undo-tree-id6426 . -6) (undo-tree-id6427 . -6) (undo-tree-id6428 . -6) (undo-tree-id6429 . -6) (undo-tree-id6430 . -6) (undo-tree-id6431 . -6) (undo-tree-id6432 . -6) (undo-tree-id6433 . -6) (undo-tree-id6434 . -6) (undo-tree-id6435 . -6) (undo-tree-id6436 . -6) (undo-tree-id6437 . -6) (undo-tree-id6438 . -6) (undo-tree-id6439 . -6) (undo-tree-id6440 . -6) (undo-tree-id6441 . -6) (undo-tree-id6442 . -6) (undo-tree-id6443 . -6) (undo-tree-id6444 . -6) (undo-tree-id6445 . -6) (undo-tree-id6446 . -6) (undo-tree-id6447 . -6) (undo-tree-id6448 . -6) (undo-tree-id6449 . -6) (undo-tree-id6450 . -6) (undo-tree-id6451 . -6) (undo-tree-id6452 . -6) (undo-tree-id6453 . -6) (undo-tree-id6454 . -6) (undo-tree-id6455 . -6) (undo-tree-id6456 . -6) (undo-tree-id6457 . -6) (undo-tree-id6458 . -6) (undo-tree-id6459 . -6) (undo-tree-id6460 . -6) (undo-tree-id6461 . -6) (undo-tree-id6462 . -6) (undo-tree-id6463 . -6) (undo-tree-id6464 . -6) (undo-tree-id6465 . -6) (undo-tree-id6466 . -6) (undo-tree-id6467 . -6) (undo-tree-id6468 . -6) (undo-tree-id6469 . -6) (undo-tree-id6470 . -6) (undo-tree-id6471 . -6) (undo-tree-id6472 . -6) (undo-tree-id6473 . -6) (undo-tree-id6474 . -6) (undo-tree-id6475 . -6) (undo-tree-id6476 . -6) (undo-tree-id6477 . -6) (undo-tree-id6478 . -6) (undo-tree-id6479 . -6) (undo-tree-id6480 . -6) (undo-tree-id6481 . -6) (undo-tree-id6482 . -6) (undo-tree-id6483 . -6) (undo-tree-id6484 . -6) (undo-tree-id6485 . -6) (undo-tree-id6486 . -6) (undo-tree-id6487 . -6) (undo-tree-id6488 . -6) (undo-tree-id6489 . -6) (undo-tree-id6490 . -6) (undo-tree-id6491 . -6) (undo-tree-id6492 . -6) (undo-tree-id6493 . -6) (undo-tree-id6494 . -6) (undo-tree-id6495 . -6) (undo-tree-id6496 . -6) (undo-tree-id6497 . -6) (undo-tree-id6498 . -6) (undo-tree-id6499 . -6) (undo-tree-id6500 . -6) (undo-tree-id6501 . -6) (undo-tree-id6502 . -6) (undo-tree-id6503 . -6) (undo-tree-id6504 . -6) (undo-tree-id6505 . -6) (undo-tree-id6506 . -6) (undo-tree-id6507 . -6) (undo-tree-id6508 . -6) (undo-tree-id6509 . -6) (undo-tree-id6510 . -6) (undo-tree-id6511 . -6) (undo-tree-id6512 . -6) (undo-tree-id6513 . -6) (undo-tree-id6514 . -6) (undo-tree-id6515 . -6) (undo-tree-id6516 . -6) (undo-tree-id6517 . -6) (undo-tree-id6518 . -6) (undo-tree-id6519 . -6) (undo-tree-id6520 . -6) (undo-tree-id6521 . -6) (undo-tree-id6522 . -6) (undo-tree-id6523 . -6) (undo-tree-id6524 . -6) (undo-tree-id6525 . -6) (undo-tree-id6526 . -6) (undo-tree-id6527 . -6) (undo-tree-id6528 . -6) (undo-tree-id6529 . -6) (undo-tree-id6530 . -6) (undo-tree-id6531 . -6) (undo-tree-id6532 . -6) (undo-tree-id6533 . -6) (undo-tree-id6534 . -6) (undo-tree-id6535 . -6) (undo-tree-id6536 . -6) (undo-tree-id6537 . -6) (undo-tree-id6538 . -6) (undo-tree-id6539 . -6) (undo-tree-id6540 . -6) (undo-tree-id6541 . -6) (undo-tree-id6542 . -6) (undo-tree-id6543 . -6) (undo-tree-id6544 . -6) (undo-tree-id6545 . -6) (undo-tree-id6546 . -6) (undo-tree-id6547 . -6) (undo-tree-id6548 . -6) (undo-tree-id6549 . -6) (undo-tree-id6550 . -6) (undo-tree-id6551 . -6) (undo-tree-id6552 . -6) (undo-tree-id6553 . -6) (undo-tree-id6554 . -6) (undo-tree-id6555 . -6) (undo-tree-id6556 . -6) (undo-tree-id6557 . -6) (undo-tree-id6558 . -6) (undo-tree-id6559 . -6) (undo-tree-id6560 . -6) (undo-tree-id6561 . -6) (undo-tree-id6562 . -6) (undo-tree-id6563 . -6) (undo-tree-id6564 . -6) (undo-tree-id6565 . -6) (undo-tree-id6566 . -6) (undo-tree-id6567 . -6) (undo-tree-id6568 . -6) (undo-tree-id6569 . -6) (undo-tree-id6570 . -6) (undo-tree-id6571 . -6) (undo-tree-id6572 . -6) (undo-tree-id6573 . -6) (undo-tree-id6574 . -6) (undo-tree-id6575 . -6) (undo-tree-id6576 . -6) (undo-tree-id6577 . -6) (undo-tree-id6578 . -6) (undo-tree-id6579 . -6) (undo-tree-id6580 . -6) (undo-tree-id6581 . -6) (undo-tree-id6582 . -6) (undo-tree-id6583 . -6) (undo-tree-id6584 . -6) (undo-tree-id6585 . -6) (undo-tree-id6586 . -6) (undo-tree-id6587 . -6) (undo-tree-id6588 . -6) (undo-tree-id6589 . -6) (undo-tree-id6590 . -6) (undo-tree-id6591 . -6) (undo-tree-id6592 . -6) (undo-tree-id6593 . -6) (undo-tree-id6594 . -6) (undo-tree-id6595 . -6) (undo-tree-id6596 . -6) (undo-tree-id6597 . -6) (undo-tree-id6598 . -6) (undo-tree-id6599 . -6) (undo-tree-id6600 . -6) (undo-tree-id6601 . -6) (undo-tree-id6602 . -6) (undo-tree-id6603 . -6) (undo-tree-id6604 . -6) (undo-tree-id6605 . -6) (undo-tree-id6606 . -6) (undo-tree-id6607 . -6) (undo-tree-id6608 . -6) (undo-tree-id6609 . -6) (undo-tree-id6610 . -6) (undo-tree-id6611 . -6) (undo-tree-id6612 . -6) (undo-tree-id6613 . -6) (undo-tree-id6614 . -6) (undo-tree-id6615 . -6) (undo-tree-id6616 . -6) (undo-tree-id6617 . -6) (undo-tree-id6618 . -6) (undo-tree-id6619 . -6) (undo-tree-id6620 . -6) (undo-tree-id6621 . -6) (undo-tree-id6622 . -6) (undo-tree-id6623 . -6) (undo-tree-id6624 . -6) (undo-tree-id6625 . -6) (undo-tree-id6626 . -6) (undo-tree-id6627 . -6) (undo-tree-id6628 . -6) (undo-tree-id6629 . -6) (undo-tree-id6630 . -6) (undo-tree-id6631 . -6) (undo-tree-id6632 . -6) (undo-tree-id6633 . -6) (undo-tree-id6634 . -6) (undo-tree-id6635 . -6) (undo-tree-id6636 . -6) (undo-tree-id6637 . -6) (undo-tree-id6638 . -6) (undo-tree-id6639 . -6) (undo-tree-id6640 . -6) (undo-tree-id6641 . -6) (undo-tree-id6642 . -6) (undo-tree-id6643 . -6) (undo-tree-id6644 . -6) (undo-tree-id6645 . -6) (undo-tree-id6646 . -6) (undo-tree-id6647 . -6) (undo-tree-id6648 . -6) (undo-tree-id6649 . -6) (undo-tree-id6650 . -6) (undo-tree-id6651 . -6) (undo-tree-id6652 . -6) (undo-tree-id6653 . -6) (undo-tree-id6654 . -6) (undo-tree-id6655 . -6) (undo-tree-id6656 . -6) (undo-tree-id6657 . -6) (undo-tree-id6658 . -6) (undo-tree-id6659 . -6) (undo-tree-id6660 . -6) (undo-tree-id6661 . -6) (undo-tree-id6662 . -6) (undo-tree-id6663 . -6) (undo-tree-id6664 . -6) (undo-tree-id6665 . -6) (undo-tree-id6666 . -6) (undo-tree-id6667 . -6) (undo-tree-id6668 . -6) (undo-tree-id6669 . -6) (undo-tree-id6670 . -6) (undo-tree-id6671 . -6) (undo-tree-id6672 . -6) (undo-tree-id6673 . -6) (undo-tree-id6674 . -6) (undo-tree-id6675 . -6) (undo-tree-id6676 . -6) (undo-tree-id6677 . -6) (undo-tree-id6678 . -6) (undo-tree-id6679 . -6) (undo-tree-id6680 . -6) (undo-tree-id6681 . -6) (undo-tree-id6682 . -6) (undo-tree-id6683 . -6) (undo-tree-id6684 . -6) (undo-tree-id6685 . -6) (undo-tree-id6686 . -6) (undo-tree-id6687 . -6) (undo-tree-id6688 . -6) (undo-tree-id6689 . -6) (undo-tree-id6690 . -6) (undo-tree-id6691 . -6) (undo-tree-id6692 . -6) (undo-tree-id6693 . -6) (undo-tree-id6694 . -6) (undo-tree-id6695 . -6) (undo-tree-id6696 . -6) (undo-tree-id6697 . -6) (undo-tree-id6698 . -6) (undo-tree-id6699 . -6) (undo-tree-id6700 . -6) (undo-tree-id6701 . -6) (undo-tree-id6702 . -6) (undo-tree-id6703 . -6) (undo-tree-id6704 . -6) (undo-tree-id6705 . -6) (undo-tree-id6706 . -6) (undo-tree-id6707 . -6) (undo-tree-id6708 . -6) (undo-tree-id6709 . -6) (undo-tree-id6710 . -6) (undo-tree-id6711 . -6) (undo-tree-id6712 . -6) (undo-tree-id6713 . -6) (undo-tree-id6714 . -6) (undo-tree-id6715 . -6) (undo-tree-id6716 . -6) (undo-tree-id6717 . -6) (undo-tree-id6718 . -6) (undo-tree-id6719 . -6) (undo-tree-id6720 . -6) (undo-tree-id6721 . -6) (undo-tree-id6722 . -6) (undo-tree-id6723 . -6) (undo-tree-id6724 . -6) (undo-tree-id6725 . -6) (undo-tree-id6726 . -6) (undo-tree-id6727 . -6) (undo-tree-id6728 . -6) (undo-tree-id6729 . -6) (undo-tree-id6730 . -6) (undo-tree-id6731 . -6) (undo-tree-id6732 . -6) (undo-tree-id6733 . -6) (undo-tree-id6734 . -6) (undo-tree-id6735 . -6) (undo-tree-id6736 . -6) (undo-tree-id6737 . -6) (undo-tree-id6738 . -6) (undo-tree-id6739 . -6) (undo-tree-id6740 . -6) (undo-tree-id6741 . -6) (undo-tree-id6742 . -6) (undo-tree-id6743 . -6) (undo-tree-id6744 . -6) (undo-tree-id6745 . -6) (undo-tree-id6746 . -6) (undo-tree-id6747 . -6) (undo-tree-id6748 . -6) (undo-tree-id6749 . -6) (undo-tree-id6750 . -6) (undo-tree-id6751 . -6) (undo-tree-id6752 . -6) (undo-tree-id6753 . -6) (undo-tree-id6754 . -6) (undo-tree-id6755 . -6) (undo-tree-id6756 . -6) (undo-tree-id6757 . -6) (undo-tree-id6758 . -6) (undo-tree-id6759 . -6) (undo-tree-id6760 . -6) (undo-tree-id6761 . -6) (undo-tree-id6762 . -6) (undo-tree-id6763 . -6) (undo-tree-id6764 . -6) (undo-tree-id6765 . -6) (undo-tree-id6766 . -6) (undo-tree-id6767 . -6) (undo-tree-id6768 . -6) (undo-tree-id6769 . -6) (undo-tree-id6770 . -6) (undo-tree-id6771 . -6) (undo-tree-id6772 . -6) (undo-tree-id6773 . -6) (undo-tree-id6774 . -6) (undo-tree-id6775 . -6) (undo-tree-id6776 . -6) (undo-tree-id6777 . -6) (undo-tree-id6778 . -6) (undo-tree-id6779 . -6) (undo-tree-id6780 . -6) (undo-tree-id6781 . -6) (undo-tree-id6782 . -6) (undo-tree-id6783 . -6) (undo-tree-id6784 . -6) (undo-tree-id6785 . -6) (undo-tree-id6786 . -6) (undo-tree-id6787 . -6) (undo-tree-id6788 . -6) (undo-tree-id6789 . -6) (undo-tree-id6790 . -6) (undo-tree-id6791 . -6) (undo-tree-id6792 . -6) (undo-tree-id6793 . -6) (undo-tree-id6794 . -6) (undo-tree-id6795 . -6) (undo-tree-id6796 . -6) (undo-tree-id6797 . -6) (undo-tree-id6798 . -6) (undo-tree-id6799 . -6) (undo-tree-id6800 . -6) (undo-tree-id6801 . -6) (27034 . 27036) (#("cne" 0 1 (face org-block-end-line fontified nil) 1 2 (face org-block-end-line fontified nil) 2 3 (face org-block-end-line fontified nil)) . 27034) (27034 . 27037) (#("ncet" 0 3 (fontified nil) 3 4 (face org-block-end-line fontified nil)) . 27034) (undo-tree-id6802 . -3) (undo-tree-id6803 . -3) (undo-tree-id6804 . -3) (undo-tree-id6805 . -3) (undo-tree-id6806 . -3) (undo-tree-id6807 . -3) (undo-tree-id6808 . -3) (undo-tree-id6809 . -3) (undo-tree-id6810 . -3) (undo-tree-id6811 . -3) (undo-tree-id6812 . -3) (undo-tree-id6813 . -3) (undo-tree-id6814 . -3) (undo-tree-id6815 . -3) (undo-tree-id6816 . -3) (undo-tree-id6817 . -3) (undo-tree-id6818 . -3) (undo-tree-id6819 . -3) (undo-tree-id6820 . -3) (undo-tree-id6821 . -3) (undo-tree-id6822 . -3) (undo-tree-id6823 . -3) (undo-tree-id6824 . -3) (undo-tree-id6825 . -3) (undo-tree-id6826 . -3) (undo-tree-id6827 . -3) (undo-tree-id6828 . -3) (undo-tree-id6829 . -3) (undo-tree-id6830 . -3) (undo-tree-id6831 . -3) (undo-tree-id6832 . -3) (undo-tree-id6833 . -3) (undo-tree-id6834 . -3) (undo-tree-id6835 . -3) (undo-tree-id6836 . -3) (undo-tree-id6837 . -3) (undo-tree-id6838 . -3) (undo-tree-id6839 . -3) (undo-tree-id6840 . -3) (undo-tree-id6841 . -3) (undo-tree-id6842 . -3) (undo-tree-id6843 . -3) (undo-tree-id6844 . -3) (undo-tree-id6845 . -3) (undo-tree-id6846 . -3) (undo-tree-id6847 . -3) (undo-tree-id6848 . -3) (undo-tree-id6849 . -3) (undo-tree-id6850 . -3) (undo-tree-id6851 . -3) (undo-tree-id6852 . -3) (undo-tree-id6853 . -3) (undo-tree-id6854 . -3) (undo-tree-id6855 . -3) (undo-tree-id6856 . -3) (undo-tree-id6857 . -3) (undo-tree-id6858 . -3) (undo-tree-id6859 . -3) (undo-tree-id6860 . -3) (undo-tree-id6861 . -3) (undo-tree-id6862 . -3) (undo-tree-id6863 . -3) (undo-tree-id6864 . -3) (undo-tree-id6865 . -3) (undo-tree-id6866 . -3) (undo-tree-id6867 . -3) (undo-tree-id6868 . -3) (undo-tree-id6869 . -3) (undo-tree-id6870 . -3) (undo-tree-id6871 . -3) (undo-tree-id6872 . -3) (undo-tree-id6873 . -3) (undo-tree-id6874 . -3) (undo-tree-id6875 . -3) (undo-tree-id6876 . -3) (undo-tree-id6877 . -3) (undo-tree-id6878 . -3) (undo-tree-id6879 . -3) (undo-tree-id6880 . -3) (undo-tree-id6881 . -3) (undo-tree-id6882 . -3) (undo-tree-id6883 . -3) (undo-tree-id6884 . -3) (undo-tree-id6885 . -3) (undo-tree-id6886 . -3) (undo-tree-id6887 . -3) (undo-tree-id6888 . -3) (undo-tree-id6889 . -3) (undo-tree-id6890 . -3) (undo-tree-id6891 . -3) (undo-tree-id6892 . -3) (undo-tree-id6893 . -3) (undo-tree-id6894 . -3) (undo-tree-id6895 . -3) (undo-tree-id6896 . -3) (undo-tree-id6897 . -3) (undo-tree-id6898 . -3) (undo-tree-id6899 . -3) (undo-tree-id6900 . -3) (undo-tree-id6901 . -3) (undo-tree-id6902 . -3) (undo-tree-id6903 . -3) (undo-tree-id6904 . -3) (undo-tree-id6905 . -3) (undo-tree-id6906 . -3) (undo-tree-id6907 . -3) (undo-tree-id6908 . -3) (undo-tree-id6909 . -3) (undo-tree-id6910 . -3) (undo-tree-id6911 . -3) (undo-tree-id6912 . -3) (undo-tree-id6913 . -3) (undo-tree-id6914 . -3) (undo-tree-id6915 . -3) (undo-tree-id6916 . -3) (undo-tree-id6917 . -3) (undo-tree-id6918 . -3) (undo-tree-id6919 . -3) (undo-tree-id6920 . -3) (undo-tree-id6921 . -3) (undo-tree-id6922 . -3) (undo-tree-id6923 . -3) (undo-tree-id6924 . -3) (undo-tree-id6925 . -3) (undo-tree-id6926 . -3) (undo-tree-id6927 . -3) (undo-tree-id6928 . -3) (undo-tree-id6929 . -3) (undo-tree-id6930 . -3) (undo-tree-id6931 . -3) (undo-tree-id6932 . -3) (undo-tree-id6933 . -3) (undo-tree-id6934 . -3) (undo-tree-id6935 . -3) (undo-tree-id6936 . -3) (undo-tree-id6937 . -3) (undo-tree-id6938 . -3) (undo-tree-id6939 . -3) (undo-tree-id6940 . -3) (undo-tree-id6941 . -3) (undo-tree-id6942 . -3) (undo-tree-id6943 . -3) (undo-tree-id6944 . -3) (undo-tree-id6945 . -3) (undo-tree-id6946 . -3) (undo-tree-id6947 . -3) (undo-tree-id6948 . -3) (undo-tree-id6949 . -3) (undo-tree-id6950 . -3) (undo-tree-id6951 . -3) (undo-tree-id6952 . -3) (undo-tree-id6953 . -3) (undo-tree-id6954 . -3) (undo-tree-id6955 . -3) (undo-tree-id6956 . -3) (undo-tree-id6957 . -3) (undo-tree-id6958 . -3) (undo-tree-id6959 . -3) (undo-tree-id6960 . -3) (undo-tree-id6961 . -3) (undo-tree-id6962 . -3) (undo-tree-id6963 . -3) (undo-tree-id6964 . -3) (undo-tree-id6965 . -3) (undo-tree-id6966 . -3) (undo-tree-id6967 . -3) (undo-tree-id6968 . -3) (undo-tree-id6969 . -3) (undo-tree-id6970 . -3) (undo-tree-id6971 . -3) (undo-tree-id6972 . -3) (undo-tree-id6973 . -3) (undo-tree-id6974 . -3) (undo-tree-id6975 . -3) (undo-tree-id6976 . -3) (undo-tree-id6977 . -3) (undo-tree-id6978 . -3) (undo-tree-id6979 . -3) (undo-tree-id6980 . -3) (undo-tree-id6981 . -3) (undo-tree-id6982 . -3) (undo-tree-id6983 . -3) (undo-tree-id6984 . -3) (undo-tree-id6985 . -3) (undo-tree-id6986 . -3) (undo-tree-id6987 . -3) (undo-tree-id6988 . -3) (undo-tree-id6989 . -3) (undo-tree-id6990 . -3) (undo-tree-id6991 . -3) (undo-tree-id6992 . -3) (undo-tree-id6993 . -3) (undo-tree-id6994 . -3) (undo-tree-id6995 . -3) (undo-tree-id6996 . -3) (undo-tree-id6997 . -3) (undo-tree-id6998 . -3) (undo-tree-id6999 . -3) (undo-tree-id7000 . -3) (undo-tree-id7001 . -3) (undo-tree-id7002 . -3) (undo-tree-id7003 . -3) (undo-tree-id7004 . -3) (undo-tree-id7005 . -3) (undo-tree-id7006 . -3) (undo-tree-id7007 . -3) (undo-tree-id7008 . -3) (undo-tree-id7009 . -3) (undo-tree-id7010 . -3) (undo-tree-id7011 . -3) (undo-tree-id7012 . -3) (undo-tree-id7013 . -3) (undo-tree-id7014 . -3) (undo-tree-id7015 . -3) (undo-tree-id7016 . -3) (undo-tree-id7017 . -3) (undo-tree-id7018 . -3) (undo-tree-id7019 . -3) (undo-tree-id7020 . -3) (undo-tree-id7021 . -3) (undo-tree-id7022 . -3) (undo-tree-id7023 . -3) (undo-tree-id7024 . -3) (undo-tree-id7025 . -3) (undo-tree-id7026 . -3) (undo-tree-id7027 . -3) (undo-tree-id7028 . -3) (undo-tree-id7029 . -3) (undo-tree-id7030 . -3) (undo-tree-id7031 . -3) (undo-tree-id7032 . -3) (undo-tree-id7033 . -3) (undo-tree-id7034 . -3) (undo-tree-id7035 . -3) (undo-tree-id7036 . -3) (undo-tree-id7037 . -3) (undo-tree-id7038 . -3) (undo-tree-id7039 . -3) (undo-tree-id7040 . -3) (undo-tree-id7041 . -3) (undo-tree-id7042 . -3) (undo-tree-id7043 . -3) (undo-tree-id7044 . -3) (undo-tree-id7045 . -3) (undo-tree-id7046 . -3) (undo-tree-id7047 . -3) (undo-tree-id7048 . -3) (undo-tree-id7049 . -3) (undo-tree-id7050 . -3) (undo-tree-id7051 . -3) (undo-tree-id7052 . -3) (undo-tree-id7053 . -3) (undo-tree-id7054 . -3) (undo-tree-id7055 . -3) (undo-tree-id7056 . -3) (undo-tree-id7057 . -3) (undo-tree-id7058 . -3) (undo-tree-id7059 . -3) (undo-tree-id7060 . -3) (undo-tree-id7061 . -3) (undo-tree-id7062 . -3) (undo-tree-id7063 . -3) (undo-tree-id7064 . -3) (undo-tree-id7065 . -3) (undo-tree-id7066 . -3) (undo-tree-id7067 . -3) (undo-tree-id7068 . -3) (undo-tree-id7069 . -3) (undo-tree-id7070 . -3) (undo-tree-id7071 . -3) (undo-tree-id7072 . -3) (undo-tree-id7073 . -3) (undo-tree-id7074 . -3) (undo-tree-id7075 . -3) (undo-tree-id7076 . -3) (undo-tree-id7077 . -3) (undo-tree-id7078 . -3) (undo-tree-id7079 . -3) (undo-tree-id7080 . -3) (undo-tree-id7081 . -3) (undo-tree-id7082 . -3) (undo-tree-id7083 . -3) (undo-tree-id7084 . -3) (undo-tree-id7085 . -3) (undo-tree-id7086 . -3) (undo-tree-id7087 . -3) (undo-tree-id7088 . -3) (undo-tree-id7089 . -3) (undo-tree-id7090 . -3) (undo-tree-id7091 . -3) (undo-tree-id7092 . -3) (undo-tree-id7093 . -3) (undo-tree-id7094 . -3) (undo-tree-id7095 . -3) (undo-tree-id7096 . -3) (undo-tree-id7097 . -3) (undo-tree-id7098 . -3) (undo-tree-id7099 . -3) (undo-tree-id7100 . -3) (undo-tree-id7101 . -3) (undo-tree-id7102 . -3) (undo-tree-id7103 . -3) (undo-tree-id7104 . -3) (undo-tree-id7105 . -3) (undo-tree-id7106 . -3) (undo-tree-id7107 . -3) (undo-tree-id7108 . -3) (undo-tree-id7109 . -3) (undo-tree-id7110 . -3) (undo-tree-id7111 . -3) (undo-tree-id7112 . -3) (undo-tree-id7113 . -3) (undo-tree-id7114 . -3) (undo-tree-id7115 . -3) (undo-tree-id7116 . -3) (undo-tree-id7117 . -3) (undo-tree-id7118 . -3) (undo-tree-id7119 . -3) (undo-tree-id7120 . -3) (undo-tree-id7121 . -3) (undo-tree-id7122 . -3) (undo-tree-id7123 . -3) (undo-tree-id7124 . -3) (undo-tree-id7125 . -3) (undo-tree-id7126 . -3) (undo-tree-id7127 . -3) (undo-tree-id7128 . -3) (undo-tree-id7129 . -3) (undo-tree-id7130 . -3) (undo-tree-id7131 . -3) (undo-tree-id7132 . -3) (undo-tree-id7133 . -3) (undo-tree-id7134 . -3) (undo-tree-id7135 . -3) (undo-tree-id7136 . -3) (undo-tree-id7137 . -3) (undo-tree-id7138 . -3) (undo-tree-id7139 . -3) (undo-tree-id7140 . -3) (undo-tree-id7141 . -3) (undo-tree-id7142 . -3) (undo-tree-id7143 . -3) (undo-tree-id7144 . -3) (undo-tree-id7145 . -3) (undo-tree-id7146 . -3) (undo-tree-id7147 . -3) (undo-tree-id7148 . -3) (undo-tree-id7149 . -3) (undo-tree-id7150 . -3) (undo-tree-id7151 . -3) (undo-tree-id7152 . -3) (undo-tree-id7153 . -3) (undo-tree-id7154 . -3) (undo-tree-id7155 . -3) (undo-tree-id7156 . -3) (undo-tree-id7157 . -3) (undo-tree-id7158 . -3) (undo-tree-id7159 . -3) (undo-tree-id7160 . -3) (undo-tree-id7161 . -3) (undo-tree-id7162 . -3) (undo-tree-id7163 . -3) (undo-tree-id7164 . -3) (undo-tree-id7165 . -3) (undo-tree-id7166 . -3) (undo-tree-id7167 . -3) (undo-tree-id7168 . -3) (undo-tree-id7169 . -3) (undo-tree-id7170 . -3) (undo-tree-id7171 . -3) (undo-tree-id7172 . -3) (undo-tree-id7173 . -3) (undo-tree-id7174 . -3) (undo-tree-id7175 . -3) (undo-tree-id7176 . -3) (undo-tree-id7177 . -3) (undo-tree-id7178 . -3) (undo-tree-id7179 . -3) (undo-tree-id7180 . -3) (undo-tree-id7181 . -3) (undo-tree-id7182 . -3) (undo-tree-id7183 . -3) (undo-tree-id7184 . -3) (undo-tree-id7185 . -3) (undo-tree-id7186 . -3) (undo-tree-id7187 . -3) (undo-tree-id7188 . -3) (undo-tree-id7189 . -3) (undo-tree-id7190 . -3) (undo-tree-id7191 . -3) (undo-tree-id7192 . -3) (undo-tree-id7193 . -3) (undo-tree-id7194 . -3) (undo-tree-id7195 . -3) (undo-tree-id7196 . -3) (undo-tree-id7197 . -3) (undo-tree-id7198 . -3) (undo-tree-id7199 . -3) (undo-tree-id7200 . -3) (undo-tree-id7201 . -3) (undo-tree-id7202 . -3) (undo-tree-id7203 . -3) (undo-tree-id7204 . -3) (undo-tree-id7205 . -3) (undo-tree-id7206 . -3) (undo-tree-id7207 . -3) (undo-tree-id7208 . -3) (undo-tree-id7209 . -3) (undo-tree-id7210 . -3) (undo-tree-id7211 . -3) (undo-tree-id7212 . -3) (undo-tree-id7213 . -3) (undo-tree-id7214 . -3) (undo-tree-id7215 . -3) (undo-tree-id7216 . -3) (undo-tree-id7217 . -3) (undo-tree-id7218 . -3) (undo-tree-id7219 . -3) (undo-tree-id7220 . -3) (undo-tree-id7221 . -3) (undo-tree-id7222 . -3) (undo-tree-id7223 . -3) (undo-tree-id7224 . -3) (undo-tree-id7225 . -3) (undo-tree-id7226 . -3) (undo-tree-id7227 . -3) (undo-tree-id7228 . -3) (undo-tree-id7229 . -3) (undo-tree-id7230 . -3) (undo-tree-id7231 . -3) (undo-tree-id7232 . -3) (undo-tree-id7233 . -3) (undo-tree-id7234 . -3) (undo-tree-id7235 . -3) (undo-tree-id7236 . -3) (undo-tree-id7237 . -3) (undo-tree-id7238 . -3) (undo-tree-id7239 . -3) (undo-tree-id7240 . -3) (undo-tree-id7241 . -3) (undo-tree-id7242 . -3) (undo-tree-id7243 . -3) (undo-tree-id7244 . -3) (undo-tree-id7245 . -3) (undo-tree-id7246 . -3) (undo-tree-id7247 . -3) (undo-tree-id7248 . -3) (undo-tree-id7249 . -3) (undo-tree-id7250 . -3) (undo-tree-id7251 . -3) (undo-tree-id7252 . -3) (undo-tree-id7253 . -3) (undo-tree-id7254 . -3) (undo-tree-id7255 . -3) (undo-tree-id7256 . -3) (undo-tree-id7257 . -3) (undo-tree-id7258 . -3) (undo-tree-id7259 . -3) (undo-tree-id7260 . -3) (undo-tree-id7261 . -3) (undo-tree-id7262 . -3) (undo-tree-id7263 . -3) (undo-tree-id7264 . -3) (undo-tree-id7265 . -3) (undo-tree-id7266 . -3) (undo-tree-id7267 . -3) (undo-tree-id7268 . -3) (undo-tree-id7269 . -3) (undo-tree-id7270 . -3) (undo-tree-id7271 . -3) (undo-tree-id7272 . -3) (undo-tree-id7273 . -3) (undo-tree-id7274 . -3) (undo-tree-id7275 . -3) (undo-tree-id7276 . -3) (undo-tree-id7277 . -3) (undo-tree-id7278 . -3) (undo-tree-id7279 . -3) (undo-tree-id7280 . -3) (undo-tree-id7281 . -3) (undo-tree-id7282 . -3) (undo-tree-id7283 . -3) (undo-tree-id7284 . -3) (undo-tree-id7285 . -3) (undo-tree-id7286 . -3) (undo-tree-id7287 . -3) (undo-tree-id7288 . -3) (undo-tree-id7289 . -3) (undo-tree-id7290 . -3) (undo-tree-id7291 . -3) (undo-tree-id7292 . -3) (undo-tree-id7293 . -3) (undo-tree-id7294 . -3) (undo-tree-id7295 . -3) (undo-tree-id7296 . -3) (undo-tree-id7297 . -3) (undo-tree-id7298 . -3) (undo-tree-id7299 . -3) (undo-tree-id7300 . -3) (27037 . 27038) (#("_to_any_elmeen" 0 10 (fontified nil) 10 11 (face org-block-end-line fontified nil) 11 12 (face org-block-end-line fontified nil) 12 13 (face org-block-end-line fontified nil) 13 14 (face org-block-end-line fontified nil)) . 27037) (undo-tree-id7301 . -10) (undo-tree-id7302 . -10) (undo-tree-id7303 . -10) (undo-tree-id7304 . -10) (undo-tree-id7305 . -10) (undo-tree-id7306 . -10) (undo-tree-id7307 . -10) (undo-tree-id7308 . -10) (undo-tree-id7309 . -10) (undo-tree-id7310 . -10) (undo-tree-id7311 . -10) (undo-tree-id7312 . -10) (undo-tree-id7313 . -10) (undo-tree-id7314 . -10) (undo-tree-id7315 . -10) (undo-tree-id7316 . -10) (undo-tree-id7317 . -10) (undo-tree-id7318 . -10) (undo-tree-id7319 . -10) (undo-tree-id7320 . -10) (undo-tree-id7321 . -10) (undo-tree-id7322 . -10) (undo-tree-id7323 . -10) (undo-tree-id7324 . -10) (undo-tree-id7325 . -10) (undo-tree-id7326 . -10) (undo-tree-id7327 . -10) (undo-tree-id7328 . -10) (undo-tree-id7329 . -10) (undo-tree-id7330 . -10) (undo-tree-id7331 . -10) (undo-tree-id7332 . -10) (undo-tree-id7333 . -10) (undo-tree-id7334 . -10) (undo-tree-id7335 . -10) (undo-tree-id7336 . -10) (undo-tree-id7337 . -10) (undo-tree-id7338 . -10) (undo-tree-id7339 . -10) (undo-tree-id7340 . -10) (undo-tree-id7341 . -10) (undo-tree-id7342 . -10) (undo-tree-id7343 . -10) (undo-tree-id7344 . -10) (undo-tree-id7345 . -10) (undo-tree-id7346 . -10) (undo-tree-id7347 . -10) (undo-tree-id7348 . -10) (undo-tree-id7349 . -10) (undo-tree-id7350 . -10) (undo-tree-id7351 . -10) (undo-tree-id7352 . -10) (undo-tree-id7353 . -10) (undo-tree-id7354 . -10) (undo-tree-id7355 . -10) (undo-tree-id7356 . -10) (undo-tree-id7357 . -10) (undo-tree-id7358 . -10) (undo-tree-id7359 . -10) (undo-tree-id7360 . -10) (undo-tree-id7361 . -10) (undo-tree-id7362 . -10) (undo-tree-id7363 . -10) (undo-tree-id7364 . -10) (undo-tree-id7365 . -10) (undo-tree-id7366 . -10) (undo-tree-id7367 . -10) (undo-tree-id7368 . -10) (undo-tree-id7369 . -10) (undo-tree-id7370 . -10) (undo-tree-id7371 . -10) (undo-tree-id7372 . -10) (undo-tree-id7373 . -10) (undo-tree-id7374 . -10) (undo-tree-id7375 . -10) (undo-tree-id7376 . -10) (undo-tree-id7377 . -10) (undo-tree-id7378 . -10) (undo-tree-id7379 . -10) (undo-tree-id7380 . -10) (undo-tree-id7381 . -10) (undo-tree-id7382 . -10) (undo-tree-id7383 . -10) (undo-tree-id7384 . -10) (undo-tree-id7385 . -10) (undo-tree-id7386 . -10) (undo-tree-id7387 . -10) (undo-tree-id7388 . -10) (undo-tree-id7389 . -10) (undo-tree-id7390 . -10) (undo-tree-id7391 . -10) (undo-tree-id7392 . -10) (undo-tree-id7393 . -10) (undo-tree-id7394 . -10) (undo-tree-id7395 . -10) (undo-tree-id7396 . -10) (undo-tree-id7397 . -10) (undo-tree-id7398 . -10) (undo-tree-id7399 . -10) (undo-tree-id7400 . -10) (undo-tree-id7401 . -10) (undo-tree-id7402 . -10) (undo-tree-id7403 . -10) (undo-tree-id7404 . -10) (undo-tree-id7405 . -10) (undo-tree-id7406 . -10) (undo-tree-id7407 . -10) (undo-tree-id7408 . -10) (undo-tree-id7409 . -10) (undo-tree-id7410 . -10) (undo-tree-id7411 . -10) (undo-tree-id7412 . -10) (undo-tree-id7413 . -10) (undo-tree-id7414 . -10) (undo-tree-id7415 . -10) (undo-tree-id7416 . -10) (undo-tree-id7417 . -10) (undo-tree-id7418 . -10) (undo-tree-id7419 . -10) (undo-tree-id7420 . -10) (undo-tree-id7421 . -10) (undo-tree-id7422 . -10) (undo-tree-id7423 . -10) (undo-tree-id7424 . -10) (undo-tree-id7425 . -10) (undo-tree-id7426 . -10) (undo-tree-id7427 . -10) (undo-tree-id7428 . -10) (undo-tree-id7429 . -10) (undo-tree-id7430 . -10) (undo-tree-id7431 . -10) (undo-tree-id7432 . -10) (undo-tree-id7433 . -10) (undo-tree-id7434 . -10) (undo-tree-id7435 . -10) (undo-tree-id7436 . -10) (undo-tree-id7437 . -10) (undo-tree-id7438 . -10) (undo-tree-id7439 . -10) (undo-tree-id7440 . -10) (undo-tree-id7441 . -10) (undo-tree-id7442 . -10) (undo-tree-id7443 . -10) (undo-tree-id7444 . -10) (undo-tree-id7445 . -10) (undo-tree-id7446 . -10) (undo-tree-id7447 . -10) (undo-tree-id7448 . -10) (undo-tree-id7449 . -10) (undo-tree-id7450 . -10) (undo-tree-id7451 . -10) (undo-tree-id7452 . -10) (undo-tree-id7453 . -10) (undo-tree-id7454 . -10) (undo-tree-id7455 . -10) (undo-tree-id7456 . -10) (undo-tree-id7457 . -10) (undo-tree-id7458 . -10) (undo-tree-id7459 . -10) (undo-tree-id7460 . -10) (undo-tree-id7461 . -10) (undo-tree-id7462 . -10) (undo-tree-id7463 . -10) (undo-tree-id7464 . -10) (undo-tree-id7465 . -10) (undo-tree-id7466 . -10) (undo-tree-id7467 . -10) (undo-tree-id7468 . -10) (undo-tree-id7469 . -10) (undo-tree-id7470 . -10) (undo-tree-id7471 . -10) (undo-tree-id7472 . -10) (undo-tree-id7473 . -10) (undo-tree-id7474 . -10) (undo-tree-id7475 . -10) (undo-tree-id7476 . -10) (undo-tree-id7477 . -10) (undo-tree-id7478 . -10) (undo-tree-id7479 . -10) (undo-tree-id7480 . -10) (undo-tree-id7481 . -10) (undo-tree-id7482 . -10) (undo-tree-id7483 . -10) (undo-tree-id7484 . -10) (undo-tree-id7485 . -10) (undo-tree-id7486 . -10) (undo-tree-id7487 . -10) (undo-tree-id7488 . -10) (undo-tree-id7489 . -10) (undo-tree-id7490 . -10) (undo-tree-id7491 . -10) (undo-tree-id7492 . -10) (undo-tree-id7493 . -10) (undo-tree-id7494 . -10) (undo-tree-id7495 . -10) (undo-tree-id7496 . -10) (undo-tree-id7497 . -10) (undo-tree-id7498 . -10) (undo-tree-id7499 . -10) (undo-tree-id7500 . -10) (undo-tree-id7501 . -10) (undo-tree-id7502 . -10) (undo-tree-id7503 . -10) (undo-tree-id7504 . -10) (undo-tree-id7505 . -10) (undo-tree-id7506 . -10) (undo-tree-id7507 . -10) (undo-tree-id7508 . -10) (undo-tree-id7509 . -10) (undo-tree-id7510 . -10) (undo-tree-id7511 . -10) (undo-tree-id7512 . -10) (undo-tree-id7513 . -10) (undo-tree-id7514 . -10) (undo-tree-id7515 . -10) (undo-tree-id7516 . -10) (undo-tree-id7517 . -10) (undo-tree-id7518 . -10) (undo-tree-id7519 . -10) (undo-tree-id7520 . -10) (undo-tree-id7521 . -10) (undo-tree-id7522 . -10) (undo-tree-id7523 . -10) (undo-tree-id7524 . -10) (undo-tree-id7525 . -10) (undo-tree-id7526 . -10) (undo-tree-id7527 . -10) (undo-tree-id7528 . -10) (undo-tree-id7529 . -10) (undo-tree-id7530 . -10) (undo-tree-id7531 . -10) (undo-tree-id7532 . -10) (undo-tree-id7533 . -10) (undo-tree-id7534 . -10) (undo-tree-id7535 . -10) (undo-tree-id7536 . -10) (undo-tree-id7537 . -10) (undo-tree-id7538 . -10) (undo-tree-id7539 . -10) (undo-tree-id7540 . -10) (undo-tree-id7541 . -10) (undo-tree-id7542 . -10) (undo-tree-id7543 . -10) (undo-tree-id7544 . -10) (undo-tree-id7545 . -10) (undo-tree-id7546 . -10) (undo-tree-id7547 . -10) (undo-tree-id7548 . -10) (undo-tree-id7549 . -10) (undo-tree-id7550 . -10) (undo-tree-id7551 . -10) (undo-tree-id7552 . -10) (undo-tree-id7553 . -10) (undo-tree-id7554 . -10) (undo-tree-id7555 . -10) (undo-tree-id7556 . -10) (undo-tree-id7557 . -10) (undo-tree-id7558 . -10) (undo-tree-id7559 . -10) (undo-tree-id7560 . -10) (undo-tree-id7561 . -10) (undo-tree-id7562 . -10) (undo-tree-id7563 . -10) (undo-tree-id7564 . -10) (undo-tree-id7565 . -10) (undo-tree-id7566 . -10) (undo-tree-id7567 . -10) (undo-tree-id7568 . -10) (undo-tree-id7569 . -10) (undo-tree-id7570 . -10) (undo-tree-id7571 . -10) (undo-tree-id7572 . -10) (undo-tree-id7573 . -10) (undo-tree-id7574 . -10) (undo-tree-id7575 . -10) (undo-tree-id7576 . -10) (undo-tree-id7577 . -10) (undo-tree-id7578 . -10) (undo-tree-id7579 . -10) (undo-tree-id7580 . -10) (undo-tree-id7581 . -10) (undo-tree-id7582 . -10) (undo-tree-id7583 . -10) (undo-tree-id7584 . -10) (undo-tree-id7585 . -10) (undo-tree-id7586 . -10) (undo-tree-id7587 . -10) (undo-tree-id7588 . -10) (undo-tree-id7589 . -10) (undo-tree-id7590 . -10) (undo-tree-id7591 . -10) (undo-tree-id7592 . -10) (undo-tree-id7593 . -10) (undo-tree-id7594 . -10) (undo-tree-id7595 . -10) (undo-tree-id7596 . -10) (undo-tree-id7597 . -10) (undo-tree-id7598 . -10) (undo-tree-id7599 . -10) (undo-tree-id7600 . -10) (undo-tree-id7601 . -10) (undo-tree-id7602 . -10) (undo-tree-id7603 . -10) (undo-tree-id7604 . -10) (undo-tree-id7605 . -10) (undo-tree-id7606 . -10) (undo-tree-id7607 . -10) (undo-tree-id7608 . -10) (undo-tree-id7609 . -10) (undo-tree-id7610 . -10) (undo-tree-id7611 . -10) (undo-tree-id7612 . -10) (undo-tree-id7613 . -10) (undo-tree-id7614 . -10) (undo-tree-id7615 . -10) (undo-tree-id7616 . -10) (undo-tree-id7617 . -10) (undo-tree-id7618 . -10) (undo-tree-id7619 . -10) (undo-tree-id7620 . -10) (undo-tree-id7621 . -10) (undo-tree-id7622 . -10) (undo-tree-id7623 . -10) (undo-tree-id7624 . -10) (undo-tree-id7625 . -10) (undo-tree-id7626 . -10) (undo-tree-id7627 . -10) (undo-tree-id7628 . -10) (undo-tree-id7629 . -10) (undo-tree-id7630 . -10) (undo-tree-id7631 . -10) (undo-tree-id7632 . -10) (undo-tree-id7633 . -10) (undo-tree-id7634 . -10) (undo-tree-id7635 . -10) (undo-tree-id7636 . -10) (undo-tree-id7637 . -10) (undo-tree-id7638 . -10) (undo-tree-id7639 . -10) (undo-tree-id7640 . -10) (undo-tree-id7641 . -10) (undo-tree-id7642 . -10) (undo-tree-id7643 . -10) (undo-tree-id7644 . -10) (undo-tree-id7645 . -10) (undo-tree-id7646 . -10) (undo-tree-id7647 . -10) (undo-tree-id7648 . -10) (undo-tree-id7649 . -10) (undo-tree-id7650 . -10) (undo-tree-id7651 . -10) (undo-tree-id7652 . -10) (undo-tree-id7653 . -10) (undo-tree-id7654 . -10) (undo-tree-id7655 . -10) (undo-tree-id7656 . -10) (undo-tree-id7657 . -10) (undo-tree-id7658 . -10) (undo-tree-id7659 . -10) (undo-tree-id7660 . -10) (undo-tree-id7661 . -10) (undo-tree-id7662 . -10) (undo-tree-id7663 . -10) (undo-tree-id7664 . -10) (undo-tree-id7665 . -10) (undo-tree-id7666 . -10) (undo-tree-id7667 . -10) (undo-tree-id7668 . -10) (undo-tree-id7669 . -10) (undo-tree-id7670 . -10) (undo-tree-id7671 . -10) (undo-tree-id7672 . -10) (undo-tree-id7673 . -10) (undo-tree-id7674 . -10) (undo-tree-id7675 . -10) (undo-tree-id7676 . -10) (undo-tree-id7677 . -10) (undo-tree-id7678 . -10) (undo-tree-id7679 . -10) (undo-tree-id7680 . -10) (undo-tree-id7681 . -10) (undo-tree-id7682 . -10) (undo-tree-id7683 . -10) (undo-tree-id7684 . -10) (undo-tree-id7685 . -10) (undo-tree-id7686 . -10) (undo-tree-id7687 . -10) (undo-tree-id7688 . -10) (undo-tree-id7689 . -10) (undo-tree-id7690 . -10) (undo-tree-id7691 . -10) (undo-tree-id7692 . -10) (undo-tree-id7693 . -10) (undo-tree-id7694 . -10) (undo-tree-id7695 . -10) (undo-tree-id7696 . -10) (undo-tree-id7697 . -10) (undo-tree-id7698 . -10) (undo-tree-id7699 . -10) (undo-tree-id7700 . -10) (undo-tree-id7701 . -10) (undo-tree-id7702 . -10) (undo-tree-id7703 . -10) (undo-tree-id7704 . -10) (undo-tree-id7705 . -10) (undo-tree-id7706 . -10) (undo-tree-id7707 . -10) (undo-tree-id7708 . -10) (undo-tree-id7709 . -10) (undo-tree-id7710 . -10) (undo-tree-id7711 . -10) (undo-tree-id7712 . -10) (undo-tree-id7713 . -10) (undo-tree-id7714 . -10) (undo-tree-id7715 . -10) (undo-tree-id7716 . -10) (undo-tree-id7717 . -10) (undo-tree-id7718 . -10) (undo-tree-id7719 . -10) (undo-tree-id7720 . -10) (undo-tree-id7721 . -10) (undo-tree-id7722 . -10) (undo-tree-id7723 . -10) (undo-tree-id7724 . -10) (undo-tree-id7725 . -10) (undo-tree-id7726 . -10) (undo-tree-id7727 . -10) (undo-tree-id7728 . -10) (undo-tree-id7729 . -10) (undo-tree-id7730 . -10) (undo-tree-id7731 . -10) (undo-tree-id7732 . -10) (undo-tree-id7733 . -10) (undo-tree-id7734 . -10) (undo-tree-id7735 . -10) (undo-tree-id7736 . -10) (undo-tree-id7737 . -10) (undo-tree-id7738 . -10) (undo-tree-id7739 . -10) (undo-tree-id7740 . -10) (undo-tree-id7741 . -10) (undo-tree-id7742 . -10) (undo-tree-id7743 . -10) (undo-tree-id7744 . -10) (undo-tree-id7745 . -10) (undo-tree-id7746 . -10) (undo-tree-id7747 . -10) (undo-tree-id7748 . -10) (undo-tree-id7749 . -10) (undo-tree-id7750 . -10) (undo-tree-id7751 . -10) (undo-tree-id7752 . -10) (undo-tree-id7753 . -10) (undo-tree-id7754 . -10) (undo-tree-id7755 . -10) (undo-tree-id7756 . -10) (undo-tree-id7757 . -10) (undo-tree-id7758 . -10) (undo-tree-id7759 . -10) (undo-tree-id7760 . -10) (undo-tree-id7761 . -10) (undo-tree-id7762 . -10) (undo-tree-id7763 . -10) (undo-tree-id7764 . -10) (undo-tree-id7765 . -10) (undo-tree-id7766 . -10) (undo-tree-id7767 . -10) (undo-tree-id7768 . -10) (undo-tree-id7769 . -10) (undo-tree-id7770 . -10) (undo-tree-id7771 . -10) (undo-tree-id7772 . -10) (undo-tree-id7773 . -10) (undo-tree-id7774 . -10) (undo-tree-id7775 . -10) (undo-tree-id7776 . -10) (undo-tree-id7777 . -10) (undo-tree-id7778 . -10) (undo-tree-id7779 . -10) (undo-tree-id7780 . -10) (undo-tree-id7781 . -10) (undo-tree-id7782 . -10) (undo-tree-id7783 . -10) (undo-tree-id7784 . -10) (undo-tree-id7785 . -10) (undo-tree-id7786 . -10) (undo-tree-id7787 . -10) (undo-tree-id7788 . -10) (undo-tree-id7789 . -10) (undo-tree-id7790 . -10) (undo-tree-id7791 . -10) (undo-tree-id7792 . -10) (undo-tree-id7793 . -10) (undo-tree-id7794 . -10) (undo-tree-id7795 . -10) (undo-tree-id7796 . -10) (undo-tree-id7797 . -10) (undo-tree-id7798 . -10) (undo-tree-id7799 . -10) (27047 . 27051) (#("elemt" 0 1 (fontified nil) 1 2 (face org-block-end-line fontified nil) 2 3 (face org-block-end-line fontified nil) 3 4 (face org-block-end-line fontified nil) 4 5 (face org-block-end-line fontified nil)) . 27047) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (undo-tree-id7836 . -1) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (undo-tree-id7852 . -1) (undo-tree-id7853 . -1) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) (undo-tree-id7862 . -1) (undo-tree-id7863 . -1) (undo-tree-id7864 . -1) (undo-tree-id7865 . -1) (undo-tree-id7866 . -1) (undo-tree-id7867 . -1) (undo-tree-id7868 . -1) (undo-tree-id7869 . -1) (undo-tree-id7870 . -1) (undo-tree-id7871 . -1) (undo-tree-id7872 . -1) (undo-tree-id7873 . -1) (undo-tree-id7874 . -1) (undo-tree-id7875 . -1) (undo-tree-id7876 . -1) (undo-tree-id7877 . -1) (undo-tree-id7878 . -1) (undo-tree-id7879 . -1) (undo-tree-id7880 . -1) (undo-tree-id7881 . -1) (undo-tree-id7882 . -1) (undo-tree-id7883 . -1) (undo-tree-id7884 . -1) (undo-tree-id7885 . -1) (undo-tree-id7886 . -1) (undo-tree-id7887 . -1) (undo-tree-id7888 . -1) (undo-tree-id7889 . -1) (undo-tree-id7890 . -1) (undo-tree-id7891 . -1) (undo-tree-id7892 . -1) (undo-tree-id7893 . -1) (undo-tree-id7894 . -1) (undo-tree-id7895 . -1) (undo-tree-id7896 . -1) (undo-tree-id7897 . -1) (undo-tree-id7898 . -1) (undo-tree-id7899 . -1) (undo-tree-id7900 . -1) (undo-tree-id7901 . -1) (undo-tree-id7902 . -1) (undo-tree-id7903 . -1) (undo-tree-id7904 . -1) (undo-tree-id7905 . -1) (undo-tree-id7906 . -1) (undo-tree-id7907 . -1) (undo-tree-id7908 . -1) (undo-tree-id7909 . -1) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) (undo-tree-id7912 . -1) (undo-tree-id7913 . -1) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) (undo-tree-id7916 . -1) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7919 . -1) (undo-tree-id7920 . -1) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (undo-tree-id7935 . -1) (undo-tree-id7936 . -1) (undo-tree-id7937 . -1) (undo-tree-id7938 . -1) (undo-tree-id7939 . -1) (undo-tree-id7940 . -1) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (undo-tree-id7943 . -1) (undo-tree-id7944 . -1) (undo-tree-id7945 . -1) (undo-tree-id7946 . -1) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (undo-tree-id7949 . -1) (undo-tree-id7950 . -1) (undo-tree-id7951 . -1) (undo-tree-id7952 . -1) (undo-tree-id7953 . -1) (undo-tree-id7954 . -1) (undo-tree-id7955 . -1) (undo-tree-id7956 . -1) (undo-tree-id7957 . -1) (undo-tree-id7958 . -1) (undo-tree-id7959 . -1) (undo-tree-id7960 . -1) (undo-tree-id7961 . -1) (undo-tree-id7962 . -1) (undo-tree-id7963 . -1) (undo-tree-id7964 . -1) (undo-tree-id7965 . -1) (undo-tree-id7966 . -1) (undo-tree-id7967 . -1) (undo-tree-id7968 . -1) (undo-tree-id7969 . -1) (undo-tree-id7970 . -1) (undo-tree-id7971 . -1) (undo-tree-id7972 . -1) (undo-tree-id7973 . -1) (undo-tree-id7974 . -1) (undo-tree-id7975 . -1) (undo-tree-id7976 . -1) (undo-tree-id7977 . -1) (undo-tree-id7978 . -1) (undo-tree-id7979 . -1) (undo-tree-id7980 . -1) (undo-tree-id7981 . -1) (undo-tree-id7982 . -1) (undo-tree-id7983 . -1) (undo-tree-id7984 . -1) (undo-tree-id7985 . -1) (undo-tree-id7986 . -1) (undo-tree-id7987 . -1) (undo-tree-id7988 . -1) (undo-tree-id7989 . -1) (undo-tree-id7990 . -1) (undo-tree-id7991 . -1) (undo-tree-id7992 . -1) (undo-tree-id7993 . -1) (undo-tree-id7994 . -1) (undo-tree-id7995 . -1) (undo-tree-id7996 . -1) (undo-tree-id7997 . -1) (undo-tree-id7998 . -1) (undo-tree-id7999 . -1) (undo-tree-id8000 . -1) (undo-tree-id8001 . -1) (undo-tree-id8002 . -1) (undo-tree-id8003 . -1) (undo-tree-id8004 . -1) (undo-tree-id8005 . -1) (undo-tree-id8006 . -1) (undo-tree-id8007 . -1) (undo-tree-id8008 . -1) (undo-tree-id8009 . -1) (undo-tree-id8010 . -1) (undo-tree-id8011 . -1) (undo-tree-id8012 . -1) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . -1) (undo-tree-id8025 . -1) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (undo-tree-id8028 . -1) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (undo-tree-id8038 . -1) (undo-tree-id8039 . -1) (undo-tree-id8040 . -1) (undo-tree-id8041 . -1) (undo-tree-id8042 . -1) (undo-tree-id8043 . -1) (undo-tree-id8044 . -1) (undo-tree-id8045 . -1) (undo-tree-id8046 . -1) (undo-tree-id8047 . -1) (undo-tree-id8048 . -1) (undo-tree-id8049 . -1) (undo-tree-id8050 . -1) (undo-tree-id8051 . -1) (undo-tree-id8052 . -1) (undo-tree-id8053 . -1) (undo-tree-id8054 . -1) (undo-tree-id8055 . -1) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) (undo-tree-id8075 . -1) (undo-tree-id8076 . -1) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) (undo-tree-id8081 . -1) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) (undo-tree-id8096 . -1) (undo-tree-id8097 . -1) (undo-tree-id8098 . -1) (undo-tree-id8099 . -1) (undo-tree-id8100 . -1) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8103 . -1) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (undo-tree-id8108 . -1) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8111 . -1) (undo-tree-id8112 . -1) (undo-tree-id8113 . -1) (undo-tree-id8114 . -1) (undo-tree-id8115 . -1) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (undo-tree-id8120 . -1) (undo-tree-id8121 . -1) (undo-tree-id8122 . -1) (undo-tree-id8123 . -1) (undo-tree-id8124 . -1) (undo-tree-id8125 . -1) (undo-tree-id8126 . -1) (undo-tree-id8127 . -1) (undo-tree-id8128 . -1) (undo-tree-id8129 . -1) (undo-tree-id8130 . -1) (undo-tree-id8131 . -1) (undo-tree-id8132 . -1) (undo-tree-id8133 . -1) (undo-tree-id8134 . -1) (undo-tree-id8135 . -1) (undo-tree-id8136 . -1) (undo-tree-id8137 . -1) (undo-tree-id8138 . -1) (undo-tree-id8139 . -1) (undo-tree-id8140 . -1) (undo-tree-id8141 . -1) (undo-tree-id8142 . -1) (undo-tree-id8143 . -1) (undo-tree-id8144 . -1) (undo-tree-id8145 . -1) (undo-tree-id8146 . -1) (undo-tree-id8147 . -1) (undo-tree-id8148 . -1) (undo-tree-id8149 . -1) (undo-tree-id8150 . -1) (undo-tree-id8151 . -1) (undo-tree-id8152 . -1) (undo-tree-id8153 . -1) (undo-tree-id8154 . -1) (undo-tree-id8155 . -1) (undo-tree-id8156 . -1) (undo-tree-id8157 . -1) (undo-tree-id8158 . -1) (undo-tree-id8159 . -1) (undo-tree-id8160 . -1) (undo-tree-id8161 . -1) (undo-tree-id8162 . -1) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (undo-tree-id8165 . -1) (undo-tree-id8166 . -1) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) (undo-tree-id8169 . -1) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) (undo-tree-id8183 . -1) (undo-tree-id8184 . -1) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (undo-tree-id8212 . -1) (undo-tree-id8213 . -1) (undo-tree-id8214 . -1) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) (undo-tree-id8220 . -1) (undo-tree-id8221 . -1) (undo-tree-id8222 . -1) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1) (undo-tree-id8225 . -1) (undo-tree-id8226 . -1) (undo-tree-id8227 . -1) (undo-tree-id8228 . -1) (undo-tree-id8229 . -1) (undo-tree-id8230 . -1) (undo-tree-id8231 . -1) (undo-tree-id8232 . -1) (undo-tree-id8233 . -1) (undo-tree-id8234 . -1) (undo-tree-id8235 . -1) (undo-tree-id8236 . -1) (undo-tree-id8237 . -1) (undo-tree-id8238 . -1) (undo-tree-id8239 . -1) (undo-tree-id8240 . -1) (undo-tree-id8241 . -1) (undo-tree-id8242 . -1) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (27049 . 27052) (#("m" 0 1 (face org-block-end-line fontified nil)) . 27049) (27048 . 27050) (#("ment_focused_in_the_d" 0 21 (fontified nil)) . 27048) (undo-tree-id8299 . -21) (undo-tree-id8300 . -21) (undo-tree-id8301 . -21) (undo-tree-id8302 . -21) (undo-tree-id8303 . -21) (undo-tree-id8304 . -21) (undo-tree-id8305 . -21) (undo-tree-id8306 . -21) (undo-tree-id8307 . -21) (undo-tree-id8308 . -21) (undo-tree-id8309 . -21) (undo-tree-id8310 . -21) (undo-tree-id8311 . -21) (undo-tree-id8312 . -21) (undo-tree-id8313 . -21) (undo-tree-id8314 . -21) (undo-tree-id8315 . -21) (undo-tree-id8316 . -21) (undo-tree-id8317 . -21) (undo-tree-id8318 . -21) (undo-tree-id8319 . -21) (undo-tree-id8320 . -21) (undo-tree-id8321 . -21) (undo-tree-id8322 . -21) (undo-tree-id8323 . -21) (undo-tree-id8324 . -21) (undo-tree-id8325 . -21) (undo-tree-id8326 . -21) (undo-tree-id8327 . -21) (undo-tree-id8328 . -21) (undo-tree-id8329 . -21) (undo-tree-id8330 . -21) (undo-tree-id8331 . -21) (undo-tree-id8332 . -21) (undo-tree-id8333 . -21) (undo-tree-id8334 . -21) (undo-tree-id8335 . -21) (undo-tree-id8336 . -21) (undo-tree-id8337 . -21) (undo-tree-id8338 . -21) (undo-tree-id8339 . -21) (undo-tree-id8340 . -21) (undo-tree-id8341 . -21) (undo-tree-id8342 . -21) (undo-tree-id8343 . -21) (undo-tree-id8344 . -21) (undo-tree-id8345 . -21) (undo-tree-id8346 . -21) (undo-tree-id8347 . -21) (undo-tree-id8348 . -21) (undo-tree-id8349 . -21) (undo-tree-id8350 . -21) (undo-tree-id8351 . -21) (undo-tree-id8352 . -21) (undo-tree-id8353 . -21) (undo-tree-id8354 . -21) (undo-tree-id8355 . -21) (undo-tree-id8356 . -21) (undo-tree-id8357 . -21) (undo-tree-id8358 . -21) (undo-tree-id8359 . -21) (undo-tree-id8360 . -21) (undo-tree-id8361 . -21) (undo-tree-id8362 . -21) (undo-tree-id8363 . -21) (undo-tree-id8364 . -21) (undo-tree-id8365 . -21) (undo-tree-id8366 . -21) (undo-tree-id8367 . -21) (undo-tree-id8368 . -21) (undo-tree-id8369 . -21) (undo-tree-id8370 . -21) (undo-tree-id8371 . -21) (undo-tree-id8372 . -21) (undo-tree-id8373 . -21) (undo-tree-id8374 . -21) (undo-tree-id8375 . -21) (undo-tree-id8376 . -21) (undo-tree-id8377 . -21) (undo-tree-id8378 . -21) (undo-tree-id8379 . -21) (undo-tree-id8380 . -21) (undo-tree-id8381 . -21) (undo-tree-id8382 . -21) (undo-tree-id8383 . -21) (undo-tree-id8384 . -21) (undo-tree-id8385 . -21) (undo-tree-id8386 . -21) (undo-tree-id8387 . -21) (undo-tree-id8388 . -21) (undo-tree-id8389 . -21) (undo-tree-id8390 . -21) (undo-tree-id8391 . -21) (undo-tree-id8392 . -21) (undo-tree-id8393 . -21) (undo-tree-id8394 . -21) (undo-tree-id8395 . -21) (undo-tree-id8396 . -21) (undo-tree-id8397 . -21) (undo-tree-id8398 . -21) (undo-tree-id8399 . -21) (undo-tree-id8400 . -21) (undo-tree-id8401 . -21) (undo-tree-id8402 . -21) (undo-tree-id8403 . -21) (undo-tree-id8404 . -21) (undo-tree-id8405 . -21) (undo-tree-id8406 . -21) (undo-tree-id8407 . -21) (undo-tree-id8408 . -21) (undo-tree-id8409 . -21) (undo-tree-id8410 . -21) (undo-tree-id8411 . -21) (undo-tree-id8412 . -21) (undo-tree-id8413 . -21) (undo-tree-id8414 . -21) (undo-tree-id8415 . -21) (undo-tree-id8416 . -21) (undo-tree-id8417 . -21) (undo-tree-id8418 . -21) (undo-tree-id8419 . -21) (undo-tree-id8420 . -21) (undo-tree-id8421 . -21) (undo-tree-id8422 . -21) (undo-tree-id8423 . -21) (undo-tree-id8424 . -21) (undo-tree-id8425 . -21) (undo-tree-id8426 . -21) (undo-tree-id8427 . -21) (undo-tree-id8428 . -21) (undo-tree-id8429 . -21) (undo-tree-id8430 . -21) (undo-tree-id8431 . -21) (undo-tree-id8432 . -21) (undo-tree-id8433 . -21) (undo-tree-id8434 . -21) (undo-tree-id8435 . -21) (undo-tree-id8436 . -21) (undo-tree-id8437 . -21) (undo-tree-id8438 . -21) (undo-tree-id8439 . -21) (undo-tree-id8440 . -21) (undo-tree-id8441 . -21) (undo-tree-id8442 . -21) (undo-tree-id8443 . -21) (undo-tree-id8444 . -21) (undo-tree-id8445 . -21) (undo-tree-id8446 . -21) (undo-tree-id8447 . -21) (undo-tree-id8448 . -21) (undo-tree-id8449 . -21) (undo-tree-id8450 . -21) (undo-tree-id8451 . -21) (undo-tree-id8452 . -21) (undo-tree-id8453 . -21) (undo-tree-id8454 . -21) (undo-tree-id8455 . -21) (undo-tree-id8456 . -21) (undo-tree-id8457 . -21) (undo-tree-id8458 . -21) (undo-tree-id8459 . -21) (undo-tree-id8460 . -21) (undo-tree-id8461 . -21) (undo-tree-id8462 . -21) (undo-tree-id8463 . -21) (undo-tree-id8464 . -21) (undo-tree-id8465 . -21) (undo-tree-id8466 . -21) (undo-tree-id8467 . -21) (undo-tree-id8468 . -21) (undo-tree-id8469 . -21) (undo-tree-id8470 . -21) (undo-tree-id8471 . -21) (undo-tree-id8472 . -21) (undo-tree-id8473 . -21) (undo-tree-id8474 . -21) (undo-tree-id8475 . -21) (undo-tree-id8476 . -21) (undo-tree-id8477 . -21) (undo-tree-id8478 . -21) (undo-tree-id8479 . -21) (undo-tree-id8480 . -21) (undo-tree-id8481 . -21) (undo-tree-id8482 . -21) (undo-tree-id8483 . -21) (undo-tree-id8484 . -21) (undo-tree-id8485 . -21) (undo-tree-id8486 . -21) (undo-tree-id8487 . -21) (undo-tree-id8488 . -21) (undo-tree-id8489 . -21) (undo-tree-id8490 . -21) (undo-tree-id8491 . -21) (undo-tree-id8492 . -21) (undo-tree-id8493 . -21) (undo-tree-id8494 . -21) (undo-tree-id8495 . -21) (undo-tree-id8496 . -21) (undo-tree-id8497 . -21) (undo-tree-id8498 . -21) (undo-tree-id8499 . -21) (undo-tree-id8500 . -21) (undo-tree-id8501 . -21) (undo-tree-id8502 . -21) (undo-tree-id8503 . -21) (undo-tree-id8504 . -21) (undo-tree-id8505 . -21) (undo-tree-id8506 . -21) (undo-tree-id8507 . -21) (undo-tree-id8508 . -21) (undo-tree-id8509 . -21) (undo-tree-id8510 . -21) (undo-tree-id8511 . -21) (undo-tree-id8512 . -21) (undo-tree-id8513 . -21) (undo-tree-id8514 . -21) (undo-tree-id8515 . -21) (undo-tree-id8516 . -21) (undo-tree-id8517 . -21) (undo-tree-id8518 . -21) (undo-tree-id8519 . -21) (undo-tree-id8520 . -21) (undo-tree-id8521 . -21) (undo-tree-id8522 . -21) (undo-tree-id8523 . -21) (undo-tree-id8524 . -21) (undo-tree-id8525 . -21) (undo-tree-id8526 . -21) (undo-tree-id8527 . -21) (undo-tree-id8528 . -21) (undo-tree-id8529 . -21) (undo-tree-id8530 . -21) (undo-tree-id8531 . -21) (undo-tree-id8532 . -21) (undo-tree-id8533 . -21) (undo-tree-id8534 . -21) (undo-tree-id8535 . -21) (undo-tree-id8536 . -21) (undo-tree-id8537 . -21) (undo-tree-id8538 . -21) (undo-tree-id8539 . -21) (undo-tree-id8540 . -21) (undo-tree-id8541 . -21) (undo-tree-id8542 . -21) (undo-tree-id8543 . -21) (undo-tree-id8544 . -21) (undo-tree-id8545 . -21) (undo-tree-id8546 . -21) (undo-tree-id8547 . -21) (undo-tree-id8548 . -21) (undo-tree-id8549 . -21) (undo-tree-id8550 . -21) (undo-tree-id8551 . -21) (undo-tree-id8552 . -21) (undo-tree-id8553 . -21) (undo-tree-id8554 . -21) (undo-tree-id8555 . -21) (undo-tree-id8556 . -21) (undo-tree-id8557 . -21) (undo-tree-id8558 . -21) (undo-tree-id8559 . -21) (undo-tree-id8560 . -21) (undo-tree-id8561 . -21) (undo-tree-id8562 . -21) (undo-tree-id8563 . -21) (undo-tree-id8564 . -21) (undo-tree-id8565 . -21) (undo-tree-id8566 . -21) (undo-tree-id8567 . -21) (undo-tree-id8568 . -21) (undo-tree-id8569 . -21) (undo-tree-id8570 . -21) (undo-tree-id8571 . -21) (undo-tree-id8572 . -21) (undo-tree-id8573 . -21) (undo-tree-id8574 . -21) (undo-tree-id8575 . -21) (undo-tree-id8576 . -21) (undo-tree-id8577 . -21) (undo-tree-id8578 . -21) (undo-tree-id8579 . -21) (undo-tree-id8580 . -21) (undo-tree-id8581 . -21) (undo-tree-id8582 . -21) (undo-tree-id8583 . -21) (undo-tree-id8584 . -21) (undo-tree-id8585 . -21) (undo-tree-id8586 . -21) (undo-tree-id8587 . -21) (undo-tree-id8588 . -21) (undo-tree-id8589 . -21) (undo-tree-id8590 . -21) (undo-tree-id8591 . -21) (undo-tree-id8592 . -21) (undo-tree-id8593 . -21) (undo-tree-id8594 . -21) (undo-tree-id8595 . -21) (undo-tree-id8596 . -21) (undo-tree-id8597 . -21) (undo-tree-id8598 . -21) (undo-tree-id8599 . -21) (undo-tree-id8600 . -21) (undo-tree-id8601 . -21) (undo-tree-id8602 . -21) (undo-tree-id8603 . -21) (undo-tree-id8604 . -21) (undo-tree-id8605 . -21) (undo-tree-id8606 . -21) (undo-tree-id8607 . -21) (undo-tree-id8608 . -21) (undo-tree-id8609 . -21) (undo-tree-id8610 . -21) (undo-tree-id8611 . -21) (undo-tree-id8612 . -21) (undo-tree-id8613 . -21) (undo-tree-id8614 . -21) (undo-tree-id8615 . -21) (undo-tree-id8616 . -21) (undo-tree-id8617 . -21) (undo-tree-id8618 . -21) (undo-tree-id8619 . -21) (undo-tree-id8620 . -21) (undo-tree-id8621 . -21) (undo-tree-id8622 . -21) (undo-tree-id8623 . -21) (undo-tree-id8624 . -21) (undo-tree-id8625 . -21) (undo-tree-id8626 . -21) (undo-tree-id8627 . -21) (undo-tree-id8628 . -21) (undo-tree-id8629 . -21) (undo-tree-id8630 . -21) (undo-tree-id8631 . -21) (undo-tree-id8632 . -21) (undo-tree-id8633 . -21) (undo-tree-id8634 . -21) (undo-tree-id8635 . -21) (undo-tree-id8636 . -21) (undo-tree-id8637 . -21) (undo-tree-id8638 . -21) (undo-tree-id8639 . -21) (undo-tree-id8640 . -21) (undo-tree-id8641 . -21) (undo-tree-id8642 . -21) (undo-tree-id8643 . -21) (undo-tree-id8644 . -21) (undo-tree-id8645 . -21) (undo-tree-id8646 . -21) (undo-tree-id8647 . -21) (undo-tree-id8648 . -21) (undo-tree-id8649 . -21) (undo-tree-id8650 . -21) (undo-tree-id8651 . -21) (undo-tree-id8652 . -21) (undo-tree-id8653 . -21) (undo-tree-id8654 . -21) (undo-tree-id8655 . -21) (undo-tree-id8656 . -21) (undo-tree-id8657 . -21) (undo-tree-id8658 . -21) (undo-tree-id8659 . -21) (undo-tree-id8660 . -21) (undo-tree-id8661 . -21) (undo-tree-id8662 . -21) (undo-tree-id8663 . -21) (undo-tree-id8664 . -21) (undo-tree-id8665 . -21) (undo-tree-id8666 . -21) (undo-tree-id8667 . -21) (undo-tree-id8668 . -21) (undo-tree-id8669 . -21) (undo-tree-id8670 . -21) (undo-tree-id8671 . -21) (undo-tree-id8672 . -21) (undo-tree-id8673 . -21) (undo-tree-id8674 . -21) (undo-tree-id8675 . -21) (undo-tree-id8676 . -21) (undo-tree-id8677 . -21) (undo-tree-id8678 . -21) (undo-tree-id8679 . -21) (undo-tree-id8680 . -21) (undo-tree-id8681 . -21) (undo-tree-id8682 . -21) (undo-tree-id8683 . -21) (undo-tree-id8684 . -21) (undo-tree-id8685 . -21) (undo-tree-id8686 . -21) (undo-tree-id8687 . -21) (undo-tree-id8688 . -21) (undo-tree-id8689 . -21) (undo-tree-id8690 . -21) (undo-tree-id8691 . -21) (undo-tree-id8692 . -21) (undo-tree-id8693 . -21) (undo-tree-id8694 . -21) (undo-tree-id8695 . -21) (undo-tree-id8696 . -21) (undo-tree-id8697 . -21) (undo-tree-id8698 . -21) (undo-tree-id8699 . -21) (undo-tree-id8700 . -21) (undo-tree-id8701 . -21) (undo-tree-id8702 . -21) (undo-tree-id8703 . -21) (undo-tree-id8704 . -21) (undo-tree-id8705 . -21) (undo-tree-id8706 . -21) (undo-tree-id8707 . -21) (undo-tree-id8708 . -21) (undo-tree-id8709 . -21) (undo-tree-id8710 . -21) (undo-tree-id8711 . -21) (undo-tree-id8712 . -21) (undo-tree-id8713 . -21) (undo-tree-id8714 . -21) (undo-tree-id8715 . -21) (undo-tree-id8716 . -21) (undo-tree-id8717 . -21) (undo-tree-id8718 . -21) (undo-tree-id8719 . -21) (undo-tree-id8720 . -21) (undo-tree-id8721 . -21) (undo-tree-id8722 . -21) (undo-tree-id8723 . -21) (undo-tree-id8724 . -21) (undo-tree-id8725 . -21) (undo-tree-id8726 . -21) (undo-tree-id8727 . -21) (undo-tree-id8728 . -21) (undo-tree-id8729 . -21) (undo-tree-id8730 . -21) (undo-tree-id8731 . -21) (undo-tree-id8732 . -21) (undo-tree-id8733 . -21) (undo-tree-id8734 . -21) (undo-tree-id8735 . -21) (undo-tree-id8736 . -21) (undo-tree-id8737 . -21) (undo-tree-id8738 . -21) (undo-tree-id8739 . -21) (undo-tree-id8740 . -21) (undo-tree-id8741 . -21) (undo-tree-id8742 . -21) (undo-tree-id8743 . -21) (undo-tree-id8744 . -21) (undo-tree-id8745 . -21) (undo-tree-id8746 . -21) (undo-tree-id8747 . -21) (undo-tree-id8748 . -21) (undo-tree-id8749 . -21) (undo-tree-id8750 . -21) (undo-tree-id8751 . -21) (undo-tree-id8752 . -21) (undo-tree-id8753 . -21) (undo-tree-id8754 . -21) (undo-tree-id8755 . -21) (undo-tree-id8756 . -21) (undo-tree-id8757 . -21) (undo-tree-id8758 . -21) (undo-tree-id8759 . -21) (undo-tree-id8760 . -21) (undo-tree-id8761 . -21) (undo-tree-id8762 . -21) (undo-tree-id8763 . -21) (undo-tree-id8764 . -21) (undo-tree-id8765 . -21) (undo-tree-id8766 . -21) (undo-tree-id8767 . -21) (undo-tree-id8768 . -21) (undo-tree-id8769 . -21) (undo-tree-id8770 . -21) (undo-tree-id8771 . -21) (undo-tree-id8772 . -21) (undo-tree-id8773 . -21) (undo-tree-id8774 . -21) (undo-tree-id8775 . -21) (undo-tree-id8776 . -21) (undo-tree-id8777 . -21) (undo-tree-id8778 . -21) (undo-tree-id8779 . -21) (undo-tree-id8780 . -21) (undo-tree-id8781 . -21) (undo-tree-id8782 . -21) (undo-tree-id8783 . -21) (undo-tree-id8784 . -21) (undo-tree-id8785 . -21) (undo-tree-id8786 . -21) (undo-tree-id8787 . -21) (undo-tree-id8788 . -21) (undo-tree-id8789 . -21) (undo-tree-id8790 . -21) (undo-tree-id8791 . -21) (undo-tree-id8792 . -21) (undo-tree-id8793 . -21) (undo-tree-id8794 . -21) (undo-tree-id8795 . -21) (undo-tree-id8796 . -21) (undo-tree-id8797 . -21) (#("ocument.html" 0 12 (fontified t)) . 27069) (undo-tree-id8798 . -12) (undo-tree-id8799 . -11) (undo-tree-id8800 . -12) (undo-tree-id8801 . -11) (undo-tree-id8802 . -11) (undo-tree-id8803 . -11) (undo-tree-id8804 . -11) (undo-tree-id8805 . -11) (undo-tree-id8806 . -11) (undo-tree-id8807 . -11) (undo-tree-id8808 . -11) (undo-tree-id8809 . -11) (undo-tree-id8810 . -11) (undo-tree-id8811 . -11) (undo-tree-id8812 . -11) (undo-tree-id8813 . -11) (undo-tree-id8814 . -11) (undo-tree-id8815 . -11) (undo-tree-id8816 . -11) (undo-tree-id8817 . -11) (undo-tree-id8818 . -11) (undo-tree-id8819 . -11) (undo-tree-id8820 . -11) (undo-tree-id8821 . -11) (undo-tree-id8822 . -11) (undo-tree-id8823 . -11) (undo-tree-id8824 . -11) (undo-tree-id8825 . -11) (undo-tree-id8826 . -11) (undo-tree-id8827 . -11) (undo-tree-id8828 . -11) (undo-tree-id8829 . -11) (undo-tree-id8830 . -11) (undo-tree-id8831 . -11) (undo-tree-id8832 . -11) (undo-tree-id8833 . -11) (undo-tree-id8834 . -11) (undo-tree-id8835 . -11) (undo-tree-id8836 . -11) (undo-tree-id8837 . -11) (undo-tree-id8838 . -11) (undo-tree-id8839 . -11) (undo-tree-id8840 . -11) (undo-tree-id8841 . -11) (undo-tree-id8842 . -11) (undo-tree-id8843 . -11) (undo-tree-id8844 . -11) (undo-tree-id8845 . -11) (undo-tree-id8846 . -11) (undo-tree-id8847 . -11) (undo-tree-id8848 . -11) (undo-tree-id8849 . -11) (undo-tree-id8850 . -11) (undo-tree-id8851 . -11) (undo-tree-id8852 . -11) (undo-tree-id8853 . -11) (undo-tree-id8854 . -11) (undo-tree-id8855 . -11) (undo-tree-id8856 . -11) (undo-tree-id8857 . -11) (undo-tree-id8858 . -11) (undo-tree-id8859 . -11) (undo-tree-id8860 . -11) (undo-tree-id8861 . -11) (undo-tree-id8862 . -11) (undo-tree-id8863 . -11) (undo-tree-id8864 . -11) (undo-tree-id8865 . -11) (undo-tree-id8866 . -11) (undo-tree-id8867 . -11) (undo-tree-id8868 . -11) (undo-tree-id8869 . -11) (undo-tree-id8870 . -11) (undo-tree-id8871 . -11) (undo-tree-id8872 . -11) (undo-tree-id8873 . -11) (undo-tree-id8874 . -11) (undo-tree-id8875 . -11) (undo-tree-id8876 . -11) (undo-tree-id8877 . -11) (undo-tree-id8878 . -11) (undo-tree-id8879 . -11) (undo-tree-id8880 . -11) (undo-tree-id8881 . -11) (undo-tree-id8882 . -11) (undo-tree-id8883 . -11) (undo-tree-id8884 . -11) (undo-tree-id8885 . -11) (undo-tree-id8886 . -11) (undo-tree-id8887 . -11) (undo-tree-id8888 . -11) (undo-tree-id8889 . -11) (undo-tree-id8890 . -11) (undo-tree-id8891 . -11) (undo-tree-id8892 . -11) (undo-tree-id8893 . -11) (undo-tree-id8894 . -11) (undo-tree-id8895 . -11) (undo-tree-id8896 . -11) (undo-tree-id8897 . -11) (undo-tree-id8898 . -11) (undo-tree-id8899 . -11) (undo-tree-id8900 . -11) (undo-tree-id8901 . -11) (undo-tree-id8902 . -11) (undo-tree-id8903 . -11) (undo-tree-id8904 . -11) (undo-tree-id8905 . -11) (undo-tree-id8906 . -11) (undo-tree-id8907 . -11) (undo-tree-id8908 . -11) (undo-tree-id8909 . -11) (undo-tree-id8910 . -11) (undo-tree-id8911 . -11) (undo-tree-id8912 . -11) (undo-tree-id8913 . -11) (undo-tree-id8914 . -11) (undo-tree-id8915 . -11) (undo-tree-id8916 . -11) (undo-tree-id8917 . -11) (undo-tree-id8918 . -11) (undo-tree-id8919 . -11) (undo-tree-id8920 . -11) (undo-tree-id8921 . -11) (undo-tree-id8922 . -11) (undo-tree-id8923 . -11) (undo-tree-id8924 . -11) (undo-tree-id8925 . -11) (undo-tree-id8926 . -11) (undo-tree-id8927 . -11) (undo-tree-id8928 . -11) (undo-tree-id8929 . -11) (undo-tree-id8930 . -11) (undo-tree-id8931 . -11) (undo-tree-id8932 . -11) (undo-tree-id8933 . -11) (undo-tree-id8934 . -11) (undo-tree-id8935 . -11) (undo-tree-id8936 . -11) (undo-tree-id8937 . -11) (undo-tree-id8938 . -11) (undo-tree-id8939 . -11) (undo-tree-id8940 . -11) (undo-tree-id8941 . -11) (undo-tree-id8942 . -11) (undo-tree-id8943 . -11) (undo-tree-id8944 . -11) (undo-tree-id8945 . -11) (undo-tree-id8946 . -11) (undo-tree-id8947 . -11) (undo-tree-id8948 . -11) (undo-tree-id8949 . -11) (undo-tree-id8950 . -11) (undo-tree-id8951 . -11) (undo-tree-id8952 . -11) (undo-tree-id8953 . -11) (undo-tree-id8954 . -11) (undo-tree-id8955 . -11) (undo-tree-id8956 . -11) (undo-tree-id8957 . -11) (undo-tree-id8958 . -11) (undo-tree-id8959 . -11) (undo-tree-id8960 . -11) (undo-tree-id8961 . -11) (undo-tree-id8962 . -11) (undo-tree-id8963 . -11) (undo-tree-id8964 . -11) (undo-tree-id8965 . -11) (undo-tree-id8966 . -11) (undo-tree-id8967 . -11) (undo-tree-id8968 . -11) (undo-tree-id8969 . -11) (undo-tree-id8970 . -11) (undo-tree-id8971 . -11) (undo-tree-id8972 . -11) (undo-tree-id8973 . -11) (undo-tree-id8974 . -11) (undo-tree-id8975 . -11) (undo-tree-id8976 . -11) (undo-tree-id8977 . -11) (undo-tree-id8978 . -11) (undo-tree-id8979 . -11) (undo-tree-id8980 . -11) (undo-tree-id8981 . -11) (undo-tree-id8982 . -11) (undo-tree-id8983 . -11) (undo-tree-id8984 . -11) (undo-tree-id8985 . -11) (undo-tree-id8986 . -11) (undo-tree-id8987 . -11) (undo-tree-id8988 . -11) (undo-tree-id8989 . -11) (undo-tree-id8990 . -11) (undo-tree-id8991 . -11) (undo-tree-id8992 . -11) (undo-tree-id8993 . -11) (undo-tree-id8994 . -11) (undo-tree-id8995 . -11) (undo-tree-id8996 . -11) (undo-tree-id8997 . -11) (undo-tree-id8998 . -11) (undo-tree-id8999 . -11) (undo-tree-id9000 . -11) (undo-tree-id9001 . -11) (undo-tree-id9002 . -11) (undo-tree-id9003 . -11) (undo-tree-id9004 . -11) (undo-tree-id9005 . -11) (undo-tree-id9006 . -11) (undo-tree-id9007 . -11) (undo-tree-id9008 . -11) (undo-tree-id9009 . -11) (undo-tree-id9010 . -11) (undo-tree-id9011 . -11) (undo-tree-id9012 . -11) (undo-tree-id9013 . -11) (undo-tree-id9014 . -11) (undo-tree-id9015 . -11) (undo-tree-id9016 . -11) (undo-tree-id9017 . -11) (undo-tree-id9018 . -11) (undo-tree-id9019 . -11) (undo-tree-id9020 . -11) (undo-tree-id9021 . -11) (undo-tree-id9022 . -11) (undo-tree-id9023 . -11) (undo-tree-id9024 . -11) (undo-tree-id9025 . -11) (undo-tree-id9026 . -11) (undo-tree-id9027 . -11) (undo-tree-id9028 . -11) (undo-tree-id9029 . -11) (undo-tree-id9030 . -11) (undo-tree-id9031 . -11) (undo-tree-id9032 . -11) (undo-tree-id9033 . -11) (undo-tree-id9034 . -11) (undo-tree-id9035 . -11) (undo-tree-id9036 . -11) (undo-tree-id9037 . -11) (undo-tree-id9038 . -11) (undo-tree-id9039 . -11) (undo-tree-id9040 . -11) (undo-tree-id9041 . -11) (undo-tree-id9042 . -11) (undo-tree-id9043 . -11) (undo-tree-id9044 . -11) (undo-tree-id9045 . -11) (undo-tree-id9046 . -11) (undo-tree-id9047 . -11) (undo-tree-id9048 . -11) (undo-tree-id9049 . -11) (undo-tree-id9050 . -11) (undo-tree-id9051 . -11) (undo-tree-id9052 . -11) (undo-tree-id9053 . -11) (undo-tree-id9054 . -11) (undo-tree-id9055 . -11) (undo-tree-id9056 . -11) (undo-tree-id9057 . -11) (undo-tree-id9058 . -11) (undo-tree-id9059 . -11) (undo-tree-id9060 . -11) (undo-tree-id9061 . -11) (undo-tree-id9062 . -11) (undo-tree-id9063 . -11) (undo-tree-id9064 . -11) (undo-tree-id9065 . -11) (undo-tree-id9066 . -11) (undo-tree-id9067 . -11) (undo-tree-id9068 . -11) (undo-tree-id9069 . -11) (undo-tree-id9070 . -11) (undo-tree-id9071 . -11) (undo-tree-id9072 . -11) (undo-tree-id9073 . -11) (undo-tree-id9074 . -11) (undo-tree-id9075 . -11) (undo-tree-id9076 . -11) (undo-tree-id9077 . -11) (undo-tree-id9078 . -11) (undo-tree-id9079 . -11) (undo-tree-id9080 . -11) (undo-tree-id9081 . -11) (undo-tree-id9082 . -11) (undo-tree-id9083 . -11) (undo-tree-id9084 . -11) (undo-tree-id9085 . -11) (undo-tree-id9086 . -11) (undo-tree-id9087 . -11) (undo-tree-id9088 . -11) (undo-tree-id9089 . -11) (undo-tree-id9090 . -11) (undo-tree-id9091 . -11) (undo-tree-id9092 . -11) (undo-tree-id9093 . -11) (undo-tree-id9094 . -11) (undo-tree-id9095 . -11) (undo-tree-id9096 . -11) (undo-tree-id9097 . -11) (undo-tree-id9098 . -11) (undo-tree-id9099 . -11) (undo-tree-id9100 . -11) (undo-tree-id9101 . -11) (undo-tree-id9102 . -11) (undo-tree-id9103 . -11) (undo-tree-id9104 . -11) (undo-tree-id9105 . -11) (undo-tree-id9106 . -11) (undo-tree-id9107 . -11) (undo-tree-id9108 . -11) (undo-tree-id9109 . -11) (undo-tree-id9110 . -11) (undo-tree-id9111 . -11) (undo-tree-id9112 . -11) (undo-tree-id9113 . -11) (undo-tree-id9114 . -11) (undo-tree-id9115 . -11) (undo-tree-id9116 . -11) (undo-tree-id9117 . -11) (undo-tree-id9118 . -11) (undo-tree-id9119 . -11) (undo-tree-id9120 . -11) (undo-tree-id9121 . -11) (undo-tree-id9122 . -11) (undo-tree-id9123 . -11) (undo-tree-id9124 . -11) (undo-tree-id9125 . -11) (undo-tree-id9126 . -11) (undo-tree-id9127 . -11) (undo-tree-id9128 . -11) (undo-tree-id9129 . -11) (undo-tree-id9130 . -11) (undo-tree-id9131 . -11) (undo-tree-id9132 . -11) (undo-tree-id9133 . -11) (undo-tree-id9134 . -11) (undo-tree-id9135 . -11) (undo-tree-id9136 . -11) (undo-tree-id9137 . -11) (undo-tree-id9138 . -11) (undo-tree-id9139 . -11) (undo-tree-id9140 . -11) (undo-tree-id9141 . -11) (undo-tree-id9142 . -11) (undo-tree-id9143 . -11) (undo-tree-id9144 . -11) (undo-tree-id9145 . -11) (undo-tree-id9146 . -11) (undo-tree-id9147 . -11) (undo-tree-id9148 . -11) (undo-tree-id9149 . -11) (undo-tree-id9150 . -11) (undo-tree-id9151 . -11) (undo-tree-id9152 . -11) (undo-tree-id9153 . -11) (undo-tree-id9154 . -11) (undo-tree-id9155 . -11) (undo-tree-id9156 . -11) (undo-tree-id9157 . -11) (undo-tree-id9158 . -11) (undo-tree-id9159 . -11) (undo-tree-id9160 . -11) (undo-tree-id9161 . -11) (undo-tree-id9162 . -11) (undo-tree-id9163 . -11) (undo-tree-id9164 . -11) (undo-tree-id9165 . -11) (undo-tree-id9166 . -11) (undo-tree-id9167 . -11) (undo-tree-id9168 . -11) (undo-tree-id9169 . -11) (undo-tree-id9170 . -11) (undo-tree-id9171 . -11) (undo-tree-id9172 . -11) (undo-tree-id9173 . -11) (undo-tree-id9174 . -11) (undo-tree-id9175 . -11) (undo-tree-id9176 . -11) (undo-tree-id9177 . -11) (undo-tree-id9178 . -11) (undo-tree-id9179 . -11) (undo-tree-id9180 . -11) (undo-tree-id9181 . -11) (undo-tree-id9182 . -11) (undo-tree-id9183 . -11) (undo-tree-id9184 . -11) (undo-tree-id9185 . -11) (undo-tree-id9186 . -11) (undo-tree-id9187 . -11) (undo-tree-id9188 . -11) (undo-tree-id9189 . -11) (undo-tree-id9190 . -11) (undo-tree-id9191 . -11) (undo-tree-id9192 . -11) (undo-tree-id9193 . -11) (undo-tree-id9194 . -11) (undo-tree-id9195 . -11) (undo-tree-id9196 . -11) (undo-tree-id9197 . -11) (undo-tree-id9198 . -11) (undo-tree-id9199 . -11) (undo-tree-id9200 . -11) (undo-tree-id9201 . -11) (undo-tree-id9202 . -11) (undo-tree-id9203 . -11) (undo-tree-id9204 . -11) (undo-tree-id9205 . -11) (undo-tree-id9206 . -11) (undo-tree-id9207 . -11) (undo-tree-id9208 . -11) (undo-tree-id9209 . -11) (undo-tree-id9210 . -11) (undo-tree-id9211 . -11) (undo-tree-id9212 . -11) (undo-tree-id9213 . -11) (undo-tree-id9214 . -11) (undo-tree-id9215 . -11) (undo-tree-id9216 . -11) (undo-tree-id9217 . -11) (undo-tree-id9218 . -11) (undo-tree-id9219 . -11) (undo-tree-id9220 . -11) (undo-tree-id9221 . -11) (undo-tree-id9222 . -11) (undo-tree-id9223 . -11) (undo-tree-id9224 . -11) (undo-tree-id9225 . -11) (undo-tree-id9226 . -11) (undo-tree-id9227 . -11) (undo-tree-id9228 . -11) (undo-tree-id9229 . -11) (undo-tree-id9230 . -11) (undo-tree-id9231 . -11) (undo-tree-id9232 . -11) (undo-tree-id9233 . -11) (undo-tree-id9234 . -11) (undo-tree-id9235 . -11) (undo-tree-id9236 . -11) (undo-tree-id9237 . -11) (undo-tree-id9238 . -11) (undo-tree-id9239 . -11) (undo-tree-id9240 . -11) (undo-tree-id9241 . -11) (undo-tree-id9242 . -11) (undo-tree-id9243 . -11) (undo-tree-id9244 . -11) (undo-tree-id9245 . -11) (undo-tree-id9246 . -11) (undo-tree-id9247 . -11) (undo-tree-id9248 . -11) (undo-tree-id9249 . -11) (undo-tree-id9250 . -11) (undo-tree-id9251 . -11) (undo-tree-id9252 . -11) (undo-tree-id9253 . -11) (undo-tree-id9254 . -11) (undo-tree-id9255 . -11) (undo-tree-id9256 . -11) (undo-tree-id9257 . -11) (undo-tree-id9258 . -11) (undo-tree-id9259 . -11) (undo-tree-id9260 . -11) (undo-tree-id9261 . -11) (undo-tree-id9262 . -11) (undo-tree-id9263 . -11) (undo-tree-id9264 . -11) (undo-tree-id9265 . -11) (undo-tree-id9266 . -11) (undo-tree-id9267 . -11) (undo-tree-id9268 . -11) (undo-tree-id9269 . -11) (undo-tree-id9270 . -11) (undo-tree-id9271 . -11) (undo-tree-id9272 . -11) (undo-tree-id9273 . -11) (undo-tree-id9274 . -11) (undo-tree-id9275 . -11) (undo-tree-id9276 . -11) (undo-tree-id9277 . -11) (undo-tree-id9278 . -11) (undo-tree-id9279 . -11) (undo-tree-id9280 . -11) (undo-tree-id9281 . -11) (undo-tree-id9282 . -11) (undo-tree-id9283 . -11) (undo-tree-id9284 . -11) (undo-tree-id9285 . -11) (undo-tree-id9286 . -11) (undo-tree-id9287 . -11) (undo-tree-id9288 . -11) (undo-tree-id9289 . -11) (undo-tree-id9290 . -11) (undo-tree-id9291 . -11) (undo-tree-id9292 . -11) (undo-tree-id9293 . -11) (undo-tree-id9294 . -11) (undo-tree-id9295 . -11) (undo-tree-id9296 . -11)) (25723 65181 987281 977000) 0 nil])
([nil nil ((#("The link for the macro to insert an html block

#+BEGIN_SRC emacs-lisp

(fset 'inserting\\ an\\ html\\ tangle\\ block
   (kmacro-lambda-form [?\\; ?x ?\\( ?s ?r ?c ?\\C-x ?a ?e escape ?k ?k ?j ?A ?: backspace ?h backspace ?h ?t ?m ?l ?  ?: ?t ?a ?n ?g ?l ?e ?  ?d ?o ?c ?u ?m ?e ?n ?t C-backspace ?c ?h ?i ?l ?d ?N ?o ?d ?e ?s ?\\( ?\\) ?. ?h ?t ?m ?l escape ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?i ?l ?i ?s ?t ?i ?n ?g ?_ escape ?o escape ?i] 0 \"%d\"))

#+END_SRC
" 0 48 (fontified t) 48 70 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 70 71 (composition nil face org-block-begin-line font-lock-multiline t prettify-symbols-end nil prettify-symbols-start nil help-echo nil font-lock-fontified t fontified t) 71 448 (composition nil face (org-block) font-lock-multiline t src-block t prettify-symbols-end nil prettify-symbols-start nil help-echo nil font-lock-fontified t fontified t) 448 452 (composition nil face (font-lock-string-face org-block) font-lock-multiline t src-block t prettify-symbols-end nil prettify-symbols-start nil help-echo nil font-lock-fontified t fontified t) 452 456 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 456 465 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t) 465 466 (face org-block-end-line fontified t)) . 70) (undo-tree-id9797 . -465) (undo-tree-id9798 . -456) (undo-tree-id9799 . -455) (undo-tree-id9800 . -466) (undo-tree-id9801 . -456) (undo-tree-id9802 . -466) (undo-tree-id9803 . -456) (undo-tree-id9804 . -456) 526 (t 25723 65201 61172 986000)) nil (25723 65233 442231 29000) 0 nil])
([nil nil ((27081 . 27082) 27080) ((#("
" 0 1 (fontified t)) . 27081) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1)) (25723 65181 986935 631000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -68) (undo-tree-id9795 . -1) (undo-tree-id9796 . -1) 69) nil (25723 65233 442210 635000) 0 nil])
nil
([nil nil ((69 . 70)) nil (25723 65233 442201 905000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -69) (undo-tree-id9298 . -1) (undo-tree-id9299 . -1) (undo-tree-id9300 . -1) (undo-tree-id9301 . -1) (undo-tree-id9302 . -1) (undo-tree-id9303 . -1) (undo-tree-id9304 . -1) (undo-tree-id9305 . -1) (undo-tree-id9306 . -1) (undo-tree-id9307 . -1) (undo-tree-id9308 . -1) (undo-tree-id9309 . -1) (undo-tree-id9310 . -1) (undo-tree-id9311 . -1) (undo-tree-id9312 . -1) (undo-tree-id9313 . -1) (undo-tree-id9314 . -1) (undo-tree-id9315 . -1) (undo-tree-id9316 . -1) (undo-tree-id9317 . -1) (undo-tree-id9318 . -1) (undo-tree-id9319 . -1) (undo-tree-id9320 . -1) (undo-tree-id9321 . -1) (undo-tree-id9322 . -1) (undo-tree-id9323 . -1) (undo-tree-id9324 . -1) (undo-tree-id9325 . -1) (undo-tree-id9326 . -1) (undo-tree-id9327 . -1) (undo-tree-id9328 . -1) (undo-tree-id9329 . -1) (undo-tree-id9330 . -1) (undo-tree-id9331 . -1) (undo-tree-id9332 . -1) (undo-tree-id9333 . -1) (undo-tree-id9334 . -1) (undo-tree-id9335 . -1) (undo-tree-id9336 . -1) (undo-tree-id9337 . -1) (undo-tree-id9338 . -1) (undo-tree-id9339 . -1) (undo-tree-id9340 . -1) (undo-tree-id9341 . -1) (undo-tree-id9342 . -1) (undo-tree-id9343 . -1) (undo-tree-id9344 . -1) (undo-tree-id9345 . -1) (undo-tree-id9346 . -1) (undo-tree-id9347 . -1) (undo-tree-id9348 . -1) (undo-tree-id9349 . -1) (undo-tree-id9350 . -1) (undo-tree-id9351 . -1) (undo-tree-id9352 . -1) (undo-tree-id9353 . -1) (undo-tree-id9354 . -1) (undo-tree-id9355 . -1) (undo-tree-id9356 . -1) (undo-tree-id9357 . -1) (undo-tree-id9358 . -1) (undo-tree-id9359 . -1) (undo-tree-id9360 . -1) (undo-tree-id9361 . -1) (undo-tree-id9362 . -1) (undo-tree-id9363 . -1) (undo-tree-id9364 . -1) (undo-tree-id9365 . -1) (undo-tree-id9366 . -1) (undo-tree-id9367 . -1) (undo-tree-id9368 . -1) (undo-tree-id9369 . -1) (undo-tree-id9370 . -1) (undo-tree-id9371 . -1) (undo-tree-id9372 . -1) (undo-tree-id9373 . -1) (undo-tree-id9374 . -1) (undo-tree-id9375 . -1) (undo-tree-id9376 . -1) (undo-tree-id9377 . -1) (undo-tree-id9378 . -1) (undo-tree-id9379 . -1) (undo-tree-id9380 . -1) (undo-tree-id9381 . -1) (undo-tree-id9382 . -1) (undo-tree-id9383 . -1) (undo-tree-id9384 . -1) (undo-tree-id9385 . -1) (undo-tree-id9386 . -1) (undo-tree-id9387 . -1) (undo-tree-id9388 . -1) (undo-tree-id9389 . -1) (undo-tree-id9390 . -1) (undo-tree-id9391 . -1) (undo-tree-id9392 . -1) (undo-tree-id9393 . -1) (undo-tree-id9394 . -1) (undo-tree-id9395 . -1) (undo-tree-id9396 . -1) (undo-tree-id9397 . -1) (undo-tree-id9398 . -1) (undo-tree-id9399 . -1) (undo-tree-id9400 . -1) (undo-tree-id9401 . -1) (undo-tree-id9402 . -1) (undo-tree-id9403 . -1) (undo-tree-id9404 . -1) (undo-tree-id9405 . -1) (undo-tree-id9406 . -1) (undo-tree-id9407 . -1) (undo-tree-id9408 . -1) (undo-tree-id9409 . -1) (undo-tree-id9410 . -1) (undo-tree-id9411 . -1) (undo-tree-id9412 . -1) (undo-tree-id9413 . -1) (undo-tree-id9414 . -1) (undo-tree-id9415 . -1) (undo-tree-id9416 . -1) (undo-tree-id9417 . -1) (undo-tree-id9418 . -1) (undo-tree-id9419 . -1) (undo-tree-id9420 . -1) (undo-tree-id9421 . -1) (undo-tree-id9422 . -1) (undo-tree-id9423 . -1) (undo-tree-id9424 . -1) (undo-tree-id9425 . -1) (undo-tree-id9426 . -1) (undo-tree-id9427 . -1) (undo-tree-id9428 . -1) (undo-tree-id9429 . -1) (undo-tree-id9430 . -1) (undo-tree-id9431 . -1) (undo-tree-id9432 . -1) (undo-tree-id9433 . -1) (undo-tree-id9434 . -1) (undo-tree-id9435 . -1) (undo-tree-id9436 . -1) (undo-tree-id9437 . -1) (undo-tree-id9438 . -1) (undo-tree-id9439 . -1) (undo-tree-id9440 . -1) (undo-tree-id9441 . -1) (undo-tree-id9442 . -1) (undo-tree-id9443 . -1) (undo-tree-id9444 . -1) (undo-tree-id9445 . -1) (undo-tree-id9446 . -1) (undo-tree-id9447 . -1) (undo-tree-id9448 . -1) (undo-tree-id9449 . -1) (undo-tree-id9450 . -1) (undo-tree-id9451 . -1) (undo-tree-id9452 . -1) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1) (undo-tree-id9457 . -1) (undo-tree-id9458 . -1) (undo-tree-id9459 . -1) (undo-tree-id9460 . -1) (undo-tree-id9461 . -1) (undo-tree-id9462 . -1) (undo-tree-id9463 . -1) (undo-tree-id9464 . -1) (undo-tree-id9465 . -1) (undo-tree-id9466 . -1) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -1) (undo-tree-id9470 . -1) (undo-tree-id9471 . -1) (undo-tree-id9472 . -1) (undo-tree-id9473 . -1) (undo-tree-id9474 . -1) (undo-tree-id9475 . -1) (undo-tree-id9476 . -1) (undo-tree-id9477 . -1) (undo-tree-id9478 . -1) (undo-tree-id9479 . -1) (undo-tree-id9480 . -1) (undo-tree-id9481 . -1) (undo-tree-id9482 . -1) (undo-tree-id9483 . -1) (undo-tree-id9484 . -1) (undo-tree-id9485 . -1) (undo-tree-id9486 . -1) (undo-tree-id9487 . -1) (undo-tree-id9488 . -1) (undo-tree-id9489 . -1) (undo-tree-id9490 . -1) (undo-tree-id9491 . -1) (undo-tree-id9492 . -1) (undo-tree-id9493 . -1) (undo-tree-id9494 . -1) (undo-tree-id9495 . -1) (undo-tree-id9496 . -1) (undo-tree-id9497 . -1) (undo-tree-id9498 . -1) (undo-tree-id9499 . -1) (undo-tree-id9500 . -1) (undo-tree-id9501 . -1) (undo-tree-id9502 . -1) (undo-tree-id9503 . -1) (undo-tree-id9504 . -1) (undo-tree-id9505 . -1) (undo-tree-id9506 . -1) (undo-tree-id9507 . -1) (undo-tree-id9508 . -1) (undo-tree-id9509 . -1) (undo-tree-id9510 . -1) (undo-tree-id9511 . -1) (undo-tree-id9512 . -1) (undo-tree-id9513 . -1) (undo-tree-id9514 . -1) (undo-tree-id9515 . -1) (undo-tree-id9516 . -1) (undo-tree-id9517 . -1) (undo-tree-id9518 . -1) (undo-tree-id9519 . -1) (undo-tree-id9520 . -1) (undo-tree-id9521 . -1) (undo-tree-id9522 . -1) (undo-tree-id9523 . -1) (undo-tree-id9524 . -1) (undo-tree-id9525 . -1) (undo-tree-id9526 . -1) (undo-tree-id9527 . -1) (undo-tree-id9528 . -1) (undo-tree-id9529 . -1) (undo-tree-id9530 . -1) (undo-tree-id9531 . -1) (undo-tree-id9532 . -1) (undo-tree-id9533 . -1) (undo-tree-id9534 . -1) (undo-tree-id9535 . -1) (undo-tree-id9536 . -1) (undo-tree-id9537 . -1) (undo-tree-id9538 . -1) (undo-tree-id9539 . -1) (undo-tree-id9540 . -1) (undo-tree-id9541 . -1) (undo-tree-id9542 . -1) (undo-tree-id9543 . -1) (undo-tree-id9544 . -1) (undo-tree-id9545 . -1) (undo-tree-id9546 . -1) (undo-tree-id9547 . -1) (undo-tree-id9548 . -1) (undo-tree-id9549 . -1) (undo-tree-id9550 . -1) (undo-tree-id9551 . -1) (undo-tree-id9552 . -1) (undo-tree-id9553 . -1) (undo-tree-id9554 . -1) (undo-tree-id9555 . -1) (undo-tree-id9556 . -1) (undo-tree-id9557 . -1) (undo-tree-id9558 . -1) (undo-tree-id9559 . -1) (undo-tree-id9560 . -1) (undo-tree-id9561 . -1) (undo-tree-id9562 . -1) (undo-tree-id9563 . -1) (undo-tree-id9564 . -1) (undo-tree-id9565 . -1) (undo-tree-id9566 . -1) (undo-tree-id9567 . -1) (undo-tree-id9568 . -1) (undo-tree-id9569 . -1) (undo-tree-id9570 . -1) (undo-tree-id9571 . -1) (undo-tree-id9572 . -1) (undo-tree-id9573 . -1) (undo-tree-id9574 . -1) (undo-tree-id9575 . -1) (undo-tree-id9576 . -1) (undo-tree-id9577 . -1) (undo-tree-id9578 . -1) (undo-tree-id9579 . -1) (undo-tree-id9580 . -1) (undo-tree-id9581 . -1) (undo-tree-id9582 . -1) (undo-tree-id9583 . -1) (undo-tree-id9584 . -1) (undo-tree-id9585 . -1) (undo-tree-id9586 . -1) (undo-tree-id9587 . -1) (undo-tree-id9588 . -1) (undo-tree-id9589 . -1) (undo-tree-id9590 . -1) (undo-tree-id9591 . -1) (undo-tree-id9592 . -1) (undo-tree-id9593 . -1) (undo-tree-id9594 . -1) (undo-tree-id9595 . -1) (undo-tree-id9596 . -1) (undo-tree-id9597 . -1) (undo-tree-id9598 . -1) (undo-tree-id9599 . -1) (undo-tree-id9600 . -1) (undo-tree-id9601 . -1) (undo-tree-id9602 . -1) (undo-tree-id9603 . -1) (undo-tree-id9604 . -1) (undo-tree-id9605 . -1) (undo-tree-id9606 . -1) (undo-tree-id9607 . -1) (undo-tree-id9608 . -1) (undo-tree-id9609 . -1) (undo-tree-id9610 . -1) (undo-tree-id9611 . -1) (undo-tree-id9612 . -1) (undo-tree-id9613 . -1) (undo-tree-id9614 . -1) (undo-tree-id9615 . -1) (undo-tree-id9616 . -1) (undo-tree-id9617 . -1) (undo-tree-id9618 . -1) (undo-tree-id9619 . -1) (undo-tree-id9620 . -1) (undo-tree-id9621 . -1) (undo-tree-id9622 . -1) (undo-tree-id9623 . -1) (undo-tree-id9624 . -1) (undo-tree-id9625 . -1) (undo-tree-id9626 . -1) (undo-tree-id9627 . -1) (undo-tree-id9628 . -1) (undo-tree-id9629 . -1) (undo-tree-id9630 . -1) (undo-tree-id9631 . -1) (undo-tree-id9632 . -1) (undo-tree-id9633 . -1) (undo-tree-id9634 . -1) (undo-tree-id9635 . -1) (undo-tree-id9636 . -1) (undo-tree-id9637 . -1) (undo-tree-id9638 . -1) (undo-tree-id9639 . -1) (undo-tree-id9640 . -1) (undo-tree-id9641 . -1) (undo-tree-id9642 . -1) (undo-tree-id9643 . -1) (undo-tree-id9644 . -1) (undo-tree-id9645 . -1) (undo-tree-id9646 . -1) (undo-tree-id9647 . -1) (undo-tree-id9648 . -1) (undo-tree-id9649 . -1) (undo-tree-id9650 . -1) (undo-tree-id9651 . -1) (undo-tree-id9652 . -1) (undo-tree-id9653 . -1) (undo-tree-id9654 . -1) (undo-tree-id9655 . -1) (undo-tree-id9656 . -1) (undo-tree-id9657 . -1) (undo-tree-id9658 . -1) (undo-tree-id9659 . -1) (undo-tree-id9660 . -1) (undo-tree-id9661 . -1) (undo-tree-id9662 . -1) (undo-tree-id9663 . -1) (undo-tree-id9664 . -1) (undo-tree-id9665 . -1) (undo-tree-id9666 . -1) (undo-tree-id9667 . -1) (undo-tree-id9668 . -1) (undo-tree-id9669 . -1) (undo-tree-id9670 . -1) (undo-tree-id9671 . -1) (undo-tree-id9672 . -1) (undo-tree-id9673 . -1) (undo-tree-id9674 . -1) (undo-tree-id9675 . -1) (undo-tree-id9676 . -1) (undo-tree-id9677 . -1) (undo-tree-id9678 . -1) (undo-tree-id9679 . -1) (undo-tree-id9680 . -1) (undo-tree-id9681 . -1) (undo-tree-id9682 . -1) (undo-tree-id9683 . -1) (undo-tree-id9684 . -1) (undo-tree-id9685 . -1) (undo-tree-id9686 . -1) (undo-tree-id9687 . -1) (undo-tree-id9688 . -1) (undo-tree-id9689 . -1) (undo-tree-id9690 . -1) (undo-tree-id9691 . -1) (undo-tree-id9692 . -1) (undo-tree-id9693 . -1) (undo-tree-id9694 . -1) (undo-tree-id9695 . -1) (undo-tree-id9696 . -1) (undo-tree-id9697 . -1) (undo-tree-id9698 . -1) (undo-tree-id9699 . -1) (undo-tree-id9700 . -1) (undo-tree-id9701 . -1) (undo-tree-id9702 . -1) (undo-tree-id9703 . -1) (undo-tree-id9704 . -1) (undo-tree-id9705 . -1) (undo-tree-id9706 . -1) (undo-tree-id9707 . -1) (undo-tree-id9708 . -1) (undo-tree-id9709 . -1) (undo-tree-id9710 . -1) (undo-tree-id9711 . -1) (undo-tree-id9712 . -1) (undo-tree-id9713 . -1) (undo-tree-id9714 . -1) (undo-tree-id9715 . -1) (undo-tree-id9716 . -1) (undo-tree-id9717 . -1) (undo-tree-id9718 . -1) (undo-tree-id9719 . -1) (undo-tree-id9720 . -1) (undo-tree-id9721 . -1) (undo-tree-id9722 . -1) (undo-tree-id9723 . -1) (undo-tree-id9724 . -1) (undo-tree-id9725 . -1) (undo-tree-id9726 . -1) (undo-tree-id9727 . -1) (undo-tree-id9728 . -1) (undo-tree-id9729 . -1) (undo-tree-id9730 . -1) (undo-tree-id9731 . -1) (undo-tree-id9732 . -1) (undo-tree-id9733 . -1) (undo-tree-id9734 . -1) (undo-tree-id9735 . -1) (undo-tree-id9736 . -1) (undo-tree-id9737 . -1) (undo-tree-id9738 . -1) (undo-tree-id9739 . -1) (undo-tree-id9740 . -1) (undo-tree-id9741 . -1) (undo-tree-id9742 . -1) (undo-tree-id9743 . -1) (undo-tree-id9744 . -1) (undo-tree-id9745 . -1) (undo-tree-id9746 . -1) (undo-tree-id9747 . -1) (undo-tree-id9748 . -1) (undo-tree-id9749 . -1) (undo-tree-id9750 . -1) (undo-tree-id9751 . -1) (undo-tree-id9752 . -1) (undo-tree-id9753 . -1) (undo-tree-id9754 . -1) (undo-tree-id9755 . -1) (undo-tree-id9756 . -1) (undo-tree-id9757 . -1) (undo-tree-id9758 . -1) (undo-tree-id9759 . -1) (undo-tree-id9760 . -1) (undo-tree-id9761 . -1) (undo-tree-id9762 . -1) (undo-tree-id9763 . -1) (undo-tree-id9764 . -1) (undo-tree-id9765 . -1) (undo-tree-id9766 . -1) (undo-tree-id9767 . -1) (undo-tree-id9768 . -1) (undo-tree-id9769 . -1) (undo-tree-id9770 . -1) (undo-tree-id9771 . -1) (undo-tree-id9772 . -1) (undo-tree-id9773 . -1) (undo-tree-id9774 . -1) (undo-tree-id9775 . -1) (undo-tree-id9776 . -1) (undo-tree-id9777 . -1) (undo-tree-id9778 . -1) (undo-tree-id9779 . -1) (undo-tree-id9780 . -1) (undo-tree-id9781 . -1) (undo-tree-id9782 . -1) (undo-tree-id9783 . -1) (undo-tree-id9784 . -1) (undo-tree-id9785 . -1) (undo-tree-id9786 . -1) (undo-tree-id9787 . -1) (undo-tree-id9788 . -1) (undo-tree-id9789 . -1) (undo-tree-id9790 . -1) (undo-tree-id9791 . -1) (undo-tree-id9792 . -1) (undo-tree-id9793 . -1) (undo-tree-id9794 . -1) 70) nil (25723 65233 442124 729000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -26866) (undo-tree-id78 . -4) 26870 (26865 . 26870) (t 25723 65233 513586 117000) 26865) nil (25724 300 300021 285000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -26865) (undo-tree-id77 . -1) 26866 (26865 . 26866)) nil (25724 300 300014 650000) 0 nil])
([nil nil ((26864 . 26865) (#("
" 0 1 (fontified t)) . -26864) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 26865) nil (25724 300 300007 177000) 0 nil])
([nil nil ((26865 . 27248)) nil (25724 300 300000 612000) 0 nil])
([nil nil ((#("(fset 'inserting\\ an\\ html\\ tangle\\ block
   (kmacro-lambda-form [?\\; ?x ?\\( ?s ?r ?c ?\\C-x ?a ?e escape ?k ?k ?j ?A ?: backspace ?h backspace ?h ?t ?m ?l ?  ?: ?t ?a ?n ?g ?l ?e ?  ?d ?o ?c ?u ?m ?e ?n ?t C-backspace ?c ?h ?i ?l ?d ?N ?o ?d ?e ?s ?\\( ?\\) ?. ?h ?t ?m ?l escape ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?i ?l ?i ?s ?t ?i ?n ?g ?_ escape ?o escape ?i] 0 \"%d\"))
" 0 7 (fontified t) 7 41 (fontified t) 41 45 (fontified t) 45 65 (fontified t) 65 66 (fontified t) 66 372 (fontified t) 372 373 (fontified t) 373 374 (fontified t) 374 375 (fontified t) 375 376 (fontified t) 376 380 (fontified t) 380 381 (fontified t) 381 383 (fontified t)) . 26865) (undo-tree-id68 . -42) (undo-tree-id69 . -383) (undo-tree-id70 . -42) (undo-tree-id71 . -42) (undo-tree-id72 . -42) (undo-tree-id73 . -42) (undo-tree-id74 . -382) 26907) nil (25724 300 299996 282000) 0 nil])
([nil nil ((27251 . 27252) (27247 . 27251) (27229 . 27247) (27208 . 27229) (27187 . 27208) (27166 . 27187) (27145 . 27166) (27124 . 27145) (27103 . 27124) (27082 . 27103) (27061 . 27082) (27040 . 27061) (27019 . 27040) (26998 . 27019) (26977 . 26998) (26956 . 26977) (26935 . 26956) (26934 . 26935) (26933 . 26934) (26928 . 26933) (26907 . 26928) (26906 . 26907) (26886 . 26906) (26865 . 26886)) nil (25724 300 299981 825000) 0 nil])
([nil nil ((26869 . 26870) (26865 . 26869) (26865 . 26866) (#("(fset 'inserting\\ an\\ html\\ tangle\\ block
   (kmacro-lambda-form [?\\; ?x ?\\( ?s ?r ?c ?\\C-x ?a ?e escape ?k ?k ?j ?A ?: backspace ?h backspace ?h ?t ?m ?l ?  ?: ?t ?a ?n ?g ?l ?e ?  ?d ?o ?c ?u ?m ?e ?n ?t C-backspace ?c ?h ?i ?l ?d ?N ?o ?d ?e ?s ?\\( ?\\) ?. ?h ?t ?m ?l escape ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?i ?l ?i ?s ?t ?i ?n ?g ?_ escape ?o escape ?i] 0 \"%d\"))
   2
" 0 68 (fontified t) 68 387 (fontified t) 387 388 (fontified t)) . 26865) (undo-tree-id58 . -383) (undo-tree-id59 . -388) (undo-tree-id60 . 1) (undo-tree-id61 . -386) (undo-tree-id62 . -3) (undo-tree-id63 . -386) (undo-tree-id64 . -387) (undo-tree-id65 . -386) (undo-tree-id66 . -3) (undo-tree-id67 . -386) 27251) nil (25724 300 299969 602000) 0 nil])
([nil nil ((#("    o
" 0 5 (fontified t) 5 6 (fontified t)) . 26865) (undo-tree-id54 . -6) (undo-tree-id55 . 1) (undo-tree-id56 . -5) (undo-tree-id57 . -3) 26868) nil (25724 300 299946 66000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -26866) (undo-tree-id53 . -4) 26870 (26865 . 26870) 26865) nil (25724 300 299934 751000) 0 nil])
([nil nil ((26865 . 26872) (#("

*** 2" 0 1 (fontified t) 1 2 (fontified t) 2 4 (fontified t face org-hide keymap (keymap)) 4 5 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 5 6 (fontified t keymap (keymap) face org-level-3) 6 7 (fontified t face org-level-3)) . 26865)) nil (25724 300 299929 443000) 0 nil])
([nil nil ((26865 . 27248) (26864 . 26865) (#("
" 0 1 (fontified t)) . -26864) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) 26865 (#("i" 0 1 (fontified t)) . -26865) (undo-tree-id51 . -1) 26866 (26865 . 26866) (#("i" 0 1 (fontified t)) . -26865) (undo-tree-id52 . -1) 26866 (26865 . 26866)) nil (25724 300 299924 135000) 0 nil])
([nil nil ((#("(fset 'inserting\\ an\\ html\\ tangle\\ block
   (kmacro-lambda-form [?\\; ?x ?\\( ?s ?r ?c ?\\C-x ?a ?e escape ?k ?k ?j ?A ?: backspace ?h backspace ?h ?t ?m ?l ?  ?: ?t ?a ?n ?g ?l ?e ?  ?d ?o ?c ?u ?m ?e ?n ?t C-backspace ?c ?h ?i ?l ?d ?N ?o ?d ?e ?s ?\\( ?\\) ?. ?h ?t ?m ?l escape ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?i ?l ?i ?s ?t ?i ?n ?g ?_ escape ?o escape ?i] 0 \"%d\"))
" 0 7 (fontified t) 7 41 (fontified t) 41 45 (fontified t) 45 65 (fontified t) 65 66 (fontified t) 66 372 (fontified t) 372 373 (fontified t) 373 374 (fontified t) 374 375 (fontified t) 375 376 (fontified t) 376 380 (fontified t) 380 381 (fontified t) 381 383 (fontified t)) . 26865) (undo-tree-id34 . -42) (undo-tree-id35 . -42) (undo-tree-id36 . -382) (undo-tree-id37 . -42) (undo-tree-id38 . -383) (undo-tree-id39 . -42) (undo-tree-id40 . -42) 26907) nil (25724 300 299901 367000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -26865) (undo-tree-id33 . -1) 26866 (26865 . 26866)) nil (25724 300 299883 138000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27250 . 27251) (nil fontified nil 26865 . 27251) (26865 . 27251)) nil (25724 300 299878 459000) 0 nil])
([nil nil ((#("+B" 0 2 (fontified nil font-lock-fontified t face org-meta-line)) . 26876) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (26866 . 26876) 26868 (#("e" 0 1 (fontified t font-lock-fontified t face org-meta-line)) . -26868) (undo-tree-id14 . -1) 26869 (26865 . 26869) (#("b" 0 1 (fontified t)) . -26865) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("e" 0 1 (fontified t)) . -26866) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 26867 (26865 . 26867) (26864 . 26865) (#("b" 0 1 (fontified t face org-level-3)) . -26864) (undo-tree-id21 . -1) 26865 (26864 . 26865) (#("
" 0 1 (fontified t)) . -26864) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#(" " 0 1 (fontified t)) . -26865) (undo-tree-id24 . -1) (#(" " 0 1 (fontified t)) . -26866) (undo-tree-id25 . -1) (#(" " 0 1 (fontified t)) . -26867) (undo-tree-id26 . -1) (#(" " 0 1 (fontified t)) . -26868) (undo-tree-id27 . -1) (#("e" 0 1 (fontified t)) . -26869) (undo-tree-id28 . -1) (#("m" 0 1 (fontified t)) . -26870) (undo-tree-id29 . -1) (#("a" 0 1 (fontified t)) . -26871) (undo-tree-id30 . -1) (#("c" 0 1 (fontified t)) . -26872) (undo-tree-id31 . -1) (#("s" 0 1 (fontified t)) . -26873) (undo-tree-id32 . -1) 26874 (26869 . 26874) (26864 . 26869) 26786) nil (25724 300 299866 935000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -27264) (undo-tree-id10 . -3) 27267 (27263 . 27267) 27263) nil (25724 300 299825 449000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -27264) (undo-tree-id9 . -3) 27267 (27263 . 27267) 27263) nil (25724 300 299819 303000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27263 . 27264) (#("
" 0 1 (fontified nil)) . -27275) (27263 . 27276)) nil (25724 300 299813 157000) 0 nil])
([nil nil ((27266 . 27269) (#("BEGIN" 0 5 (fontified t)) . 27266) (undo-tree-id7 . -4) (undo-tree-id8 . -1) 27267) nil (25724 300 299808 827000) 0 nil])
([nil nil ((26882 . 26887) (26876 . 26882)) nil (25724 300 299803 30000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -26865) (undo-tree-id6 . -4) 26869 (26864 . 26869) 26803) nil (25724 300 299798 699000) 0 nil])
([nil nil ((27286 . 27287) 27286) nil (25724 300 299793 461000) 0 nil])
([nil nil ((27287 . 27296) (#("



*** 2" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 6 (fontified t face org-hide keymap (keymap)) 6 7 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 7 8 (fontified t keymap (keymap) face org-level-3) 8 9 (fontified t face org-level-3)) . 27287) (#("m" 0 1 (fontified t)) . -27287) (undo-tree-id5 . -1) 27288 (27287 . 27288) (27286 . 27287) 27286) nil (25724 300 299788 293000) 0 nil])
([nil nil ((27287 . 27292)) nil (25724 300 299781 658000) 0 nil])
([nil nil ((#("BEGIN
" 0 5 (fontified t) 5 6 (fontified t)) . 27287) (undo-tree-id0 . 1) (undo-tree-id1 . -5) (undo-tree-id2 . -6) (undo-tree-id3 . -5) (undo-tree-id4 . -4) 27291) nil (25724 300 300226 481000) 0 nil])
([nil nil ((#("#+BEGIN_SRC emacs-lisp
(fset 'inserting\\ an\\ html\\ tangle\\ block
   (kmacro-lambda-form [?\\; ?x ?\\( ?s ?r ?c ?\\C-x ?a ?e escape ?k ?k ?j ?A ?: backspace ?h backspace ?h ?t ?m ?l ?  ?: ?t ?a ?n ?g ?l ?e ?  ?d ?o ?c ?u ?m ?e ?n ?t C-backspace ?c ?h ?i ?l ?d ?N ?o ?d ?e ?s ?\\( ?\\) ?. ?h ?t ?m ?l escape ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?h ?i ?l ?i ?s ?t ?i ?n ?g ?_ escape ?o escape ?i] 0 \"%d\"))

#+end_SRC
" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 1 22 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 22 23 (fontified t font-lock-fontified t help-echo nil prettify-symbols-start nil prettify-symbols-end nil font-lock-multiline t face org-block-begin-line composition nil) 23 65 (fontified t font-lock-fontified t src-block t help-echo nil prettify-symbols-start nil prettify-symbols-end nil font-lock-multiline t face (org-block) composition nil) 65 402 (fontified t font-lock-fontified t src-block t help-echo nil prettify-symbols-start nil prettify-symbols-end nil font-lock-multiline t face (org-block) composition nil) 402 406 (fontified t font-lock-fontified t src-block t help-echo nil prettify-symbols-start nil prettify-symbols-end nil font-lock-multiline t face (font-lock-string-face org-block) composition nil) 406 408 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 408 409 (fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 409 410 (fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 410 411 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 411 419 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 419 420 (fontified t face org-block-end-line)) . 26866) (undo-tree-id170 . -410) (undo-tree-id171 . -410) (undo-tree-id172 . -419) (undo-tree-id173 . -410) (undo-tree-id174 . -420) (undo-tree-id175 . -23) (undo-tree-id176 . -23) (undo-tree-id177 . -1) (undo-tree-id178 . -11) (undo-tree-id179 . -419) (undo-tree-id180 . -410) (undo-tree-id181 . -418) (undo-tree-id182 . -410) 27276) nil (25724 312 891499 920000) 0 nil] [nil nil ((27763 . 27764) (27762 . 27763) 27762) ((#("N" 0 1 (fontified nil)) . 27762) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("
" 0 1 (fontified t)) . 27763) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1)) (25724 300 299724 667000) 0 nil])
([nil nil ((26866 . 26867)) nil (25724 312 891475 615000) 0 nil])
nil
([nil nil ((#("s" 0 1 (fontified t)) . -26866) (undo-tree-id169 . -1) 26867) nil (25724 312 891472 262000) 0 nil])
([nil nil ((26866 . 26867)) nil (25724 312 891466 46000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -26866) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) 26867) nil (25724 312 891450 891000) 0 nil])
([nil nil ((#("*** 2.8 Determing if the document or any node inside of the document has focus
" 0 2 (fontified t face org-hide keymap (keymap)) 2 3 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 3 4 (fontified t keymap (keymap) face org-level-3) 4 17 (fontified t face org-level-3) 17 78 (fontified t face org-level-3) 78 79 (fontified t)) . 26786) (undo-tree-id183 . -78) (undo-tree-id184 . -78) (undo-tree-id185 . -79) (t 25724 312 961340 334000)) nil (25724 425 172988 284000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26379 . 26380) (#("
" 0 1 (fontified nil)) . -26458) (26379 . 26459)) nil (25724 425 172955 878000) 0 nil])
([nil nil ((26379 . 26380) (#("
" 0 1 (fontified t rear-nonsticky t)) . -26379) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("" 0 1 (fontified t)) . -26380) (undo-tree-id189 . -1) 26381 (26380 . 26381) (t 25724 425 234744 718000)) nil (25724 432 497426 529000) 0 nil])
([nil nil ((26865 . 26866) (26864 . 26865) (t 25724 432 562836 318000)) nil (25724 1217 178819 473000) 0 nil])
([nil nil ((#("c
" 0 3 (fontified t)) . 26864) (undo-tree-id198 . 1) (undo-tree-id199 . -2) (undo-tree-id200 . -3) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -1) 26865) nil (25724 1217 178813 885000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -26864) (undo-tree-id192 . -1) (#("m" 0 1 (fontified t)) . -26865) (undo-tree-id193 . -1) (#("x" 0 1 (fontified t)) . -26866) (undo-tree-id194 . -1) 26867 (26864 . 26867) (#("m" 0 1 (fontified t)) . -26864) (undo-tree-id195 . -1) (#("x" 0 1 (fontified t)) . -26865) (undo-tree-id196 . -1) (#("x" 0 1 (fontified t)) . -26866) (undo-tree-id197 . -1) 26867 (26864 . 26867)) nil (25724 1217 178795 237000) 0 nil])
([nil nil ((26987 . 26988) (26985 . 26987) (26964 . 26985) (26943 . 26964) (26938 . 26943) 26869) nil (25724 1217 178776 310000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -26993) (undo-tree-id190 . -1) (#("r" 0 1 (fontified t)) . -26994) (undo-tree-id191 . -1) 26995 (26993 . 26995) (26988 . 26993) 26988) nil (25724 1217 178769 117000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26988 . 26989) (#("
" 0 1 (font-lock-fontified t font-lock-multiline t face org-block-begin-line fontified nil)) . -27067) (26988 . 27068)) nil (25724 1217 178748 94000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27072 . 27073) (#("
" 0 1 (face org-block-end-line fontified nil)) . -27082) (27072 . 27083) 27068) nil (25724 1217 178742 437000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27244 . 27245) (nil fontified nil 27069 . 27245) (27069 . 27245) 27068) nil (25724 1217 178736 640000) 0 nil])
([nil nil ((27258 . 27259) 27255) nil (25724 1217 178723 789000) 0 nil])
([nil nil ((27435 . 27436) (#("g" 0 1 (fontified t)) . -27435) (undo-tree-id641 . -1) (#("
" 0 1 (fontified t)) . -27436) (undo-tree-id642 . -1) (undo-tree-id643 . -1) 27437 (27436 . 27437) (27431 . 27436) (27427 . 27431) (#(" " 0 1 (fontified t)) . -27427) (undo-tree-id644 . -1) 27428 (27417 . 27428) (27396 . 27417) (27375 . 27396) (27371 . 27375) (27363 . 27371) (27358 . 27363) (#("u" 0 1 (fontified t)) . -27358) (undo-tree-id645 . -1) 27359 (27342 . 27359) (t 25724 1217 250615 120000)) nil (25724 1342 375803 847000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 27458) (undo-tree-id640 . -3) (27436 . 27458) 27439 (27436 . 27439)) nil (25724 1342 375782 894000) 0 nil])
([nil nil ((#("#+BEGIN_SRC 
" 0 13 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 27436) (undo-tree-id573 . -12) (undo-tree-id574 . -13) (undo-tree-id575 . -8) (undo-tree-id576 . -8) (undo-tree-id577 . -8) (undo-tree-id578 . -8) (undo-tree-id579 . -8) (undo-tree-id580 . -8) (undo-tree-id581 . -8) (undo-tree-id582 . -8) (undo-tree-id583 . -8) (undo-tree-id584 . -8) (undo-tree-id585 . -8) (undo-tree-id586 . -8) (undo-tree-id587 . -8) (undo-tree-id588 . -8) (undo-tree-id589 . -8) (undo-tree-id590 . -8) (undo-tree-id591 . -8) (undo-tree-id592 . -8) (undo-tree-id593 . -8) (undo-tree-id594 . -8) (undo-tree-id595 . -8) (undo-tree-id596 . -8) (undo-tree-id597 . -8) (undo-tree-id598 . -8) (undo-tree-id599 . -8) (undo-tree-id600 . -8) (undo-tree-id601 . -8) (undo-tree-id602 . -8) (undo-tree-id603 . -8) (undo-tree-id604 . -8) (undo-tree-id605 . -8) (undo-tree-id606 . -8) (undo-tree-id607 . -8) (undo-tree-id608 . -8) (undo-tree-id609 . -8) (undo-tree-id610 . -8) (undo-tree-id611 . -8) (undo-tree-id612 . -8) (undo-tree-id613 . -8) (undo-tree-id614 . -8) (undo-tree-id615 . -8) (undo-tree-id616 . -8) (undo-tree-id617 . -8) (undo-tree-id618 . -8) (undo-tree-id619 . -8) (undo-tree-id620 . -8) (undo-tree-id621 . -8) (undo-tree-id622 . -8) (undo-tree-id623 . -8) (undo-tree-id624 . -8) (undo-tree-id625 . -8) (undo-tree-id626 . -8) (undo-tree-id627 . -8) (undo-tree-id628 . -8) (undo-tree-id629 . -8) (undo-tree-id630 . -8) (undo-tree-id631 . -8) (undo-tree-id632 . -8) (undo-tree-id633 . -8) (undo-tree-id634 . -8) (undo-tree-id635 . -8) (undo-tree-id636 . -8) (undo-tree-id637 . -8) (undo-tree-id638 . -8) (undo-tree-id639 . -13) 27444) nil (25724 1342 375768 18000) 0 nil])
([nil nil ((#("#+END_SRC
" 0 9 (fontified t font-lock-fontified t face org-meta-line) 9 10 (fontified t)) . 27436) (undo-tree-id210 . 1) (undo-tree-id211 . -9) (undo-tree-id212 . -10) (undo-tree-id213 . -8) (undo-tree-id214 . -8) (undo-tree-id215 . -9) (undo-tree-id216 . -8) (undo-tree-id217 . -8) (undo-tree-id218 . -8) (undo-tree-id219 . -8) (undo-tree-id220 . -8) (undo-tree-id221 . -8) (undo-tree-id222 . -8) (undo-tree-id223 . -8) (undo-tree-id224 . -8) (undo-tree-id225 . -8) (undo-tree-id226 . -8) (undo-tree-id227 . -8) (undo-tree-id228 . -8) (undo-tree-id229 . -8) (undo-tree-id230 . -8) (undo-tree-id231 . -8) (undo-tree-id232 . -8) (undo-tree-id233 . -8) (undo-tree-id234 . -8) (undo-tree-id235 . -8) (undo-tree-id236 . -8) (undo-tree-id237 . -8) (undo-tree-id238 . -8) (undo-tree-id239 . -8) (undo-tree-id240 . -8) (undo-tree-id241 . -8) (undo-tree-id242 . -8) (undo-tree-id243 . -8) (undo-tree-id244 . -8) (undo-tree-id245 . -8) (undo-tree-id246 . -8) (undo-tree-id247 . -8) (undo-tree-id248 . -8) (undo-tree-id249 . -8) (undo-tree-id250 . -8) (undo-tree-id251 . -8) (undo-tree-id252 . -8) (undo-tree-id253 . -8) (undo-tree-id254 . -8) (undo-tree-id255 . -8) (undo-tree-id256 . -8) (undo-tree-id257 . -8) (undo-tree-id258 . -8) (undo-tree-id259 . -8) (undo-tree-id260 . -8) (undo-tree-id261 . -8) (undo-tree-id262 . -8) (undo-tree-id263 . -8) (undo-tree-id264 . -8) (undo-tree-id265 . -8) (undo-tree-id266 . -8) (undo-tree-id267 . -8) (undo-tree-id268 . -8) (undo-tree-id269 . -8) (undo-tree-id270 . -8) (undo-tree-id271 . -8) (undo-tree-id272 . -8) (undo-tree-id273 . -8) (undo-tree-id274 . -8) (undo-tree-id275 . -8) (undo-tree-id276 . -8) (undo-tree-id277 . -8) (undo-tree-id278 . -8) (undo-tree-id279 . -8) (undo-tree-id280 . -8) (undo-tree-id281 . -8) (undo-tree-id282 . -8) (undo-tree-id283 . -8) (undo-tree-id284 . -8) (undo-tree-id285 . -8) (undo-tree-id286 . -8) (undo-tree-id287 . -8) (undo-tree-id288 . -8) (undo-tree-id289 . -8) (undo-tree-id290 . -8) (undo-tree-id291 . -8) (undo-tree-id292 . -8) (undo-tree-id293 . -8) (undo-tree-id294 . -8) (undo-tree-id295 . -8) (undo-tree-id296 . -8) (undo-tree-id297 . -8) (undo-tree-id298 . -8) (undo-tree-id299 . -8) (undo-tree-id300 . -8) (undo-tree-id301 . -8) (undo-tree-id302 . -8) (undo-tree-id303 . -8) (undo-tree-id304 . -8) (undo-tree-id305 . -8) (undo-tree-id306 . -8) (undo-tree-id307 . -8) (undo-tree-id308 . -8) (undo-tree-id309 . -8) (undo-tree-id310 . -8) (undo-tree-id311 . -8) (undo-tree-id312 . -8) (undo-tree-id313 . -8) (undo-tree-id314 . -8) (undo-tree-id315 . -8) (undo-tree-id316 . -8) (undo-tree-id317 . -8) (undo-tree-id318 . -8) (undo-tree-id319 . -8) (undo-tree-id320 . -8) (undo-tree-id321 . -8) (undo-tree-id322 . -8) (undo-tree-id323 . -8) (undo-tree-id324 . -8) (undo-tree-id325 . -8) (undo-tree-id326 . -8) (undo-tree-id327 . -8) (undo-tree-id328 . -8) (undo-tree-id329 . -8) (undo-tree-id330 . -8) (undo-tree-id331 . -8) (undo-tree-id332 . -8) (undo-tree-id333 . -8) (undo-tree-id334 . -8) (undo-tree-id335 . -8) (undo-tree-id336 . -8) (undo-tree-id337 . -8) (undo-tree-id338 . -8) (undo-tree-id339 . -8) (undo-tree-id340 . -8) (undo-tree-id341 . -8) (undo-tree-id342 . -8) (undo-tree-id343 . -8) (undo-tree-id344 . -8) (undo-tree-id345 . -8) (undo-tree-id346 . -8) (undo-tree-id347 . -8) (undo-tree-id348 . -8) (undo-tree-id349 . -8) (undo-tree-id350 . -8) (undo-tree-id351 . -8) (undo-tree-id352 . -8) (undo-tree-id353 . -8) (undo-tree-id354 . -8) (undo-tree-id355 . -8) (undo-tree-id356 . -8) (undo-tree-id357 . -8) (undo-tree-id358 . -8) (undo-tree-id359 . -8) (undo-tree-id360 . -8) (undo-tree-id361 . -8) (undo-tree-id362 . -8) (undo-tree-id363 . -8) (undo-tree-id364 . -8) (undo-tree-id365 . -8) (undo-tree-id366 . -8) (undo-tree-id367 . -8) (undo-tree-id368 . -8) (undo-tree-id369 . -8) (undo-tree-id370 . -8) (undo-tree-id371 . -8) (undo-tree-id372 . -8) (undo-tree-id373 . -8) (undo-tree-id374 . -8) (undo-tree-id375 . -8) (undo-tree-id376 . -8) (undo-tree-id377 . -8) (undo-tree-id378 . -8) (undo-tree-id379 . -8) (undo-tree-id380 . -8) (undo-tree-id381 . -8) (undo-tree-id382 . -8) (undo-tree-id383 . -8) (undo-tree-id384 . -8) (undo-tree-id385 . -8) (undo-tree-id386 . -8) (undo-tree-id387 . -8) (undo-tree-id388 . -8) (undo-tree-id389 . -8) (undo-tree-id390 . -8) (undo-tree-id391 . -8) (undo-tree-id392 . -8) (undo-tree-id393 . -8) (undo-tree-id394 . -8) (undo-tree-id395 . -8) (undo-tree-id396 . -8) (undo-tree-id397 . -8) (undo-tree-id398 . -8) (undo-tree-id399 . -8) (undo-tree-id400 . -8) (undo-tree-id401 . -8) (undo-tree-id402 . -8) (undo-tree-id403 . -8) (undo-tree-id404 . -8) (undo-tree-id405 . -8) (undo-tree-id406 . -8) (undo-tree-id407 . -8) (undo-tree-id408 . -8) (undo-tree-id409 . -8) (undo-tree-id410 . -8) (undo-tree-id411 . -8) (undo-tree-id412 . -8) (undo-tree-id413 . -8) (undo-tree-id414 . -8) (undo-tree-id415 . -8) (undo-tree-id416 . -8) (undo-tree-id417 . -8) (undo-tree-id418 . -8) (undo-tree-id419 . -8) (undo-tree-id420 . -8) (undo-tree-id421 . -8) (undo-tree-id422 . -8) (undo-tree-id423 . -8) (undo-tree-id424 . -8) (undo-tree-id425 . -8) (undo-tree-id426 . -8) (undo-tree-id427 . -8) (undo-tree-id428 . -8) (undo-tree-id429 . -8) (undo-tree-id430 . -8) (undo-tree-id431 . -8) (undo-tree-id432 . -8) (undo-tree-id433 . -8) (undo-tree-id434 . -8) (undo-tree-id435 . -8) (undo-tree-id436 . -8) (undo-tree-id437 . -8) (undo-tree-id438 . -8) (undo-tree-id439 . -8) (undo-tree-id440 . -8) (undo-tree-id441 . -8) (undo-tree-id442 . -8) (undo-tree-id443 . -8) (undo-tree-id444 . -8) (undo-tree-id445 . -8) (undo-tree-id446 . -8) (undo-tree-id447 . -8) (undo-tree-id448 . -8) (undo-tree-id449 . -8) (undo-tree-id450 . -8) (undo-tree-id451 . -8) (undo-tree-id452 . -8) (undo-tree-id453 . -8) (undo-tree-id454 . -8) (undo-tree-id455 . -8) (undo-tree-id456 . -8) (undo-tree-id457 . -8) (undo-tree-id458 . -8) (undo-tree-id459 . -8) (undo-tree-id460 . -8) (undo-tree-id461 . -8) (undo-tree-id462 . -8) (undo-tree-id463 . -8) (undo-tree-id464 . -8) (undo-tree-id465 . -8) (undo-tree-id466 . -8) (undo-tree-id467 . -8) (undo-tree-id468 . -8) (undo-tree-id469 . -8) (undo-tree-id470 . -8) (undo-tree-id471 . -8) (undo-tree-id472 . -8) (undo-tree-id473 . -8) (undo-tree-id474 . -8) (undo-tree-id475 . -8) (undo-tree-id476 . -8) (undo-tree-id477 . -8) (undo-tree-id478 . -8) (undo-tree-id479 . -8) (undo-tree-id480 . -8) (undo-tree-id481 . -8) (undo-tree-id482 . -8) (undo-tree-id483 . -8) (undo-tree-id484 . -8) (undo-tree-id485 . -8) (undo-tree-id486 . -8) (undo-tree-id487 . -8) (undo-tree-id488 . -8) (undo-tree-id489 . -8) (undo-tree-id490 . -8) (undo-tree-id491 . -8) (undo-tree-id492 . -8) (undo-tree-id493 . -8) (undo-tree-id494 . -8) (undo-tree-id495 . -8) (undo-tree-id496 . -8) (undo-tree-id497 . -8) (undo-tree-id498 . -8) (undo-tree-id499 . -8) (undo-tree-id500 . -8) (undo-tree-id501 . -8) (undo-tree-id502 . -8) (undo-tree-id503 . -8) (undo-tree-id504 . -8) (undo-tree-id505 . -8) (undo-tree-id506 . -8) (undo-tree-id507 . -8) (undo-tree-id508 . -8) (undo-tree-id509 . -8) (undo-tree-id510 . -8) (undo-tree-id511 . -8) (undo-tree-id512 . -8) (undo-tree-id513 . -8) (undo-tree-id514 . -8) (undo-tree-id515 . -8) (undo-tree-id516 . -8) (undo-tree-id517 . -8) (undo-tree-id518 . -8) (undo-tree-id519 . -8) (undo-tree-id520 . -8) (undo-tree-id521 . -8) (undo-tree-id522 . -8) (undo-tree-id523 . -8) (undo-tree-id524 . -8) (undo-tree-id525 . -8) (undo-tree-id526 . -8) (undo-tree-id527 . -8) (undo-tree-id528 . -8) (undo-tree-id529 . -8) (undo-tree-id530 . -8) (undo-tree-id531 . -8) (undo-tree-id532 . -8) (undo-tree-id533 . -8) (undo-tree-id534 . -8) (undo-tree-id535 . -8) (undo-tree-id536 . -8) (undo-tree-id537 . -8) (undo-tree-id538 . -8) (undo-tree-id539 . -8) (undo-tree-id540 . -8) (undo-tree-id541 . -8) (undo-tree-id542 . -8) (undo-tree-id543 . -8) (undo-tree-id544 . -8) (undo-tree-id545 . -8) (undo-tree-id546 . -8) (undo-tree-id547 . -8) (undo-tree-id548 . -8) (undo-tree-id549 . -8) (undo-tree-id550 . -8) (undo-tree-id551 . -8) (undo-tree-id552 . -8) (undo-tree-id553 . -8) (undo-tree-id554 . -8) (undo-tree-id555 . -8) (undo-tree-id556 . -8) (undo-tree-id557 . -8) (undo-tree-id558 . -8) (undo-tree-id559 . -8) (undo-tree-id560 . -8) (undo-tree-id561 . -8) (undo-tree-id562 . -8) (undo-tree-id563 . -8) (undo-tree-id564 . -8) (undo-tree-id565 . -8) (undo-tree-id566 . -8) (undo-tree-id567 . -8) (undo-tree-id568 . -8) (undo-tree-id569 . -8) (undo-tree-id570 . -8) (undo-tree-id571 . -8) (undo-tree-id572 . -10) 27444) nil (25724 1342 375589 642000) 0 nil])
([nil nil ((27435 . 27436) 27351) nil (25724 1342 374492 10000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 27435) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1)) nil (25724 1342 374481 114000) 0 nil])
([nil nil ((27435 . 27436) (t 25724 1342 432153 339000) 27350) nil (25724 1345 123983 56000) 0 nil])
([nil nil ((27436 . 27437) (t 25724 1345 188184 432000)) nil (25724 1723 404765 941000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 27458) (undo-tree-id24 . -3) (27436 . 27458) 27439 (27436 . 27439) (27435 . 27436) (t 25724 1723 464028 813000) 27345) nil (25724 14831 801242 549000) 0 nil])
([nil nil ((#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -27480) (undo-tree-id0 . -1) (#("r" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -27481) (undo-tree-id1 . -1) (#("c" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -27482) (undo-tree-id2 . -1) 27483 (27480 . 27483) (27479 . 27480) (#("c" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -27479) (undo-tree-id3 . -1) (#("o" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -27480) (undo-tree-id4 . -1) (#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -27481) (undo-tree-id5 . -1) (#("l" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -27482) (undo-tree-id6 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -27483) (undo-tree-id7 . -1) (#("c" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -27484) (undo-tree-id8 . -1) (#("t" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -27485) (undo-tree-id9 . -1) (#("i" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -27486) (undo-tree-id10 . -1) (#("o" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -27487) (undo-tree-id11 . -1) (#("n" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -27488) (undo-tree-id12 . -1) 27489 (27479 . 27489) (27474 . 27479) (27466 . 27474) (27463 . 27466) (27460 . 27463) (27459 . 27460) (27453 . 27459) (#("\"" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -27453) (undo-tree-id13 . -1) (#(":" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -27454) (undo-tree-id14 . -1) 27455 (27453 . 27455) (27452 . 27453) (#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -27452) (undo-tree-id15 . -1) (#(";" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -27453) (undo-tree-id16 . -1) 27454 (27453 . 27454) (27448 . 27453) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -27448) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("n" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -27449) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("a" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -27450) (undo-tree-id21 . -1) 27451 (27447 . 27451) (#("l" 0 1 (font-lock-fontified t fontified t)) . -27444) (undo-tree-id22 . -1) (#("l" 0 1 (font-lock-fontified t fontified t)) . -27445) (undo-tree-id23 . -1) 27446 (27444 . 27446)) nil (25724 14831 801217 615000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27871 . 27872) (nil fontified nil 27481 . 27872) (27481 . 27872) 27480) nil (25724 14831 800577 15000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -27885) (undo-tree-id25 . -1) 27886 (27885 . 27886) (#("l" 0 1 (fontified t)) . -27885) (undo-tree-id26 . -1) 27886 (27885 . 27886) (t 25724 14831 864496 794000)) nil (25724 14843 108914 102000) 0 nil])
([nil nil ((27901 . 27905) (t 25724 14843 168834 809000) 27885) nil (25724 14929 500008 227000) 0 nil])
([nil nil ((27905 . 27909) 27904) nil (25724 14929 500004 525000) 0 nil])
([nil nil ((nil fontified t 27909 . 27910) (nil keymap (keymap) 27909 . 27910) (nil face org-level-2 27909 . 27910) (nil fontified t 27908 . 27909) (nil composition (1 1 [9675]) 27908 . 27909) (nil keymap (keymap) 27908 . 27909) (nil face org-level-2 27908 . 27909) (nil fontified t 27907 . 27908) (nil face org-hide 27907 . 27908) (nil keymap (keymap) 27907 . 27908) (#("** " 0 1 (keymap (keymap) face org-hide fontified t) 1 2 (face org-level-2 keymap (keymap) composition (1 1 [9675]) fontified t) 2 3 (face org-level-2 keymap (keymap) fontified t)) . 27906) (27909 . 27913) 27908) nil (25724 14929 499999 287000) 0 nil])
([nil nil ((27910 . 27916) 27906) nil (25724 14929 499992 512000) 0 nil])
([nil nil ((27916 . 27922) 27915) nil (25724 14929 499989 579000) 0 nil])
([nil nil ((27922 . 27928) 27921) nil (25724 14929 499986 296000) 0 nil])
([nil nil ((27928 . 27934) 27927) nil (25724 14929 499983 13000) 0 nil])
([nil nil ((27934 . 27940) 27933) nil (25724 14929 499980 150000) 0 nil])
([nil nil ((27940 . 27946) 27939) nil (25724 14929 499976 797000) 0 nil])
([nil nil ((27946 . 27952) 27945) nil (25724 14929 499973 515000) 0 nil])
([nil nil ((27952 . 27958) 27951) nil (25724 14929 499970 162000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27941 . 27942) (nil fontified nil 27910 . 27942) (27910 . 27942) 27909) nil (25724 14929 499966 810000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28015 . 28016) (nil fontified nil 27948 . 28016) (27948 . 28016) 27947) nil (25724 14929 499962 480000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28042 . 28043) (nil fontified nil 28022 . 28043) (28022 . 28043) 28021) nil (25724 14929 499957 660000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28082 . 28083) (nil fontified nil 28049 . 28083) (28049 . 28083) 28048) nil (25724 14929 500224 950000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28150 . 28151) (nil fontified nil 28089 . 28151) (28089 . 28151) 28088) nil (25724 14982 674302 822000) 0 nil] [nil nil ((nil rear-nonsticky nil 28122 . 28123) (nil fontified nil 28089 . 28123) (28089 . 28123) 28088) ((#("3.4 Get the tag name of an element" 0 33 (face org-level-3 fontified nil) 33 34 (face org-level-3 rear-nonsticky nil fontified nil)) . 28089) (undo-tree-id27 . -33) (undo-tree-id28 . -33) (undo-tree-id29 . -33) (undo-tree-id30 . -33) (nil rear-nonsticky t 28122 . 28123)) (25724 14929 499940 130000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28218 . 28219) (nil fontified nil 28157 . 28219) (28157 . 28219) 28156) nil (25724 14982 674298 981000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 28219) (undo-tree-id37 . -1)) nil (25724 14982 674294 651000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28521 . 28522) (nil fontified nil 28224 . 28522) (28224 . 28522) 28223) nil (25724 14982 674289 832000) 0 nil])
([nil nil ((#("3.8 Getting a list of class attribute values
" 0 45 (fontified t)) . 28274) (undo-tree-id35 . -45) (undo-tree-id36 . -44)) nil (25724 14982 674285 82000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28483 . 28484) (#("
" 0 1 (fontified nil)) . -28528) (28483 . 28529) 28482) nil (25724 14982 674278 28000) 0 nil])
([nil nil ((#("3.8 Getting a list of class attribute values" 0 44 (fontified t)) . 28484) (undo-tree-id33 . -44) (undo-tree-id34 . -43)) nil (25724 14982 674273 418000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28526 . 28527) (nil fontified nil 28483 . 28527) (28483 . 28527) 28482) nil (25724 14982 674261 475000) 0 nil])
([nil nil (28326) nil (25724 14982 674257 215000) 0 nil])
([nil nil ((#("3.9 Adding & removing sub-values to a class attribute" 0 1 (fontified t) 1 53 (fontified t)) . 28274) (undo-tree-id31 . 53) (undo-tree-id32 . -52)) nil (25724 14982 674525 831000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28533 . 28534) (nil fontified nil 28481 . 28534) (28481 . 28534) 28480) nil (25724 15019 44182 186000) 0 nil] [nil nil ((nil rear-nonsticky nil 28532 . 28533) (nil fontified nil 28480 . 28533) (28480 . 28533)) ((#("3.9 Adding & removing sub-values to a class attribute" 0 52 (org-emphasis t font-lock-multiline t face (bold) fontified nil) 52 53 (org-emphasis t font-lock-multiline t face (bold) rear-nonsticky nil fontified nil)) . 28480) (undo-tree-id38 . -52) (undo-tree-id39 . -52) (undo-tree-id40 . -52) (undo-tree-id41 . -52) (nil rear-nonsticky t 28532 . 28533)) (25724 14982 674219 569000) 0 nil])
([nil nil ((28534 . 28540) 28533) nil (25724 15019 44177 855000) 0 nil])
nil
([nil nil ((28540 . 28546) 28539) nil (25724 15019 44174 503000) 0 nil])
([nil nil ((28546 . 28552) 28545) nil (25724 15019 44171 150000) 0 nil])
([nil nil ((#("3.10 Toggling a class attribute value" 0 37 (fontified t)) . 28275) (undo-tree-id45 . -36)) nil (25724 15019 44167 309000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28539 . 28540) (nil fontified nil 28503 . 28540) (28503 . 28540) 28502) nil (25724 15019 44162 1000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 28385)) nil (25724 15019 44157 321000) 0 nil])
([nil nil (28383) nil (25724 15019 44154 458000) 0 nil])
([nil nil ((#("3.12 Getting & Setting data-* attribute" 0 39 (fontified t)) . 28346) (undo-tree-id43 . 39) (undo-tree-id44 . -38)) nil (25724 15019 44150 686000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28550 . 28551) (nil fontified nil 28512 . 28551) (28512 . 28551) 28511) nil (25724 15019 44357 212000) 0 nil])
([nil nil ((#("3.11 Determining if a class attribute value contains a specific value" 0 2 (fontified t) 2 4 (fontified t) 4 69 (fontified t)) . 28276) (undo-tree-id55 . -68) (undo-tree-id56 . -49) (undo-tree-id57 . -5) 28281) nil (25724 15033 759817 842000) 0 nil] [nil nil ((#("11" 0 2 (fontified t)) . 28278) (undo-tree-id42 . -1)) ((28278 . 28280)) (25724 15019 44130 711000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28505 . 28506) (nil fontified nil 28437 . 28506) (28437 . 28506) 28436) nil (25724 15033 759807 785000) 0 nil])
nil
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 28277) (undo-tree-id54 . -1)) nil (25724 15033 759802 476000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 28276) (undo-tree-id53 . -1)) nil (25724 15033 759796 749000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 28275) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1)) nil (25724 15033 759790 603000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 28275) (undo-tree-id49 . -1)) nil (25724 15033 759779 638000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 28274) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1)) nil (25724 15033 759769 580000) 0 nil])
([nil nil ((27942 . 27947) 27906) nil (25724 15033 759638 345000) 0 nil])
([nil nil ((28044 . 28048) (#("s" 0 1 (fontified t)) . -28044) (undo-tree-id62 . -1) 28045 (28032 . 28045) (28013 . 28032) (#("e" 0 1 (fontified t)) . -28013) (undo-tree-id63 . -1) 28014 (28003 . 28014) (#("t" 0 1 (fontified t)) . -28003) (undo-tree-id64 . -1) (#("n" 0 1 (fontified t)) . -28004) (undo-tree-id65 . -1) 28005 (27993 . 28005) (27986 . 27993) (#("u" 0 1 (fontified t)) . -27986) (undo-tree-id66 . -1) (#("r" 0 1 (fontified t)) . -27987) (undo-tree-id67 . -1) 27988 (27986 . 27988) (27971 . 27986) (#("y" 0 1 (fontified t)) . -27971) (undo-tree-id68 . -1) (#("o" 0 1 (fontified t)) . -27972) (undo-tree-id69 . -1) 27973 (27960 . 27973) (#("x" 0 1 (fontified t)) . -27960) (undo-tree-id70 . -1) 27961 (27953 . 27961) (#("n" 0 1 (fontified t)) . -27953) (undo-tree-id71 . -1) (#("l" 0 1 (fontified t)) . -27954) (undo-tree-id72 . -1) (#(" " 0 1 (fontified t)) . -27955) (undo-tree-id73 . -1) (#("o" 0 1 (fontified t)) . -27956) (undo-tree-id74 . -1) 27957 (27947 . 27957) (t 25724 15033 822533 36000)) nil (25724 25133 97135 919000) 0 nil])
([nil nil ((28048 . 28053) 28047) nil (25724 25133 96730 1000) 0 nil])
([nil nil ((28053 . 28057)) nil (25724 25133 96724 833000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -28053) (undo-tree-id58 . -1) (#("x" 0 1 (fontified t)) . -28054) (undo-tree-id59 . -1) (#("." 0 1 (fontified t)) . -28055) (undo-tree-id60 . -1) (#("s" 0 1 (fontified t)) . -28056) (undo-tree-id61 . -1) 28057) nil (25724 25133 96711 982000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -28053) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("p" 0 1 (fontified t)) . -28054) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 28055 (28053 . 28055) (t 25724 25133 156288 61000)) nil (25724 25221 181431 788000) 0 nil])
([nil nil ((28063 . 28083) (#("a" 0 1 (fontified t)) . -28063) (undo-tree-id96 . -1) (#("n" 0 1 (fontified t)) . -28064) (undo-tree-id97 . -1) (#("c" 0 1 (fontified t)) . -28065) (undo-tree-id98 . -1) (#("h" 0 1 (fontified t)) . -28066) (undo-tree-id99 . -1) (#("r" 0 1 (fontified t)) . -28067) (undo-tree-id100 . -1) (#("o" 0 1 (fontified t)) . -28068) (undo-tree-id101 . -1) 28069 (28052 . 28069) (t 25724 25221 253005 566000)) nil (25724 25317 610647 327000) 0 nil])
([nil nil ((28067 . 28068)) nil (25724 25317 610389 960000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 28069)) nil (25724 25317 610386 189000) 0 nil])
([nil nil ((28114 . 28118) (28106 . 28114) (#("htmlAn" 0 6 (fontified nil)) . 28106) (undo-tree-id91 . -6) (undo-tree-id92 . -6) (28089 . 28106) 28095 (28094 . 28095) (#("r" 0 1 (fontified t)) . -28094) (undo-tree-id93 . -1) 28095 (28085 . 28095) (#("o" 0 1 (fontified t)) . -28085) (undo-tree-id94 . -1) 28086 (28084 . 28086) (#(" " 0 1 (fontified t)) . -28084) (undo-tree-id95 . -1) 28085 (28084 . 28085)) nil (25724 25317 610379 205000) 0 nil])
([nil nil ((28137 . 28156) (#("x" 0 1 (fontified t)) . -28137) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("c" 0 1 (fontified t)) . -28138) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 28139 (28138 . 28139) (#("o" 0 1 (fontified t)) . -28138) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("n" 0 1 (fontified t)) . -28139) (undo-tree-id88 . -1) (undo-tree-id89 . -1) 28140 (28132 . 28140) (#("a" 0 1 (fontified t)) . -28132) (undo-tree-id90 . -1) 28133 (28122 . 28133) (28118 . 28122) 28117) nil (25724 25317 610355 877000) 0 nil])
([nil nil ((28156 . 28162) 28157) nil (25724 25317 610329 687000) 0 nil])
([nil nil ((nil fontified t 28162 . 28163) (nil keymap (keymap) 28162 . 28163) (nil face org-level-3 28162 . 28163) (nil fontified t 28161 . 28162) (nil composition (2 1 [10040]) 28161 . 28162) (nil keymap (keymap) 28161 . 28162) (nil face org-level-3 28161 . 28162) (nil fontified t 28159 . 28161) (nil face org-hide 28159 . 28161) (nil keymap (keymap) 28159 . 28161) (#("*** " 0 2 (keymap (keymap) face org-hide fontified t) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [10040]) fontified t) 3 4 (face org-level-3 keymap (keymap) fontified t)) . 28158) (28162 . 28167) 28161) nil (25724 25330 513684 736000) 0 nil])
([nil nil ((#("   there are many constructors - list
" 0 37 (fontified t) 37 38 (fontified t)) . 28119) (undo-tree-id120 . -37) (undo-tree-id121 . -38) (undo-tree-id122 . -37)) nil (25724 25506 650216 896000) 0 nil] [nil nil ((#("   there are many constructors - list
" 0 37 (fontified t) 37 38 (fontified t)) . 28119) (undo-tree-id79 . -37) (undo-tree-id80 . -38) (undo-tree-id81 . -37)) ((28119 . 28157)) (25724 25328 899356 531000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28128 . 28129) (#("
" 0 1 (fontified nil)) . -28163) (28125 . 28164) 28120) nil (25724 25506 650206 559000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28128 . 28129) (#("
" 0 1 (fontified nil)) . -28163) (28125 . 28164) 28124) ((#("
   there are many constructors - list
" 0 1 (fontified t) 1 3 (fontified nil) 3 4 (rear-nonsticky nil fontified nil) 4 38 (fontified nil) 38 39 (fontified nil)) . 28125) (undo-tree-id106 . -38) (28163 . 28164) (nil rear-nonsticky t 28128 . 28129)) (25724 25322 375321 786000) 0 nil] [nil nil ((nil rear-nonsticky nil 28123 . 28124) (#("
" 0 1 (fontified nil)) . -28158) (28120 . 28159) (28120 . 28121) 28123) ((#("
" 0 1 (fontified nil)) . 28120) (undo-tree-id102 . -1) (#("
   there are many constructors - list
" 0 1 (fontified t) 1 3 (fontified nil) 3 4 (rear-nonsticky nil fontified nil) 4 38 (fontified nil) 38 39 (fontified nil)) . 28120) (undo-tree-id103 . -38) (undo-tree-id104 . -1) (undo-tree-id105 . -38) (28158 . 28159) (nil rear-nonsticky t 28123 . 28124)) (25724 25317 610281 147000) 0 nil])
([nil nil ((28107 . 28109) (#("constructor

**** 
   " 0 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (keymap (keymap) face org-hide fontified t) 14 16 (keymap (keymap) face org-hide fontified t) 16 17 (face org-level-4 keymap (keymap) fontified t) 17 18 (face org-level-4 keymap (keymap) fontified t) 18 19 (fontified t) 19 21 (fontified t) 21 22 (rear-nonsticky t fontified t)) . -28107) (undo-tree-id115 . -19) (undo-tree-id116 . -19) (undo-tree-id117 . -12) (undo-tree-id118 . -22) 28129 (#("U" 0 1 (fontified t)) . -28129) (undo-tree-id119 . -1) 28130 (28129 . 28130)) nil (25724 25506 650199 924000) 0 nil])
([nil nil ((#(" " 0 1 (face org-level-4 keymap (keymap) fontified t)) . 28124)) ((28124 . 28125)) (25724 25322 375125 251000) 0 nil])
nil
([nil nil ((28143 . 28149) 28108) nil (25724 25506 650183 302000) 0 nil])
nil
([nil nil ((#("there are many constructors - list" 0 34 (fontified t)) . 28109) (undo-tree-id112 . 34) (undo-tree-id113 . -34) (undo-tree-id114 . -33)) nil (25724 25506 650178 622000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28148 . 28149) (nil fontified nil 28115 . 28149) (28115 . 28149) 28114) nil (25724 25506 650167 727000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 28108) (undo-tree-id110 . -1) (undo-tree-id111 . -1)) nil (25724 25506 650162 419000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 28108) (undo-tree-id109 . -1)) nil (25724 25506 650153 758000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 28108) (undo-tree-id108 . -1)) nil (25724 25506 650148 31000) 0 nil])
([nil nil ((nil fontified t 28112 . 28113) (nil keymap (keymap) 28112 . 28113) (nil face org-level-3 28112 . 28113) (nil fontified t 28111 . 28112) (nil composition (2 1 [10040]) 28111 . 28112) (nil keymap (keymap) 28111 . 28112) (nil face org-level-3 28111 . 28112) (nil fontified t 28110 . 28111) (nil face org-hide 28110 . 28111) (nil keymap (keymap) 28110 . 28111) (nil fontified t 28109 . 28110) (nil face org-hide 28109 . 28110) (nil keymap (keymap) 28109 . 28110) (#("*** " 0 1 (keymap (keymap) face org-hide fontified t) 1 2 (keymap (keymap) face org-hide fontified t) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [10040]) fontified t) 3 4 (face org-level-3 keymap (keymap) fontified t)) . 28108) (28112 . 28117) 28108) nil (25724 25506 650140 69000) 0 nil])
([nil nil ((#("     " 0 5 (fontified t)) . -28148) (undo-tree-id107 . -5) 28153 (28147 . 28153) 28111) nil (25724 25506 650129 942000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29063 . 29064) (nil fontified nil 28148 . 29064) (28148 . 29064)) nil (25724 25506 650108 571000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t)) . 29098) (29099 . 29101) (#("H" 0 1 (fontified t)) . 29080) (29081 . 29083) (#("H" 0 1 (fontified t)) . 29059) (29060 . 29062) (#("H" 0 1 (fontified t)) . 29037) (29038 . 29040) (#("H" 0 1 (fontified t)) . 29016) (29017 . 29019) (#("H" 0 1 (fontified t)) . 28991) (28992 . 28994) (#("H" 0 1 (fontified t)) . 28970) (28971 . 28973) (#("H" 0 1 (fontified t)) . 28945) (28946 . 28948) (#("H" 0 1 (fontified t)) . 28927) (28928 . 28930) (#("H" 0 1 (fontified t)) . 28908) (28909 . 28911) (#("H" 0 1 (fontified t)) . 28891) (28892 . 28894) (#("H" 0 1 (fontified t)) . 28875) (28876 . 28878) (#("H" 0 1 (fontified t)) . 28856) (28857 . 28859) (#("H" 0 1 (fontified t)) . 28838) (28839 . 28841) (#("H" 0 1 (fontified t)) . 28819) (28820 . 28822) (#("H" 0 1 (fontified t)) . 28801) (28802 . 28804) (#("H" 0 1 (fontified t)) . 28782) (28783 . 28785) (#("H" 0 1 (fontified t)) . 28766) (28767 . 28769) (#("H" 0 1 (fontified t)) . 28751) (28752 . 28754) (#("H" 0 1 (fontified t)) . 28734) (28735 . 28737) (#("H" 0 1 (fontified t)) . 28713) (28714 . 28716) (#("H" 0 1 (fontified t)) . 28698) (28699 . 28701) (#("H" 0 1 (fontified t)) . 28682) (28683 . 28685) (#("H" 0 1 (fontified t)) . 28664) (28665 . 28667) (#("H" 0 1 (fontified t)) . 28644) (28645 . 28647) (#("H" 0 1 (fontified t)) . 28622) (28623 . 28625) (#("H" 0 1 (fontified t)) . 28606) (28607 . 28609) (#("H" 0 1 (fontified t)) . 28591) (28592 . 28594) (#("H" 0 1 (fontified t)) . 28574) (28575 . 28577) (#("H" 0 1 (fontified t)) . 28552) (28553 . 28555) (#("H" 0 1 (fontified t)) . 28534) (28535 . 28537) (#("H" 0 1 (fontified t)) . 28516) (28517 . 28519) (#("H" 0 1 (fontified t)) . 28498) (28499 . 28501) (#("H" 0 1 (fontified t)) . 28479) (28480 . 28482) (#("H" 0 1 (fontified t)) . 28458) (28459 . 28461) (#("H" 0 1 (fontified t)) . 28440) (28441 . 28443) (#("H" 0 1 (fontified t)) . 28421) (28422 . 28424) (#("H" 0 1 (fontified t)) . 28400) (28401 . 28403) (#("H" 0 1 (fontified t)) . 28382) (28383 . 28385) (#("H" 0 1 (fontified t)) . 28363) (28364 . 28366) (#("H" 0 1 (fontified t)) . 28342) (28343 . 28345) (#("H" 0 1 (fontified t)) . 28323) (28324 . 28326) (#("H" 0 1 (fontified t)) . 28306) (28307 . 28309) (#("H" 0 1 (fontified t)) . 28289) (28290 . 28292) (#("H" 0 1 (fontified t)) . 28271) (28272 . 28274) (#("H" 0 1 (fontified t)) . 28251) (28252 . 28254) (#("H" 0 1 (fontified t)) . 28234) (28235 . 28237) (#("H" 0 1 (fontified t)) . 28217) (28218 . 28220) (#("H" 0 1 (fontified t)) . 28199) (28200 . 28202) (#("H" 0 1 (fontified t)) . 28182) (28183 . 28185) (#("H" 0 1 (fontified t)) . 28165) (28166 . 28168) (#("H" 0 1 (fontified t)) . 28148) (28149 . 28151)) nil (25724 25506 650084 126000) 0 nil])
([nil nil ((28149 . 28150)) nil (25724 25506 650034 538000) 0 nil])
([nil nil ((28167 . 28168)) nil (25724 25506 650031 186000) 0 nil])
([nil nil ((28185 . 28186)) nil (25724 25506 650027 833000) 0 nil])
([nil nil ((28203 . 28204)) nil (25724 25506 650024 551000) 0 nil])
([nil nil ((28240 . 28241) (28222 . 28223)) nil (25724 25506 650021 268000) 0 nil])
([nil nil ((28437 . 28438) (28415 . 28416) (28396 . 28397) (28376 . 28377) (28354 . 28355) (28334 . 28335) (28316 . 28317) (28298 . 28299) (28279 . 28280) (28258 . 28259)) nil (25724 25506 650016 519000) 0 nil])
([nil nil ((28672 . 28673) (28649 . 28650) (28632 . 28633) (28616 . 28617) (28598 . 28599) (28575 . 28576) (28556 . 28557) (28537 . 28538) (28518 . 28519) (28498 . 28499) (28476 . 28477) (28457 . 28458)) nil (25724 25506 650007 858000) 0 nil])
([nil nil ((28894 . 28895) (28875 . 28876) (28855 . 28856) (28836 . 28837) (28816 . 28817) (28799 . 28800) (28783 . 28784) (28765 . 28766) (28743 . 28744) (28727 . 28728)) nil (25724 25506 649998 290000) 0 nil])
([nil nil ((28969 . 28970) (28949 . 28950) (28931 . 28932) (28914 . 28915)) nil (25724 25506 649989 839000) 0 nil])
([nil nil ((29014 . 29015) (28988 . 28989)) nil (25724 25506 649984 601000) 0 nil])
([nil nil ((29062 . 29063) (29036 . 29037)) nil (25724 25506 649980 271000) 0 nil])
([nil nil ((29107 . 29108) (29084 . 29085)) nil (25724 25506 649974 963000) 0 nil])
([nil nil ((29148 . 29149) (29129 . 29130)) nil (25724 25506 649962 112000) 0 nil])
([nil nil ((28712 . 28713) (28693 . 28694) (t 25724 25506 720935 285000)) nil (25724 25522 13320 119000) 0 nil])
([nil nil ((#("     " 0 5 (fontified t)) . -28148) (undo-tree-id125 . -5) (undo-tree-id126 . -5) (undo-tree-id127 . -5) (undo-tree-id128 . -5) (undo-tree-id129 . -5) (undo-tree-id130 . -5) (undo-tree-id131 . -5) (undo-tree-id132 . -5) (undo-tree-id133 . -5) (undo-tree-id134 . -5) (undo-tree-id135 . -5) (undo-tree-id136 . -5) (undo-tree-id137 . -5) (undo-tree-id138 . -5) (undo-tree-id139 . -5) (undo-tree-id140 . -5) (undo-tree-id141 . -5) (undo-tree-id142 . -5) (undo-tree-id143 . -5) (undo-tree-id144 . -5) (undo-tree-id145 . -5) (undo-tree-id146 . -5) (undo-tree-id147 . -5) (undo-tree-id148 . -5) (undo-tree-id149 . -5) (undo-tree-id150 . -5) (undo-tree-id151 . -5) (undo-tree-id152 . -5) (undo-tree-id153 . -5) (undo-tree-id154 . -5) (undo-tree-id155 . -5) (undo-tree-id156 . -5) (undo-tree-id157 . -5) (undo-tree-id158 . -5) (undo-tree-id159 . -5) (undo-tree-id160 . -5) (undo-tree-id161 . -5) (undo-tree-id162 . -5) (undo-tree-id163 . -5) (undo-tree-id164 . -5) (undo-tree-id165 . -5) (undo-tree-id166 . -5) (undo-tree-id167 . -5) (undo-tree-id168 . -5) (undo-tree-id169 . -5) (undo-tree-id170 . -5) (undo-tree-id171 . -5) (undo-tree-id172 . -5) (undo-tree-id173 . -5) (undo-tree-id174 . -5) (undo-tree-id175 . -5) (undo-tree-id176 . -5) (undo-tree-id177 . -5) (undo-tree-id178 . -5) (undo-tree-id179 . -5) (undo-tree-id180 . -5) (undo-tree-id181 . -5) (undo-tree-id182 . -5) (undo-tree-id183 . -5) (undo-tree-id184 . -5) (undo-tree-id185 . -5) (undo-tree-id186 . -5) (undo-tree-id187 . -5) (undo-tree-id188 . -5) (undo-tree-id189 . -5) (undo-tree-id190 . -5) (undo-tree-id191 . -5) (undo-tree-id192 . -5) (undo-tree-id193 . -5) (undo-tree-id194 . -5) (undo-tree-id195 . -5) (undo-tree-id196 . -5) (undo-tree-id197 . -5) (undo-tree-id198 . -5) (undo-tree-id199 . -5) (undo-tree-id200 . -5) (undo-tree-id201 . -5) (undo-tree-id202 . -5) (undo-tree-id203 . -5) (undo-tree-id204 . -5) (undo-tree-id205 . -5) (undo-tree-id206 . -5) (undo-tree-id207 . -5) (undo-tree-id208 . -5) (undo-tree-id209 . -5) (undo-tree-id210 . -5) (undo-tree-id211 . -5) (undo-tree-id212 . -5) (undo-tree-id213 . -5) (undo-tree-id214 . -5) (undo-tree-id215 . -5) (undo-tree-id216 . -5) (undo-tree-id217 . -5) (undo-tree-id218 . -5) (undo-tree-id219 . -5) (undo-tree-id220 . -5) (undo-tree-id221 . -5) (undo-tree-id222 . -5) (undo-tree-id223 . -5) (undo-tree-id224 . -5) (undo-tree-id225 . -5) (undo-tree-id226 . -5) (undo-tree-id227 . -5) (undo-tree-id228 . -5) (undo-tree-id229 . -5) (undo-tree-id230 . -5) (undo-tree-id231 . -5) (undo-tree-id232 . -5) (undo-tree-id233 . -5) (undo-tree-id234 . -5) (undo-tree-id235 . -5) (undo-tree-id236 . -5) (undo-tree-id237 . -5) (undo-tree-id238 . -5) (undo-tree-id239 . -5) (undo-tree-id240 . -5) (undo-tree-id241 . -5) (undo-tree-id242 . -5) (undo-tree-id243 . -5) (undo-tree-id244 . -5) (undo-tree-id245 . -5) (undo-tree-id246 . -5) (undo-tree-id247 . -5) (undo-tree-id248 . -5) (undo-tree-id249 . -5) (undo-tree-id250 . -5) (undo-tree-id251 . -5) (undo-tree-id252 . -5) (undo-tree-id253 . -5) (undo-tree-id254 . -5) (undo-tree-id255 . -5) (undo-tree-id256 . -5) (undo-tree-id257 . -5) (undo-tree-id258 . -5) (undo-tree-id259 . -5) (undo-tree-id260 . -5) (undo-tree-id261 . -5) (undo-tree-id262 . -5) (undo-tree-id263 . -5) (undo-tree-id264 . -5) (undo-tree-id265 . -5) (undo-tree-id266 . -5) (undo-tree-id267 . -5) (undo-tree-id268 . -5) (undo-tree-id269 . -5) (undo-tree-id270 . -5) (undo-tree-id271 . -5) (undo-tree-id272 . -5) (undo-tree-id273 . -5) (undo-tree-id274 . -5) (undo-tree-id275 . -5) (undo-tree-id276 . -5) (undo-tree-id277 . -5) (undo-tree-id278 . -5) (undo-tree-id279 . -5) (undo-tree-id280 . -5) (undo-tree-id281 . -5) (undo-tree-id282 . -5) (undo-tree-id283 . -5) (undo-tree-id284 . -5) (undo-tree-id285 . -5) (undo-tree-id286 . -5) (undo-tree-id287 . -5) (undo-tree-id288 . -5) (undo-tree-id289 . -5) (undo-tree-id290 . -5) (undo-tree-id291 . -5) (undo-tree-id292 . -5) (undo-tree-id293 . -5) (undo-tree-id294 . -5) (undo-tree-id295 . -5) (undo-tree-id296 . -5) (undo-tree-id297 . -5) (undo-tree-id298 . -5) (undo-tree-id299 . -5) (undo-tree-id300 . -5) (undo-tree-id301 . -5) (undo-tree-id302 . -5) (undo-tree-id303 . -5) (undo-tree-id304 . -5) (undo-tree-id305 . -5) (undo-tree-id306 . -5) (undo-tree-id307 . -5) (undo-tree-id308 . -5) (undo-tree-id309 . -5) (undo-tree-id310 . -5) (undo-tree-id311 . -5) (undo-tree-id312 . -5) (undo-tree-id313 . -5) (undo-tree-id314 . -5) (undo-tree-id315 . -5) (undo-tree-id316 . -5) (undo-tree-id317 . -5) (undo-tree-id318 . -5) (undo-tree-id319 . -5) (undo-tree-id320 . -5) (undo-tree-id321 . -5) (undo-tree-id322 . -5) (undo-tree-id323 . -5) (undo-tree-id324 . -5) (undo-tree-id325 . -5) (undo-tree-id326 . -5) (undo-tree-id327 . -5) (undo-tree-id328 . -5) (undo-tree-id329 . -5) (undo-tree-id330 . -5) (undo-tree-id331 . -5) (undo-tree-id332 . -5) (undo-tree-id333 . -5) (undo-tree-id334 . -5) (undo-tree-id335 . -5) (undo-tree-id336 . -5) (undo-tree-id337 . -5) (undo-tree-id338 . -5) (undo-tree-id339 . -5) (undo-tree-id340 . -5) (undo-tree-id341 . -5) (undo-tree-id342 . -5) (undo-tree-id343 . -5) (undo-tree-id344 . -5) (undo-tree-id345 . -5) (undo-tree-id346 . -5) (undo-tree-id347 . -5) 28153 (28147 . 28153) (t 25724 25522 81188 266000) 28108) nil (25724 25552 456651 112000) 0 nil])
([nil nil ((28211 . 28219) (#("o" 0 1 (face org-level-4 fontified t)) . -28211) (undo-tree-id123 . -1) 28212 (28197 . 28212) (#(" " 0 1 (face org-level-4 fontified t)) . -28197) (undo-tree-id124 . -1) 28198 (28181 . 28198) (28168 . 28181) (28147 . 28168)) nil (25724 25552 454429 15000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -29397) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (#("r" 0 1 (fontified t)) . -29398) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (#("c" 0 1 (fontified t)) . -29399) (undo-tree-id353 . -1) (undo-tree-id354 . -1) 29400 (29397 . 29400) (29396 . 29397) (29387 . 29396) (29366 . 29387) (29358 . 29366) (#("e" 0 1 (fontified t)) . -29358) (undo-tree-id355 . -1) 29359 (29343 . 29359) (#("e" 0 1 (fontified t)) . -29343) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (#("l" 0 1 (fontified t)) . -29344) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#("e" 0 1 (fontified t)) . -29345) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (#("n" 0 1 (fontified t)) . -29346) (undo-tree-id362 . -1) (#("e" 0 1 (fontified t)) . -29347) (undo-tree-id363 . -1) 29348 (29341 . 29348) (29320 . 29341) (29315 . 29320) (t 25724 25552 517697 382000) 29243) nil (25724 25589 425205 570000) 0 nil])
([nil nil ((29397 . 29399) (#("i" 0 1 (fontified nil)) . -29397) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (#("n" 0 1 (fontified t)) . -29398) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (#("s" 0 1 (fontified t)) . -29399) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (#("e" 0 1 (fontified t)) . -29400) (undo-tree-id379 . -1) (undo-tree-id380 . -1) 29401 (29397 . 29401) (t 25724 25589 490328 408000)) nil (25724 25652 376690 178000) 0 nil])
([nil nil ((#("a 
" 0 2 (fontified t) 2 3 (fontified t)) . 29397) (undo-tree-id370 . 1) (undo-tree-id371 . -2) (undo-tree-id372 . -3)) nil (25724 25652 376646 666000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -29398) (undo-tree-id369 . -4) 29402 (29397 . 29402) 29397) nil (25724 25652 376633 885000) 0 nil])
([nil nil ((29397 . 29399)) nil (25724 25652 376624 317000) 0 nil])
([nil nil ((#("a 
" 0 2 (fontified t) 2 3 (fontified t)) . 29397) (undo-tree-id364 . 1) (undo-tree-id365 . -2) (undo-tree-id366 . -3) (undo-tree-id367 . -1) (undo-tree-id368 . -1) 29398) nil (25724 25652 376613 770000) 0 nil])
([nil nil ((29397 . 29398)) nil (25724 25652 375867 227000) 0 nil])
([nil nil ((#("i
" 0 1 (fontified t) 1 2 (fontified t)) . 29397) (undo-tree-id381 . 1) (undo-tree-id382 . -1) (undo-tree-id383 . -2) (undo-tree-id384 . -1) (t 25724 25652 443429 684000)) nil (25724 25656 986243 868000) 0 nil])
([nil nil ((29396 . 29401) 29316) nil (25724 25656 986207 61000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -29402) (undo-tree-id390 . -4) 29406 (29401 . 29406) (t 25724 25657 51511 453000) 29400) nil (25724 25799 513180 322000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -29402) (undo-tree-id389 . -4) 29406 (29401 . 29406) 29397) nil (25724 25799 513172 150000) 0 nil])
([nil nil ((29402 . 29403)) nil (25724 25799 513164 957000) 0 nil])
([nil nil ((#("k
" 0 1 (fontified t) 1 2 (fontified t)) . 29402) (undo-tree-id385 . 1) (undo-tree-id386 . -1) (undo-tree-id387 . -2) (undo-tree-id388 . -2)) nil (25724 25799 513159 718000) 0 nil])
([nil nil ((29401 . 29406) 29397) nil (25724 25799 513125 915000) 0 nil])
([nil nil ((#("src" 0 3 (fontified nil)) . 29428) (undo-tree-id678 . -3) (undo-tree-id679 . -3) (29406 . 29428) 29409 (#("x" 0 1 (fontified t)) . -29409) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (#("a" 0 1 (fontified t)) . -29410) (undo-tree-id682 . -1) (#("e" 0 1 (fontified t)) . -29411) (undo-tree-id683 . -1) 29412 (29406 . 29412) (29401 . 29406) (t 25724 25799 586100 358000) 29400) nil (25724 25819 61978 529000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 29402) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1)) nil (25724 25819 61946 52000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 29402) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1)) nil (25724 25819 61819 358000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 29402) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1)) nil (25724 25819 61688 683000) 0 nil])
([nil nil ((#(" " 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 29402) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1)) nil (25724 25820 401817 776000) 0 nil])
([nil nil ((29426 . 29436) (29423 . 29426) (29414 . 29423)) nil (25724 25835 489156 901000) 0 nil] [nil nil ((#("#" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 29402) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1)) ((29402 . 29403)) (25724 25819 62364 128000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -29449) (undo-tree-id708 . -1) 29450 (29449 . 29450)) nil (25724 26032 694719 39000) 0 nil] [nil nil ((#("#+BEGIN_SRC html :tangle test.html
#+END_SRC
" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 1 34 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 34 35 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 35 44 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t) 44 45 (face org-block-end-line fontified t)) . 29402) (undo-tree-id685 . 11) (undo-tree-id686 . -44) (undo-tree-id687 . -44) (undo-tree-id688 . -33) (undo-tree-id689 . -44) (undo-tree-id690 . -35) (undo-tree-id691 . -45) (undo-tree-id692 . -21) (undo-tree-id693 . -44) (undo-tree-id694 . -33) (undo-tree-id695 . -44) (undo-tree-id696 . -44) 29446) ((29402 . 29447)) (25724 25835 488764 108000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t fontified t)) . -29413) (undo-tree-id391 . -1) (undo-tree-id392 . -1) 29414 (29413 . 29414)) ((#(" " 0 1 (font-lock-fontified t fontified nil)) . 29413) (undo-tree-id684 . -1) (29413 . 29414)) (25724 25819 60948 216000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -29492) (undo-tree-id754 . -1) (#("k" 0 1 (fontified t)) . -29493) (undo-tree-id755 . -1) 29494 (29492 . 29494) (nil rear-nonsticky nil 29491 . 29492) (nil fontified nil 29491 . 29492) (nil fontified nil 29482 . 29491) (nil fontified nil 29481 . 29482) (nil fontified nil 29448 . 29481) (nil fontified nil 29447 . 29448) (29447 . 29492) (#("i" 0 1 (fontified t)) . -29447) (undo-tree-id756 . -1) 29448 (29447 . 29448)) nil (25724 26062 809425 77000) 0 nil] [nil nil ((#("#+BEGIN_SRC html :tangle test.html
#+END_SRC
" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 1 34 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 34 35 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 35 44 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t) 44 45 (face org-block-end-line fontified t)) . 29402) (undo-tree-id697 . -35) (undo-tree-id698 . -44) (undo-tree-id699 . -35) (undo-tree-id700 . -35) (undo-tree-id701 . -45) (undo-tree-id702 . -45) (undo-tree-id703 . -45) (undo-tree-id704 . -35) (undo-tree-id705 . -35) (undo-tree-id706 . -45) (undo-tree-id707 . -45)) ((29402 . 29447)) (25724 26032 694164 841000) 0 nil])
nil
nil
([nil nil ((#("#+BEGIN_SRC html :tangle test.html
#+END_SRC
" 0 1 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 1 34 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 34 35 (face org-block-begin-line font-lock-multiline t fontified t font-lock-fontified t) 35 44 (face org-block-end-line font-lock-multiline t fontified t font-lock-fontified t) 44 45 (face org-block-end-line rear-nonsticky t fontified t)) . 29447) (undo-tree-id709 . -35) (undo-tree-id710 . -44) (undo-tree-id711 . -35) (undo-tree-id712 . -35) (undo-tree-id713 . -45) (undo-tree-id714 . -35) (undo-tree-id715 . -45) (undo-tree-id716 . -35) (undo-tree-id717 . -35) (undo-tree-id718 . -35) (undo-tree-id719 . -35) (undo-tree-id720 . -35) (undo-tree-id721 . -35) (undo-tree-id722 . -35) (undo-tree-id723 . -35) (undo-tree-id724 . -35) (undo-tree-id725 . -35) (undo-tree-id726 . -35) (undo-tree-id727 . -35) (undo-tree-id728 . -35) (undo-tree-id729 . -35) (undo-tree-id730 . -35) (undo-tree-id731 . -35) (undo-tree-id732 . -35) (undo-tree-id733 . -35) (undo-tree-id734 . -35) (undo-tree-id735 . -35) (undo-tree-id736 . -35) (undo-tree-id737 . -35) (undo-tree-id738 . -35) (undo-tree-id739 . -35) (undo-tree-id740 . -35) (undo-tree-id741 . -35) (undo-tree-id742 . -35) (undo-tree-id743 . -35) (undo-tree-id744 . -35) (undo-tree-id745 . -35) (undo-tree-id746 . -35) (undo-tree-id747 . -35) (undo-tree-id748 . -35) (undo-tree-id749 . -35) (undo-tree-id750 . -35) (undo-tree-id751 . -35) (undo-tree-id752 . -35) (undo-tree-id753 . -45) 29482) nil (25724 26062 809322 548000) 0 nil])
nil
([nil nil ((29436 . 29437) (t 25724 26062 931069 504000) 29402) nil (25724 26074 49089 98000) 0 nil])
([nil nil ((nil rear-nonsticky nil 30102 . 30103) (nil fontified nil 29437 . 30103) (29437 . 30103) (t 25724 26074 127283 811000)) nil (25724 26118 682744 911000) 0 nil])
([nil nil ((#("test" 0 4 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . 29427) (undo-tree-id766 . -3) (undo-tree-id767 . -3) (undo-tree-id768 . -3) (undo-tree-id769 . -3) (undo-tree-id770 . -3) 29430) nil (25724 26118 682738 199000) 0 nil])
([nil nil ((29453 . 29459) (#("m" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -29453) (undo-tree-id757 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -29454) (undo-tree-id758 . -1) (#("n" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -29455) (undo-tree-id759 . -1) 29456 (29452 . 29456) (29448 . 29452) (#("o" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -29448) (undo-tree-id760 . -1) 29449 (29445 . 29449) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -29445) (undo-tree-id761 . -1) (#("e" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -29446) (undo-tree-id762 . -1) 29447 (29436 . 29447) (#("p" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -29436) (undo-tree-id763 . -1) 29437 (29427 . 29437) (#("n" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -29427) (undo-tree-id764 . -1) (#("h" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) . -29428) (undo-tree-id765 . -1) 29429 (29427 . 29429)) nil (25724 26118 682710 22000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 30144) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (t 25724 26118 755768 430000)) nil (25724 26132 672579 657000) 0 nil])
([nil nil ((30144 . 30145)) nil (25724 26132 672556 228000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -30144) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) 30145) nil (25724 26132 672364 462000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -30143) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) 30144 (t 25724 26132 752247 849000)) nil (25724 26187 525415 22000) 0 nil])
([nil nil ((30143 . 30144) (t 25724 26187 590925 579000)) nil (25724 26195 22804 990000) 0 nil])
([nil nil ((30144 . 30145)) nil (25724 26503 396557 333000) 0 nil])
([nil nil ((#(" ;x 
" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 30142) (undo-tree-id1634 . 5) (undo-tree-id1635 . -3) (undo-tree-id1636 . -4) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -5) (undo-tree-id1641 . -1) (undo-tree-id1642 . -5) (undo-tree-id1643 . -5)) nil (25724 26506 676423 214000) 0 nil] [nil nil ((#(" ;x 
" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 30142) (undo-tree-id1624 . 4) (undo-tree-id1625 . -3) (undo-tree-id1626 . -4) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -5) (undo-tree-id1631 . -1) (undo-tree-id1632 . -5) (undo-tree-id1633 . -5)) ((30142 . 30147)) (25724 26503 396316 176000) 0 nil] [nil nil ((#(" ;x" 0 1 (fontified t) 1 3 (fontified t)) . 30142) (undo-tree-id1119 . 2) (undo-tree-id1120 . -3) (undo-tree-id1121 . -2) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -3) (undo-tree-id1128 . -1) (undo-tree-id1130 . -1) (undo-tree-id1132 . -1) (undo-tree-id1134 . -1) (undo-tree-id1136 . -1) (undo-tree-id1138 . -1) (undo-tree-id1140 . -1) (undo-tree-id1142 . -1) (undo-tree-id1144 . -1) (undo-tree-id1146 . -1) (undo-tree-id1148 . -1) (undo-tree-id1150 . -1) (undo-tree-id1152 . -1) (undo-tree-id1154 . -1) (undo-tree-id1156 . -1) (undo-tree-id1158 . -1) (undo-tree-id1160 . -1) (undo-tree-id1162 . -1) (undo-tree-id1164 . -1) (undo-tree-id1166 . -1) (undo-tree-id1168 . -1) (undo-tree-id1170 . -1) (undo-tree-id1172 . -1) (undo-tree-id1174 . -1) (undo-tree-id1176 . -1) (undo-tree-id1178 . -1) (undo-tree-id1180 . -1) (undo-tree-id1182 . -1) (undo-tree-id1184 . -1) (undo-tree-id1186 . -1) (undo-tree-id1188 . -1) (undo-tree-id1190 . -1) (undo-tree-id1192 . -1) (undo-tree-id1194 . -1) (undo-tree-id1196 . -1) (undo-tree-id1198 . -1) (undo-tree-id1200 . -1) (undo-tree-id1202 . -1) (undo-tree-id1204 . -1) (undo-tree-id1206 . -1) (undo-tree-id1208 . -1) (undo-tree-id1210 . -1) (undo-tree-id1212 . -1) (undo-tree-id1214 . -1) (undo-tree-id1216 . -1) (undo-tree-id1218 . -1) (undo-tree-id1220 . -1) (undo-tree-id1222 . -1) (undo-tree-id1224 . -1) (undo-tree-id1226 . -1) (undo-tree-id1228 . -1) (undo-tree-id1230 . -1) (undo-tree-id1232 . -1) (undo-tree-id1234 . -1) (undo-tree-id1236 . -1) (undo-tree-id1238 . -1) (undo-tree-id1240 . -1) (undo-tree-id1242 . -1) (undo-tree-id1244 . -1) (undo-tree-id1246 . -1) (undo-tree-id1248 . -1) (undo-tree-id1250 . -1) (undo-tree-id1252 . -1) (undo-tree-id1254 . -1) (undo-tree-id1256 . -1) (undo-tree-id1258 . -1) (undo-tree-id1260 . -1) (undo-tree-id1262 . -1) (undo-tree-id1264 . -1) (undo-tree-id1266 . -1) (undo-tree-id1268 . -1) (undo-tree-id1270 . -1) (undo-tree-id1272 . -1) (undo-tree-id1274 . -1) (undo-tree-id1276 . -1) (undo-tree-id1278 . -1) (undo-tree-id1280 . -1) (undo-tree-id1282 . -1) (undo-tree-id1284 . -1) (undo-tree-id1286 . -1) (undo-tree-id1288 . -1) (undo-tree-id1290 . -1) (undo-tree-id1292 . -1) (undo-tree-id1294 . -1) (undo-tree-id1296 . -1) (undo-tree-id1298 . -1) (undo-tree-id1300 . -1) (undo-tree-id1302 . -1) (undo-tree-id1304 . -1) (undo-tree-id1306 . -1) (undo-tree-id1308 . -1) (undo-tree-id1310 . -1) (undo-tree-id1312 . -1) (undo-tree-id1314 . -1) (undo-tree-id1316 . -1) (undo-tree-id1318 . -1) (undo-tree-id1320 . -1) (undo-tree-id1322 . -1) (undo-tree-id1324 . -1) (undo-tree-id1326 . -1) (undo-tree-id1328 . -1) (undo-tree-id1330 . -1) (undo-tree-id1332 . -1) (undo-tree-id1334 . -1) (undo-tree-id1336 . -1) (undo-tree-id1338 . -1) (undo-tree-id1340 . -1) (undo-tree-id1342 . -1) (undo-tree-id1344 . -1) (undo-tree-id1346 . -1) (undo-tree-id1348 . -1) (undo-tree-id1350 . -1) (undo-tree-id1352 . -1) (undo-tree-id1354 . -1) (undo-tree-id1356 . -1) (undo-tree-id1358 . -1) (undo-tree-id1360 . -1) (undo-tree-id1362 . -1) (undo-tree-id1364 . -1) (undo-tree-id1366 . -1) (undo-tree-id1368 . -1) (undo-tree-id1370 . -1) (undo-tree-id1372 . -1) (undo-tree-id1374 . -1) (undo-tree-id1376 . -1) (undo-tree-id1378 . -1) (undo-tree-id1380 . -1) (undo-tree-id1382 . -1) (undo-tree-id1384 . -1) (undo-tree-id1386 . -1) (undo-tree-id1388 . -1) (undo-tree-id1390 . -1) (undo-tree-id1392 . -1) (undo-tree-id1394 . -1) (undo-tree-id1396 . -1) (undo-tree-id1398 . -1) (undo-tree-id1400 . -1) (undo-tree-id1402 . -1) (undo-tree-id1404 . -1) (undo-tree-id1406 . -1) (undo-tree-id1408 . -1) (undo-tree-id1410 . -1) (undo-tree-id1412 . -1) (undo-tree-id1414 . -1) (undo-tree-id1416 . -1) (undo-tree-id1418 . -1) (undo-tree-id1420 . -1) (undo-tree-id1422 . -1) (undo-tree-id1424 . -1) (undo-tree-id1426 . -1) (undo-tree-id1428 . -1) (undo-tree-id1430 . -1) (undo-tree-id1432 . -1) (undo-tree-id1434 . -1) (undo-tree-id1436 . -1) (undo-tree-id1438 . -1) (undo-tree-id1440 . -1) (undo-tree-id1442 . -1) (undo-tree-id1444 . -1) (undo-tree-id1446 . -1) (undo-tree-id1448 . -1) (undo-tree-id1450 . -1) (undo-tree-id1452 . -1) (undo-tree-id1454 . -1) (undo-tree-id1456 . -1) (undo-tree-id1458 . -1) (undo-tree-id1460 . -1) (undo-tree-id1462 . -1) (undo-tree-id1464 . -1) (undo-tree-id1466 . -1) (undo-tree-id1468 . -1) (undo-tree-id1470 . -1) (undo-tree-id1472 . -1) (undo-tree-id1474 . -1) (undo-tree-id1476 . -1) (undo-tree-id1478 . -1) (undo-tree-id1480 . -1) (undo-tree-id1482 . -1) (undo-tree-id1484 . -1) (undo-tree-id1486 . -1) (undo-tree-id1488 . -1) (undo-tree-id1490 . -1) (undo-tree-id1492 . -1) (undo-tree-id1494 . -1) (undo-tree-id1496 . -1) (undo-tree-id1498 . -1) (undo-tree-id1500 . -1) (undo-tree-id1502 . -1) (undo-tree-id1504 . -1) (undo-tree-id1506 . -1) (undo-tree-id1508 . -1) (undo-tree-id1510 . -1) (undo-tree-id1512 . -1) (undo-tree-id1514 . -1) (undo-tree-id1516 . -1) (undo-tree-id1518 . -1) (undo-tree-id1520 . -1) (undo-tree-id1522 . -1) (undo-tree-id1524 . -1) (undo-tree-id1526 . -1) (undo-tree-id1528 . -1) (undo-tree-id1530 . -1) (undo-tree-id1532 . -1) (undo-tree-id1534 . -1) (undo-tree-id1536 . -1) (undo-tree-id1538 . -1) (undo-tree-id1540 . -1) (undo-tree-id1542 . -1) (undo-tree-id1544 . -1) (undo-tree-id1546 . -1) (undo-tree-id1548 . -1) (undo-tree-id1550 . -1) (undo-tree-id1552 . -1) (undo-tree-id1554 . -1) (undo-tree-id1556 . -1) (undo-tree-id1558 . -1) (undo-tree-id1560 . -1) (undo-tree-id1562 . -1) (undo-tree-id1564 . -1) (undo-tree-id1566 . -1) (undo-tree-id1568 . -1) (undo-tree-id1570 . -1) (undo-tree-id1572 . -1) (undo-tree-id1574 . -1) (undo-tree-id1576 . -1) (undo-tree-id1578 . -1) (undo-tree-id1580 . -1) (undo-tree-id1582 . -1) (undo-tree-id1584 . -1) (undo-tree-id1586 . -1) (undo-tree-id1588 . -1) (undo-tree-id1590 . -1) (undo-tree-id1592 . -1) (undo-tree-id1594 . -1) (undo-tree-id1596 . -1) (undo-tree-id1598 . -1) (undo-tree-id1600 . -1) (undo-tree-id1602 . -1) (undo-tree-id1604 . -1) (undo-tree-id1606 . -1) (undo-tree-id1608 . -1) (undo-tree-id1610 . -1) (undo-tree-id1612 . -1) (undo-tree-id1614 . -1) (undo-tree-id1616 . -1) (undo-tree-id1618 . -1) (undo-tree-id1620 . -1) (undo-tree-id1622 . -1) (t 25724 26195 92764 579000)) ((30142 . 30145) (t 25724 26201 353043 816000)) (25724 26201 281617 297000) 0 nil])
([nil nil ((30142 . 30143) (t 25724 26506 746129 179000)) nil (25724 26559 3245 471000) 0 nil])
nil
nil
([nil nil ((#("k" 0 1 (fontified t)) . -30142) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) 30143) nil (25724 26559 3188 744000) 0 nil])
([nil nil ((29247 . 29255) 30142 (t 25724 26559 72805 71000)) nil (25724 26586 196491 76000) 0 nil])
([nil nil ((30150 . 30151) (t 25724 26586 268585 27000)) nil (25724 26788 923091 99000) 0 nil])
([nil nil ((30151 . 30152)) nil (25724 26788 923087 328000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -30150) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (#("x" 0 1 (fontified t)) . -30151) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) 30152) nil (25724 26788 922975 927000) 0 nil])
([nil nil ((30150 . 30151)) nil (25724 26788 920083 142000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -30150) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) 30151) nil (25724 26788 919989 971000) 0 nil])
([nil nil ((30200 . 30201) (30195 . 30200) (30183 . 30195) (#("d" 0 1 (fontified t)) . -30183) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) 30184 (30171 . 30184) (30150 . 30171) (#("o" 0 1 (fontified t)) . -30150) (undo-tree-id3533 . -1) 30151 (30150 . 30151) (t 25724 26788 999923 742000)) nil (25724 27099 105789 565000) 0 nil])
([nil nil ((30200 . 30206) 30201) nil (25724 27099 105776 84000) 0 nil])
([nil nil ((nil fontified t 30206 . 30207) (nil keymap (keymap) 30206 . 30207) (nil face org-level-3 30206 . 30207) (nil fontified t 30205 . 30206) (nil composition (2 1 [10040]) 30205 . 30206) (nil keymap (keymap) 30205 . 30206) (nil face org-level-3 30205 . 30206) (nil fontified t 30203 . 30205) (nil face org-hide 30203 . 30205) (nil keymap (keymap) 30203 . 30205) (#("*** " 0 2 (keymap (keymap) face org-hide fontified t) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [10040]) fontified t) 3 4 (face org-level-3 keymap (keymap) fontified t)) . 30202) (30206 . 30211) 30205) nil (25724 27099 105770 915000) 0 nil])
([nil nil ((#("some good properties to take a note of are follows" 0 50 (fontified t)) . 30150) (undo-tree-id3529 . -49) (undo-tree-id3530 . -50)) nil (25724 27099 105761 416000) 0 nil])
([nil nil ((nil rear-nonsticky nil 30206 . 30207) (nil fontified nil 30157 . 30207) (30157 . 30207) 30156) nil (25724 27099 105753 313000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 30151) (undo-tree-id3528 . -1)) nil (25724 27099 105747 935000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 30150) (undo-tree-id3527 . -1)) nil (25724 27099 105740 810000) 0 nil])
([nil nil ((nil rear-nonsticky nil 30332 . 30333) (nil fontified nil 30206 . 30333) (30206 . 30333)) nil (25724 27099 105721 322000) 0 nil])
([nil nil (("" . -30331) (30331 . 30332) ("" . -30322) (30322 . 30323) ("" . -30309) (30309 . 30310) ("" . -30290) (30290 . 30291) ("" . -30274) (30274 . 30275) ("" . -30258) (30258 . 30259) ("" . -30242) (30242 . 30243) ("" . -30232) (30232 . 30233) ("" . -30223) (30223 . 30224) ("" . -30206) (30206 . 30207)) nil (25724 27099 105712 172000) 0 nil])
([nil nil ((nil fontified t 30351 . 30352) (#(">" 0 1 (fontified t)) . 30349) (30350 . 30353) (nil fontified t 30340 . 30341) (#(">" 0 1 (fontified t)) . 30338) (30339 . 30342) (nil fontified t 30325 . 30326) (#(">" 0 1 (fontified t)) . 30323) (30324 . 30327) (nil fontified t 30304 . 30305) (#(">" 0 1 (fontified t)) . 30302) (30303 . 30306) (nil fontified t 30286 . 30287) (#(">" 0 1 (fontified t)) . 30284) (30285 . 30288) (nil fontified t 30268 . 30269) (#(">" 0 1 (fontified t)) . 30266) (30267 . 30270) (nil fontified t 30250 . 30251) (#(">" 0 1 (fontified t)) . 30248) (30249 . 30252) (nil fontified t 30238 . 30239) (#(">" 0 1 (fontified t)) . 30236) (30237 . 30240) (nil fontified t 30227 . 30228) (#(">" 0 1 (fontified t)) . 30225) (30226 . 30229) (nil fontified t 30208 . 30209) (#(">" 0 1 (fontified t)) . 30206) (30207 . 30210)) nil (25724 27099 105686 467000) 0 nil])
([nil nil ((30596 . 30598) (30591 . 30596) (30583 . 30591) (30581 . 30583) (#(" " 0 1 (fontified t)) . -30581) (undo-tree-id4186 . -1) 30582 (30577 . 30582) (#("i" 0 1 (fontified t)) . -30577) (undo-tree-id4187 . -1) 30578 (30573 . 30578) (#("w" 0 1 (fontified t)) . -30573) (undo-tree-id4188 . -1) 30574 (30573 . 30574) (#("i" 0 1 (fontified t)) . -30573) (undo-tree-id4189 . -1) 30574 (30562 . 30574) (#("t" 0 1 (fontified t)) . -30562) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) 30563 (30551 . 30563) (30530 . 30551) (30529 . 30530) (30522 . 30529) (#("c" 0 1 (fontified t)) . -30522) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (#("o" 0 1 (fontified t)) . -30523) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (#("u" 0 1 (fontified t)) . -30524) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) 30525 (30506 . 30525) (30501 . 30506) (30480 . 30501) (#("n" 0 1 (fontified t)) . -30480) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (#("s" 0 1 (fontified t)) . -30481) (undo-tree-id4200 . -1) (#("i" 0 1 (fontified t)) . -30482) (undo-tree-id4201 . -1) (#("n" 0 1 (fontified t)) . -30483) (undo-tree-id4202 . -1) (#("d" 0 1 (fontified t)) . -30484) (undo-tree-id4203 . -1) (#(" " 0 1 (fontified t)) . -30485) (undo-tree-id4204 . -1) 30486 (30473 . 30486) (#("r" 0 1 (fontified t)) . -30473) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (#("o" 0 1 (fontified t)) . -30474) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) 30475 (30466 . 30475) (30454 . 30466) (#("l" 0 1 (fontified t)) . -30454) (undo-tree-id4209 . -1) 30455 (30452 . 30455) (#("a" 0 1 (fontified t)) . -30452) (undo-tree-id4210 . -1) (#("n" 0 1 (fontified t)) . -30453) (undo-tree-id4211 . -1) 30454 (30450 . 30454) (#(" " 0 1 (fontified t)) . -30450) (undo-tree-id4212 . -1) 30451 (30444 . 30451) (30443 . 30444) (30422 . 30443) (30401 . 30422) (#("s" 0 1 (fontified t)) . -30401) (undo-tree-id4213 . -1) 30402 (30396 . 30402) (#("m" 0 1 (fontified t)) . -30396) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (#("e" 0 1 (fontified t)) . -30397) (undo-tree-id4216 . -1) 30398 (30394 . 30398) (30389 . 30394) (t 25724 27099 175411 965000) 30364) nil (25724 29170 243267 440000) 0 nil])
([nil nil ((nil rear-nonsticky nil 30644 . 30645) (nil fontified nil 30600 . 30645) (30600 . 30645) (30599 . 30600) 30599) nil (25724 29170 243193 58000) 0 nil])
([nil nil ((30634 . 30635) 30600) nil (25724 29170 243189 217000) 0 nil])
([nil nil ((nil rear-nonsticky nil 30682 . 30683) (nil fontified nil 30635 . 30683) (30635 . 30683)) nil (25724 29170 243186 284000) 0 nil])
([nil nil ((30683 . 30684) 30682) nil (25724 29170 243182 442000) 0 nil])
([nil nil ((30684 . 30685) 30684) nil (25724 29170 243179 649000) 0 nil])
([nil nil ((30685 . 30686) 30685) nil (25724 29170 243176 296000) 0 nil])
([nil nil ((nil rear-nonsticky nil 30711 . 30712) (nil fontified nil 30686 . 30712) (30686 . 30712)) nil (25724 29170 243173 502000) 0 nil])
([nil nil ((30736 . 30737) (30735 . 30736) (30730 . 30735) (30726 . 30730) (30724 . 30726) (30715 . 30724) (30710 . 30715) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -30710) (undo-tree-id4185 . -1) 30711 (30708 . 30711) (30699 . 30708) (30697 . 30699) (30684 . 30697)) nil (25724 29170 243168 753000) 0 nil])
([nil nil ((30713 . 30724) (30711 . 30713) (#("querySelector" 0 13 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 30711) (undo-tree-id4183 . -12) (undo-tree-id4184 . -2) 30713) nil (25724 29170 243159 394000) 0 nil])
([nil nil ((30784 . 30793) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -30784) (undo-tree-id4181 . -1) 30785 (30779 . 30785) (30777 . 30779) (30776 . 30777) (30775 . 30776) (30766 . 30775) (30763 . 30766) (30758 . 30763) (30751 . 30758) (30746 . 30751) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -30746) (undo-tree-id4182 . -1) 30747 (30741 . 30747) (30738 . 30741)) nil (25724 29170 243150 734000) 0 nil])
([nil nil ((30792 . 30793) (#(":" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 30792)) nil (25724 29170 243137 45000) 0 nil])
([nil nil ((30819 . 30820) (#("r" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -30819) (undo-tree-id4176 . -1) 30820 (30819 . 30820) (#("A" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -30819) (undo-tree-id4177 . -1) 30820 (30814 . 30815) (#("h" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -30823) (undo-tree-id4178 . -1) 30824 (30822 . 30824) (#("d" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -30822) (undo-tree-id4179 . -1) 30823 (30814 . 30823) (30813 . 30815) (30802 . 30813) (30799 . 30802) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -30799) (undo-tree-id4180 . -1) 30800 (30793 . 30800) (30791 . 30793)) nil (25724 29170 243129 572000) 0 nil])
([nil nil ((#("
" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . -30827) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) 30828 (30827 . 30828) 30819) nil (25724 29170 243026 415000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -30865) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (#("*" 0 1 (org-emphasis t font-lock-multiline t face (bold) fontified t)) . -30866) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (#("*" 0 1 (org-emphasis t font-lock-multiline t face (bold) fontified t)) . -30867) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (#("*" 0 1 (org-emphasis t font-lock-multiline t face (bold) fontified t)) . -30868) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) 30869 (30856 . 30869) (#("+end_src
****" 0 13 (fontified nil)) . -30856) (nil fontified t 30868 . 30869) (t 25724 29170 317941 223000) (nil rear-nonsticky t 30868 . 30869) (t 25724 29170 317941 223000) (nil face org-block-end-line 30868 . 30869) (t 25724 29170 317941 223000) (#("+END_SRC
" 0 8 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t) 8 9 (face org-block-end-line rear-nonsticky t fontified t)) . -30856) (t 25724 29170 317941 223000) (30865 . 30878) (t 25724 29170 317941 223000) 30865) nil (25724 29206 433468 649000) 0 nil])
([nil nil ((30865 . 30866) (t 25724 29206 502465 759000)) nil (25724 29237 454634 134000) 0 nil])
([nil nil ((#("i
" 0 1 (fontified t) 1 2 (fontified t)) . 30865) (undo-tree-id4229 . 1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -2) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -2)) nil (25724 29237 454627 988000) 0 nil])
([nil nil ((30864 . 30865) 30855) nil (25724 29237 454586 851000) 0 nil])
([nil nil ((#("COMMENT" 0 7 (fontified t face org-special-keyword)) . 29247) (undo-tree-id2 . -6) (undo-tree-id3 . -6) (undo-tree-id4 . -6) (undo-tree-id5 . -6) (undo-tree-id6 . -6) 29253 (t 25724 29237 522945 592000)) nil (25724 29334 217395 264000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face org-level-3)) . 29247) (undo-tree-id0 . 1) (undo-tree-id1 . -1)) nil (25724 29334 217371 797000) 0 nil])
([nil nil ((30856 . 30857) (t 25724 29334 292587 505000) 30849) nil (25724 29365 747628 459000) 0 nil])
([nil nil ((30633 . 30634) (#("/" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -30633) (undo-tree-id92 . -1) 30634 (30629 . 30634) (30617 . 30629) (#("test." 0 5 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 30617) (undo-tree-id93 . -4) (undo-tree-id94 . -4) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -5) (undo-tree-id98 . -4) (undo-tree-id99 . -3) (undo-tree-id100 . -4) (undo-tree-id101 . -4) (undo-tree-id102 . -4) (undo-tree-id103 . -4) (undo-tree-id104 . -4) (undo-tree-id105 . -4) (undo-tree-id106 . -4) (undo-tree-id107 . -4) (undo-tree-id108 . -4) (undo-tree-id109 . -4) (undo-tree-id110 . -4) (undo-tree-id111 . -4) (undo-tree-id112 . -4) (undo-tree-id113 . -4) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . -4) (undo-tree-id126 . -5) (undo-tree-id127 . -5) (undo-tree-id128 . -5) 30621) nil (25724 29365 747617 5000) 0 nil])
([nil nil ((30869 . 30871)) nil (25724 29365 747059 315000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -30869) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("x" 0 1 (fontified t)) . -30870) (undo-tree-id90 . -1) (undo-tree-id91 . -1) 30871) nil (25724 29365 747039 968000) 0 nil])
([nil nil ((30869 . 30884) (t 25724 29365 817160 934000)) nil (25724 29401 567695 808000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -30882) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (#("p" 0 1 (fontified t)) . -30883) (undo-tree-id138 . -1) (undo-tree-id139 . -1) 30884) nil (25724 29401 567688 824000) 0 nil])
([nil nil ((30882 . 30898)) nil (25724 29401 567559 546000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -30894) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#("a" 0 1 (fontified t)) . -30895) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("g" 0 1 (fontified t)) . -30896) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#(" " 0 1 (fontified t)) . -30897) (undo-tree-id135 . -1) 30898) nil (25724 29401 567551 374000) 0 nil])
([nil nil ((30894 . 30912)) nil (25724 29401 566956 737000) 0 nil])
([nil nil ((30912 . 30933)) nil (25724 29401 566952 896000) 0 nil])
([nil nil ((30933 . 30954)) nil (25724 29401 566948 566000) 0 nil])
([nil nil ((30954 . 30960)) nil (25724 29401 566880 749000) 0 nil])
([nil nil ((31116 . 31117) (#("s" 0 1 (fontified t)) . -31116) (undo-tree-id140 . -1) (#("
" 0 1 (fontified t)) . -31117) (undo-tree-id141 . -1) (undo-tree-id142 . -1) 31118 (31117 . 31118) (31116 . 31117) (31112 . 31116) (#("a" 0 1 (fontified t)) . -31112) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("t" 0 1 (fontified t)) . -31113) (undo-tree-id145 . -1) 31114 (31112 . 31114) (31107 . 31112) (#("d" 0 1 (fontified t)) . -31107) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("l" 0 1 (fontified t)) . -31108) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#(" " 0 1 (fontified t)) . -31109) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#("r" 0 1 (fontified t)) . -31110) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("e" 0 1 (fontified t)) . -31111) (undo-tree-id154 . -1) (undo-tree-id155 . -1) 31112 (31105 . 31112) (#("t" 0 1 (fontified t)) . -31105) (undo-tree-id156 . -1) 31106 (31102 . 31106) (31081 . 31102) (#("l" 0 1 (fontified t)) . -31081) (undo-tree-id157 . -1) (#("e" 0 1 (fontified t)) . -31082) (undo-tree-id158 . -1) (#(" " 0 1 (fontified t)) . -31083) (undo-tree-id159 . -1) 31084 (31079 . 31084) (#("c" 0 1 (fontified t)) . -31079) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#("a" 0 1 (fontified t)) . -31080) (undo-tree-id162 . -1) (undo-tree-id163 . -1) 31081 (31064 . 31081) (31063 . 31064) (31050 . 31063) (#("B" 0 1 (fontified t)) . -31050) (undo-tree-id164 . -1) 31051 (31050 . 31051) (#("b" 0 1 (fontified t)) . -31050) (undo-tree-id165 . -1) 31051 (31047 . 31051) (#("T" 0 1 (fontified t)) . -31047) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("a" 0 1 (fontified t)) . -31048) (undo-tree-id168 . -1) (undo-tree-id169 . -1) 31049 (31048 . 31049) (31027 . 31048) (#("N" 0 1 (fontified t)) . -31027) (undo-tree-id170 . -1) (#(" " 0 1 (fontified t)) . -31028) (undo-tree-id171 . -1) 31029 (31028 . 31029) (#("a" 0 1 (fontified t)) . -31028) (undo-tree-id172 . -1) 31029 (#("m" 0 1 (fontified t)) . -31029) (undo-tree-id173 . -1) (#("e" 0 1 (fontified t)) . -31030) (undo-tree-id174 . -1) 31031 (31027 . 31031) (#(" " 0 1 (fontified t)) . -31027) (undo-tree-id175 . -1) 31028 (31026 . 31028) (#("n" 0 1 (fontified t)) . -31026) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#(" " 0 1 (fontified t)) . -31027) (undo-tree-id178 . -1) 31028 (31024 . 31028) (#("p" 0 1 (fontified t)) . -31024) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (#("r" 0 1 (fontified t)) . -31025) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (#("o" 0 1 (fontified t)) . -31026) (undo-tree-id183 . -1) (undo-tree-id184 . -1) 31027 (31006 . 31027) (31001 . 31006) (t 25724 29401 641831 64000) 31001) nil (25724 29485 542936 362000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -31164) (undo-tree-id185 . -1) 31165 (31164 . 31165) (#(":" 0 1 (fontified t face org-code)) . -31164) (undo-tree-id186 . -1) 31165 (31164 . 31165) (#("\"" 0 1 (fontified t)) . -31164) (undo-tree-id187 . -1) 31165 (31164 . 31165) (31163 . 31164) (31149 . 31163) (#(" " 0 1 (fontified t)) . -31149) (undo-tree-id188 . -1) (#("d" 0 1 (fontified t)) . -31150) (undo-tree-id189 . -1) (#(" " 0 1 (fontified t)) . -31151) (undo-tree-id190 . -1) 31152 (31131 . 31152) (#("s" 0 1 (fontified t)) . -31131) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (#(" " 0 1 (fontified t)) . -31132) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (#("i" 0 1 (fontified t)) . -31133) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#("s" 0 1 (fontified t)) . -31134) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (#(" " 0 1 (fontified t)) . -31135) (undo-tree-id199 . -1) 31136 (31117 . 31136) (31116 . 31117) (t 25724 29485 615465 315000) 31064) nil (25724 29584 758542 740000) 0 nil])
([nil nil ((nil rear-nonsticky nil 30961 . 30962) (#("
" 0 1 (font-lock-fontified t font-lock-multiline t face org-block-begin-line fontified nil)) . -31008) (30961 . 31009) (t 25724 29584 837483 1000)) nil (25724 29676 336870 260000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31008 . 31009) (#("
" 0 1 (face org-block-end-line fontified nil)) . -31018) (31008 . 31019) 30962) nil (25724 29676 336865 22000) 0 nil])
([nil nil ((#("#+BEGIN_SRC html :tangle creatingelements.html
#+END_SRC
" 0 46 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 46 47 (fontified t rear-nonsticky t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 47 55 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 55 56 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 56 57 (fontified t face org-block-end-line)) . 30962) (undo-tree-id215 . -47) (undo-tree-id216 . -47) (undo-tree-id217 . -56) (undo-tree-id218 . -57) (undo-tree-id219 . -47) (undo-tree-id220 . -57) (undo-tree-id221 . -57) (undo-tree-id222 . -47) (undo-tree-id223 . -47) 31009) nil (25724 29676 336857 759000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31221 . 31222) (nil fontified nil 31221 . 31222) (nil fontified nil 31220 . 31221) (nil fontified nil 31212 . 31220) (nil fontified nil 31211 . 31212) (nil fontified nil 31165 . 31211) (31165 . 31222) (31164 . 31165) 31164) nil (25724 29676 336836 38000) 0 nil])
([nil nil ((31196 . 31206) (#("g" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -31196) (undo-tree-id200 . -1) (#("T" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -31197) (undo-tree-id201 . -1) (#("a" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -31198) (undo-tree-id202 . -1) (#("g" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -31199) (undo-tree-id203 . -1) (#("N" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -31200) (undo-tree-id204 . -1) (#("a" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -31201) (undo-tree-id205 . -1) (#("m" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -31202) (undo-tree-id206 . -1) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -31203) (undo-tree-id207 . -1) (#("_" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -31204) (undo-tree-id208 . -1) 31205 (31200 . 31205) (#("n" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -31200) (undo-tree-id209 . -1) 31201 (31190 . 31201) (#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 31190) (undo-tree-id210 . -15) (undo-tree-id211 . -15) (undo-tree-id212 . -15) (undo-tree-id213 . -15) (undo-tree-id214 . -15) 31205) nil (25724 29676 336820 672000) 0 nil])
([nil nil ((31206 . 31207)) nil (25724 29676 336523 423000) 0 nil])
([nil nil ((31212 . 31213) 31206) nil (25724 29676 336315 991000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31281 . 31282) (nil fontified nil 31213 . 31282) (31213 . 31282) (t 25724 29676 407403 351000)) nil (25724 29752 448730 245000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31283) (undo-tree-id234 . -1) 31284 (31283 . 31284) (31282 . 31283) 31281) nil (25724 29752 448724 588000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31307 . 31308) (nil fontified nil 31283 . 31308) (31283 . 31308)) nil (25724 29752 448717 464000) 0 nil])
([nil nil ((31320 . 31321) (31317 . 31320) (31306 . 31317) (31303 . 31306) (#("s" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31303) (undo-tree-id229 . -1) 31304 (31298 . 31304) (31293 . 31298) (#("a" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31293) (undo-tree-id230 . -1) (#("d" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31294) (undo-tree-id231 . -1) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31295) (undo-tree-id232 . -1) (#("d" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31296) (undo-tree-id233 . -1) 31297 (31293 . 31297) (31290 . 31293) (31287 . 31290) (31283 . 31287) (31282 . 31283) 31280) nil (25724 29752 448709 711000) 0 nil])
([nil nil ((31318 . 31321)) nil (25724 29752 448690 295000) 0 nil])
([nil nil ((31326 . 31330) (31322 . 31326)) nil (25724 29752 448686 943000) 0 nil])
([nil nil ((31326 . 31327) (#("n" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 31326)) nil (25724 29752 448683 171000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31332 . 31333) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -31382) (31332 . 31383) 31326) nil (25724 29752 448679 260000) 0 nil])
([nil nil ((31373 . 31377) (#("tag" 0 3 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . 31373) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) 31375) nil (25724 29752 448657 330000) 0 nil])
([nil nil ((31383 . 31384) 31376) nil (25724 29752 448596 776000) 0 nil])
([nil nil ((31490 . 31495) (t 25724 29752 517029 446000) 31423) nil (25724 29830 714135 474000) 0 nil])
([nil nil ((31495 . 31516) (t 25724 29830 782722 162000)) nil (25724 29933 981348 230000) 0 nil])
([nil nil ((31516 . 31531)) nil (25724 29933 981344 878000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -31529) (undo-tree-id1787 . -1) (#("u" 0 1 (fontified t)) . -31530) (undo-tree-id1788 . -1) 31531) nil (25724 29933 981341 456000) 0 nil])
([nil nil ((31529 . 31531)) nil (25724 29933 981334 262000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -31529) (undo-tree-id1785 . -1) (#("u" 0 1 (fontified t)) . -31530) (undo-tree-id1786 . -1) 31531) nil (25724 29933 981330 979000) 0 nil])
([nil nil ((31529 . 31531)) nil (25724 29933 981324 344000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -31529) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (#("u" 0 1 (fontified t)) . -31530) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) 31531) nil (25724 29933 981320 503000) 0 nil])
([nil nil ((31529 . 31532)) nil (25724 29933 981309 538000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -31529) (undo-tree-id1778 . -1) (#("t" 0 1 (fontified t)) . -31530) (undo-tree-id1779 . -1) (#("e" 0 1 (fontified t)) . -31531) (undo-tree-id1780 . -1) 31532) nil (25724 29933 981305 626000) 0 nil])
([nil nil ((31529 . 31550)) nil (25724 29933 981297 106000) 0 nil])
([nil nil ((31550 . 31554)) nil (25724 29933 981294 312000) 0 nil])
([nil nil ((31554 . 31557)) nil (25724 29933 981291 448000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 31556) (undo-tree-id1777 . -1) 31557) nil (25724 29933 981288 585000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 31555) (undo-tree-id1776 . -1) 31556) nil (25724 29933 981283 347000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 31554) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) 31555) nil (25724 29933 981278 39000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 31553) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) 31554) nil (25724 29933 981271 334000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 31552) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) 31553) nil (25724 29933 981264 699000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 31551) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) 31552) nil (25724 29933 981258 64000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 31550) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) 31551) nil (25724 29933 981251 848000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 31549) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) 31550) nil (25724 29933 981245 73000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 31548) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) 31549) nil (25724 29933 981237 949000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 31547) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) 31548) nil (25724 29933 981231 803000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 31546) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) 31547) nil (25724 29933 981222 933000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 31545) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) 31546) nil (25724 29933 981215 320000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 31544) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) 31545) nil (25724 29933 981162 310000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 31543) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) 31544) nil (25724 29933 981155 256000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 31542) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) 31543) nil (25724 29933 981148 411000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -31541) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) 31542) nil (25724 29933 981141 776000) 0 nil])
([nil nil ((31541 . 31562)) nil (25724 29933 981132 697000) 0 nil])
([nil nil ((31562 . 31566)) nil (25724 29933 981129 414000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -31561) (undo-tree-id1741 . -1) (#("s" 0 1 (fontified t)) . -31562) (undo-tree-id1742 . -1) (#("n" 0 1 (fontified t)) . -31563) (undo-tree-id1743 . -1) (#("g" 0 1 (fontified t)) . -31564) (undo-tree-id1744 . -1) (#(" " 0 1 (fontified t)) . -31565) (undo-tree-id1745 . -1) 31566) nil (25724 29933 981124 734000) 0 nil])
([nil nil ((31561 . 31575)) nil (25724 29933 981112 652000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -31574) (undo-tree-id1740 . -1) 31575) nil (25724 29933 981109 369000) 0 nil])
([nil nil ((31574 . 31582)) nil (25724 29933 981102 664000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -31581) (undo-tree-id1739 . -1) 31582) nil (25724 29933 981099 312000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -31579) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (#(" " 0 1 (fontified t)) . -31580) (undo-tree-id1738 . -1) 31581) nil (25724 29933 981093 236000) 0 nil])
([nil nil ((31579 . 31582)) nil (25724 29933 981084 994000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -31580) (undo-tree-id1734 . -1) (#("r" 0 1 (fontified t)) . -31581) (undo-tree-id1735 . -1) 31582) nil (25724 29933 981081 153000) 0 nil])
([nil nil ((31580 . 31588)) nil (25724 29933 981074 518000) 0 nil])
([nil nil ((31588 . 31589)) nil (25724 29933 981071 654000) 0 nil])
([nil nil ((31579 . 31581)) nil (25724 29933 981069 280000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -31580) (undo-tree-id1733 . -1) 31581) nil (25724 29933 981065 508000) 0 nil])
([nil nil ((31590 . 31611)) nil (25724 29933 981060 340000) 0 nil])
([nil nil ((31611 . 31618)) nil (25724 29933 981057 406000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -31616) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (#("a" 0 1 (fontified t)) . -31617) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) 31618) nil (25724 29933 981023 952000) 0 nil])
([nil nil ((#("name" 0 4 (fontified nil)) . 31629) (undo-tree-id783 . -4) (undo-tree-id784 . -4) (undo-tree-id785 . -4) (undo-tree-id786 . -4) (undo-tree-id787 . -4) (undo-tree-id788 . -4) (undo-tree-id789 . -4) (undo-tree-id790 . -4) (undo-tree-id791 . -4) (undo-tree-id792 . -4) (undo-tree-id793 . -4) (undo-tree-id794 . -4) (undo-tree-id795 . -4) (undo-tree-id796 . -4) (undo-tree-id797 . -4) (undo-tree-id798 . -4) (undo-tree-id799 . -4) (undo-tree-id800 . -4) (undo-tree-id801 . -4) (undo-tree-id802 . -4) (undo-tree-id803 . -4) (undo-tree-id804 . -4) (undo-tree-id805 . -4) (undo-tree-id806 . -4) (undo-tree-id807 . -4) (undo-tree-id808 . -4) (undo-tree-id809 . -4) (undo-tree-id810 . -4) (undo-tree-id811 . -4) (undo-tree-id812 . -4) (undo-tree-id813 . -4) (undo-tree-id814 . -4) (undo-tree-id815 . -4) (undo-tree-id816 . -4) (undo-tree-id817 . -4) (undo-tree-id818 . -4) (undo-tree-id819 . -4) (undo-tree-id820 . -4) (undo-tree-id821 . -4) (undo-tree-id822 . -4) (undo-tree-id823 . -4) (undo-tree-id824 . -4) (undo-tree-id825 . -4) (undo-tree-id826 . -4) (undo-tree-id827 . -4) (undo-tree-id828 . -4) (undo-tree-id829 . -4) (undo-tree-id830 . -4) (undo-tree-id831 . -4) (undo-tree-id832 . -4) (undo-tree-id833 . -4) (undo-tree-id834 . -4) (undo-tree-id835 . -4) (undo-tree-id836 . -4) (undo-tree-id837 . -4) (undo-tree-id838 . -4) (undo-tree-id839 . -4) (undo-tree-id840 . -4) (undo-tree-id841 . -4) (undo-tree-id842 . -4) (undo-tree-id843 . -4) (undo-tree-id844 . -4) (undo-tree-id845 . -4) (undo-tree-id846 . -4) (undo-tree-id847 . -4) (undo-tree-id848 . -4) (undo-tree-id849 . -4) (undo-tree-id850 . -4) (undo-tree-id851 . -4) (undo-tree-id852 . -4) (undo-tree-id853 . -4) (undo-tree-id854 . -4) (undo-tree-id855 . -4) (undo-tree-id856 . -4) (undo-tree-id857 . -4) (undo-tree-id858 . -4) (undo-tree-id859 . -4) (undo-tree-id860 . -4) (undo-tree-id861 . -4) (undo-tree-id862 . -4) (undo-tree-id863 . -4) (undo-tree-id864 . -4) (undo-tree-id865 . -4) (undo-tree-id866 . -4) (undo-tree-id867 . -4) (undo-tree-id868 . -4) (undo-tree-id869 . -4) (undo-tree-id870 . -4) (undo-tree-id871 . -4) (undo-tree-id872 . -4) (undo-tree-id873 . -4) (undo-tree-id874 . -4) (undo-tree-id875 . -4) (undo-tree-id876 . -4) (undo-tree-id877 . -4) (undo-tree-id878 . -4) (undo-tree-id879 . -4) (undo-tree-id880 . -4) (undo-tree-id881 . -4) (undo-tree-id882 . -4) (undo-tree-id883 . -4) (undo-tree-id884 . -4) (undo-tree-id885 . -4) (undo-tree-id886 . -4) (undo-tree-id887 . -4) (undo-tree-id888 . -4) (undo-tree-id889 . -4) (undo-tree-id890 . -4) (undo-tree-id891 . -4) (undo-tree-id892 . -4) (undo-tree-id893 . -4) (undo-tree-id894 . -4) (undo-tree-id895 . -4) (undo-tree-id896 . -4) (undo-tree-id897 . -4) (undo-tree-id898 . -4) (undo-tree-id899 . -4) (undo-tree-id900 . -4) (undo-tree-id901 . -4) (undo-tree-id902 . -4) (undo-tree-id903 . -4) (undo-tree-id904 . -4) (undo-tree-id905 . -4) (undo-tree-id906 . -4) (undo-tree-id907 . -4) (undo-tree-id908 . -4) (undo-tree-id909 . -4) (undo-tree-id910 . -4) (undo-tree-id911 . -4) (undo-tree-id912 . -4) (undo-tree-id913 . -4) (undo-tree-id914 . -4) (undo-tree-id915 . -4) (undo-tree-id916 . -4) (undo-tree-id917 . -4) (undo-tree-id918 . -4) (undo-tree-id919 . -4) (undo-tree-id920 . -4) (undo-tree-id921 . -4) (undo-tree-id922 . -4) (undo-tree-id923 . -4) (undo-tree-id924 . -4) (undo-tree-id925 . -4) (undo-tree-id926 . -4) (undo-tree-id927 . -4) (undo-tree-id928 . -4) (undo-tree-id929 . -4) (undo-tree-id930 . -4) (undo-tree-id931 . -4) (undo-tree-id932 . -4) (undo-tree-id933 . -4) (undo-tree-id934 . -4) (undo-tree-id935 . -4) (undo-tree-id936 . -4) (undo-tree-id937 . -4) (undo-tree-id938 . -4) (undo-tree-id939 . -4) (undo-tree-id940 . -4) (undo-tree-id941 . -4) (undo-tree-id942 . -4) (undo-tree-id943 . -4) (undo-tree-id944 . -4) (undo-tree-id945 . -4) (undo-tree-id946 . -4) (undo-tree-id947 . -4) (undo-tree-id948 . -4) (undo-tree-id949 . -4) (undo-tree-id950 . -4) (undo-tree-id951 . -4) (undo-tree-id952 . -4) (undo-tree-id953 . -4) (undo-tree-id954 . -4) (undo-tree-id955 . -4) (undo-tree-id956 . -4) (undo-tree-id957 . -4) (undo-tree-id958 . -4) (undo-tree-id959 . -4) (undo-tree-id960 . -4) (undo-tree-id961 . -4) (undo-tree-id962 . -4) (undo-tree-id963 . -4) (undo-tree-id964 . -4) (undo-tree-id965 . -4) (undo-tree-id966 . -4) (undo-tree-id967 . -4) (undo-tree-id968 . -4) (undo-tree-id969 . -4) (undo-tree-id970 . -4) (undo-tree-id971 . -4) (undo-tree-id972 . -4) (undo-tree-id973 . -4) (undo-tree-id974 . -4) (undo-tree-id975 . -4) (undo-tree-id976 . -4) (undo-tree-id977 . -4) (undo-tree-id978 . -4) (undo-tree-id979 . -4) (undo-tree-id980 . -4) (undo-tree-id981 . -4) (undo-tree-id982 . -4) (undo-tree-id983 . -4) (undo-tree-id984 . -4) (undo-tree-id985 . -4) (undo-tree-id986 . -4) (undo-tree-id987 . -4) (undo-tree-id988 . -4) (undo-tree-id989 . -4) (undo-tree-id990 . -4) (undo-tree-id991 . -4) (undo-tree-id992 . -4) (undo-tree-id993 . -4) (undo-tree-id994 . -4) (undo-tree-id995 . -4) (undo-tree-id996 . -4) (undo-tree-id997 . -4) (undo-tree-id998 . -4) (undo-tree-id999 . -4) (undo-tree-id1000 . -4) (undo-tree-id1001 . -4) (undo-tree-id1002 . -4) (undo-tree-id1003 . -4) (undo-tree-id1004 . -4) (undo-tree-id1005 . -4) (undo-tree-id1006 . -4) (undo-tree-id1007 . -4) (undo-tree-id1008 . -4) (undo-tree-id1009 . -4) (undo-tree-id1010 . -4) (undo-tree-id1011 . -4) (undo-tree-id1012 . -4) (undo-tree-id1013 . -4) (undo-tree-id1014 . -4) (undo-tree-id1015 . -4) (undo-tree-id1016 . -4) (undo-tree-id1017 . -4) (undo-tree-id1018 . -4) (undo-tree-id1019 . -4) (undo-tree-id1020 . -4) (undo-tree-id1021 . -4) (undo-tree-id1022 . -4) (undo-tree-id1023 . -4) (undo-tree-id1024 . -4) (undo-tree-id1025 . -4) (undo-tree-id1026 . -4) (undo-tree-id1027 . -4) (undo-tree-id1028 . -4) (undo-tree-id1029 . -4) (undo-tree-id1030 . -4) (undo-tree-id1031 . -4) (undo-tree-id1032 . -4) (undo-tree-id1033 . -4) (undo-tree-id1034 . -4) (undo-tree-id1035 . -4) (undo-tree-id1036 . -4) (undo-tree-id1037 . -4) (undo-tree-id1038 . -4) (undo-tree-id1039 . -4) (undo-tree-id1040 . -4) (undo-tree-id1041 . -4) (undo-tree-id1042 . -4) (undo-tree-id1043 . -4) (undo-tree-id1044 . -4) (undo-tree-id1045 . -4) (undo-tree-id1046 . -4) (undo-tree-id1047 . -4) (undo-tree-id1048 . -4) (undo-tree-id1049 . -4) (undo-tree-id1050 . -4) (undo-tree-id1051 . -4) (undo-tree-id1052 . -4) (undo-tree-id1053 . -4) (undo-tree-id1054 . -4) (undo-tree-id1055 . -4) (undo-tree-id1056 . -4) (undo-tree-id1057 . -4) (undo-tree-id1058 . -4) (undo-tree-id1059 . -4) (undo-tree-id1060 . -4) (undo-tree-id1061 . -4) (undo-tree-id1062 . -4) (undo-tree-id1063 . -4) (undo-tree-id1064 . -4) (undo-tree-id1065 . -4) (undo-tree-id1066 . -4) (undo-tree-id1067 . -4) (undo-tree-id1068 . -4) (undo-tree-id1069 . -4) (undo-tree-id1070 . -4) (undo-tree-id1071 . -4) (undo-tree-id1072 . -4) (undo-tree-id1073 . -4) (undo-tree-id1074 . -4) (undo-tree-id1075 . -4) (undo-tree-id1076 . -4) (undo-tree-id1077 . -4) (undo-tree-id1078 . -4) (undo-tree-id1079 . -4) (undo-tree-id1080 . -4) (undo-tree-id1081 . -4) (undo-tree-id1082 . -4) (undo-tree-id1083 . -4) (undo-tree-id1084 . -4) (undo-tree-id1085 . -4) (undo-tree-id1086 . -4) (undo-tree-id1087 . -4) (undo-tree-id1088 . -4) (undo-tree-id1089 . -4) (undo-tree-id1090 . -4) (undo-tree-id1091 . -4) (undo-tree-id1092 . -4) (undo-tree-id1093 . -4) (undo-tree-id1094 . -4) (undo-tree-id1095 . -4) (undo-tree-id1096 . -4) (undo-tree-id1097 . -4) (undo-tree-id1098 . -4) (undo-tree-id1099 . -4) (undo-tree-id1100 . -4) (undo-tree-id1101 . -4) (undo-tree-id1102 . -4) (undo-tree-id1103 . -4) (undo-tree-id1104 . -4) (undo-tree-id1105 . -4) (undo-tree-id1106 . -4) (undo-tree-id1107 . -4) (undo-tree-id1108 . -4) (undo-tree-id1109 . -4) (undo-tree-id1110 . -4) (undo-tree-id1111 . -4) (undo-tree-id1112 . -4) (undo-tree-id1113 . -4) (undo-tree-id1114 . -4) (undo-tree-id1115 . -4) (undo-tree-id1116 . -4) (undo-tree-id1117 . -4) (undo-tree-id1118 . -4) (undo-tree-id1119 . -4) (undo-tree-id1120 . -4) (undo-tree-id1121 . -4) (undo-tree-id1122 . -4) (undo-tree-id1123 . -4) (undo-tree-id1124 . -4) (undo-tree-id1125 . -4) (undo-tree-id1126 . -4) (undo-tree-id1127 . -4) (undo-tree-id1128 . -4) (undo-tree-id1129 . -4) (undo-tree-id1130 . -4) (undo-tree-id1131 . -4) (undo-tree-id1132 . -4) (undo-tree-id1133 . -4) (undo-tree-id1134 . -4) (undo-tree-id1135 . -4) (undo-tree-id1136 . -4) (undo-tree-id1137 . -4) (undo-tree-id1138 . -4) (undo-tree-id1139 . -4) (undo-tree-id1140 . -4) (undo-tree-id1141 . -4) (undo-tree-id1142 . -4) (undo-tree-id1143 . -4) (undo-tree-id1144 . -4) (undo-tree-id1145 . -4) (undo-tree-id1146 . -4) (undo-tree-id1147 . -4) (undo-tree-id1148 . -4) (undo-tree-id1149 . -4) (undo-tree-id1150 . -4) (undo-tree-id1151 . -4) (undo-tree-id1152 . -4) (undo-tree-id1153 . -4) (undo-tree-id1154 . -4) (undo-tree-id1155 . -4) (undo-tree-id1156 . -4) (undo-tree-id1157 . -4) (undo-tree-id1158 . -4) (undo-tree-id1159 . -4) (undo-tree-id1160 . -4) (undo-tree-id1161 . -4) (undo-tree-id1162 . -4) (undo-tree-id1163 . -4) (undo-tree-id1164 . -4) (undo-tree-id1165 . -4) (undo-tree-id1166 . -4) (undo-tree-id1167 . -4) (undo-tree-id1168 . -4) (undo-tree-id1169 . -4) (undo-tree-id1170 . -4) (undo-tree-id1171 . -4) (undo-tree-id1172 . -4) (undo-tree-id1173 . -4) (undo-tree-id1174 . -4) (undo-tree-id1175 . -4) (undo-tree-id1176 . -4) (undo-tree-id1177 . -4) (undo-tree-id1178 . -4) (undo-tree-id1179 . -4) (undo-tree-id1180 . -4) (undo-tree-id1181 . -4) (undo-tree-id1182 . -4) (undo-tree-id1183 . -4) (undo-tree-id1184 . -4) (undo-tree-id1185 . -4) (undo-tree-id1186 . -4) (undo-tree-id1187 . -4) (undo-tree-id1188 . -4) (undo-tree-id1189 . -4) (undo-tree-id1190 . -4) (undo-tree-id1191 . -4) (undo-tree-id1192 . -4) (undo-tree-id1193 . -4) (undo-tree-id1194 . -4) (undo-tree-id1195 . -4) (undo-tree-id1196 . -4) (undo-tree-id1197 . -4) (undo-tree-id1198 . -4) (undo-tree-id1199 . -4) (undo-tree-id1200 . -4) (undo-tree-id1201 . -4) (undo-tree-id1202 . -4) (undo-tree-id1203 . -4) (undo-tree-id1204 . -4) (undo-tree-id1205 . -4) (undo-tree-id1206 . -4) (undo-tree-id1207 . -4) (undo-tree-id1208 . -4) (undo-tree-id1209 . -4) (undo-tree-id1210 . -4) (undo-tree-id1211 . -4) (undo-tree-id1212 . -4) (undo-tree-id1213 . -4) (undo-tree-id1214 . -4) (undo-tree-id1215 . -4) (undo-tree-id1216 . -4) (undo-tree-id1217 . -4) (undo-tree-id1218 . -4) (undo-tree-id1219 . -4) (undo-tree-id1220 . -4) (undo-tree-id1221 . -4) (undo-tree-id1222 . -4) (undo-tree-id1223 . -4) (undo-tree-id1224 . -4) (undo-tree-id1225 . -4) (undo-tree-id1226 . -4) (undo-tree-id1227 . -4) (undo-tree-id1228 . -4) (undo-tree-id1229 . -4) (undo-tree-id1230 . -4) (undo-tree-id1231 . -4) (undo-tree-id1232 . -4) (undo-tree-id1233 . -4) (undo-tree-id1234 . -4) (undo-tree-id1235 . -4) (undo-tree-id1236 . -4) (undo-tree-id1237 . -4) (undo-tree-id1238 . -4) (undo-tree-id1239 . -4) (undo-tree-id1240 . -4) (undo-tree-id1241 . -4) (undo-tree-id1242 . -4) (undo-tree-id1243 . -4) (undo-tree-id1244 . -4) (undo-tree-id1245 . -4) (undo-tree-id1246 . -4) (undo-tree-id1247 . -4) (undo-tree-id1248 . -4) (undo-tree-id1249 . -4) (undo-tree-id1250 . -4) (undo-tree-id1251 . -4) (undo-tree-id1252 . -4) (undo-tree-id1253 . -4) (undo-tree-id1254 . -4) (undo-tree-id1255 . -4) (undo-tree-id1256 . -4) (undo-tree-id1257 . -4) (undo-tree-id1258 . -4) (undo-tree-id1259 . -4) (undo-tree-id1260 . -4) (undo-tree-id1261 . -4) (undo-tree-id1262 . -4) (undo-tree-id1263 . -4) (undo-tree-id1264 . -4) (undo-tree-id1265 . -4) (undo-tree-id1266 . -4) (undo-tree-id1267 . -4) (undo-tree-id1268 . -4) (undo-tree-id1269 . -4) (undo-tree-id1270 . -4) (undo-tree-id1271 . -4) (undo-tree-id1272 . -4) (undo-tree-id1273 . -4) (undo-tree-id1274 . -4) (undo-tree-id1275 . -4) (undo-tree-id1276 . -4) (undo-tree-id1277 . -4) (undo-tree-id1278 . -4) (undo-tree-id1279 . -4) (undo-tree-id1280 . -4) (undo-tree-id1281 . -4) (undo-tree-id1282 . -4) (undo-tree-id1283 . -4) (undo-tree-id1284 . -4) (undo-tree-id1285 . -4) (undo-tree-id1286 . -4) (undo-tree-id1287 . -4) (undo-tree-id1288 . -4) (undo-tree-id1289 . -4) (undo-tree-id1290 . -4) (undo-tree-id1291 . -4) (undo-tree-id1292 . -4) (undo-tree-id1293 . -4) (undo-tree-id1294 . -4) (undo-tree-id1295 . -4) (undo-tree-id1296 . -4) (undo-tree-id1297 . -4) (undo-tree-id1298 . -4) (undo-tree-id1299 . -4) (undo-tree-id1300 . -4) (undo-tree-id1301 . -4) (undo-tree-id1302 . -4) (undo-tree-id1303 . -4) (undo-tree-id1304 . -4) (undo-tree-id1305 . -4) (undo-tree-id1306 . -4) (undo-tree-id1307 . -4) (undo-tree-id1308 . -4) (undo-tree-id1309 . -4) (undo-tree-id1310 . -4) (undo-tree-id1311 . -4) (undo-tree-id1312 . -4) (undo-tree-id1313 . -4) (undo-tree-id1314 . -4) (undo-tree-id1315 . -4) (undo-tree-id1316 . -4) (undo-tree-id1317 . -4) (undo-tree-id1318 . -4) (undo-tree-id1319 . -4) (undo-tree-id1320 . -4) (undo-tree-id1321 . -4) (undo-tree-id1322 . -4) (undo-tree-id1323 . -4) (undo-tree-id1324 . -4) (undo-tree-id1325 . -4) (undo-tree-id1326 . -4) (undo-tree-id1327 . -4) (undo-tree-id1328 . -4) (31616 . 31629) 31620 (31616 . 31620)) nil (25724 29933 980360 378000) 0 nil])
([nil nil ((#("s" 0 1 (fontified nil)) . -31628) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) 31629) nil (25724 29933 978936 710000) 0 nil])
([nil nil ((31628 . 31629)) nil (25724 29933 977126 602000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -31629) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (#("k" 0 1 (fontified t)) . -31630) (undo-tree-id1791 . -1) 31631 (31629 . 31631) (#("j" 0 1 (fontified t)) . -31629) (undo-tree-id1792 . -1) (#("j" 0 1 (fontified t)) . -31630) (undo-tree-id1793 . -1) 31631 (31629 . 31631) (#("k" 0 1 (fontified t)) . -31629) (undo-tree-id1794 . -1) (#("j" 0 1 (fontified t)) . -31630) (undo-tree-id1795 . -1) 31631 (31629 . 31631) (#("j" 0 1 (fontified t)) . -31629) (undo-tree-id1796 . -1) (#("k" 0 1 (fontified t)) . -31630) (undo-tree-id1797 . -1) 31631 (31629 . 31631) (t 25724 29934 52978 528000)) nil (25724 29976 961179 733000) 0 nil])
([nil nil ((31730 . 31732) (31724 . 31730) (31703 . 31724) (31694 . 31703) (#(" " 0 1 (fontified t)) . -31694) (undo-tree-id1798 . -1) (#("o" 0 1 (fontified t)) . -31695) (undo-tree-id1799 . -1) 31696 (31689 . 31696) (#("r" 0 1 (fontified t)) . -31689) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) 31690 (31679 . 31690) (#(" " 0 1 (fontified t)) . -31679) (undo-tree-id1802 . -1) (#("g" 0 1 (fontified t)) . -31680) (undo-tree-id1803 . -1) 31681 (31664 . 31681) (31650 . 31664) (31629 . 31650) (t 25724 29977 33923 325000)) nil (25724 30465 923330 177000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31787 . 31788) (nil fontified nil 31787 . 31788) (nil fontified nil 31786 . 31787) (nil fontified nil 31778 . 31786) (nil fontified nil 31777 . 31778) (nil fontified nil 31731 . 31777) (31731 . 31788) (t 25724 30465 994031 383000)) nil (25724 30619 704836 864000) 0 nil])
([nil nil ((31777 . 31778) 31731) nil (25724 30619 704830 21000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31917 . 31918) (nil fontified nil 31778 . 31918) (31778 . 31918)) nil (25724 30619 704826 180000) 0 nil])
([nil nil ((31918 . 31919) 31917) nil (25724 30619 704821 850000) 0 nil])
([nil nil ((nil rear-nonsticky nil 31943 . 31944) (nil fontified nil 31919 . 31944) (31919 . 31944)) nil (25724 30619 704818 10000) 0 nil])
([nil nil ((31969 . 31971) (31968 . 31969) (31961 . 31968) (31956 . 31961) (#(")" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31956) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (#("." 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31957) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (#("a" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31958) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (#("t" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31959) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) 31960 (31955 . 31960) (#("0" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31955) (undo-tree-id1832 . -1) (#("-" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31956) (undo-tree-id1833 . -1) 31957 (31952 . 31957) (#("." 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31952) (undo-tree-id1834 . -1) 31953 (31952 . 31953) (31943 . 31952) (31938 . 31943) (#("s" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31938) (undo-tree-id1835 . -1) 31939 (31933 . 31939) (31930 . 31933) (#("c" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31930) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (#("o" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31931) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (#("u" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31932) (undo-tree-id1840 . -1) 31933 (31919 . 31933) (31918 . 31919) 31916) nil (25724 30619 704806 348000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32012) (undo-tree-id1817 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32013) (undo-tree-id1818 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32014) (undo-tree-id1819 . -1) 32015 (32012 . 32015) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32012) (undo-tree-id1820 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32013) (undo-tree-id1821 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32014) (undo-tree-id1822 . -1) 32015 (32011 . 32015) (32009 . 32011) (32008 . 32009) (32007 . 32008) (32002 . 32007) (32001 . 32002) (31996 . 32001) (#("n" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31996) (undo-tree-id1823 . -1) 31997 (31992 . 31997) (31985 . 31992) (31984 . 31985) (31974 . 31984) (31971 . 31974) (31970 . 31971) 31970) nil (25724 30619 704751 321000) 0 nil])
([nil nil ((32065 . 32066) (#("_" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32065) (undo-tree-id1804 . -1) 32066 (32064 . 32066) (#("_" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32064) (undo-tree-id1805 . -1) 32065 (32064 . 32065) (#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32064) (undo-tree-id1806 . -1) 32065 (32064 . 32065) (32059 . 32064) (32047 . 32059) (32044 . 32047) (#("+" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32044) (undo-tree-id1807 . -1) 32045 (32044 . 32045) (#("+" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32044) (undo-tree-id1808 . -1) (#("'" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -32045) (undo-tree-id1809 . -1) 32046 (32043 . 32046) (#("'" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32043) (undo-tree-id1810 . -1) 32044 (32043 . 32044) (#("=" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32043) (undo-tree-id1811 . -1) 32044 (32041 . 32044) (#("e" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32041) (undo-tree-id1812 . -1) 32042 (32038 . 32042) (32033 . 32038) (32025 . 32033) (#("9" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32025) (undo-tree-id1813 . -1) (#("a" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32026) (undo-tree-id1814 . -1) (#("t" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32027) (undo-tree-id1815 . -1) (#("t" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32028) (undo-tree-id1816 . -1) 32029 (32014 . 32029) (32010 . 32014)) nil (25724 30619 704708 515000) 0 nil])
([nil nil ((31777 . 31784) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -31777) (undo-tree-id1841 . -1) (#("i" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -31778) (undo-tree-id1842 . -1) (#("v" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -31779) (undo-tree-id1843 . -1) 31780 (31774 . 31780) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -31774) (undo-tree-id1844 . -1) 31775 (31756 . 31775) (#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 31756) (undo-tree-id1845 . -15) (undo-tree-id1846 . -15) (undo-tree-id1847 . -15) (undo-tree-id1848 . -15) (undo-tree-id1849 . -15) 31771 (t 25724 30619 780770 187000)) nil (25724 30726 79363 707000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -32144) (undo-tree-id1850 . -1) (#("k" 0 1 (fontified t)) . -32145) (undo-tree-id1851 . -1) 32146 (32144 . 32146) (#("j" 0 1 (fontified t)) . -32144) (undo-tree-id1852 . -1) (#("j" 0 1 (fontified t)) . -32145) (undo-tree-id1853 . -1) 32146 (32144 . 32146) (#("j" 0 1 (fontified t)) . -32144) (undo-tree-id1854 . -1) (#("j" 0 1 (fontified t)) . -32145) (undo-tree-id1855 . -1) 32146 (32144 . 32146) (32100 . 32101) (#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32100) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32101) (undo-tree-id1858 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32102) (undo-tree-id1859 . -1) 32103 (32101 . 32103) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32101) (undo-tree-id1860 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32102) (undo-tree-id1861 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32103) (undo-tree-id1862 . -1) 32104 (32103 . 32104) (32101 . 32103) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32101) (undo-tree-id1863 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32102) (undo-tree-id1864 . -1) 32103 (32101 . 32103) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32101) (undo-tree-id1865 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32102) (undo-tree-id1866 . -1) 32103 (32101 . 32103) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32101) (undo-tree-id1867 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32102) (undo-tree-id1868 . -1) 32103 (32101 . 32103) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32101) (undo-tree-id1869 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32102) (undo-tree-id1870 . -1) 32103 (32101 . 32103) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32101) (undo-tree-id1871 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32102) (undo-tree-id1872 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32103) (undo-tree-id1873 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32104) (undo-tree-id1874 . -1) 32105 (32101 . 32105) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32101) (undo-tree-id1875 . -1) 32102 (32101 . 32102) (31790 . 32134) (#("<!DOCTYPE html>
<html lang=\"en\">
<body>

<a href='#' title=\"title\" data-foo=\"dataFoo\" class=\"yes\" style=\"margin:0;\" foo=\"boo\"></a>

<script>
var atts = document.querySelector('a').attributes;

for(var i = 0; i < atts.length;i ++)
{
    console.log(atts[i].nodeName+'='+atts[i].nodeValue);
}

</script>
</body>
</html>
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 1 9 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9 14 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 14 15 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 15 17 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 17 21 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 21 22 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 22 26 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 26 27 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 27 31 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 31 34 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 34 38 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 38 42 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 42 43 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 43 44 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 44 48 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 48 49 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 49 52 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 52 53 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 53 58 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 58 59 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 59 66 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 66 67 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 67 75 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 75 76 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 76 85 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 85 86 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 86 91 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 91 92 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 92 97 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 97 98 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 98 103 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 103 104 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 104 115 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 115 116 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 116 119 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 119 120 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 120 125 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 125 128 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 128 129 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 129 133 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 133 139 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 139 140 (fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 140 175 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 175 176 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 176 190 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 190 192 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 192 206 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 206 223 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 223 265 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 265 268 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 268 287 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 287 288 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 288 290 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 290 291 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 291 292 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 292 294 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 294 300 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 300 304 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 304 308 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 308 312 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 312 316 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 316 317 (fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 317 318 (rear-nonsticky t font-lock-fontified t fontified t src-block t font-lock-multiline t face (org-block))) . 31790) (undo-tree-id1876 . -291) (undo-tree-id1877 . -291) (undo-tree-id1878 . -291) (undo-tree-id1879 . -291) (undo-tree-id1880 . -291) 32081 (t 25724 30726 152922 468000)) nil (25724 30799 33918 968000) 0 nil])
([nil nil ((32143 . 32144) (#("
" 0 1 (fontified t rear-nonsticky t face org-block-end-line)) . -32143) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) 32144 (t 25724 30799 107647 945000)) nil (25724 30842 194822 387000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -32145) (undo-tree-id1882 . -1) 32146 (32145 . 32146) (#("j" 0 1 (fontified t)) . -32145) (undo-tree-id1883 . -1) (#("j" 0 1 (fontified t)) . -32146) (undo-tree-id1884 . -1) 32147 (32145 . 32147) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32144) (undo-tree-id1885 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32145) (undo-tree-id1886 . -1) 32146 (32144 . 32146) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32144) (undo-tree-id1887 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32145) (undo-tree-id1888 . -1) 32146 (32144 . 32146) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32144) (undo-tree-id1889 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32145) (undo-tree-id1890 . -1) 32146 (32144 . 32146) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32144) (undo-tree-id1891 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32145) (undo-tree-id1892 . -1) 32146 (32144 . 32146) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32144) (undo-tree-id1893 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32145) (undo-tree-id1894 . -1) 32146 (32144 . 32146) (32143 . 32144) (#("
" 0 1 (font-lock-fontified t fontified t face org-block-end-line)) . -32143) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32144) (undo-tree-id1897 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32145) (undo-tree-id1898 . -1) 32146 (32144 . 32146) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32144) (undo-tree-id1899 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32145) (undo-tree-id1900 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32146) (undo-tree-id1901 . -1) 32147 (32144 . 32147) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32144) (undo-tree-id1902 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32145) (undo-tree-id1903 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32146) (undo-tree-id1904 . -1) 32147 (32144 . 32147) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32144) (undo-tree-id1905 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32145) (undo-tree-id1906 . -1) 32146 (32144 . 32146) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32144) (undo-tree-id1907 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32145) (undo-tree-id1908 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32146) (undo-tree-id1909 . -1) 32147 (32144 . 32147) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32144) (undo-tree-id1910 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32145) (undo-tree-id1911 . -1) 32146 (32144 . 32146) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32144) (undo-tree-id1912 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32145) (undo-tree-id1913 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32146) (undo-tree-id1914 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32147) (undo-tree-id1915 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32148) (undo-tree-id1916 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32149) (undo-tree-id1917 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32150) (undo-tree-id1918 . -1) 32151 (32145 . 32151) (32144 . 32145) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32144) (undo-tree-id1919 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32145) (undo-tree-id1920 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32146) (undo-tree-id1921 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32147) (undo-tree-id1922 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32148) (undo-tree-id1923 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32149) (undo-tree-id1924 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32150) (undo-tree-id1925 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32151) (undo-tree-id1926 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32152) (undo-tree-id1927 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32153) (undo-tree-id1928 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32154) (undo-tree-id1929 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32155) (undo-tree-id1930 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32156) (undo-tree-id1931 . -1) (#("j" 0 1 (font-lock-fontified t fontified nil)) . -32157) (undo-tree-id1932 . -1) (#("j" 0 1 (font-lock-fontified t fontified nil)) . -32158) (undo-tree-id1933 . -1) (#("j" 0 1 (font-lock-fontified t fontified nil)) . -32159) (undo-tree-id1934 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32160) (undo-tree-id1935 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32161) (undo-tree-id1936 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32162) (undo-tree-id1937 . -1) (#("j" 0 1 (font-lock-fontified t fontified t)) . -32163) (undo-tree-id1938 . -1) 32164 (32144 . 32164)) nil (25724 30842 194782 231000) 0 nil])
([nil nil ((#("j" 0 1 (font-lock-fontified t fontified t)) . -32144) (undo-tree-id1881 . -1) 32145 (32144 . 32145)) nil (25724 30842 194628 659000) 0 nil])
([nil nil ((32144 . 32157) (t 25724 30842 265123 431000)) nil (25724 30885 250809 859000) 0 nil])
([nil nil ((#("u" 0 1 (font-lock-fontified t fontified t)) . -32156) (undo-tree-id1947 . -1) 32157) nil (25724 30885 250805 41000) 0 nil])
([nil nil ((32156 . 32165)) nil (25724 30885 250798 895000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t fontified t)) . -32164) (undo-tree-id1946 . -1) 32165) nil (25724 30885 250794 146000) 0 nil])
([nil nil ((32164 . 32182)) nil (25724 30885 250788 0) 0 nil])
([nil nil ((#("d" 0 1 (font-lock-fontified t fontified t)) . -32180) (undo-tree-id1944 . -1) (#("s" 0 1 (font-lock-fontified t fontified t)) . -32181) (undo-tree-id1945 . -1) 32182) nil (25724 30885 250783 251000) 0 nil])
([nil nil ((32180 . 32188)) nil (25724 30885 250774 522000) 0 nil])
([nil nil ((32188 . 32200)) nil (25724 30885 250771 239000) 0 nil])
([nil nil ((#("c" 0 1 (font-lock-fontified t fontified t)) . -32199) (undo-tree-id1943 . -1) 32200) nil (25724 30885 250766 979000) 0 nil])
([nil nil ((32199 . 32204)) nil (25724 30885 250760 275000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-fontified t fontified t)) . -32203) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) 32204) nil (25724 30885 250755 596000) 0 nil])
([nil nil ((32203 . 32217)) nil (25724 30885 250734 86000) 0 nil])
([nil nil ((32217 . 32218)) nil (25724 30885 250720 258000) 0 nil])
([nil nil ((32362 . 32372) (32341 . 32362) (#("u" 0 1 (fontified t)) . -32341) (undo-tree-id1948 . -1) (#("t" 0 1 (fontified t)) . -32342) (undo-tree-id1949 . -1) 32343 (32330 . 32343) (#("i" 0 1 (fontified t)) . -32330) (undo-tree-id1950 . -1) (#("t" 0 1 (fontified t)) . -32331) (undo-tree-id1951 . -1) 32332 (32316 . 32332) (32306 . 32316) (#("s" 0 1 (fontified t)) . -32306) (undo-tree-id1952 . -1) (#("e" 0 1 (fontified t)) . -32307) (undo-tree-id1953 . -1) 32308 (32291 . 32308) (#("*" 0 1 (fontified t)) . -32291) (undo-tree-id1954 . -1) (#("f" 0 1 (fontified t)) . -32292) (undo-tree-id1955 . -1) 32293 (32291 . 32293) (#(")" 0 1 (fontified t)) . -32291) (undo-tree-id1956 . -1) (#("(" 0 1 (fontified t)) . -32292) (undo-tree-id1957 . -1) 32293 (32289 . 32293) (#("a" 0 1 (fontified t)) . -32289) (undo-tree-id1958 . -1) (#("y" 0 1 (fontified t)) . -32290) (undo-tree-id1959 . -1) 32291 (32276 . 32291) (#("u" 0 1 (fontified t)) . -32276) (undo-tree-id1960 . -1) 32277 (#("b" 0 1 (fontified t)) . -32277) (undo-tree-id1961 . -1) 32278 (32276 . 32278) (#("v" 0 1 (fontified t)) . -32276) (undo-tree-id1962 . -1) 32277 (32271 . 32277) (32250 . 32271) (32229 . 32250) (#("o" 0 1 (fontified t)) . -32229) (undo-tree-id1963 . -1) 32230 (32223 . 32230) (#("e" 0 1 (fontified t)) . -32223) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) 32224 (32219 . 32224) (32218 . 32219) (t 25724 30885 322893 411000) 32218) nil (25724 30951 599675 796000) 0 nil])
([nil nil ((32372 . 32373) 32371) nil (25724 30951 599042 17000) 0 nil])
([nil nil ((32373 . 32374) (t 25724 30951 671838 113000)) nil (25724 30980 222891 453000) 0 nil])
([nil nil ((32374 . 32375)) nil (25724 30980 222886 285000) 0 nil])
([nil nil ((32375 . 32376)) nil (25724 30980 222647 20000) 0 nil])
([nil nil ((32376 . 32377)) nil (25724 30980 222643 737000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -32373) (undo-tree-id1975 . -1) (#(";" 0 1 (fontified t)) . -32374) (undo-tree-id1976 . -1) (#(";" 0 1 (fontified t)) . -32375) (undo-tree-id1977 . -1) (#(";" 0 1 (fontified t)) . -32376) (undo-tree-id1978 . -1) 32377) nil (25724 30980 222636 264000) 0 nil])
([nil nil ((32373 . 32374)) nil (25724 30980 222425 842000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -32373) (undo-tree-id1974 . -1) 32374) nil (25724 30980 222155 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -32372) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) 32373) nil (25724 30980 222148 795000) 0 nil])
([nil nil ((32372 . 32373)) nil (25724 30980 222127 355000) 0 nil])
([nil nil ((32373 . 32374)) nil (25724 30980 222124 491000) 0 nil])
([nil nil ((32374 . 32375)) nil (25724 30980 222121 139000) 0 nil])
([nil nil ((32375 . 32376)) nil (25724 30980 222117 787000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -32373) (undo-tree-id1966 . -1) (#(";" 0 1 (fontified t)) . -32374) (undo-tree-id1967 . -1) (#(";" 0 1 (fontified t)) . -32375) (undo-tree-id1968 . -1) 32376) nil (25724 30980 222103 470000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -32373) (undo-tree-id1979 . -1) 32374 (32373 . 32374) (t 25724 30980 298619 53000)) nil (25724 30986 289272 255000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -32373) (undo-tree-id1980 . -1) (#("k" 0 1 (fontified t)) . -32374) (undo-tree-id1981 . -1) 32375 (32373 . 32375) (t 25724 30986 362940 327000)) nil (25725 18493 53722 335000) 0 nil])
([nil nil ((32487 . 32505) (#("r" 0 1 (fontified t)) . -32487) (undo-tree-id2122 . -1) 32488 (32484 . 32488) (#("," 0 1 (fontified t)) . -32484) (undo-tree-id2123 . -1) (#("s" 0 1 (fontified t)) . -32485) (undo-tree-id2124 . -1) 32486 (32478 . 32486) (#("m" 0 1 (fontified t)) . -32478) (undo-tree-id2125 . -1) 32479 (32471 . 32479) (32453 . 32471) (#("e" 0 1 (fontified t)) . -32453) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (#("s" 0 1 (fontified t)) . -32454) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) 32455 (32446 . 32455) (32441 . 32446) (t 25724 36661 156609 607000) 32375) nil (25725 19551 100609 543000) 0 nil] [nil nil ((32414 . 32420) (32486 . 32492) (#(" " 0 1 (fontified t)) . -32486) (undo-tree-id1982 . -1) 32487 (32480 . 32487) (#("j" 0 1 (fontified t)) . -32480) (undo-tree-id1983 . -1) 32481 (32473 . 32481) (32452 . 32473) (#(" " 0 1 (fontified t)) . -32452) (undo-tree-id1984 . -1) (#("m" 0 1 (fontified t)) . -32453) (undo-tree-id1985 . -1) 32454 (32449 . 32454) (#("s" 0 1 (fontified t)) . -32449) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (#("e" 0 1 (fontified t)) . -32450) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (#("t" 0 1 (fontified t)) . -32451) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (#(" " 0 1 (fontified t)) . -32452) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (#("a" 0 1 (fontified t)) . -32453) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (#("t" 0 1 (fontified t)) . -32454) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (#("t" 0 1 (fontified t)) . -32455) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (#("r" 0 1 (fontified t)) . -32456) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (#("i" 0 1 (fontified t)) . -32457) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (#("b" 0 1 (fontified t)) . -32458) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (#("u" 0 1 (fontified t)) . -32459) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (#("t" 0 1 (fontified t)) . -32460) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (#("e" 0 1 (fontified t)) . -32461) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (#("s" 0 1 (fontified t)) . -32462) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (#(" " 0 1 (fontified t)) . -32463) (undo-tree-id2014 . -1) 32464 (32446 . 32464) (#("i" 0 1 (fontified t)) . -32446) (undo-tree-id2015 . -1) (#("t" 0 1 (fontified t)) . -32447) (undo-tree-id2016 . -1) (#(" " 0 1 (fontified t)) . -32448) (undo-tree-id2017 . -1) 32449 (32446 . 32449) (32441 . 32446) (t 25724 36661 156609 607000) 32375) ((#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 32441) (undo-tree-id2018 . -5) (#("it " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 32446) (32446 . 32449) (#("to set attributes " 0 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil) 17 18 (fontified nil)) . 32446) (undo-tree-id2019 . -17) (32449 . 32464) (#("get m" 0 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 32449) (undo-tree-id2020 . -3) (32452 . 32454) (#(", set and remove attr" 0 21 (fontified nil)) . 32452) (undo-tree-id2021 . -21) (#("ibutes j" 0 7 (fontified nil) 7 8 (fontified nil)) . 32473) (undo-tree-id2022 . -7) (32480 . 32481) (#("values " 0 6 (fontified nil) 6 7 (fontified nil)) . 32480) (undo-tree-id2023 . -6) (32486 . 32487) (#(", use " 0 6 (fontified t)) . 32486) (#("these " 0 6 (fontified t face org-level-3)) . 32414) (undo-tree-id2024 . -5) (undo-tree-id2025 . -5) (undo-tree-id2026 . -5)) (25725 18493 50911 780000) 0 nil])
([nil nil ((nil rear-nonsticky nil 32566 . 32567) (nil fontified nil 32566 . 32567) (nil fontified nil 32565 . 32566) (nil fontified nil 32557 . 32565) (nil fontified nil 32556 . 32557) (nil fontified nil 32510 . 32556) (32510 . 32567) (32505 . 32510) 32442) nil (25725 19551 100587 683000) 0 nil])
nil
([nil nil ((#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -32536) (undo-tree-id2114 . -1) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -32537) (undo-tree-id2115 . -1) (#("h" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -32538) (undo-tree-id2116 . -1) 32539 (32535 . 32539) (#("creatingelements." 0 17 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 32535) (undo-tree-id2117 . -16) (undo-tree-id2118 . -16) (undo-tree-id2119 . -16) (undo-tree-id2120 . -16) (undo-tree-id2121 . -16) 32551) nil (25725 19551 100579 512000) 0 nil])
([nil nil ((32538 . 32549) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -32538) (undo-tree-id2110 . -1) (#("i" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -32539) (undo-tree-id2111 . -1) 32540 (32539 . 32540) (#("_" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -32539) (undo-tree-id2112 . -1) 32540 (32535 . 32540) (#("h" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -32535) (undo-tree-id2113 . -1) 32536 (32535 . 32536)) nil (25725 19551 100560 26000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -32555) (undo-tree-id2109 . -4) 32559 (32554 . 32559) 32548) nil (25725 19551 100545 848000) 0 nil])
([nil nil ((nil rear-nonsticky nil 32716 . 32717) (nil fontified nil 32555 . 32717) (32555 . 32717)) nil (25725 19551 100539 143000) 0 nil])
([nil nil ((nil rear-nonsticky nil 32742 . 32743) (nil fontified nil 32717 . 32743) (32717 . 32743)) nil (25725 19551 100534 883000) 0 nil])
([nil nil ((32788 . 32789) (32787 . 32788) (32780 . 32787) (#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32780) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) 32781 (32780 . 32781) (32779 . 32780) (32768 . 32779) (32759 . 32768) (32757 . 32759) (32756 . 32757) (32754 . 32756) (32752 . 32754) (#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32752) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) 32753 (32752 . 32753) (32751 . 32752) (32742 . 32751) (32737 . 32742) (#("s" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32737) (undo-tree-id2107 . -1) (#("." 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32738) (undo-tree-id2108 . -1) 32739 (32738 . 32739) (32732 . 32738) (32718 . 32732) (32717 . 32718) 32717) nil (25725 19551 100527 340000) 0 nil])
([nil nil ((nil rear-nonsticky nil 32788 . 32789) (#("
" 0 1 (font-lock-fontified t src-block t font-lock-multiline t face (org-block) fontified nil)) . -32818) (32788 . 32819) 32759) nil (25725 19551 100504 991000) 0 nil])
([nil nil ((32794 . 32797) (#("remove" 0 6 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . 32794) (undo-tree-id2098 . -5) (undo-tree-id2099 . -5) (undo-tree-id2100 . -5) (undo-tree-id2101 . -5) (undo-tree-id2102 . -5) 32799) nil (25725 19551 100499 683000) 0 nil])
([nil nil ((32813 . 32817) (#("m" 0 1 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block))) . -32813) (undo-tree-id2097 . -1) 32814 (32813 . 32814)) nil (25725 19551 100486 972000) 0 nil])
([nil nil ((32831 . 32832) (#("*" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32831) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) 32832 (32820 . 32832) (32819 . 32820) 32816) nil (25725 19551 100479 708000) 0 nil])
([nil nil ((32833 . 32834) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32833) (undo-tree-id2093 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32834) (undo-tree-id2094 . -1) 32835 (32832 . 32835)) nil (25725 19551 100469 651000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2036 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2037 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2038 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2039 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2040 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2041 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2042 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2043 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2044 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2045 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2046 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2047 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2048 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2049 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2050 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2051 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2052 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2053 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2054 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2055 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2056 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2057 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2058 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2059 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2060 . -1) 32852 (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2061 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2062 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2063 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2064 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2065 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2066 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2067 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2068 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2069 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2070 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2071 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2072 . -1) 32852 (32851 . 32852) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2073 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2074 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2075 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2076 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2077 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2078 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2079 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2080 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2081 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2082 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2083 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2084 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2085 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2086 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2087 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2088 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2089 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2090 . -1) 32853 (32851 . 32853) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32851) (undo-tree-id2091 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2092 . -1) 32853 (32849 . 32853) (32840 . 32849) (32832 . 32840)) nil (25725 19551 100433 404000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32853) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32854) (undo-tree-id2032 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32855) (undo-tree-id2033 . -1) (#("k" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32856) 32857 (32854 . 32857) (#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32850) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) 32851 (32850 . 32851)) nil (25725 19551 100300 915000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32852) (undo-tree-id2027 . -1) 32853 (32851 . 32853) (32850 . 32851) (#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -32850) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) 32851 (32850 . 32851)) nil (25725 19551 100282 267000) 0 nil])
([nil nil ((32851 . 32855)) nil (25725 19551 100253 353000) 0 nil])
([nil nil ((32859 . 32860) 32854) nil (25725 19551 100242 38000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33036 . 33037) (nil fontified nil 32759 . 33037) (32759 . 33037) (#("atts.removeAttribute('href');
atts.setAttribute('href','#');
console.log(atts.getAttribute('href'));
" 0 21 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 21 22 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 22 28 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 28 29 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 29 30 (fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 30 48 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 48 49 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 49 55 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 55 56 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 56 58 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 58 59 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 59 60 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 60 91 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 91 97 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 97 99 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 99 100 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 100 101 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 32759) (undo-tree-id2131 . -101) (undo-tree-id2132 . -61) (undo-tree-id2133 . -100) (undo-tree-id2134 . -98) (undo-tree-id2135 . -35) (undo-tree-id2136 . -98) (undo-tree-id2137 . -98) (undo-tree-id2138 . -61) (undo-tree-id2139 . -61) (undo-tree-id2140 . -101) (undo-tree-id2141 . -61) 32860 (t 25725 19551 174330 907000)) nil (25725 19578 357882 136000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -33037) (undo-tree-id2130 . -1) 33038 (33037 . 33038) (33036 . 33037) 33035) nil (25725 19578 357596 136000) 0 nil])
([nil nil ((33037 . 33038) 33037) nil (25725 19578 357319 355000) 0 nil])
([nil nil ((nil rear-nonsticky nil 33695 . 33696) (nil fontified nil 33038 . 33696) (33038 . 33696)) nil (25725 19578 357304 548000) 0 nil])
([nil nil ((33812 . 33821) (33795 . 33812) (33776 . 33795) (33755 . 33776) (#("att" 0 3 (fontified nil)) . 33755) (undo-tree-id2174 . -3) (undo-tree-id2175 . -3) (33746 . 33755) 33749 (33735 . 33749) (#("i" 0 1 (fontified t)) . -33735) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (#("s" 0 1 (fontified t)) . -33736) (undo-tree-id2178 . -1) 33737 (33734 . 33737) (#("=" 0 1 (fontified t)) . -33734) (undo-tree-id2179 . -1) 33735 (33734 . 33735) (t 25725 19578 430483 804000)) nil (25725 19718 343271 31000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -33822) (undo-tree-id2173 . -2) 33824 (33821 . 33824) 33820) nil (25725 19718 343248 612000) 0 nil])
([nil nil ((33882 . 33898) (33877 . 33882) 33823) nil (25725 19718 343240 510000) 0 nil])
([nil nil ((33951 . 33952) (33943 . 33951) (33937 . 33943) (33927 . 33937) (#("s" 0 1 (fontified t)) . -33927) (undo-tree-id2166 . -1) 33928 (33913 . 33928) (#("n" 0 1 (fontified t)) . -33913) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (#("a" 0 1 (fontified t)) . -33914) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (#(" " 0 1 (fontified t)) . -33915) (undo-tree-id2171 . -1) 33916 (33898 . 33916) (#(" " 0 1 (fontified t)) . -33898) (undo-tree-id2172 . -1) 33899 (33898 . 33899)) nil (25725 19718 343232 269000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34008 . 34009) (nil fontified nil 34008 . 34009) (nil fontified nil 34007 . 34008) (nil fontified nil 33999 . 34007) (nil fontified nil 33998 . 33999) (nil fontified nil 33952 . 33998) (33952 . 34009)) nil (25725 19718 343206 567000) 0 nil])
([nil nil ((33998 . 33999) 33952) nil (25725 19718 343199 374000) 0 nil])
([nil nil ((33977 . 33989) (#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 33977) (undo-tree-id2162 . -15) (undo-tree-id2163 . -15) (undo-tree-id2164 . -15) (undo-tree-id2165 . -15) 33992) nil (25725 19718 343193 647000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34441 . 34442) (nil fontified nil 33995 . 34442) (33995 . 34442)) nil (25725 19718 343179 958000) 0 nil])
([nil nil ((34453 . 34454) 34453) nil (25725 19718 343175 69000) 0 nil])
([nil nil ((34487 . 34489) (#("h" 0 1 (fontified t)) . -34487) (undo-tree-id2155 . -1) 34488 (34487 . 34488) (#("c" 0 1 (fontified t)) . -34487) (undo-tree-id2156 . -1) (#("h" 0 1 (fontified t)) . -34488) (undo-tree-id2157 . -1) 34489 (34487 . 34489) (#("c" 0 1 (fontified t)) . -34487) (undo-tree-id2158 . -1) 34488 (34486 . 34488) (34478 . 34486) (#("v" 0 1 (fontified t)) . -34478) (undo-tree-id2159 . -1) (#("o" 0 1 (fontified t)) . -34479) (undo-tree-id2160 . -1) 34480 (34474 . 34480) (34453 . 34474) (#("h" 0 1 (fontified t)) . -34453) (undo-tree-id2161 . -1) 34454 (34453 . 34454)) nil (25725 19718 343165 989000) 0 nil])
([nil nil ((34543 . 34545) (#("." 0 1 (fontified t)) . -34543) (undo-tree-id2142 . -1) (#("u" 0 1 (fontified t)) . -34544) (undo-tree-id2143 . -1) (#("e" 0 1 (fontified t)) . -34545) (undo-tree-id2144 . -1) 34546 (34538 . 34546) (34517 . 34538) (#("h" 0 1 (fontified t)) . -34517) (undo-tree-id2145 . -1) (#("l" 0 1 (fontified t)) . -34518) (undo-tree-id2146 . -1) 34519 (34516 . 34519) (#("h" 0 1 (fontified t)) . -34516) (undo-tree-id2147 . -1) 34517 (34497 . 34517) (#("f" 0 1 (fontified t)) . -34497) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (#(" " 0 1 (fontified t)) . -34498) (undo-tree-id2150 . -1) 34499 (34489 . 34499) (#(" " 0 1 (fontified t)) . -34489) (undo-tree-id2151 . -1) 34490 (34489 . 34490) (#("
" 0 1 (fontified t)) . -34489) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (#("=" 0 1 (fontified t)) . -34490) (undo-tree-id2154 . -1) 34491 (34490 . 34491) (34489 . 34490) 34488) nil (25725 19718 343130 300000) 0 nil])
([nil nil ((34545 . 34546) 34544) nil (25725 19718 342714 605000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -34546) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (#("k" 0 1 (fontified t)) . -34547) (undo-tree-id2182 . -1) 34548 (34546 . 34548) (t 25725 19718 419269 292000)) nil (25725 19727 448195 421000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -34626) (undo-tree-id2198 . -1) (#("j" 0 1 (fontified t)) . -34627) (undo-tree-id2199 . -1) 34628 (34608 . 34628) (#("i" 0 1 (fontified t)) . -34608) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (#("s" 0 1 (fontified t)) . -34609) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) 34610 (34602 . 34610) (#("o" 0 1 (fontified t)) . -34602) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) 34603 (34600 . 34603) (34591 . 34600) (#("n" 0 1 (fontified t)) . -34591) (undo-tree-id2206 . -1) (#("a" 0 1 (fontified t)) . -34592) (undo-tree-id2207 . -1) 34593 (34586 . 34593) (#("v" 0 1 (fontified t)) . -34586) (undo-tree-id2208 . -1) 34587 (34568 . 34587) (34547 . 34568) (34546 . 34547) (t 25725 19727 523320 386000) 34546) nil (25725 19845 902701 603000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -34591) (undo-tree-id2193 . -1) 34592 (34586 . 34592) (#("boolean radio" 0 13 (fontified t)) . 34586) (undo-tree-id2194 . -12) (undo-tree-id2195 . -12) (undo-tree-id2196 . -12) (undo-tree-id2197 . -12) 34598) nil (25725 19845 902671 82000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34675 . 34676) (nil fontified nil 34675 . 34676) (nil fontified nil 34674 . 34675) (nil fontified nil 34666 . 34674) (nil fontified nil 34665 . 34666) (nil fontified nil 34619 . 34665) (34619 . 34676) (34618 . 34619) 34590) nil (25725 19845 902657 742000) 0 nil])
([nil nil ((34661 . 34670) (#("r" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -34661) (undo-tree-id2183 . -1) (#("a" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -34662) (undo-tree-id2184 . -1) (#("d" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -34663) (undo-tree-id2185 . -1) 34664 (34657 . 34664) (#("o" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -34657) (undo-tree-id2186 . -1) 34658 (34652 . 34658) (#("v" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -34652) (undo-tree-id2187 . -1) (#("u" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -34653) (undo-tree-id2188 . -1) 34654 (34644 . 34654) (#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 34644) (undo-tree-id2189 . -15) (undo-tree-id2190 . -15) (undo-tree-id2191 . -15) (undo-tree-id2192 . -15) 34659) nil (25725 19845 902647 196000) 0 nil])
([nil nil ((34675 . 34676) 34669) nil (25725 19845 902604 384000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34893 . 34894) (nil fontified nil 34676 . 34894) (34676 . 34894)) nil (25725 19845 902592 371000) 0 nil])
([nil nil ((34981 . 34982) (#(" " 0 1 (fontified t)) . -34981) (undo-tree-id2263 . -1) 34982 (34961 . 34982) (34956 . 34961) (t 25725 19845 975985 271000) 34907) nil (25725 20016 496868 28000) 0 nil])
([nil nil ((34973 . 34982) (#(" " 0 1 (fontified t)) . -34973) (undo-tree-id2262 . -1) 34974) nil (25725 20016 496860 276000) 0 nil])
([nil nil ((34996 . 35007) (34990 . 34996) (#(" " 0 1 (fontified t)) . -34990) (undo-tree-id2261 . -1) 34991 (34990 . 34991)) nil (25725 20016 496854 60000) 0 nil])
([nil nil ((35039 . 35040) (35031 . 35039) (#("i" 0 1 (fontified t)) . -35031) (undo-tree-id2258 . -1) (#("r" 0 1 (fontified t)) . -35032) (undo-tree-id2259 . -1) 35033 (35028 . 35033) (35007 . 35028) (#(" " 0 1 (fontified t)) . -35007) (undo-tree-id2260 . -1) 35008 (35007 . 35008)) nil (25725 20016 496845 470000) 0 nil])
([nil nil ((35069 . 35070) (#("j" 0 1 (fontified t)) . -35069) (undo-tree-id2238 . -1) 35070 (35069 . 35070) (#(" " 0 1 (fontified t)) . -35069) (undo-tree-id2239 . -1) (#("j" 0 1 (fontified t)) . -35070) (undo-tree-id2240 . -1) (#("k" 0 1 (fontified t)) . -35071) (undo-tree-id2241 . -1) 35072 (35061 . 35072) (#("c" 0 1 (fontified t)) . -35061) (undo-tree-id2242 . -1) (#(" " 0 1 (fontified t)) . -35062) (undo-tree-id2243 . -1) 35063 (35060 . 35063) (#("i" 0 1 (fontified t)) . -35060) (undo-tree-id2244 . -1) (#("n" 0 1 (fontified t)) . -35061) (undo-tree-id2245 . -1) (#("g" 0 1 (fontified t)) . -35062) (undo-tree-id2246 . -1) (#(" " 0 1 (fontified t)) . -35063) (undo-tree-id2247 . -1) 35064 (35059 . 35064) (#("i" 0 1 (fontified t)) . -35059) (undo-tree-id2248 . -1) (#("t" 0 1 (fontified t)) . -35060) (undo-tree-id2249 . -1) (#("i" 0 1 (fontified t)) . -35061) (undo-tree-id2250 . -1) (#("n" 0 1 (fontified t)) . -35062) (undo-tree-id2251 . -1) 35063 (35061 . 35063) (35040 . 35061) (#("h" 0 1 (fontified t)) . -35040) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (#("t" 0 1 (fontified t)) . -35041) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (#("a" 0 1 (fontified t)) . -35042) (undo-tree-id2256 . -1) (#("n" 0 1 (fontified t)) . -35043) (undo-tree-id2257 . -1) 35044 (35040 . 35044)) nil (25725 20016 496823 819000) 0 nil])
([nil nil ((35102 . 35112) (#(" " 0 1 (fontified t)) . -35102) (undo-tree-id2228 . -1) (#("p" 0 1 (fontified t)) . -35103) (undo-tree-id2229 . -1) 35104 (35100 . 35104) (#("m" 0 1 (fontified t)) . -35100) (undo-tree-id2230 . -1) (#("a" 0 1 (fontified t)) . -35101) (undo-tree-id2231 . -1) (#("m" 0 1 (fontified t)) . -35102) (undo-tree-id2232 . -1) 35103 (35101 . 35103) (#("a" 0 1 (fontified t)) . -35101) (undo-tree-id2233 . -1) (#("e" 0 1 (fontified t)) . -35102) (undo-tree-id2234 . -1) (#(" " 0 1 (fontified t)) . -35103) (undo-tree-id2235 . -1) 35104 (35099 . 35104) (#("n" 0 1 (fontified t)) . -35099) (undo-tree-id2236 . -1) (#("s" 0 1 (fontified t)) . -35100) (undo-tree-id2237 . -1) 35101 (35086 . 35101) (35070 . 35086)) nil (25725 20016 496769 343000) 0 nil])
([nil nil ((35151 . 35158) (35134 . 35151) (#("w" 0 1 (fontified t)) . -35134) (undo-tree-id2225 . -1) (#("l" 0 1 (fontified t)) . -35135) (undo-tree-id2226 . -1) (#("o" 0 1 (fontified t)) . -35136) (undo-tree-id2227 . -1) 35137 (35117 . 35137) (35112 . 35117) 35111) nil (25725 20016 496739 311000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -35220) (undo-tree-id2222 . -1) (#("k" 0 1 (fontified t)) . -35221) (undo-tree-id2223 . -1) (#("j" 0 1 (fontified t)) . -35222) (undo-tree-id2224 . -1) 35223 (35220 . 35223) (nil rear-nonsticky nil 35219 . 35220) (nil fontified nil 35219 . 35220) (nil fontified nil 35218 . 35219) (nil fontified nil 35210 . 35218) (nil fontified nil 35209 . 35210) (nil fontified nil 35163 . 35209) (35163 . 35220) (35158 . 35163) 35157) nil (25725 20016 496726 949000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -35210) (undo-tree-id2221 . -4) 35214 (35209 . 35214) 35159) nil (25725 20016 496714 28000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35507 . 35508) (nil fontified nil 35210 . 35508) (35210 . 35508)) nil (25725 20016 496707 812000) 0 nil])
([nil nil ((35215 . 35218) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -35215) (undo-tree-id2213 . -1) (#("u" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -35216) (undo-tree-id2214 . -1) (#("s" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -35217) (undo-tree-id2215 . -1) 35218 (35205 . 35218) (#("c" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -35205) (undo-tree-id2216 . -1) 35206 (35188 . 35206) (#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 35188) (undo-tree-id2217 . -15) (undo-tree-id2218 . -15) (undo-tree-id2219 . -15) (undo-tree-id2220 . -15) 35203) nil (25725 20016 496700 758000) 0 nil])
([nil nil ((35533 . 35536)) nil (25725 20016 496679 736000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -35533) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (#("x" 0 1 (fontified t)) . -35534) (undo-tree-id2211 . -1) (#("l" 0 1 (fontified t)) . -35535) (undo-tree-id2212 . -1) 35536) nil (25725 20016 496668 771000) 0 nil])
([nil nil ((35601 . 35609) (#("r" 0 1 (fontified t)) . -35601) (undo-tree-id2271 . -1) (#("p" 0 1 (fontified t)) . -35602) (undo-tree-id2272 . -1) 35603 (35600 . 35603) (35598 . 35600) (35592 . 35598) (#(" " 0 1 (fontified t)) . -35592) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (#("a" 0 1 (fontified t)) . -35593) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (#("l" 0 1 (fontified t)) . -35594) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (#("e" 0 1 (fontified t)) . -35595) (undo-tree-id2279 . -1) (#("n" 0 1 (fontified t)) . -35596) (undo-tree-id2280 . -1) 35597 (35581 . 35597) (#(" " 0 1 (fontified t)) . -35581) (undo-tree-id2281 . -1) (#("o" 0 1 (fontified t)) . -35582) (undo-tree-id2282 . -1) 35583 (35565 . 35583) (#("p" 0 1 (fontified t)) . -35565) (undo-tree-id2283 . -1) 35566 (35558 . 35566) (#("t" 0 1 (fontified t)) . -35558) (undo-tree-id2284 . -1) 35559 (35549 . 35559) (#(" " 0 1 (fontified t)) . -35549) (undo-tree-id2285 . -1) (#("n" 0 1 (fontified t)) . -35550) (undo-tree-id2286 . -1) 35551 (35540 . 35551) (#(" " 0 1 (fontified t)) . -35540) (undo-tree-id2287 . -1) 35541 (35533 . 35541) (t 25725 20016 584943 183000)) nil (25725 20064 903656 510000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -35612) (undo-tree-id2266 . -1) (#("k" 0 1 (fontified t)) . -35613) (undo-tree-id2267 . -1) 35614 (35612 . 35614) (#("j" 0 1 (fontified t)) . -35612) (undo-tree-id2268 . -1) (#("k" 0 1 (fontified t)) . -35613) (undo-tree-id2269 . -1) (#("j" 0 1 (fontified t)) . -35614) (undo-tree-id2270 . -1) 35615 (35612 . 35615) (35609 . 35612) 35608) nil (25725 20064 903481 418000) 0 nil])
([nil nil ((35672 . 35677) 35615) nil (25725 20064 903455 786000) 0 nil])
([nil nil ((35677 . 35678)) nil (25725 20064 903450 479000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -35677) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) 35678) nil (25725 20064 903167 62000) 0 nil])
([nil nil ((35696 . 35706) (35692 . 35696) (35677 . 35692) (t 25725 20064 985214 980000)) nil (25725 20258 685614 321000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -35703) (undo-tree-id2310 . -1) 35704 (35703 . 35704)) nil (25725 20258 685607 617000) 0 nil])
([nil nil ((35702 . 35703)) nil (25725 20258 685600 4000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -35726) (undo-tree-id2307 . -1) (#("k" 0 1 (fontified t)) . -35727) (undo-tree-id2308 . -1) (#(" " 0 1 (fontified t)) . -35728) (undo-tree-id2309 . -1) 35729 (35717 . 35729) (35712 . 35717) (35707 . 35712)) nil (25725 20258 685592 950000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35826 . 35827) (nil fontified nil 35826 . 35827) (nil fontified nil 35825 . 35826) (nil fontified nil 35817 . 35825) (nil fontified nil 35816 . 35817) (nil fontified nil 35770 . 35816) (35770 . 35827) (#("r" 0 1 (fontified t)) . -35770) (undo-tree-id2297 . -1) 35771 (35770 . 35771) (35769 . 35770) (35764 . 35769) (#("v" 0 1 (fontified t)) . -35764) (undo-tree-id2298 . -1) (#("u" 0 1 (fontified t)) . -35765) (undo-tree-id2299 . -1) 35766 (35760 . 35766) (#("d" 0 1 (fontified t)) . -35760) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (#("d" 0 1 (fontified t)) . -35761) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) 35762 (35755 . 35762) (#("i" 0 1 (fontified t)) . -35755) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) 35756 (35754 . 35756) (#("a" 0 1 (fontified t)) . -35754) (undo-tree-id2306 . -1) 35755 (35739 . 35755) (35735 . 35739) (35726 . 35735)) nil (25725 20258 685571 369000) 0 nil])
([nil nil ((35795 . 35798) (#("c" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 35795)) nil (25725 20258 685529 953000) 0 nil])
([nil nil ((#("lllreatingelements" 0 18 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 35795) (undo-tree-id2292 . -17) (undo-tree-id2293 . -17) (undo-tree-id2294 . 15) (undo-tree-id2295 . -17) (undo-tree-id2296 . -17) 35812) nil (25725 20258 685524 226000) 0 nil])
([nil nil ((35800 . 35813) (#("+" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -35800) (undo-tree-id2291 . -1) 35801 (35799 . 35801) (35795 . 35799)) nil (25725 20258 685504 251000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -35819) (undo-tree-id2288 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -35820) (undo-tree-id2289 . -1) (#("," 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -35821) (undo-tree-id2290 . -1) 35822 (35819 . 35822) (35818 . 35819) 35812) nil (25725 20258 685490 842000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36053 . 36054) (nil fontified nil 35819 . 36054) (35819 . 36054)) nil (25725 20258 685448 588000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -36054) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) 36055 (36054 . 36055) (t 25725 20259 254306 77000)) nil (25725 20269 421806 905000) 0 nil])
([nil nil ((36054 . 36055) 36053) nil (25725 20269 421769 820000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -36055) (undo-tree-id2315 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -36056) (undo-tree-id2316 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -36057) (undo-tree-id2317 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -36058) (undo-tree-id2318 . -1) 36059 (36058 . 36059) (36055 . 36058) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -36055) (undo-tree-id2319 . -1) 36056 (36055 . 36056) (t 25725 20270 462369 33000)) nil (25725 20284 323255 579000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -36183) (undo-tree-id2358 . -1) (#("k" 0 1 (fontified t)) . -36184) (undo-tree-id2359 . -1) 36185 (36174 . 36185) (#(" " 0 1 (fontified t)) . -36174) (undo-tree-id2360 . -1) 36175 (36171 . 36175) (36170 . 36171) (#("l" 0 1 (fontified t)) . -36170) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (#("i" 0 1 (fontified t)) . -36171) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (#("s" 0 1 (fontified t)) . -36172) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (#("t" 0 1 (fontified t)) . -36173) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) 36174 (36170 . 36174) (36149 . 36170) (36128 . 36149) (36123 . 36128) (#("l" 0 1 (fontified nil)) . -36123) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (#("g" 0 1 (fontified nil)) . -36124) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (#("g" 0 1 (fontified nil)) . -36125) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (#("l" 0 1 (fontified t)) . -36126) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (#("e" 0 1 (fontified t)) . -36127) (undo-tree-id2377 . -1) (#(" " 0 1 (fontified t)) . -36128) (undo-tree-id2378 . -1) 36129 (36114 . 36129) (36109 . 36114) (t 25725 20285 266452 189000) 36067) nil (25725 20498 787080 766000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . -36188) (undo-tree-id2347 . -1) (#("j" 0 1 (fontified nil)) . -36189) (undo-tree-id2348 . -1) (#("j" 0 1 (fontified nil)) . -36190) (undo-tree-id2349 . -1) (#("j" 0 1 (fontified nil)) . -36191) (undo-tree-id2350 . -1) (#("j" 0 1 (fontified t)) . -36192) (undo-tree-id2351 . -1) (#("j" 0 1 (fontified nil)) . -36193) (undo-tree-id2352 . -1) (#("j" 0 1 (fontified nil)) . -36194) (undo-tree-id2353 . -1) (#("j" 0 1 (fontified t)) . -36195) (undo-tree-id2354 . -1) (#("j" 0 1 (fontified t)) . -36196) (undo-tree-id2355 . -1) (#("j" 0 1 (fontified t)) . -36197) (undo-tree-id2356 . -1) (#("k" 0 1 (fontified t)) . -36198) (undo-tree-id2357 . -1) 36199 (36188 . 36199) (36183 . 36188) 36182) nil (25725 20498 786932 13000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t face org-block-end-line)) . -36243) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (#("j" 0 1 (fontified t)) . -36244) (undo-tree-id2344 . -1) (#("k" 0 1 (fontified t)) . -36245) (undo-tree-id2345 . -1) (#("k" 0 1 (fontified t)) . -36246) (undo-tree-id2346 . -1) 36247 (36244 . 36247) (nil rear-nonsticky nil 36243 . 36244) (nil fontified nil 36243 . 36244) (nil fontified nil 36242 . 36243) (nil fontified nil 36234 . 36242) (nil fontified nil 36233 . 36234) (nil fontified nil 36187 . 36233) (36187 . 36244)) nil (25725 20498 786798 611000) 0 nil])
([nil nil ((36220 . 36231) (#("+" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -36220) (undo-tree-id2336 . -1) 36221 (36214 . 36221) (36212 . 36214) (#("o" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -36212) (undo-tree-id2337 . -1) 36213 (36212 . 36213) (#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 36212) (undo-tree-id2338 . -15) (undo-tree-id2339 . -15) (undo-tree-id2340 . -15) (undo-tree-id2341 . -15) 36227) nil (25725 20498 786631 718000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -36237) (undo-tree-id2335 . -3) 36240 (36236 . 36240) 36230) nil (25725 20498 786609 950000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36252 . 36253) (nil fontified nil 36237 . 36253) (36237 . 36253)) nil (25725 20498 786602 205000) 0 nil])
([nil nil ((#("creatingelements
" 0 15 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 15 16 (fontified t rear-nonsticky t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 16 17 (rear-nonsticky t font-lock-fontified t fontified t src-block t font-lock-multiline t face (org-block))) . 36237) (undo-tree-id2331 . -16) (undo-tree-id2332 . 1) (undo-tree-id2333 . -15) (undo-tree-id2334 . -17) 36252) nil (25725 20498 786595 995000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -36237) (undo-tree-id2330 . -3) 36240 (36236 . 36240) 36193) nil (25725 20498 786580 855000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -36238) (undo-tree-id2329 . -3) 36241 (36237 . 36241) 36237) nil (25725 20498 786572 204000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36314 . 36315) (nil fontified nil 36237 . 36315) (36237 . 36315)) nil (25725 20498 786564 40000) 0 nil])
([nil nil ((36315 . 36316) 36314) nil (25725 20498 786558 877000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36340 . 36341) (nil fontified nil 36316 . 36341) (36316 . 36341)) nil (25725 20498 786554 133000) 0 nil])
([nil nil ((36388 . 36389) (36381 . 36388) (#("x" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -36381) (undo-tree-id2320 . -1) (#("i" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -36382) (undo-tree-id2321 . -1) (#("b" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -36383) (undo-tree-id2322 . -1) 36384 (36379 . 36384) (36377 . 36379) (36374 . 36377) (36370 . 36374) (36363 . 36370) (36361 . 36363) (#("l" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -36361) (undo-tree-id2323 . -1) (#("c" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -36362) (undo-tree-id2324 . -1) 36363 (36358 . 36363) (#("k" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -36358) 36359 (36357 . 36359) (36356 . 36357) (36355 . 36356) (36354 . 36355) (#("(" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -36354) (undo-tree-id2325 . -1) 36355 (36353 . 36355) (#(")" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -36353) (undo-tree-id2326 . -1) 36354 (36348 . 36354) (36337 . 36348) (36336 . 36337) (36334 . 36336) (#("/" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -36334) (undo-tree-id2327 . -1) 36335 (36334 . 36335) (#("s" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -36334) (undo-tree-id2328 . -1) 36335 (36329 . 36335) (36316 . 36329) (36315 . 36316) 36313) nil (25725 20498 786540 527000) 0 nil])
([nil nil ((36418 . 36419) (36410 . 36418) (36406 . 36410) (36403 . 36406) (36396 . 36403) (36390 . 36396) (36389 . 36390) 36388) nil (25725 20498 786483 803000) 0 nil])
([nil nil ((36446 . 36447) (36445 . 36446) (36440 . 36445) (36427 . 36440) (36420 . 36427) (36419 . 36420) 36418) nil (25725 20498 786474 245000) 0 nil])
([nil nil ((36485 . 36486) 36484) nil (25725 20498 786457 988000) 0 nil])
([nil nil ((36615 . 36628) (#("s" 0 1 (fontified t)) . -36615) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) 36616 (36609 . 36616) (36608 . 36609) (36601 . 36608) (36589 . 36601) (#("c" 0 1 (fontified t)) . -36589) (undo-tree-id2396 . -1) (#("o" 0 1 (fontified t)) . -36590) (undo-tree-id2397 . -1) 36591 (36589 . 36591) (#("l" 0 1 (fontified nil)) . 36589) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (36585 . 36589) 36586 (36581 . 36586) (#("h" 0 1 (fontified t)) . -36581) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (#("a" 0 1 (fontified t)) . -36582) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (#("l" 0 1 (fontified t)) . -36583) (undo-tree-id2404 . -1) (#("s" 0 1 (fontified t)) . -36584) (undo-tree-id2405 . -1) 36585 (36569 . 36585) (#("s" 0 1 (fontified t)) . -36569) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (#("e" 0 1 (fontified t)) . -36570) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (#("e" 0 1 (fontified t)) . -36571) (undo-tree-id2410 . -1) 36572 (36571 . 36572) (#("t" 0 1 (fontified t)) . -36571) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (#("t" 0 1 (fontified t)) . -36572) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) 36573 (36569 . 36573) (#("c" 0 1 (fontified t)) . -36569) (undo-tree-id2415 . -1) 36570 (36568 . 36570) (36566 . 36568) (36561 . 36566) (t 25725 20498 865517 96000) 36487) nil (25725 20606 21445 715000) 0 nil])
([nil nil ((36652 . 36660) (#("k" 0 1 (fontified t)) . -36652) (undo-tree-id2389 . -1) 36653 (36652 . 36653) (#("k" 0 1 (fontified t)) . -36652) (undo-tree-id2390 . -1) 36653 (36652 . 36653) (#("k" 0 1 (fontified t)) . -36652) (undo-tree-id2391 . -1) (#("l" 0 1 (fontified t)) . -36653) (undo-tree-id2392 . -1) 36654 (36649 . 36654) (#("e" 0 1 (fontified t)) . -36649) (undo-tree-id2393 . -1) 36650 (36641 . 36650) (36637 . 36641) (36628 . 36637)) nil (25725 20606 21378 201000) 0 nil])
([nil nil ((36675 . 36691) (#("a" 0 1 (fontified t)) . -36675) (undo-tree-id2387 . -1) (#(" " 0 1 (fontified t)) . -36676) (undo-tree-id2388 . -1) 36677 (36671 . 36677) (36665 . 36671) (36660 . 36665) 36659) nil (25725 20606 21354 114000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36752 . 36753) (nil fontified nil 36752 . 36753) (nil fontified nil 36751 . 36752) (nil fontified nil 36743 . 36751) (nil fontified nil 36742 . 36743) (nil fontified nil 36696 . 36742) (36696 . 36753) (#("'" 0 1 (fontified t)) . -36696) (undo-tree-id2385 . -1) (#("x" 0 1 (fontified t)) . -36697) (undo-tree-id2386 . -1) 36698 (36696 . 36698) (36691 . 36696) 36690) nil (25725 20606 21340 220000) 0 nil])
([nil nil ((36729 . 36730) (#("m" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -36729) (undo-tree-id2380 . -1) 36730 (36721 . 36730) (#("creatingelements." 0 17 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 36721) (undo-tree-id2381 . -16) (undo-tree-id2382 . -16) (undo-tree-id2383 . -16) (undo-tree-id2384 . -16) 36737) nil (25725 20606 21324 930000) 0 nil])
([nil nil ((36645 . 36646) (#("t" 0 1 (fontified t)) . 36645)) nil (25725 20606 21306 289000) 0 nil])
([nil nil ((36647 . 36648) (#("a" 0 1 (fontified t)) . 36647)) nil (25725 20606 21301 541000) 0 nil])
([nil nil ((36645 . 36646) (#("r" 0 1 (fontified t)) . -36645) (undo-tree-id2379 . -1) 36646 (36645 . 36646)) nil (25725 20606 21295 816000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 36648)) nil (25725 20606 21271 520000) 0 nil])
([nil nil ((36734 . 36739) 36733) nil (25725 20606 21152 830000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36951 . 36952) (nil fontified nil 36739 . 36952) (36739 . 36952) 36738 (t 25725 20606 98245 539000)) nil (25725 20615 647750 123000) 0 nil])
([nil nil ((37215 . 37216) (37199 . 37215) (37178 . 37199) (#("s" 0 1 (fontified t)) . -37178) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (#("e" 0 1 (fontified t)) . -37179) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (#("e" 0 1 (fontified t)) . -37180) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (#(" " 0 1 (fontified t)) . -37181) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (#("t" 0 1 (fontified t)) . -37182) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (#("h" 0 1 (fontified t)) . -37183) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (#("e" 0 1 (fontified t)) . -37184) (undo-tree-id2432 . -1) (#(" " 0 1 (fontified t)) . -37185) (undo-tree-id2433 . -1) 37186 (37178 . 37186) (#("e" 0 1 (fontified t)) . -37178) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (#("s" 0 1 (fontified t)) . -37179) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) 37180 (37174 . 37180) (#("b" 0 1 (fontified t)) . -37174) (undo-tree-id2438 . -1) 37175 (37168 . 37175) (#("j" 0 1 (fontified t)) . -37168) (undo-tree-id2439 . -1) 37169 (37161 . 37169) (37157 . 37161) (37146 . 37157) (#("m" 0 1 (fontified t)) . -37146) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (#("a" 0 1 (fontified t)) . -37147) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) 37148 (37147 . 37148) (#("m" 0 1 (fontified t)) . -37147) (undo-tree-id2444 . -1) 37148 (37147 . 37148) (#("a" 0 1 (fontified t)) . -37147) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) 37148 (37139 . 37148) (37138 . 37139) (37122 . 37138) (#("r" 0 1 (fontified t)) . -37122) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (#("a" 0 1 (fontified t)) . -37123) (undo-tree-id2449 . -1) 37124 (37104 . 37124) (#("e" 0 1 (fontified t)) . -37104) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (#("n" 0 1 (fontified t)) . -37105) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) 37106 (37104 . 37106) (37100 . 37104) (37079 . 37100) (37058 . 37079) (37055 . 37058) (#("b" 0 1 (fontified t)) . -37055) (undo-tree-id2454 . -1) (#("i" 0 1 (fontified t)) . -37056) (undo-tree-id2455 . -1) (#("d" 0 1 (fontified t)) . -37057) (undo-tree-id2456 . -1) 37058 (37052 . 37058) (37031 . 37052) (#("t" 0 1 (fontified t)) . -37031) (undo-tree-id2457 . -1) (#("y" 0 1 (fontified t)) . -37032) (undo-tree-id2458 . -1) 37033 (37012 . 37033) (37007 . 37012) (t 25725 20615 726913 333000) 36964) nil (25725 20724 823265 569000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37273 . 37274) (nil fontified nil 37273 . 37274) (nil fontified nil 37272 . 37273) (nil fontified nil 37264 . 37272) (nil fontified nil 37263 . 37264) (nil fontified nil 37217 . 37263) (37217 . 37274) (37216 . 37217) 37215) nil (25725 20724 823151 778000) 0 nil])
([nil nil ((37242 . 37250) (#("creatingelements." 0 17 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 37242) (undo-tree-id2416 . -16) (undo-tree-id2417 . -16) (undo-tree-id2418 . -16) (undo-tree-id2419 . -16) 37258) nil (25725 20724 823141 865000) 0 nil])
([nil nil ((37254 . 37255) 37249) nil (25725 20724 823111 846000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37778 . 37779) (nil fontified nil 37255 . 37779) (37255 . 37779)) nil (25725 20724 823098 861000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -37790) (undo-tree-id2461 . -1) 37791 (37790 . 37791) (t 25725 20724 903690 139000)) nil (25725 20730 198463 840000) 0 nil])
([nil nil ((37790 . 37791)) nil (25725 20730 198449 947000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -37790) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) 37791) nil (25725 20730 198243 502000) 0 nil])
([nil nil ((nil rear-nonsticky nil 38112 . 38113) (nil fontified nil 37790 . 38113) (37790 . 38113) (t 25725 20730 281576 752000)) nil (25725 20756 560316 342000) 0 nil])
([nil nil ((38113 . 38114) 38112) nil (25725 20756 560300 211000) 0 nil])
([nil nil ((38140 . 38144) (t 25725 20756 658985 918000) 38115) nil (25725 20760 873359 136000) 0 nil])
([nil nil ((nil rear-nonsticky nil 38439 . 38440) (nil fontified nil 38144 . 38440) (38144 . 38440) 38143 (t 25725 20760 954318 161000)) nil (25725 21178 785272 369000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -38141) (undo-tree-id2463 . -3) 38144 (38140 . 38144) 38139) nil (25725 21178 785266 642000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 38142)) nil (25725 21178 785258 680000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 38142)) nil (25725 21178 785254 489000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 38142) (undo-tree-id2462 . -1)) nil (25725 21178 785250 229000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . 38396) (38397 . 38402) (#("4" 0 1 (fontified t)) . 38339) (38340 . 38345) (#("4" 0 1 (fontified t)) . 38302) (38303 . 38308) (#("4" 0 1 (fontified t)) . 38250) (38251 . 38256) (#("4" 0 1 (fontified t)) . 38184) (38185 . 38190) (nil fontified t 38146 . 38147) (#("4" 0 1 (fontified t)) . 38142) (38143 . 38148)) nil (25725 21178 785217 822000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -38280) (undo-tree-id3569 . -1) (#("k" 0 1 (fontified t)) . -38281) (undo-tree-id3570 . -1) 38282 (38278 . 38282) (38267 . 38278) (38260 . 38267) (38249 . 38260) (38246 . 38249) (#("d" 0 1 (fontified t)) . -38246) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (#("o" 0 1 (fontified t)) . -38247) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (#("c" 0 1 (fontified t)) . -38248) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) 38249 (38230 . 38249) (38209 . 38230) (38188 . 38209) (38183 . 38188) (t 25725 21178 872997 743000) 38142) nil (25725 21227 363201 23000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -38262) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (#("k" 0 1 (fontified t)) . -38263) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) 38264 (38260 . 38264) (#("I" 0 1 (fontified t)) . -38260) (undo-tree-id3566 . -1) 38261 (38260 . 38261) (#("9" 0 1 (fontified t)) . -38260) (undo-tree-id3567 . -1) (#("0" 0 1 (fontified t)) . -38261) (undo-tree-id3568 . -1) 38262 (38260 . 38262)) nil (25725 21227 363055 823000) 0 nil])
([nil nil ((38282 . 38287) 38261) nil (25725 21227 360335 925000) 0 nil])
([nil nil ((nil rear-nonsticky nil 38351 . 38352) (nil fontified nil 38351 . 38352) (nil fontified nil 38350 . 38351) (nil fontified nil 38342 . 38350) (nil fontified nil 38341 . 38342) (nil fontified nil 38295 . 38341) (38295 . 38352) (38294 . 38295) (38287 . 38294) (t 25725 21227 457279 655000)) nil (25725 21268 2357 837000) 0 nil])
([nil nil ((#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 38320) (undo-tree-id3584 . -15) (undo-tree-id3585 . -15) (undo-tree-id3586 . -15) (undo-tree-id3587 . -15) 38335) nil (25725 21268 2348 688000) 0 nil])
([nil nil ((38335 . 38336) (#("_" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -38335) (undo-tree-id3577 . -1) 38336 (38331 . 38336) (#("d" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -38331) (undo-tree-id3578 . -1) 38332 (38329 . 38332) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -38329) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) 38330 (38322 . 38330) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -38322) (undo-tree-id3581 . -1) (#("l" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -38323) (undo-tree-id3582 . -1) 38324 (38320 . 38324) (#("." 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 38320) (undo-tree-id3583 . 1)) nil (25725 21268 2330 180000) 0 nil])
([nil nil ((38340 . 38341) 38335) nil (25725 21268 2290 301000) 0 nil])
([nil nil ((nil rear-nonsticky nil 38634 . 38635) (nil fontified nil 38341 . 38635) (38341 . 38635)) nil (25725 21268 2276 822000) 0 nil])
([nil nil ((38791 . 38793) (#("d" 0 1 (fontified t)) . -38791) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (#("o" 0 1 (fontified t)) . -38792) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (#("s" 0 1 (fontified t)) . -38793) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) 38794 (38789 . 38794) (38768 . 38789) (38764 . 38768) (#(" " 0 1 (fontified t)) . -38764) (undo-tree-id4334 . -1) (#("s" 0 1 (fontified t)) . -38765) (undo-tree-id4335 . -1) 38766 (38764 . 38766) (#("j" 0 1 (fontified t)) . -38764) (undo-tree-id4336 . -1) 38765 (38760 . 38765) (#("c" 0 1 (fontified t)) . -38760) (undo-tree-id4337 . -1) 38761 (38754 . 38761) (38745 . 38754) (38724 . 38745) (#("ele" 0 3 (fontified nil)) . 38724) (undo-tree-id4338 . -3) (undo-tree-id4339 . -3) (38713 . 38724) 38716 (38701 . 38716) (#("t" 0 1 (fontified t)) . -38701) (undo-tree-id4340 . -1) 38702 (38693 . 38702) (38692 . 38693) (38671 . 38692) (#(" " 0 1 (fontified t)) . -38671) (undo-tree-id4341 . -1) (#("i" 0 1 (fontified t)) . -38672) (undo-tree-id4342 . -1) 38673 (38671 . 38673) (#(" " 0 1 (fontified t)) . -38671) (undo-tree-id4343 . -1) 38672 (38671 . 38672) (#("s" 0 1 (fontified t)) . -38671) (undo-tree-id4344 . -1) 38672 (38663 . 38672) (#("s" 0 1 (fontified nil)) . 38663) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (38655 . 38663) 38656 (38655 . 38656) (#(" " 0 1 (fontified t)) . -38655) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (#("s" 0 1 (fontified t)) . -38656) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (#("e" 0 1 (fontified t)) . -38657) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (#("l" 0 1 (fontified t)) . -38658) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) 38659 (38646 . 38659) (t 25725 21268 89443 425000)) nil (25725 21324 706512 466000) 0 nil])
([nil nil ((38793 . 38794) 38792) nil (25725 21324 704282 580000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -38880) (undo-tree-id4829 . -1) (#("k" 0 1 (fontified t)) . -38881) (undo-tree-id4830 . -1) (#("o" 0 1 (fontified t)) . -38882) (undo-tree-id4831 . -1) 38883 (38870 . 38883) (#("i" 0 1 (fontified t)) . -38870) (undo-tree-id4832 . -1) 38871 (38862 . 38871) (#("t" 0 1 (fontified t)) . -38862) (undo-tree-id4833 . -1) 38863 (38845 . 38863) (38828 . 38845) (#("m" 0 1 (fontified t)) . -38828) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (#("o" 0 1 (fontified t)) . -38829) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) 38830 (38810 . 38830) (#("g" 0 1 (fontified t)) . -38810) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (#("e" 0 1 (fontified t)) . -38811) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) 38812 (38809 . 38812) (38800 . 38809) (38796 . 38800) (#("i" 0 1 (fontified t)) . -38796) (undo-tree-id4842 . -1) (#("t" 0 1 (fontified t)) . -38797) (undo-tree-id4843 . -1) 38798 (38794 . 38798) (t 25725 21324 789596 958000)) nil (25725 21784 22929 920000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -38881) (undo-tree-id4828 . -2) 38883 (38880 . 38883) 38879) nil (25725 21784 22882 566000) 0 nil])
([nil nil ((38981 . 38986) (#("i" 0 1 (fontified t)) . -38981) (undo-tree-id4814 . -1) (#("s" 0 1 (fontified t)) . -38982) (undo-tree-id4815 . -1) (#("n" 0 1 (fontified t)) . -38983) (undo-tree-id4816 . -1) (#("g" 0 1 (fontified t)) . -38984) (undo-tree-id4817 . -1) (#(" " 0 1 (fontified t)) . -38985) (undo-tree-id4818 . -1) 38986 (38976 . 38986) (#("c" 0 1 (fontified t)) . -38976) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (#("d" 0 1 (fontified t)) . -38977) (undo-tree-id4821 . -1) 38978 (38970 . 38978) (#("s" 0 1 (fontified t)) . -38970) (undo-tree-id4822 . -1) (#(" " 0 1 (fontified t)) . -38971) (undo-tree-id4823 . -1) (#("o" 0 1 (fontified t)) . -38972) (undo-tree-id4824 . -1) 38973 (38969 . 38973) (#("s" 0 1 (fontified t)) . -38969) (undo-tree-id4825 . -1) 38970 (38963 . 38970) (#("s" 0 1 (fontified t)) . -38963) (undo-tree-id4826 . -1) (#("c" 0 1 (fontified t)) . -38964) (undo-tree-id4827 . -1) 38965 (38952 . 38965) (38947 . 38952) 38882) nil (25725 21784 22867 969000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -38990) (undo-tree-id4806 . -1) (#("
" 0 1 (fontified t)) . -38991) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (#("*" 0 1 (fontified nil face (bold) font-lock-multiline t org-emphasis t)) . -38992) (undo-tree-id4809 . -1) (#("*" 0 1 (fontified t face (bold) font-lock-multiline t org-emphasis t)) . -38993) (undo-tree-id4810 . -1) (#("*" 0 1 (fontified t face (bold) font-lock-multiline t org-emphasis t)) . -38994) (undo-tree-id4811 . -1) (#("*" 0 1 (fontified t face (bold) font-lock-multiline t org-emphasis t)) . -38995) (undo-tree-id4812 . -1) (#(" " 0 1 (fontified t keymap (keymap) face org-level-4)) . -38996) (undo-tree-id4813 . -1) 38997 (nil fontified t 38996 . 38997) (nil keymap (keymap) 38996 . 38997) (nil face org-level-3 38996 . 38997) (nil fontified t 38995 . 38996) (nil composition (2 1 [10040]) 38995 . 38996) (nil keymap (keymap) 38995 . 38996) (nil face org-level-3 38995 . 38996) (nil fontified t 38993 . 38995) (nil face org-hide 38993 . 38995) (nil keymap (keymap) 38993 . 38995) (#("*** " 0 2 (fontified t face org-hide keymap (keymap)) 2 3 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 3 4 (fontified t keymap (keymap) face org-level-3)) . 38992) (38996 . 39001) (38991 . 38996) (38986 . 38991) 38985) nil (25725 21784 22818 242000) 0 nil])
([nil nil ((nil rear-nonsticky nil 39055 . 39056) (nil fontified nil 38990 . 39056) (38990 . 39056) 38989) nil (25725 21784 22783 879000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 38987)) nil (25725 21784 22778 711000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 38987)) nil (25725 21784 22774 939000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 38987)) nil (25725 21784 22771 28000) 0 nil])
([nil nil (("" . -39031) (39031 . 39032) ("" . -39007) (39007 . 39008) ("" . -38987) (38987 . 38988)) nil (25725 21784 22766 209000) 0 nil])
([nil nil ((nil rear-nonsticky nil 39032 . 39033) (nil fontified nil 39032 . 39033) (39032 . 39033) 39031) nil (25725 21784 22760 552000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t rear-nonsticky t)) . 39032)) nil (25725 21784 22755 802000) 0 nil])
([nil nil ((nil rear-nonsticky nil 39033 . 39034) (nil fontified nil 39033 . 39034) (39033 . 39034) 39032) nil (25725 21784 22751 961000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . 39032) (undo-tree-id4805 . -1)) nil (25725 21784 22746 793000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t rear-nonsticky t)) . 39032)) nil (25725 21784 22740 507000) 0 nil])
([nil nil ((39032 . 39033)) nil (25725 21784 22737 643000) 0 nil])
([nil nil ((nil rear-nonsticky nil 39113 . 39114) (nil fontified nil 39113 . 39114) (nil fontified nil 39112 . 39113) (nil fontified nil 39104 . 39112) (nil fontified nil 39103 . 39104) (nil fontified nil 39057 . 39103) (39057 . 39114) (39056 . 39057) 39032) nil (25725 21784 22733 802000) 0 nil])
([nil nil ((#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 39082) (undo-tree-id4801 . -15) (undo-tree-id4802 . -15) (undo-tree-id4803 . -15) (undo-tree-id4804 . -15) 39097) nil (25725 21784 22725 281000) 0 nil])
([nil nil ((39098 . 39103) (#("n" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -39098) (undo-tree-id4798 . -1) (#("o" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -39099) (undo-tree-id4799 . -1) (#("d" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -39100) (undo-tree-id4800 . -1) 39101 (39082 . 39101)) nil (25725 21784 22710 545000) 0 nil])
([nil nil ((39098 . 39099) (#(")" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -39098) (undo-tree-id4797 . -1) 39099 (39098 . 39099)) nil (25725 21784 22697 554000) 0 nil])
([nil nil ((39096 . 39097) (#(")" 0 1 (font-lock-fontified t fontified nil font-lock-multiline t face org-block-begin-line)) . -39096) 39097 (39096 . 39097)) nil (25725 21784 22688 55000) 0 nil])
([nil nil ((39091 . 39092) (#(")" 0 1 (font-lock-fontified t fontified nil font-lock-multiline t face org-block-begin-line)) . -39091) 39092 (39091 . 39092)) nil (25725 21784 22682 887000) 0 nil])
([nil nil ((39111 . 39112) 39091) nil (25725 21784 22678 68000) 0 nil])
([nil nil ((nil rear-nonsticky nil 39558 . 39559) (nil fontified nil 39112 . 39559) (39112 . 39559)) nil (25725 21784 22673 668000) 0 nil])
([nil nil ((39570 . 39571)) nil (25725 21784 22668 11000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -39570) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) 39571) nil (25725 21784 22583 571000) 0 nil])
([nil nil ((39602 . 39618) (#("node" 0 4 (fontified nil)) . 39602) (undo-tree-id7934 . -4) (undo-tree-id7935 . -4) (39593 . 39602) 39597 (39591 . 39597) (#(" " 0 1 (fontified t)) . -39591) (undo-tree-id7936 . -1) 39592 (39573 . 39592) (#("e" 0 1 (fontified t)) . -39573) (undo-tree-id7937 . -1) (undo-tree-id7938 . -1) 39574 (39573 . 39574) (#("h" 0 1 (fontified t)) . -39573) (undo-tree-id7939 . -1) (#("i" 0 1 (fontified t)) . -39574) (undo-tree-id7940 . -1) (#("e" 0 1 (fontified t)) . -39575) (undo-tree-id7941 . -1) 39576 (39575 . 39576) (#("s" 0 1 (fontified t)) . -39575) (undo-tree-id7942 . -1) (#(" " 0 1 (fontified t)) . -39576) (undo-tree-id7943 . -1) 39577 (39572 . 39577) (#("n" 0 1 (fontified t)) . -39572) (undo-tree-id7944 . -1) (undo-tree-id7945 . -1) (#("o" 0 1 (fontified t)) . -39573) (undo-tree-id7946 . -1) (undo-tree-id7947 . -1) (#("d" 0 1 (fontified t)) . -39574) (undo-tree-id7948 . -1) (undo-tree-id7949 . -1) (#("e" 0 1 (fontified t)) . -39575) (undo-tree-id7950 . -1) (undo-tree-id7951 . -1) 39576 (39571 . 39576) (#("n" 0 1 (fontified t)) . -39571) (undo-tree-id7952 . -1) (undo-tree-id7953 . -1) (#("o" 0 1 (fontified t)) . -39572) (undo-tree-id7954 . -1) (#("d" 0 1 (fontified t)) . -39573) (undo-tree-id7955 . -1) (#("e" 0 1 (fontified t)) . -39574) (undo-tree-id7956 . -1) (#(" " 0 1 (fontified t)) . -39575) (undo-tree-id7957 . -1) 39576 (39570 . 39576) (t 25725 21784 107479 30000)) nil (25725 21932 796160 948000) 0 nil])
([nil nil ((39659 . 39676) (#("a" 0 1 (fontified t)) . -39659) (undo-tree-id7931 . -1) 39660 (39659 . 39660) (39657 . 39659) (39643 . 39657) (39631 . 39643) (39624 . 39631) (39621 . 39624) (#("[" 0 1 (fontified t)) . -39621) (undo-tree-id7932 . -1) (#(" " 0 1 (fontified t)) . -39622) (undo-tree-id7933 . -1) 39623 (39621 . 39623) (39618 . 39621) 39617) nil (25725 21932 796109 405000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -39888) (undo-tree-id7903 . -1) 39889 (39888 . 39889) (39887 . 39888) (39882 . 39887) (39863 . 39882) (39860 . 39863) (39849 . 39860) (#(" " 0 1 (fontified t)) . -39849) (undo-tree-id7904 . -1) 39850 (39849 . 39850) (39838 . 39849) (39834 . 39838) (#("s" 0 1 (fontified t)) . -39834) (undo-tree-id7905 . -1) 39835 (39828 . 39835) (39826 . 39828) (39825 . 39826) (39817 . 39825) (#("o" 0 1 (fontified t)) . -39817) (undo-tree-id7906 . -1) (#("i" 0 1 (fontified t)) . -39818) (undo-tree-id7907 . -1) 39819 (39813 . 39819) (#("e" 0 1 (fontified t)) . -39813) (undo-tree-id7908 . -1) (undo-tree-id7909 . -1) (#("m" 0 1 (fontified t)) . -39814) (undo-tree-id7910 . -1) (#("t" 0 1 (fontified t)) . -39815) (undo-tree-id7911 . -1) 39816 (39795 . 39816) (39774 . 39795) (#("r" 0 1 (fontified t)) . -39774) (undo-tree-id7912 . -1) (undo-tree-id7913 . -1) (#("i" 0 1 (fontified t)) . -39775) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) 39776 (39763 . 39776) (#("e" 0 1 (fontified t)) . -39763) (undo-tree-id7916 . -1) 39764 (39761 . 39764) (39750 . 39761) (39729 . 39750) (#("n" 0 1 (fontified t)) . -39729) (undo-tree-id7917 . -1) (#("e" 0 1 (fontified t)) . -39730) (undo-tree-id7918 . -1) (#("t" 0 1 (fontified t)) . -39731) (undo-tree-id7919 . -1) 39732 (39727 . 39732) (39706 . 39727) (#("f" 0 1 (fontified t)) . -39706) (undo-tree-id7920 . -1) (#("e" 0 1 (fontified t)) . -39707) (undo-tree-id7921 . -1) (#("i" 0 1 (fontified t)) . -39708) (undo-tree-id7922 . -1) 39709 (39706 . 39709) (39685 . 39706) (#("e" 0 1 (fontified t)) . -39685) (undo-tree-id7923 . -1) 39686 (39677 . 39686) (39676 . 39677) (#("-" 0 1 (fontified t)) . -39676) (undo-tree-id7924 . -1) 39677 (39676 . 39677) (#("
" 0 1 (fontified t)) . -39676) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (#(" " 0 1 (fontified t)) . -39677) (undo-tree-id7927 . -1) (#(" " 0 1 (fontified t)) . -39678) (undo-tree-id7928 . -1) (#(" " 0 1 (fontified t)) . -39679) (undo-tree-id7929 . -1) (#(" " 0 1 (fontified t)) . -39680) (undo-tree-id7930 . -1) 39681 (39676 . 39681) 39675) nil (25725 21932 796083 74000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -39927) (undo-tree-id7899 . -1) 39928 (39927 . 39928) (39908 . 39927) (39899 . 39908) (#("i" 0 1 (fontified t)) . -39899) (undo-tree-id7900 . -1) (#(" " 0 1 (fontified t)) . -39900) (undo-tree-id7901 . -1) (#("u" 0 1 (fontified t)) . -39901) (undo-tree-id7902 . -1) 39902 (39889 . 39902) (39888 . 39889) 39887) nil (25725 21932 796014 71000) 0 nil])
([nil nil ((#("Class" 0 5 (fontified t)) . 39918) (undo-tree-id7865 . -4) (undo-tree-id7866 . -4) (undo-tree-id7867 . -4) (undo-tree-id7868 . -5) (undo-tree-id7869 . -4) (undo-tree-id7870 . -3) (undo-tree-id7871 . -4) (undo-tree-id7872 . -4) (undo-tree-id7873 . -4) (undo-tree-id7874 . -4) (undo-tree-id7875 . -4) (undo-tree-id7876 . -4) (undo-tree-id7877 . -4) (undo-tree-id7878 . -4) (undo-tree-id7879 . -4) (undo-tree-id7880 . -4) (undo-tree-id7881 . -4) (undo-tree-id7882 . -4) (undo-tree-id7883 . -4) (undo-tree-id7884 . -4) (undo-tree-id7885 . -4) (undo-tree-id7886 . -4) (undo-tree-id7887 . -4) (undo-tree-id7888 . -4) (undo-tree-id7889 . -4) (undo-tree-id7890 . -4) (undo-tree-id7891 . -4) (undo-tree-id7892 . -4) (undo-tree-id7893 . -4) (undo-tree-id7894 . -4) (undo-tree-id7895 . -4) (undo-tree-id7896 . -4) (undo-tree-id7897 . -5) (undo-tree-id7898 . -5) 39922) nil (25725 21932 795997 518000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -39922) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1) (undo-tree-id7389 . -1) (undo-tree-id7390 . -1) (undo-tree-id7391 . -1) (undo-tree-id7392 . -1) (undo-tree-id7393 . -1) (undo-tree-id7394 . -1) (undo-tree-id7395 . -1) (undo-tree-id7396 . -1) (undo-tree-id7397 . -1) (undo-tree-id7398 . -1) (undo-tree-id7399 . -1) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (undo-tree-id7406 . -1) (undo-tree-id7407 . -1) (undo-tree-id7408 . -1) (undo-tree-id7409 . -1) (undo-tree-id7410 . -1) (undo-tree-id7411 . -1) (undo-tree-id7412 . -1) (undo-tree-id7413 . -1) (undo-tree-id7414 . -1) (undo-tree-id7415 . -1) (undo-tree-id7416 . -1) (undo-tree-id7417 . -1) (undo-tree-id7418 . -1) (undo-tree-id7419 . -1) (undo-tree-id7420 . -1) (undo-tree-id7421 . -1) (undo-tree-id7422 . -1) (undo-tree-id7423 . -1) (undo-tree-id7424 . -1) (undo-tree-id7425 . -1) (undo-tree-id7426 . -1) (undo-tree-id7427 . -1) (undo-tree-id7428 . -1) (undo-tree-id7429 . -1) (undo-tree-id7430 . -1) (undo-tree-id7431 . -1) (undo-tree-id7432 . -1) (undo-tree-id7433 . -1) (undo-tree-id7434 . -1) (undo-tree-id7435 . -1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) (undo-tree-id7438 . -1) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7442 . -1) (undo-tree-id7443 . -1) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) (undo-tree-id7501 . -1) (undo-tree-id7502 . -1) (undo-tree-id7503 . -1) (undo-tree-id7504 . -1) (undo-tree-id7505 . -1) (undo-tree-id7506 . -1) (undo-tree-id7507 . -1) (undo-tree-id7508 . -1) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (undo-tree-id7513 . -1) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) (undo-tree-id7516 . -1) (undo-tree-id7517 . -1) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . -1) (undo-tree-id7522 . -1) (undo-tree-id7523 . -1) (undo-tree-id7524 . -1) (undo-tree-id7525 . -1) (undo-tree-id7526 . -1) (undo-tree-id7527 . -1) (undo-tree-id7528 . -1) (undo-tree-id7529 . -1) (undo-tree-id7530 . -1) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) (undo-tree-id7540 . -1) (undo-tree-id7541 . -1) (undo-tree-id7542 . -1) (undo-tree-id7543 . -1) (undo-tree-id7544 . -1) (undo-tree-id7545 . -1) (undo-tree-id7546 . -1) (undo-tree-id7547 . -1) (undo-tree-id7548 . -1) (undo-tree-id7549 . -1) (undo-tree-id7550 . -1) (undo-tree-id7551 . -1) (undo-tree-id7552 . -1) (undo-tree-id7553 . -1) (undo-tree-id7554 . -1) (undo-tree-id7555 . -1) (undo-tree-id7556 . -1) (undo-tree-id7557 . -1) (undo-tree-id7558 . -1) (undo-tree-id7559 . -1) (undo-tree-id7560 . -1) (undo-tree-id7561 . -1) (undo-tree-id7562 . -1) (undo-tree-id7563 . -1) (undo-tree-id7564 . -1) (undo-tree-id7565 . -1) (undo-tree-id7566 . -1) (undo-tree-id7567 . -1) (undo-tree-id7568 . -1) (undo-tree-id7569 . -1) (undo-tree-id7570 . -1) (undo-tree-id7571 . -1) (undo-tree-id7572 . -1) (undo-tree-id7573 . -1) (undo-tree-id7574 . -1) (undo-tree-id7575 . -1) (undo-tree-id7576 . -1) (undo-tree-id7577 . -1) (undo-tree-id7578 . -1) (undo-tree-id7579 . -1) (undo-tree-id7580 . -1) (undo-tree-id7581 . -1) (undo-tree-id7582 . -1) (undo-tree-id7583 . -1) (undo-tree-id7584 . -1) (undo-tree-id7585 . -1) (undo-tree-id7586 . -1) (undo-tree-id7587 . -1) (undo-tree-id7588 . -1) (undo-tree-id7589 . -1) (undo-tree-id7590 . -1) (undo-tree-id7591 . -1) (undo-tree-id7592 . -1) (undo-tree-id7593 . -1) (undo-tree-id7594 . -1) (undo-tree-id7595 . -1) (undo-tree-id7596 . -1) (undo-tree-id7597 . -1) (undo-tree-id7598 . -1) (undo-tree-id7599 . -1) (undo-tree-id7600 . -1) (undo-tree-id7601 . -1) (undo-tree-id7602 . -1) (undo-tree-id7603 . -1) (undo-tree-id7604 . -1) (undo-tree-id7605 . -1) (undo-tree-id7606 . -1) (undo-tree-id7607 . -1) (undo-tree-id7608 . -1) (undo-tree-id7609 . -1) (undo-tree-id7610 . -1) (undo-tree-id7611 . -1) (undo-tree-id7612 . -1) (undo-tree-id7613 . -1) (undo-tree-id7614 . -1) (undo-tree-id7615 . -1) (undo-tree-id7616 . -1) (undo-tree-id7617 . -1) (undo-tree-id7618 . -1) (undo-tree-id7619 . -1) (undo-tree-id7620 . -1) (undo-tree-id7621 . -1) (undo-tree-id7622 . -1) (undo-tree-id7623 . -1) (undo-tree-id7624 . -1) (undo-tree-id7625 . -1) (undo-tree-id7626 . -1) (undo-tree-id7627 . -1) (undo-tree-id7628 . -1) (undo-tree-id7629 . -1) (undo-tree-id7630 . -1) (undo-tree-id7631 . -1) (undo-tree-id7632 . -1) (undo-tree-id7633 . -1) (undo-tree-id7634 . -1) (undo-tree-id7635 . -1) (undo-tree-id7636 . -1) (undo-tree-id7637 . -1) (undo-tree-id7638 . -1) (undo-tree-id7639 . -1) (undo-tree-id7640 . -1) (undo-tree-id7641 . -1) (undo-tree-id7642 . -1) (undo-tree-id7643 . -1) (undo-tree-id7644 . -1) (undo-tree-id7645 . -1) (undo-tree-id7646 . -1) (undo-tree-id7647 . -1) (undo-tree-id7648 . -1) (undo-tree-id7649 . -1) (undo-tree-id7650 . -1) (undo-tree-id7651 . -1) (undo-tree-id7652 . -1) (undo-tree-id7653 . -1) (undo-tree-id7654 . -1) (undo-tree-id7655 . -1) (undo-tree-id7656 . -1) (undo-tree-id7657 . -1) (undo-tree-id7658 . -1) (undo-tree-id7659 . -1) (undo-tree-id7660 . -1) (undo-tree-id7661 . -1) (undo-tree-id7662 . -1) (undo-tree-id7663 . -1) (undo-tree-id7664 . -1) (undo-tree-id7665 . -1) (undo-tree-id7666 . -1) (undo-tree-id7667 . -1) (undo-tree-id7668 . -1) (undo-tree-id7669 . -1) (undo-tree-id7670 . -1) (undo-tree-id7671 . -1) (undo-tree-id7672 . -1) (undo-tree-id7673 . -1) (undo-tree-id7674 . -1) (undo-tree-id7675 . -1) (undo-tree-id7676 . -1) (undo-tree-id7677 . -1) (undo-tree-id7678 . -1) (undo-tree-id7679 . -1) (undo-tree-id7680 . -1) (undo-tree-id7681 . -1) (undo-tree-id7682 . -1) (undo-tree-id7683 . -1) (undo-tree-id7684 . -1) (undo-tree-id7685 . -1) (undo-tree-id7686 . -1) (undo-tree-id7687 . -1) (undo-tree-id7688 . -1) (undo-tree-id7689 . -1) (undo-tree-id7690 . -1) (undo-tree-id7691 . -1) (undo-tree-id7692 . -1) (undo-tree-id7693 . -1) (undo-tree-id7694 . -1) (undo-tree-id7695 . -1) (undo-tree-id7696 . -1) (undo-tree-id7697 . -1) (undo-tree-id7698 . -1) (undo-tree-id7699 . -1) (undo-tree-id7700 . -1) (undo-tree-id7701 . -1) (undo-tree-id7702 . -1) (undo-tree-id7703 . -1) (undo-tree-id7704 . -1) (undo-tree-id7705 . -1) (undo-tree-id7706 . -1) (undo-tree-id7707 . -1) (undo-tree-id7708 . -1) (undo-tree-id7709 . -1) (undo-tree-id7710 . -1) (undo-tree-id7711 . -1) (undo-tree-id7712 . -1) (undo-tree-id7713 . -1) (undo-tree-id7714 . -1) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1) (undo-tree-id7717 . -1) (undo-tree-id7718 . -1) (undo-tree-id7719 . -1) (undo-tree-id7720 . -1) (undo-tree-id7721 . -1) (undo-tree-id7722 . -1) (undo-tree-id7723 . -1) (undo-tree-id7724 . -1) (undo-tree-id7725 . -1) (undo-tree-id7726 . -1) (undo-tree-id7727 . -1) (undo-tree-id7728 . -1) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) (undo-tree-id7737 . -1) (undo-tree-id7738 . -1) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (undo-tree-id7775 . -1) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) (undo-tree-id7786 . -1) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) (undo-tree-id7796 . -1) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (undo-tree-id7836 . -1) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (undo-tree-id7852 . -1) (undo-tree-id7853 . -1) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) (undo-tree-id7862 . -1) (undo-tree-id7863 . -1) (undo-tree-id7864 . -1) 39923 (39922 . 39923)) nil (25725 21932 896995 939000) 0 nil])
([nil nil ((39922 . 39923) 39921) nil (25725 21934 660177 524000) 0 nil] [nil nil ((#("e" 0 1 (fontified t)) . 39921) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (undo-tree-id6824 . -1) (undo-tree-id6825 . -1) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (undo-tree-id6840 . -1) (undo-tree-id6841 . -1) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) (undo-tree-id6844 . -1) (undo-tree-id6845 . -1) (undo-tree-id6846 . -1) (undo-tree-id6847 . -1) (undo-tree-id6848 . -1) (undo-tree-id6849 . -1) (undo-tree-id6850 . -1) (undo-tree-id6851 . -1) (undo-tree-id6852 . -1) (undo-tree-id6853 . -1) (undo-tree-id6854 . -1) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1)) ((39921 . 39922)) (25725 21932 799661 633000) 0 nil])
([nil nil ((39981 . 39990) (#("=" 0 1 (fontified t)) . -39981) (undo-tree-id7958 . -1) (#("3" 0 1 (fontified t)) . -39982) (undo-tree-id7959 . -1) 39983 (39978 . 39983) (39977 . 39978) (#("n" 0 1 (fontified t)) . -39977) (undo-tree-id7960 . -1) (undo-tree-id7961 . -1) (#("d" 0 1 (fontified t)) . -39978) (undo-tree-id7962 . -1) 39979 (39973 . 39979) (39959 . 39973) (#("u" 0 1 (fontified t)) . -39959) (undo-tree-id7963 . -1) 39960 (39951 . 39960) (39946 . 39951) (39936 . 39946) (#("node" 0 4 (fontified nil)) . 39936) (undo-tree-id7964 . -4) (undo-tree-id7965 . -4) (39927 . 39936) 39931 (39923 . 39931) (t 25725 21934 742017 53000)) nil (25725 21967 994711 530000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 39920) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) (undo-tree-id4923 . -1) (undo-tree-id4924 . -1) (undo-tree-id4925 . -1) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (undo-tree-id4928 . -1) (undo-tree-id4929 . -1) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) (undo-tree-id4963 . -1) (undo-tree-id4964 . -1) (undo-tree-id4965 . -1) (undo-tree-id4966 . -1) (undo-tree-id4967 . -1) (undo-tree-id4968 . -1) (undo-tree-id4969 . -1) (undo-tree-id4970 . -1) (undo-tree-id4971 . -1) (undo-tree-id4972 . -1) (undo-tree-id4973 . -1) (undo-tree-id4974 . -1) (undo-tree-id4975 . -1) (undo-tree-id4976 . -1) (undo-tree-id4977 . -1) (undo-tree-id4978 . -1) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) (undo-tree-id5115 . -1) (undo-tree-id5116 . -1) (undo-tree-id5117 . -1) (undo-tree-id5118 . -1) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) (undo-tree-id5326 . -1) (undo-tree-id5327 . -1) (undo-tree-id5328 . -1) (undo-tree-id5329 . -1) (undo-tree-id5330 . -1) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (undo-tree-id5789 . -1) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1)) ((39920 . 39921)) (25725 21932 792976 18000) 0 nil])
([nil nil ((39990 . 39991) 39989) nil (25725 21967 994148 605000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 40169 . 40170) (nil fontified nil 40169 . 40170) (nil fontified nil 40168 . 40169) (nil fontified nil 40160 . 40168) (nil fontified nil 40159 . 40160) (nil fontified nil 40113 . 40159) (40113 . 40170) (40112 . 40113) (40103 . 40112) (40100 . 40103) (40099 . 40100) (40078 . 40099) (40057 . 40078) (#(" " 0 1 (fontified t)) . -40057) (undo-tree-id8339 . -1) (#("t" 0 1 (fontified t)) . -40058) (undo-tree-id8340 . -1) 40059 (40055 . 40059) (40048 . 40055) (40043 . 40048) (t 25725 21968 82447 988000) 39992) nil (25725 22282 333320 778000) 0 nil])
([nil nil ((#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 40138) (undo-tree-id7966 . -15) (undo-tree-id7967 . -15) (undo-tree-id7968 . -15) (undo-tree-id7969 . -16) (undo-tree-id7970 . -15) (undo-tree-id7971 . -13) (undo-tree-id7972 . -14) (undo-tree-id7973 . -14) (undo-tree-id7974 . -14) (undo-tree-id7975 . -15) (undo-tree-id7976 . -15) (undo-tree-id7977 . -15) (undo-tree-id7978 . -15) (undo-tree-id7979 . -15) (undo-tree-id7980 . -15) (undo-tree-id7981 . -15) (undo-tree-id7982 . -15) (undo-tree-id7983 . -15) (undo-tree-id7984 . -15) (undo-tree-id7985 . -15) (undo-tree-id7986 . -15) (undo-tree-id7987 . -15) (undo-tree-id7988 . -15) (undo-tree-id7989 . -15) (undo-tree-id7990 . -15) (undo-tree-id7991 . -15) (undo-tree-id7992 . -15) (undo-tree-id7993 . -15) (undo-tree-id7994 . -15) (undo-tree-id7995 . -15) (undo-tree-id7996 . -15) (undo-tree-id7997 . -15) (undo-tree-id7998 . -15) (undo-tree-id7999 . -15) (undo-tree-id8000 . -15) (undo-tree-id8001 . -15) (undo-tree-id8002 . -15) (undo-tree-id8003 . -15) (undo-tree-id8004 . -15) (undo-tree-id8005 . -15) (undo-tree-id8006 . -15) (undo-tree-id8007 . -15) (undo-tree-id8008 . -15) (undo-tree-id8009 . -15) (undo-tree-id8010 . -15) (undo-tree-id8011 . -15) (undo-tree-id8012 . -15) (undo-tree-id8013 . -15) (undo-tree-id8014 . -15) (undo-tree-id8015 . -15) (undo-tree-id8016 . -15) (undo-tree-id8017 . -15) (undo-tree-id8018 . -15) (undo-tree-id8019 . -15) (undo-tree-id8020 . -15) (undo-tree-id8021 . -15) (undo-tree-id8022 . -15) (undo-tree-id8023 . -15) (undo-tree-id8024 . -15) (undo-tree-id8025 . -15) (undo-tree-id8026 . -15) (undo-tree-id8027 . -15) (undo-tree-id8028 . -15) (undo-tree-id8029 . -15) (undo-tree-id8030 . -15) (undo-tree-id8031 . -15) (undo-tree-id8032 . -15) (undo-tree-id8033 . -15) (undo-tree-id8034 . -15) (undo-tree-id8035 . -15) (undo-tree-id8036 . -15) (undo-tree-id8037 . -15) (undo-tree-id8038 . -15) (undo-tree-id8039 . -15) (undo-tree-id8040 . -15) (undo-tree-id8041 . -15) (undo-tree-id8042 . -15) (undo-tree-id8043 . -15) (undo-tree-id8044 . -15) (undo-tree-id8045 . -15) (undo-tree-id8046 . -15) (undo-tree-id8047 . -15) (undo-tree-id8048 . -15) (undo-tree-id8049 . -15) (undo-tree-id8050 . -15) (undo-tree-id8051 . -15) (undo-tree-id8052 . -15) (undo-tree-id8053 . -15) (undo-tree-id8054 . -15) (undo-tree-id8055 . -15) (undo-tree-id8056 . -15) (undo-tree-id8057 . -15) (undo-tree-id8058 . -15) (undo-tree-id8059 . -15) (undo-tree-id8060 . -15) (undo-tree-id8061 . -15) (undo-tree-id8062 . -15) (undo-tree-id8063 . -15) (undo-tree-id8064 . -15) (undo-tree-id8065 . -15) (undo-tree-id8066 . -15) (undo-tree-id8067 . -15) (undo-tree-id8068 . -15) (undo-tree-id8069 . -15) (undo-tree-id8070 . -15) (undo-tree-id8071 . -15) (undo-tree-id8072 . -15) (undo-tree-id8073 . -15) (undo-tree-id8074 . -15) (undo-tree-id8075 . -15) (undo-tree-id8076 . -15) (undo-tree-id8077 . -15) (undo-tree-id8078 . -15) (undo-tree-id8079 . -15) (undo-tree-id8080 . -15) (undo-tree-id8081 . -15) (undo-tree-id8082 . -15) (undo-tree-id8083 . -15) (undo-tree-id8084 . -15) (undo-tree-id8085 . -15) (undo-tree-id8086 . -15) (undo-tree-id8087 . -15) (undo-tree-id8088 . -15) (undo-tree-id8089 . -15) (undo-tree-id8090 . -15) (undo-tree-id8091 . -15) (undo-tree-id8092 . -15) (undo-tree-id8093 . -15) (undo-tree-id8094 . -15) (undo-tree-id8095 . -15) (undo-tree-id8096 . -15) (undo-tree-id8097 . -15) (undo-tree-id8098 . -15) (undo-tree-id8099 . -15) (undo-tree-id8100 . -15) (undo-tree-id8101 . -15) (undo-tree-id8102 . -15) (undo-tree-id8103 . -15) (undo-tree-id8104 . -15) (undo-tree-id8105 . -15) (undo-tree-id8106 . -15) (undo-tree-id8107 . -15) (undo-tree-id8108 . -15) (undo-tree-id8109 . -15) (undo-tree-id8110 . -15) (undo-tree-id8111 . -15) (undo-tree-id8112 . -15) (undo-tree-id8113 . -15) (undo-tree-id8114 . -15) (undo-tree-id8115 . -15) (undo-tree-id8116 . -15) (undo-tree-id8117 . -15) (undo-tree-id8118 . -15) (undo-tree-id8119 . -15) (undo-tree-id8120 . -15) (undo-tree-id8121 . -15) (undo-tree-id8122 . -15) (undo-tree-id8123 . -15) (undo-tree-id8124 . -15) (undo-tree-id8125 . -15) (undo-tree-id8126 . -15) (undo-tree-id8127 . -15) (undo-tree-id8128 . -15) (undo-tree-id8129 . -15) (undo-tree-id8130 . -15) (undo-tree-id8131 . -15) (undo-tree-id8132 . -15) (undo-tree-id8133 . -15) (undo-tree-id8134 . -15) (undo-tree-id8135 . -15) (undo-tree-id8136 . -15) (undo-tree-id8137 . -15) (undo-tree-id8138 . -15) (undo-tree-id8139 . -15) (undo-tree-id8140 . -15) (undo-tree-id8141 . -15) (undo-tree-id8142 . -15) (undo-tree-id8143 . -15) (undo-tree-id8144 . -15) (undo-tree-id8145 . -15) (undo-tree-id8146 . -15) (undo-tree-id8147 . -15) (undo-tree-id8148 . -15) (undo-tree-id8149 . -15) (undo-tree-id8150 . -15) (undo-tree-id8151 . -15) (undo-tree-id8152 . -15) (undo-tree-id8153 . -15) (undo-tree-id8154 . -15) (undo-tree-id8155 . -15) (undo-tree-id8156 . -15) (undo-tree-id8157 . -15) (undo-tree-id8158 . -15) (undo-tree-id8159 . -15) (undo-tree-id8160 . -15) (undo-tree-id8161 . -15) (undo-tree-id8162 . -15) (undo-tree-id8163 . -15) (undo-tree-id8164 . -15) (undo-tree-id8165 . -15) (undo-tree-id8166 . -15) (undo-tree-id8167 . -15) (undo-tree-id8168 . -15) (undo-tree-id8169 . -15) (undo-tree-id8170 . -15) (undo-tree-id8171 . -15) (undo-tree-id8172 . -15) (undo-tree-id8173 . -15) (undo-tree-id8174 . -15) (undo-tree-id8175 . -15) (undo-tree-id8176 . -15) (undo-tree-id8177 . -15) (undo-tree-id8178 . -15) (undo-tree-id8179 . -15) (undo-tree-id8180 . -15) (undo-tree-id8181 . -15) (undo-tree-id8182 . -15) (undo-tree-id8183 . -15) (undo-tree-id8184 . -15) (undo-tree-id8185 . -15) (undo-tree-id8186 . -15) (undo-tree-id8187 . -15) (undo-tree-id8188 . -15) (undo-tree-id8189 . -15) (undo-tree-id8190 . -15) (undo-tree-id8191 . -15) (undo-tree-id8192 . -15) (undo-tree-id8193 . -15) (undo-tree-id8194 . -15) (undo-tree-id8195 . -15) (undo-tree-id8196 . -15) (undo-tree-id8197 . -15) (undo-tree-id8198 . -15) (undo-tree-id8199 . -15) (undo-tree-id8200 . -15) (undo-tree-id8201 . -15) (undo-tree-id8202 . -15) (undo-tree-id8203 . -15) (undo-tree-id8204 . -15) (undo-tree-id8205 . -15) (undo-tree-id8206 . -15) (undo-tree-id8207 . -15) (undo-tree-id8208 . -15) (undo-tree-id8209 . -15) (undo-tree-id8210 . -15) (undo-tree-id8211 . -15) (undo-tree-id8212 . -15) (undo-tree-id8213 . -15) (undo-tree-id8214 . -15) (undo-tree-id8215 . -15) (undo-tree-id8216 . -15) (undo-tree-id8217 . -15) (undo-tree-id8218 . -15) (undo-tree-id8219 . -15) (undo-tree-id8220 . -15) (undo-tree-id8221 . -15) (undo-tree-id8222 . -15) (undo-tree-id8223 . -15) (undo-tree-id8224 . -15) (undo-tree-id8225 . -15) (undo-tree-id8226 . -15) (undo-tree-id8227 . -15) (undo-tree-id8228 . -15) (undo-tree-id8229 . -15) (undo-tree-id8230 . -15) (undo-tree-id8231 . -15) (undo-tree-id8232 . -15) (undo-tree-id8233 . -15) (undo-tree-id8234 . -15) (undo-tree-id8235 . -15) (undo-tree-id8236 . -15) (undo-tree-id8237 . -15) (undo-tree-id8238 . -15) (undo-tree-id8239 . -15) (undo-tree-id8240 . -15) (undo-tree-id8241 . -15) (undo-tree-id8242 . -15) (undo-tree-id8243 . -15) (undo-tree-id8244 . -15) (undo-tree-id8245 . -15) (undo-tree-id8246 . -15) (undo-tree-id8247 . -15) (undo-tree-id8248 . -15) (undo-tree-id8249 . -15) (undo-tree-id8250 . -15) (undo-tree-id8251 . -15) (undo-tree-id8252 . -15) (undo-tree-id8253 . -15) (undo-tree-id8254 . -15) (undo-tree-id8255 . -15) (undo-tree-id8256 . -15) (undo-tree-id8257 . -15) (undo-tree-id8258 . -15) (undo-tree-id8259 . -15) (undo-tree-id8260 . -15) (undo-tree-id8261 . -15) (undo-tree-id8262 . -15) (undo-tree-id8263 . -15) (undo-tree-id8264 . -15) (undo-tree-id8265 . -15) (undo-tree-id8266 . -15) (undo-tree-id8267 . -15) (undo-tree-id8268 . -15) (undo-tree-id8269 . -15) (undo-tree-id8270 . -15) (undo-tree-id8271 . -15) (undo-tree-id8272 . -15) (undo-tree-id8273 . -15) (undo-tree-id8274 . -15) (undo-tree-id8275 . -15) (undo-tree-id8276 . -15) (undo-tree-id8277 . -15) (undo-tree-id8278 . -15) (undo-tree-id8279 . -15) (undo-tree-id8280 . -15) (undo-tree-id8281 . -15) (undo-tree-id8282 . -15) (undo-tree-id8283 . -15) (undo-tree-id8284 . -15) (undo-tree-id8285 . -15) (undo-tree-id8286 . -15) (undo-tree-id8287 . -15) (undo-tree-id8288 . -15) (undo-tree-id8289 . -15) (undo-tree-id8290 . -15) (undo-tree-id8291 . -15) (undo-tree-id8292 . -15) (undo-tree-id8293 . -15) (undo-tree-id8294 . -15) (undo-tree-id8295 . -15) (undo-tree-id8296 . -15) (undo-tree-id8297 . -15) (undo-tree-id8298 . -15) (undo-tree-id8299 . -15) (undo-tree-id8300 . -15) (undo-tree-id8301 . -15) (undo-tree-id8302 . -15) (undo-tree-id8303 . -15) (undo-tree-id8304 . -15) (undo-tree-id8305 . -15) (undo-tree-id8306 . -15) (undo-tree-id8307 . -15) (undo-tree-id8308 . -15) (undo-tree-id8309 . -15) (undo-tree-id8310 . -15) (undo-tree-id8311 . -15) (undo-tree-id8312 . -15) (undo-tree-id8313 . -15) (undo-tree-id8314 . -15) (undo-tree-id8315 . -15) (undo-tree-id8316 . -15) (undo-tree-id8317 . -15) (undo-tree-id8318 . -15) (undo-tree-id8319 . -15) (undo-tree-id8320 . -15) (undo-tree-id8321 . -15) (undo-tree-id8322 . -15) (undo-tree-id8323 . -15) (undo-tree-id8324 . -15) (undo-tree-id8325 . -15) (undo-tree-id8326 . -15) (undo-tree-id8327 . -15) (undo-tree-id8328 . -15) (undo-tree-id8329 . -15) (undo-tree-id8330 . -15) (undo-tree-id8331 . -15) (undo-tree-id8332 . -15) (undo-tree-id8333 . -15) (undo-tree-id8334 . -15) (undo-tree-id8335 . -15) (undo-tree-id8336 . -15) (undo-tree-id8337 . -16) (undo-tree-id8338 . -16) 40153) nil (25725 22282 333247 165000) 0 nil])
([nil nil ((40159 . 40163) (40138 . 40159)) nil (25725 22282 331314 304000) 0 nil])
([nil nil ((40168 . 40169) 40162) nil (25725 22282 331309 974000) 0 nil])
([nil nil ((nil rear-nonsticky nil 40458 . 40459) (nil fontified nil 40169 . 40459) (40169 . 40459)) nil (25725 22282 331296 774000) 0 nil])
([nil nil ((40507 . 40512) (t 25725 22282 421255 82000) 40471) nil (25725 22338 435237 166000) 0 nil])
([nil nil ((40511 . 40515) (t 25725 22338 525613 782000)) nil (25725 22650 456616 192000) 0 nil])
([nil nil ((nil rear-nonsticky nil 40659 . 40660) (nil fontified nil 40515 . 40660) (40515 . 40660) 40514) nil (25725 22650 456612 1000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t rear-nonsticky t)) . 40659)) nil (25725 22650 456606 833000) 0 nil])
([nil nil ((40695 . 40707) (#("o" 0 1 (fontified t)) . -40695) (undo-tree-id8341 . -1) (undo-tree-id8342 . -1) (#("r" 0 1 (fontified t)) . -40696) (undo-tree-id8343 . -1) (undo-tree-id8344 . -1) (#("m" 0 1 (fontified t)) . -40697) (undo-tree-id8345 . -1) (#(" " 0 1 (fontified t)) . -40698) (undo-tree-id8346 . -1) 40699 (40685 . 40699) (40664 . 40685) (40660 . 40664) 40659) nil (25725 22650 456868 606000) 0 nil])
([nil nil ((40707 . 40711) 40670) nil (25725 23777 785598 587000) 0 nil] [nil nil ((#("e" 0 1 (fontified t)) . 40670)) ((40670 . 40671)) (25725 22650 456556 197000) 0 nil])
([nil nil ((nil rear-nonsticky nil 40767 . 40768) (nil fontified nil 40767 . 40768) (nil fontified nil 40766 . 40767) (nil fontified nil 40758 . 40766) (nil fontified nil 40757 . 40758) (nil fontified nil 40711 . 40757) (40711 . 40768) (#("u" 0 1 (fontified t font-lock-fontified t)) . -40711) (undo-tree-id8363 . -1) 40712 (40711 . 40712) (t 25725 22653 52464 919000)) nil (25725 23844 672857 611000) 0 nil] [nil nil ((#("k" 0 1 (fontified t)) . -40768) (undo-tree-id8347 . -1) (#("k" 0 1 (fontified t)) . -40769) (undo-tree-id8348 . -1) 40770 (40768 . 40770) (nil rear-nonsticky nil 40767 . 40768) (nil fontified nil 40767 . 40768) (nil fontified nil 40766 . 40767) (nil fontified nil 40758 . 40766) (nil fontified nil 40757 . 40758) (nil fontified nil 40711 . 40757) (40711 . 40768) (t 25725 22653 52464 919000)) ((#("#+BEGIN_SRC html :tangle creatingelements.html
#+END_SRC
" 0 46 (font-lock-fontified t fontified nil font-lock-multiline t face org-block-begin-line) 46 47 (rear-nonsticky t font-lock-fontified t fontified nil font-lock-multiline t face org-block-begin-line) 47 55 (font-lock-fontified t fontified nil font-lock-multiline t face org-block-end-line) 55 56 (font-lock-fontified t fontified nil font-lock-multiline t face org-block-end-line) 56 57 (fontified nil rear-nonsticky nil face org-block-end-line)) . 40711) (undo-tree-id8349 . -47) (undo-tree-id8350 . -25) (undo-tree-id8351 . -25) (undo-tree-id8352 . -25) (undo-tree-id8353 . -25) (nil rear-nonsticky t 40767 . 40768) (#("kk" 0 1 (fontified nil) 1 2 (fontified nil)) . 40768) (40768 . 40770)) (25725 23777 783792 900000) 0 nil])
nil
([nil nil ((#("k" 0 1 (fontified t)) . -40769) (undo-tree-id8362 . -1) 40770 (40769 . 40770) (40768 . 40769) 40768) nil (25725 23844 672845 668000) 0 nil])
nil
([nil nil ((40754 . 40762) (#("l" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -40754) (undo-tree-id8355 . -1) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -40755) (undo-tree-id8356 . -1) 40756 (40753 . 40756) (#("s" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -40753) (undo-tree-id8357 . -1) 40754 (40736 . 40754) (#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 40736) (undo-tree-id8358 . -15) (undo-tree-id8359 . -15) (undo-tree-id8360 . -15) (undo-tree-id8361 . -15) 40751) nil (25725 23844 672833 795000) 0 nil])
([nil nil ((40753 . 40754)) nil (25725 23844 672807 464000) 0 nil])
([nil nil ((40746 . 40747)) nil (25725 23844 672803 693000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -40770) (undo-tree-id8354 . -3) 40773 (40769 . 40773) 40746) nil (25725 23844 672798 106000) 0 nil])
([nil nil ((nil rear-nonsticky nil 41343 . 41344) (nil fontified nil 40770 . 41344) (40770 . 41344)) nil (25725 23844 672767 794000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -41355) (undo-tree-id8385 . -1) (#("k" 0 1 (fontified t)) . -41356) (undo-tree-id8386 . -1) 41357 (41355 . 41357) (t 25725 23844 765662 15000)) nil (25725 23905 315853 588000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -41406) (undo-tree-id8364 . -1) (#("n" 0 1 (fontified t)) . -41407) (undo-tree-id8365 . -1) (#("s" 0 1 (fontified t)) . -41408) (undo-tree-id8366 . -1) (#("e" 0 1 (fontified t)) . -41409) (undo-tree-id8367 . -1) (#("r" 0 1 (fontified t)) . -41410) (undo-tree-id8368 . -1) (#("t" 0 1 (fontified t)) . -41411) (undo-tree-id8369 . -1) 41412 (nil fontified t 41405 . 41412) (#("normal " 0 7 (fontified t)) . -41399) (41406 . 41419) 41406 (#("i" 0 1 (fontified t)) . -41406) (undo-tree-id8370 . -1) (#("n" 0 1 (fontified t)) . -41407) (undo-tree-id8371 . -1) (#("s" 0 1 (fontified t)) . -41408) (undo-tree-id8372 . -1) (#("e" 0 1 (fontified t)) . -41409) (undo-tree-id8373 . -1) (#("r" 0 1 (fontified t)) . -41410) (undo-tree-id8374 . -1) (#("t" 0 1 (fontified t)) . -41411) (undo-tree-id8375 . -1) 41412 (nil fontified t 41405 . 41412) (#("normal " 0 7 (fontified t)) . -41399) (41406 . 41419) 41406 (#("i" 0 1 (fontified t)) . -41406) (undo-tree-id8376 . -1) (#("n" 0 1 (fontified t)) . -41407) (undo-tree-id8377 . -1) (#("s" 0 1 (fontified t)) . -41408) (undo-tree-id8378 . -1) (#("e" 0 1 (fontified t)) . -41409) (undo-tree-id8379 . -1) (#("r" 0 1 (fontified t)) . -41410) (undo-tree-id8380 . -1) (#("t" 0 1 (fontified t)) . -41411) (undo-tree-id8381 . -1) 41412 (#("normal " 0 7 (fontified t)) . -41399) (41406 . 41419) 41406 (#("{" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -41406) (undo-tree-id8382 . -1) 41407 (41406 . 41407) (#("{" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -41406) (undo-tree-id8383 . -1) 41407 (41406 . 41407) (#("P" 0 1 (fontified t)) . -41406) (undo-tree-id8384 . -1) 41407 (41397 . 41407) (41376 . 41397) (41355 . 41376)) nil (25725 23905 315828 26000) 0 nil])
([nil nil ((41426 . 41447) (41405 . 41426)) nil (25725 23905 315748 127000) 0 nil])
([nil nil ((41506 . 41511) 41505) nil (25725 23905 315735 695000) 0 nil])
([nil nil ((41540 . 41541) (41530 . 41540) (#("a" 0 1 (fontified t)) . -41530) (undo-tree-id8391 . -1) (undo-tree-id8392 . -1) 41531 (41511 . 41531) (t 25725 23905 402276 396000)) nil (25725 23983 81736 460000) 0 nil])
([nil nil ((nil rear-nonsticky nil 41871 . 41872) (nil fontified nil 41541 . 41872) (41541 . 41872)) nil (25725 23983 81726 543000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -41988) (undo-tree-id8390 . -3) 41991 (41987 . 41991) 41986) nil (25725 23983 81720 746000) 0 nil])
([nil nil ((41872 . 41873) 41803) nil (25725 23983 81713 133000) 0 nil])
([nil nil ((42026 . 42028) (#("s" 0 1 (fontified t)) . -42026) (undo-tree-id8387 . -1) 42027 (42026 . 42027) (42022 . 42026) (#("i" 0 1 (fontified t)) . -42022) (undo-tree-id8388 . -1) 42023 (42012 . 42023) (42009 . 42012) (41988 . 42009) (#(" " 0 1 (fontified t)) . -41988) (undo-tree-id8389 . -1) 41989 (41988 . 41989) (41967 . 41988) (41966 . 41967) (41954 . 41966) (41945 . 41954) (41940 . 41945) 41874) nil (25725 23983 81699 374000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t)) . -42081) (undo-tree-id8396 . -1) 42082 (42080 . 42082) (42077 . 42080) (t 25725 23983 171041 45000)) nil (25725 24065 889698 324000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -42082) (undo-tree-id8395 . -3) 42085 (42081 . 42085) 42080) nil (25725 24065 889688 895000) 0 nil])
([nil nil ((nil rear-nonsticky nil 42411 . 42412) (nil fontified nil 42081 . 42412) (42081 . 42412) 42080) nil (25725 24065 890498 569000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 42077)) nil (25725 24085 894904 481000) 0 nil] [nil nil ((42382 . 42384) (#("t" 0 1 (fontified t)) . -42382) (undo-tree-id8393 . -1) (undo-tree-id8394 . -1) 42383 (42413 . 42415) (42412 . 42413) 42343) ((#("
" 0 1 (fontified nil)) . 42412) (undo-tree-id8397 . -1) (#("hj" 0 2 (fontified t)) . 42413) (42382 . 42383) (#("jk" 0 2 (fontified t)) . 42382) (undo-tree-id8398 . -1) (undo-tree-id8399 . -1) (undo-tree-id8400 . -1)) (25725 24065 889665 498000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 42077)) nil (25725 24085 894900 81000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . 42077) (undo-tree-id8419 . -1) (undo-tree-id8420 . -1) (undo-tree-id8421 . -1) (undo-tree-id8422 . -1) (undo-tree-id8423 . -1) (undo-tree-id8424 . -1) (undo-tree-id8425 . -1)) nil (25725 24085 894893 446000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t)) . 42077) (undo-tree-id8418 . -1)) nil (25725 24085 894760 538000) 0 nil])
([nil nil ((#("document.all - all elements in HTML document
document.forms - all <form> elements in HTML document
document.images - all <img> elements in HTML document
document.links - all <a> elements in HTML document
document.scripts - all <script> elements in HTML document
document.styleSheets - all <link> or <style> objects in HTML document
" 0 1 (fontified t) 1 66 (fontified t) 66 67 (fontified t face (rainbow-delimiters-unmatched-face)) 67 71 (fontified t) 71 72 (fontified t face (rainbow-delimiters-unmatched-face)) 72 121 (fontified t) 121 122 (fontified t face (rainbow-delimiters-unmatched-face)) 122 125 (fontified t) 125 126 (fontified t face (rainbow-delimiters-unmatched-face)) 126 174 (fontified t) 174 175 (fontified t face (rainbow-delimiters-unmatched-face)) 175 176 (fontified t) 176 177 (fontified t face (rainbow-delimiters-unmatched-face)) 177 227 (fontified t) 227 228 (fontified t face (rainbow-delimiters-unmatched-face)) 228 234 (fontified t) 234 235 (fontified t face (rainbow-delimiters-unmatched-face)) 235 262 (fontified t) 262 289 (fontified t) 289 290 (fontified t face (rainbow-delimiters-unmatched-face)) 290 294 (fontified t) 294 295 (fontified t face (rainbow-delimiters-unmatched-face)) 295 299 (fontified t) 299 300 (fontified t face (rainbow-delimiters-unmatched-face)) 300 301 (fontified t) 301 302 (fontified t) 302 305 (fontified t) 305 306 (fontified t face (rainbow-delimiters-unmatched-face)) 306 330 (fontified t) 330 331 (fontified t rear-nonsticky t) 331 332 (fontified t)) . 42077) (undo-tree-id8401 . -262) (undo-tree-id8402 . -331) (undo-tree-id8403 . 30) (undo-tree-id8404 . -262) (undo-tree-id8405 . -332) (undo-tree-id8406 . -332) (undo-tree-id8407 . -330) (undo-tree-id8408 . -330) (undo-tree-id8409 . -330) (undo-tree-id8410 . -262) (undo-tree-id8411 . -262) (undo-tree-id8412 . -262) (undo-tree-id8413 . -262) (undo-tree-id8414 . -262) (undo-tree-id8415 . -302) (undo-tree-id8416 . -262) (undo-tree-id8417 . -262) 42339) nil (25725 24085 894745 382000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -42077) (undo-tree-id8431 . -1) (#("p" 0 1 (fontified t)) . -42078) (undo-tree-id8432 . -1) 42079 (42077 . 42079) (t 25725 24086 17 679000)) nil (25725 24151 944681 612000) 0 nil])
([nil nil ((nil rear-nonsticky nil 42819 . 42820) (nil fontified nil 42077 . 42820) (42077 . 42820)) nil (25725 24151 944671 136000) 0 nil])
([nil nil (("" . -42856) (42856 . 42860) ("" . -42794) (42794 . 42798) ("" . -42699) (42699 . 42703) ("" . -42609) (42609 . 42613) ("" . -42520) (42520 . 42524) ("" . -42433) (42433 . 42437) ("" . -42355) (42355 . 42359) ("" . -42225) (42225 . 42229) ("" . -42136) (42136 . 42140) ("" . -42077) (42077 . 42081)) nil (25725 24151 944663 174000) 0 nil])
([nil nil ((#("*** 
" 0 2 (fontified t face org-hide keymap (keymap)) 2 3 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 3 4 (fontified t keymap (keymap) face org-level-3) 4 5 (fontified t)) . 42856) (undo-tree-id8426 . -5) (undo-tree-id8427 . -4) (undo-tree-id8428 . 1) (undo-tree-id8429 . -5) (undo-tree-id8430 . -4)) nil (25725 24151 944647 809000) 0 nil])
([nil nil ((42855 . 42860) 42794) nil (25725 24151 944589 561000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -42308) (undo-tree-id8532 . -1) (undo-tree-id8533 . -1) (#("o" 0 1 (fontified t)) . -42309) (undo-tree-id8534 . -1) (undo-tree-id8535 . -1) (#("t" 0 1 (fontified t)) . -42310) (undo-tree-id8536 . -1) (undo-tree-id8537 . -1) (#(" " 0 1 (fontified t)) . -42311) (undo-tree-id8538 . -1) (#("r" 0 1 (fontified t)) . -42312) (undo-tree-id8539 . -1) 42313 (42308 . 42313) (#("geomet" 0 6 (fontified nil)) . 42308) (undo-tree-id8540 . -6) (undo-tree-id8541 . -6) (42300 . 42308) 42306 (42303 . 42306) (#("r" 0 1 (fontified t)) . -42303) (undo-tree-id8542 . -1) 42304 (42294 . 42304) (#(" " 0 1 (fontified t)) . -42294) (undo-tree-id8543 . -1) (#("f" 0 1 (fontified t)) . -42295) (undo-tree-id8544 . -1) 42296 (42292 . 42296) (42271 . 42292) (42264 . 42271) (#("o" 0 1 (fontified t)) . -42264) (undo-tree-id8545 . -1) (#("r" 0 1 (fontified t)) . -42265) (undo-tree-id8546 . -1) 42266 (42258 . 42266) (42237 . 42258) (#("h" 0 1 (fontified t)) . -42237) (undo-tree-id8547 . -1) 42238 (42225 . 42238) (42224 . 42225) (#("S" 0 1 (fontified t)) . -42224) (undo-tree-id8548 . -1) (undo-tree-id8549 . -1) (#("t" 0 1 (fontified t)) . -42225) (undo-tree-id8550 . -1) (undo-tree-id8551 . -1) (#("r" 0 1 (fontified t)) . -42226) (undo-tree-id8552 . -1) (undo-tree-id8553 . -1) (#("i" 0 1 (fontified t)) . -42227) (undo-tree-id8554 . -1) (undo-tree-id8555 . -1) (#("n" 0 1 (fontified t)) . -42228) (undo-tree-id8556 . -1) (undo-tree-id8557 . -1) (#("g" 0 1 (fontified t)) . -42229) (undo-tree-id8558 . -1) (undo-tree-id8559 . -1) (#("M" 0 1 (fontified t)) . -42230) (undo-tree-id8560 . -1) (undo-tree-id8561 . -1) (#("a" 0 1 (fontified t)) . -42231) (undo-tree-id8562 . -1) (undo-tree-id8563 . -1) (#("p" 0 1 (fontified t)) . -42232) (undo-tree-id8564 . -1) (undo-tree-id8565 . -1) 42233 (#("dom" 0 3 (fontified nil)) . 42233) (undo-tree-id8566 . -3) (undo-tree-id8567 . -3) (42221 . 42233) 42224 (42219 . 42224) (#(" " 0 1 (fontified t)) . -42219) (undo-tree-id8568 . -1) (#("d" 0 1 (fontified t)) . -42220) (undo-tree-id8569 . -1) 42221 (42202 . 42221) (#("p" 0 1 (fontified t)) . -42202) (undo-tree-id8570 . -1) 42203 (42183 . 42203) (#("s" 0 1 (fontified t)) . -42183) (undo-tree-id8571 . -1) (undo-tree-id8572 . -1) (#("e" 0 1 (fontified t)) . -42184) (undo-tree-id8573 . -1) (undo-tree-id8574 . -1) 42185 (42181 . 42185) (42170 . 42181) (#("r" 0 1 (fontified t)) . -42170) (undo-tree-id8575 . -1) 42171 (42158 . 42171) (#("e" 0 1 (fontified t)) . -42158) (undo-tree-id8576 . -1) 42159 (42140 . 42159) (42135 . 42140) (t 25725 24152 36627 278000) 42079) nil (25725 25079 824796 257000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -42353) (undo-tree-id8508 . -1) (#("k" 0 1 (fontified t)) . -42354) (undo-tree-id8509 . -1) (#("o" 0 1 (fontified t)) . -42355) (undo-tree-id8510 . -1) 42356 (42347 . 42356) (#("n" 0 1 (fontified t)) . -42347) (undo-tree-id8511 . -1) (undo-tree-id8512 . -1) (#("o" 0 1 (fontified t)) . -42348) (undo-tree-id8513 . -1) (undo-tree-id8514 . -1) 42349 (42345 . 42349) (42340 . 42345) (#("m" 0 1 (fontified t)) . -42340) (undo-tree-id8515 . -1) 42341 (42339 . 42341) (#("O" 0 1 (fontified t)) . -42339) (undo-tree-id8516 . -1) (#("M" 0 1 (fontified t)) . -42340) (undo-tree-id8517 . -1) (#(" " 0 1 (fontified t)) . -42341) (undo-tree-id8518 . -1) 42342 (42336 . 42342) (42327 . 42336) (#("s" 0 1 (fontified t)) . -42327) (undo-tree-id8519 . -1) (#("g" 0 1 (fontified t)) . -42328) (undo-tree-id8520 . -1) (#("i" 0 1 (fontified t)) . -42329) (undo-tree-id8521 . -1) (#("v" 0 1 (fontified t)) . -42330) (undo-tree-id8522 . -1) (#("e" 0 1 (fontified t)) . -42331) (undo-tree-id8523 . -1) 42332 (42325 . 42332) (#(" " 0 1 (fontified t)) . -42325) (undo-tree-id8524 . -1) (#("s" 0 1 (fontified t)) . -42326) (undo-tree-id8525 . -1) (#(" " 0 1 (fontified t)) . -42327) (undo-tree-id8526 . -1) (#("g" 0 1 (fontified t)) . -42328) (undo-tree-id8527 . -1) 42329 (42324 . 42329) (42303 . 42324) (#("n" 0 1 (fontified t)) . -42303) (undo-tree-id8528 . -1) 42304 (42300 . 42304) (#("Geometry" 0 8 (fontified t)) . 42300) (undo-tree-id8529 . -7) (undo-tree-id8530 . -8) (undo-tree-id8531 . -5) 42305) nil (25725 25079 824409 258000) 0 nil])
([nil nil ((42362 . 42379) (42354 . 42362) (42353 . 42354) 42352) nil (25725 25079 823936 4000) 0 nil])
([nil nil ((42642 . 42644) (#("u" 0 1 (fontified t)) . -42642) (undo-tree-id8433 . -1) (undo-tree-id8434 . -1) 42643 (42634 . 42643) (42629 . 42634) (#("w" 0 1 (fontified t)) . -42629) (undo-tree-id8435 . -1) 42630 (42619 . 42630) (#("e" 0 1 (fontified t)) . -42619) (undo-tree-id8436 . -1) (#("u" 0 1 (fontified t)) . -42620) (undo-tree-id8437 . -1) 42621 (42618 . 42621) (#("u" 0 1 (fontified t)) . -42618) (undo-tree-id8438 . -1) (#("e" 0 1 (fontified t)) . -42619) (undo-tree-id8439 . -1) 42620 (42611 . 42620) (#("i" 0 1 (fontified t)) . -42611) (undo-tree-id8440 . -1) (#("t" 0 1 (fontified t)) . -42612) (undo-tree-id8441 . -1) 42613 (42609 . 42613) (#("i" 0 1 (fontified t)) . -42609) (undo-tree-id8442 . -1) (undo-tree-id8443 . -1) (#("t" 0 1 (fontified t)) . -42610) (undo-tree-id8444 . -1) (#("i" 0 1 (fontified t)) . -42611) (undo-tree-id8445 . -1) (#("o" 0 1 (fontified t)) . -42612) (undo-tree-id8446 . -1) (#("n" 0 1 (fontified t)) . -42613) (undo-tree-id8447 . -1) 42614 (42603 . 42614) (42602 . 42603) (42597 . 42602) (#("u" 0 1 (fontified t)) . -42597) (undo-tree-id8448 . -1) 42598 (42586 . 42598) (#("t" 0 1 (fontified t)) . -42586) (undo-tree-id8449 . -1) 42587 (42571 . 42587) (#("d" 0 1 (fontified t)) . -42571) (undo-tree-id8450 . -1) (#(" " 0 1 (fontified t)) . -42572) (undo-tree-id8451 . -1) 42573 (42563 . 42573) (#("i" 0 1 (fontified t)) . -42563) (undo-tree-id8452 . -1) 42564 (42559 . 42564) (#("t" 0 1 (fontified t)) . -42559) (undo-tree-id8453 . -1) (undo-tree-id8454 . -1) (#("h" 0 1 (fontified t)) . -42560) (undo-tree-id8455 . -1) (undo-tree-id8456 . -1) 42561 (42559 . 42561) (#("a" 0 1 (fontified t)) . -42559) (undo-tree-id8457 . -1) (undo-tree-id8458 . -1) (#("f" 0 1 (fontified t)) . -42560) (undo-tree-id8459 . -1) (undo-tree-id8460 . -1) (#("f" 0 1 (fontified t)) . -42561) (undo-tree-id8461 . -1) 42562 (42559 . 42562) (42558 . 42559) (42557 . 42558) (#("offsetParent" 0 12 (fontified nil)) . 42557) (undo-tree-id8462 . -12) (undo-tree-id8463 . -12) (undo-tree-id8464 . -12) (42547 . 42557) 42559 (#("offset" 0 6 (fontified nil)) . 42559) (undo-tree-id8465 . -6) (undo-tree-id8466 . -6) (undo-tree-id8467 . -6) (42547 . 42559) 42553 (#("offsetTop" 0 9 (fontified nil)) . 42553) (undo-tree-id8468 . -9) (undo-tree-id8469 . -9) (undo-tree-id8470 . -9) (42547 . 42553) 42556 (#("of" 0 2 (fontified nil)) . 42556) (undo-tree-id8471 . -2) (undo-tree-id8472 . -2) (undo-tree-id8473 . -2) (42547 . 42556) 42549 (#("offsets" 0 7 (fontified nil)) . 42549) (undo-tree-id8474 . -7) (undo-tree-id8475 . -7) (undo-tree-id8476 . -7) (42547 . 42549) 42554 (#("offsetLeft" 0 10 (fontified nil)) . 42554) (undo-tree-id8477 . -10) (undo-tree-id8478 . -10) (undo-tree-id8479 . -10) (42547 . 42554) 42557 (#("offsetParent" 0 12 (fontified nil)) . 42557) (undo-tree-id8480 . -12) (undo-tree-id8481 . -12) (undo-tree-id8482 . -12) (42547 . 42557) 42559 (#("offset" 0 6 (fontified nil)) . 42559) (undo-tree-id8483 . -6) (undo-tree-id8484 . -6) (undo-tree-id8485 . -6) (42547 . 42559) 42553 (#("offsetTop" 0 9 (fontified nil)) . 42553) (undo-tree-id8486 . -9) (undo-tree-id8487 . -9) (undo-tree-id8488 . -9) (42547 . 42553) 42556 (#("of" 0 2 (fontified nil)) . 42556) (undo-tree-id8489 . -2) (undo-tree-id8490 . -2) (undo-tree-id8491 . -2) (42547 . 42556) 42549 (42547 . 42549) (42542 . 42547) (#("offsetT" 0 7 (fontified nil)) . 42542) (undo-tree-id8492 . -3) (undo-tree-id8493 . -7) (undo-tree-id8494 . -7) (42533 . 42542) 42540 (42539 . 42540) (42536 . 42539) (42530 . 42536) (#("n" 0 1 (fontified t)) . -42530) (undo-tree-id8495 . -1) (#(" " 0 1 (fontified t)) . -42531) (undo-tree-id8496 . -1) (#("g" 0 1 (fontified t)) . -42532) (undo-tree-id8497 . -1) 42533 (42529 . 42533) (42518 . 42529) (#(" " 0 1 (fontified t)) . -42518) (undo-tree-id8498 . -1) 42519 (42511 . 42519) (42490 . 42511) (#("e" 0 1 (fontified t)) . -42490) (undo-tree-id8499 . -1) 42491 (42488 . 42491) (#("n" 0 1 (fontified t)) . -42488) (undo-tree-id8500 . -1) 42489 (42477 . 42489) (#("o" 0 1 (fontified t)) . -42477) (undo-tree-id8501 . -1) (#("n" 0 1 (fontified t)) . -42478) (undo-tree-id8502 . -1) (#("t" 0 1 (fontified t)) . -42479) (undo-tree-id8503 . -1) (#("e" 0 1 (fontified t)) . -42480) (undo-tree-id8504 . -1) (#("n" 0 1 (fontified t)) . -42481) (undo-tree-id8505 . -1) (#("t" 0 1 (fontified t)) . -42482) (undo-tree-id8506 . -1) (#(" " 0 1 (fontified t)) . -42483) (undo-tree-id8507 . -1) 42484 (42483 . 42484) (#("c" 0 1 (fontified t)) . -42476) (42477 . 42484) 42477 (42473 . 42477) (42468 . 42473) 42400) nil (25725 25079 823887 463000) 0 nil])
([nil nil ((42644 . 42645) 42643) nil (25725 25079 823010 448000) 0 nil])
([nil nil ((nil rear-nonsticky nil 42701 . 42702) (nil fontified nil 42701 . 42702) (nil fontified nil 42700 . 42701) (nil fontified nil 42692 . 42700) (nil fontified nil 42691 . 42692) (nil fontified nil 42645 . 42691) (42645 . 42702) (t 25725 25079 914864 103000)) nil (25725 25106 613311 456000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -42676) (undo-tree-id8577 . -1) 42677 (42676 . 42677) (42673 . 42676) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -42673) (undo-tree-id8578 . -1) 42674 (42670 . 42674) (#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 42670) (undo-tree-id8579 . -15) (undo-tree-id8580 . -15) (undo-tree-id8581 . -15) (undo-tree-id8582 . -15) 42685) nil (25725 25106 613300 630000) 0 nil])
([nil nil ((42681 . 42682) 42675) nil (25725 25106 613261 518000) 0 nil])
([nil nil ((nil rear-nonsticky nil 43193 . 43194) (nil fontified nil 42682 . 43194) (42682 . 43194)) nil (25725 25106 613247 620000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -43200) (undo-tree-id8583 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -43201) (undo-tree-id8584 . -1) 43202 (43200 . 43202) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -43200) (undo-tree-id8585 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -43201) (undo-tree-id8586 . -1) 43202 (43200 . 43202) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -43200) (undo-tree-id8587 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -43201) (undo-tree-id8588 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -43202) (undo-tree-id8589 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -43203) (undo-tree-id8590 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -43204) (undo-tree-id8591 . -1) 43205 (43200 . 43205) (42682 . 43233) (#("<!DOCTYPE html>
<html lang=\"en\">
<head>
<style>
body{margin:0;}
#blue{height:100px;width:100px;background-color:blue;border:10px solid gray; padding:25px;margin:25px;}
#red{height:50px;width:50px;background-color:red;border:10px solid gray;}
</style>
</head>
<body>

<div id=\"blue\"><div id=\"red\"></div></div>

<script>

var div = document.querySelector('#red'); 

console.log(div.offsetLeft); //logs 60
console.log(div.offsetTop); //logs 60
console.log(div.offsetParent); //logs <body>

</script>
</body>
</html>
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 1 9 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9 14 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 14 15 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 15 16 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 16 17 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 17 21 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 21 22 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 22 26 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 26 27 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 27 31 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 31 32 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 32 33 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 33 34 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 34 38 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 38 39 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 39 40 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 40 41 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 41 46 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 46 47 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 47 52 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 52 53 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 53 62 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 62 63 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 63 69 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 69 70 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 70 166 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 166 167 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 167 172 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 172 173 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 173 240 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 240 241 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 241 242 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 242 243 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 243 244 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 244 249 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 249 250 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 250 251 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 251 252 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 252 253 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 253 257 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 257 258 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 258 259 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 259 260 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 260 264 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 264 265 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 265 267 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 267 268 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 268 271 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 271 272 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 272 274 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 274 275 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 275 281 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 281 282 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 282 283 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 283 286 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 286 287 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 287 289 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 289 290 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 290 295 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 295 296 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 296 297 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 297 298 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 298 301 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 301 302 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 302 303 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 303 304 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 304 307 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 307 308 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 308 310 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 310 311 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 311 317 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 317 318 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 318 352 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 352 353 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 353 359 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 359 360 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 360 375 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 375 376 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 376 390 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 390 391 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 391 414 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 414 415 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 415 428 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 428 429 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 429 452 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 452 453 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 453 469 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 469 470 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 470 479 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 479 480 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 480 484 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 484 485 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 485 487 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 487 488 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 488 489 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 489 495 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 495 496 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 496 497 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 497 498 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 498 499 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 499 500 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 500 503 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 503 504 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 504 505 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 505 506 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 506 507 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 507 511 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 511 512 (fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block)) 512 513 (rear-nonsticky t font-lock-fontified t fontified t src-block t font-lock-multiline t face (org-block))) . 42682) (undo-tree-id8592 . -486) (undo-tree-id8593 . -511) (undo-tree-id8594 . -486) (undo-tree-id8595 . -486) (undo-tree-id8596 . -486) (undo-tree-id8597 . -486) 43168 (t 25725 25106 703538 409000)) nil (25725 25163 521944 300000) 0 nil])
([nil nil ((43243 . 43249) (#("
*** 5" 0 1 (fontified t) 1 3 (fontified t face org-hide keymap (keymap)) 3 4 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 4 5 (fontified t keymap (keymap) face org-level-3) 5 6 (fontified t face org-level-3)) . 43243) (t 25725 25163 616910 924000)) nil (25725 25221 806087 645000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -43243) (undo-tree-id8598 . -1) 43244 (43243 . 43244) (t 25725 25221 898239 218000)) nil (25725 25415 999430 588000) 0 nil])
([nil nil ((43243 . 43335)) nil (25725 25415 999341 469000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t help-echo "LINK: file:2023-06-05_09-53-j28_screenshot.png" htmlize-link (:uri "file:2023-06-05_09-53-j28_screenshot.png") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t)) . -43315) (undo-tree-id8601 . -1) (#("k" 0 1 (fontified t help-echo "LINK: file:2023-06-05_09-53-jk28_screenshot.png" htmlize-link (:uri "file:2023-06-05_09-53-jk28_screenshot.png") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t)) . -43316) (undo-tree-id8602 . -1) 43317 (43315 . 43317) (t 25725 25416 90202 121000)) nil (25725 25751 150328 656000) 0 nil])
([nil nil ((43335 . 43336) 43335) nil (25725 25751 150205 176000) 0 nil])
([nil nil ((43336 . 43337)) nil (25725 25751 150199 868000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -43336) (undo-tree-id8599 . -1) (undo-tree-id8600 . -1) 43337) nil (25725 25751 150188 833000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -43566) (undo-tree-id8608 . -1) (#("k" 0 1 (fontified t)) . -43567) (undo-tree-id8609 . -1) (#("k" 0 1 (fontified t)) . -43568) (undo-tree-id8610 . -1) (#("k" 0 1 (fontified t)) . -43569) (undo-tree-id8611 . -1) (#("j" 0 1 (fontified nil)) . -43570) 43571 (43566 . 43571) (#("j" 0 1 (fontified t)) . -43566) (undo-tree-id8612 . -1) (#("k" 0 1 (fontified t)) . -43567) (undo-tree-id8613 . -1) (#("k" 0 1 (fontified t)) . -43568) (undo-tree-id8614 . -1) (#("k" 0 1 (fontified t)) . -43569) (undo-tree-id8615 . -1) 43570 (43566 . 43570) (nil rear-nonsticky nil 43565 . 43566) (nil fontified nil 43565 . 43566) (nil fontified nil 43564 . 43565) (nil fontified nil 43556 . 43564) (nil fontified nil 43555 . 43556) (nil fontified nil 43509 . 43555) (43509 . 43566) (43508 . 43509) (43490 . 43508) (43487 . 43490) (#("h" 0 1 (fontified t)) . -43487) (undo-tree-id8616 . -1) (undo-tree-id8617 . -1) (#("a" 0 1 (fontified t)) . -43488) (undo-tree-id8618 . -1) (undo-tree-id8619 . -1) (#("s" 0 1 (fontified t)) . -43489) (undo-tree-id8620 . -1) (undo-tree-id8621 . -1) 43490 (43483 . 43490) (#("s" 0 1 (fontified t)) . -43483) (undo-tree-id8622 . -1) (undo-tree-id8623 . -1) (#("h" 0 1 (fontified t)) . -43484) (undo-tree-id8624 . -1) (undo-tree-id8625 . -1) 43485 (43478 . 43485) (43457 . 43478) (#("v" 0 1 (fontified t)) . -43457) (undo-tree-id8626 . -1) (undo-tree-id8627 . -1) 43458 (43455 . 43458) (43434 . 43455) (#("a" 0 1 (fontified t)) . -43434) (undo-tree-id8628 . -1) (#(" " 0 1 (fontified t)) . -43435) (undo-tree-id8629 . -1) 43436 (43429 . 43436) (43427 . 43429) (#("t" 0 1 (fontified t)) . -43427) (undo-tree-id8630 . -1) 43428 (43421 . 43428) (43400 . 43421) (#("i" 0 1 (fontified t)) . -43400) (undo-tree-id8631 . -1) (#("t" 0 1 (fontified t)) . -43401) (undo-tree-id8632 . -1) (#("i" 0 1 (fontified t)) . -43402) (undo-tree-id8633 . -1) (#("o" 0 1 (fontified t)) . -43403) (undo-tree-id8634 . -1) 43404 (43389 . 43404) (#("o" 0 1 (fontified t)) . -43389) (undo-tree-id8635 . -1) 43390 (43387 . 43390) (#("o" 0 1 (fontified t)) . -43387) (undo-tree-id8636 . -1) 43388 (43383 . 43388) (43379 . 43383) (#(" " 0 1 (fontified t)) . -43379) (undo-tree-id8637 . -1) (#("v" 0 1 (fontified t)) . -43380) (undo-tree-id8638 . -1) 43381 (43362 . 43381) (#("a" 0 1 (fontified t)) . -43362) (undo-tree-id8639 . -1) (undo-tree-id8640 . -1) (#("h" 0 1 (fontified t)) . -43363) (undo-tree-id8641 . -1) (undo-tree-id8642 . -1) (#("n" 0 1 (fontified t)) . -43364) (undo-tree-id8643 . -1) (#("g" 0 1 (fontified t)) . -43365) (undo-tree-id8644 . -1) (#("e" 0 1 (fontified t)) . -43366) (undo-tree-id8645 . -1) (#(" " 0 1 (fontified t)) . -43367) (undo-tree-id8646 . -1) (#("t" 0 1 (fontified t)) . -43368) (undo-tree-id8647 . -1) 43369 (43356 . 43369) (#(" " 0 1 (fontified t)) . -43356) (undo-tree-id8648 . -1) 43357 (43354 . 43357) (#("i" 0 1 (fontified t)) . -43354) (undo-tree-id8649 . -1) 43355 (43336 . 43355) (43335 . 43336) (t 25725 25751 239879 876000) 43335) nil (25725 25980 517419 906000) 0 nil])
([nil nil ((43555 . 43556) 43509) nil (25725 25980 517082 500000) 0 nil])
([nil nil ((nil rear-nonsticky nil 44078 . 44079) (nil fontified nil 43556 . 44079) (43556 . 44079)) nil (25725 25980 517077 681000) 0 nil])
([nil nil ((#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 43534) (undo-tree-id8604 . -15) (undo-tree-id8605 . -15) (undo-tree-id8606 . -15) (undo-tree-id8607 . -15) 43549) nil (25725 25980 517071 884000) 0 nil])
([nil nil ((43542 . 43549) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -43542) (undo-tree-id8603 . -1) 43543 (43534 . 43543)) nil (25725 25980 517052 468000) 0 nil])
([nil nil ((44480 . 44499) (#("o" 0 1 (fontified t)) . -44480) (undo-tree-id8658 . -1) (undo-tree-id8659 . -1) (#("t" 0 1 (fontified t)) . -44481) (undo-tree-id8660 . -1) (undo-tree-id8661 . -1) 44482 (#("p" 0 1 (fontified t)) . -44482) (undo-tree-id8662 . -1) 44483 (44474 . 44483) (44453 . 44474) (44442 . 44453) (#(" " 0 1 (fontified t)) . -44442) (undo-tree-id8663 . -1) (undo-tree-id8664 . -1) (#("f" 0 1 (fontified t)) . -44443) (undo-tree-id8665 . -1) (undo-tree-id8666 . -1) (#("r" 0 1 (fontified t)) . -44444) (undo-tree-id8667 . -1) (undo-tree-id8668 . -1) (#("o" 0 1 (fontified t)) . -44445) (undo-tree-id8669 . -1) 44446 (44443 . 44446) (44422 . 44443) (44405 . 44422) (#("e" 0 1 (fontified t)) . -44405) (undo-tree-id8670 . -1) 44406 (44390 . 44406) (44369 . 44390) (#("e" 0 1 (fontified t)) . -44369) (undo-tree-id8671 . -1) (undo-tree-id8672 . -1) (#("x" 0 1 (fontified t)) . -44370) (undo-tree-id8673 . -1) (undo-tree-id8674 . -1) (#("t" 0 1 (fontified t)) . -44371) (undo-tree-id8675 . -1) (undo-tree-id8676 . -1) (#("r" 0 1 (fontified t)) . -44372) (undo-tree-id8677 . -1) (undo-tree-id8678 . -1) (#("e" 0 1 (fontified t)) . -44373) (undo-tree-id8679 . -1) (#("m" 0 1 (fontified t)) . -44374) (undo-tree-id8680 . -1) (#("e" 0 1 (fontified t)) . -44375) (undo-tree-id8681 . -1) (#(" " 0 1 (fontified t)) . -44376) (undo-tree-id8682 . -1) 44377 (44374 . 44377) (44372 . 44374) (#("e" 0 1 (fontified t)) . -44372) (undo-tree-id8683 . -1) (undo-tree-id8684 . -1) (#("m" 0 1 (fontified t)) . -44373) (undo-tree-id8685 . -1) 44374 (44358 . 44374) (#("s" 0 1 (fontified t)) . -44358) (undo-tree-id8686 . -1) (#(" " 0 1 (fontified t)) . -44359) (undo-tree-id8687 . -1) (#("f" 0 1 (fontified t)) . -44360) (undo-tree-id8688 . -1) 44361 (44353 . 44361) (#("d" 0 1 (fontified t)) . -44353) (undo-tree-id8689 . -1) (#("a" 0 1 (fontified t)) . -44354) (undo-tree-id8690 . -1) 44355 (44343 . 44355) (44322 . 44343) (44321 . 44322) (#("
" 0 1 (fontified t)) . -44321) (undo-tree-id8691 . -1) (undo-tree-id8692 . -1) (#("
" 0 1 (fontified t)) . -44322) (undo-tree-id8693 . -1) (undo-tree-id8694 . -1) 44323 (44322 . 44323) (44321 . 44322) (44312 . 44321) (#("e" 0 1 (fontified t)) . -44312) (undo-tree-id8695 . -1) 44313 (44292 . 44313) (44281 . 44292) (44260 . 44281) (44252 . 44260) (#(" " 0 1 (fontified t)) . -44252) (undo-tree-id8696 . -1) 44253 (44252 . 44253) (44235 . 44252) (44234 . 44235) (#("V" 0 1 (fontified t)) . -44234) (undo-tree-id8697 . -1) (#("o" 0 1 (fontified t)) . -44235) (undo-tree-id8698 . -1) 44236 (44225 . 44236) (44220 . 44225) (t 25725 25980 607246 601000) 44091) nil (25725 31820 873516 743000) 0 nil])
([nil nil ((44089 . 44090)) nil (25725 31820 873345 564000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -44089) (undo-tree-id8654 . -1) 44090 (44089 . 44090) (44089 . 44090) (#("j
" 0 1 (fontified t) 1 2 (fontified t)) . 44089) (undo-tree-id8655 . -1) (undo-tree-id8656 . 1) (undo-tree-id8657 . -2)) nil (25725 31820 873339 837000) 0 nil])
([nil nil ((nil rear-nonsticky nil 44556 . 44557) (nil fontified nil 44556 . 44557) (nil fontified nil 44555 . 44556) (nil fontified nil 44547 . 44555) (nil fontified nil 44546 . 44547) (nil fontified nil 44500 . 44546) (44500 . 44557) (44499 . 44500) 44322) nil (25725 31820 873324 262000) 0 nil])
([nil nil ((44538 . 44543) (44525 . 44538) (#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 44525) (undo-tree-id8650 . -15) (undo-tree-id8651 . -15) (undo-tree-id8652 . -15) (undo-tree-id8653 . -15) 44540) nil (25725 31820 873315 532000) 0 nil])
([nil nil ((44548 . 44549) 44542) nil (25725 31820 873287 526000) 0 nil])
([nil nil ((nil rear-nonsticky nil 44944 . 44945) (nil fontified nil 44549 . 44945) (44549 . 44945)) nil (25725 31820 873274 536000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -44956) (undo-tree-id8699 . -1) (#("k" 0 1 (fontified t)) . -44957) (undo-tree-id8700 . -1) 44958 (44956 . 44958) (#("i" 0 1 (fontified t)) . -44956) (undo-tree-id8701 . -1) (#("j" 0 1 (fontified t)) . -44957) (undo-tree-id8702 . -1) 44958 (44956 . 44958) (t 25725 31820 966010 967000)) nil (25725 31833 689279 607000) 0 nil])
([nil nil ((44956 . 44957) (t 25725 31833 777968 373000)) nil (25725 31913 314294 878000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -44956) (undo-tree-id8705 . -1) 44957) nil (25725 31913 314289 709000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t face org-block-end-line)) . -44955) (undo-tree-id8703 . -1) (undo-tree-id8704 . -1) 44956) nil (25725 31913 314280 979000) 0 nil])
([nil nil ((44955 . 44956)) nil (25725 31913 314248 573000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 44956) (undo-tree-id8706 . 1) (undo-tree-id8707 . -1) (undo-tree-id8708 . -1) (t 25725 31913 405770 347000)) nil (25725 31931 819632 393000) 0 nil])
([nil nil ((44955 . 44956) 44946) nil (25725 31931 819595 377000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -44958) (undo-tree-id8715 . -1) 44959 (44958 . 44959) (44956 . 44958) (t 25725 31931 909739 637000)) nil (25725 32157 871906 361000) 0 nil])
([nil nil ((nil rear-nonsticky nil 45181 . 45182) (nil fontified nil 45181 . 45182) (nil fontified nil 45180 . 45181) (nil fontified nil 45172 . 45180) (nil fontified nil 45171 . 45172) (nil fontified nil 45125 . 45171) (45125 . 45182) (45124 . 45125) (45123 . 45124) (45122 . 45123) (45104 . 45122) (45088 . 45104) (#("e" 0 1 (fontified t)) . -45088) (undo-tree-id8710 . -1) (#(" " 0 1 (fontified t)) . -45089) (undo-tree-id8711 . -1) 45090 (45070 . 45090) (45049 . 45070) (#("o" 0 1 (fontified t)) . -45049) (undo-tree-id8712 . -1) 45050 (45045 . 45050) (#("c" 0 1 (fontified t)) . -45045) (undo-tree-id8713 . -1) (#("c" 0 1 (fontified t)) . -45046) (undo-tree-id8714 . -1) 45047 (45041 . 45047) (45036 . 45041) 44959) nil (25725 32157 871893 580000) 0 nil])
([nil nil ((45174 . 45179) (45171 . 45174) (45150 . 45171) (#("creatingelements.html" 0 21 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 45150) (undo-tree-id8709 . -20)) nil (25725 32157 871866 761000) 0 nil])
([nil nil ((45179 . 45180) 45178) nil (25725 32157 871844 831000) 0 nil])
([nil nil ((nil rear-nonsticky nil 45588 . 45589) (nil fontified nil 45180 . 45589) (45180 . 45589)) nil (25725 32157 871831 561000) 0 nil])
([nil nil ((45188 . 45192) (#("e" 0 1 (fontified t)) . -45188) (undo-tree-id8716 . -1) 45189 (45170 . 45189) (#("h" 0 1 (fontified t)) . -45170) (undo-tree-id8717 . -1) (#("e" 0 1 (fontified t)) . -45171) (undo-tree-id8718 . -1) (#("i" 0 1 (fontified t)) . -45172) (undo-tree-id8719 . -1) 45173 (45170 . 45173) (#("L" 0 1 (fontified t)) . -45170) (undo-tree-id8720 . -1) (#("e" 0 1 (fontified t)) . -45171) (undo-tree-id8721 . -1) (#("f" 0 1 (fontified t)) . -45172) (undo-tree-id8722 . -1) (#("t" 0 1 (fontified t)) . -45173) (undo-tree-id8723 . -1) 45174 (45167 . 45174) (45150 . 45167) (45129 . 45150) (45124 . 45129) (t 25725 32157 965743 652000) 45037) nil (25725 32213 689860 910000) 0 nil])
([nil nil ((nil rear-nonsticky nil 45777 . 45778) (nil fontified nil 45631 . 45778) (45631 . 45778)) nil (25725 32213 689808 320000) 0 nil])
([nil nil ((45902 . 45907) (t 25725 32213 785833 502000) 45816) nil (25725 32227 903034 469000) 0 nil])
([nil nil ((46060 . 46068) (46056 . 46060) (46035 . 46056) (46014 . 46035) (45993 . 46014) (#("h" 0 1 (fontified t)) . -45993) (undo-tree-id8748 . -1) (#("t" 0 1 (fontified t)) . -45994) (undo-tree-id8749 . -1) (#("h" 0 1 (fontified t)) . -45995) (undo-tree-id8750 . -1) (#("e" 0 1 (fontified t)) . -45996) (undo-tree-id8751 . -1) 45997 (45994 . 45997) (#("e" 0 1 (fontified t)) . -45994) (undo-tree-id8752 . -1) 45995 (45994 . 45995) (#("e" 0 1 (fontified t)) . -45994) (undo-tree-id8753 . -1) (#("t" 0 1 (fontified t)) . -45995) (undo-tree-id8754 . -1) (#("h" 0 1 (fontified t)) . -45996) (undo-tree-id8755 . -1) 45997 (45994 . 45997) (#("=" 0 1 (fontified t)) . -45994) (undo-tree-id8756 . -1) (#("e" 0 1 (fontified t)) . -45995) (undo-tree-id8757 . -1) 45996 (45980 . 45996) (45973 . 45980) (45952 . 45973) (45948 . 45952) (45942 . 45948) (#("e" 0 1 (fontified t)) . -45942) (undo-tree-id8758 . -1) (#("i" 0 1 (fontified t)) . -45943) (undo-tree-id8759 . -1) 45944 (45938 . 45944) (45936 . 45938) (45915 . 45936) (#("h" 0 1 (fontified t)) . -45915) (undo-tree-id8760 . -1) 45916 (45912 . 45916) (#(" " 0 1 (fontified t)) . -45912) (undo-tree-id8761 . -1) (undo-tree-id8762 . -1) (#("w" 0 1 (fontified t)) . -45913) (undo-tree-id8763 . -1) (undo-tree-id8764 . -1) (#("i" 0 1 (fontified t)) . -45914) (undo-tree-id8765 . -1) (undo-tree-id8766 . -1) 45915 (45906 . 45915) (#("x" 0 1 (fontified t)) . -45906) (undo-tree-id8767 . -1) (#("l" 0 1 (fontified t)) . -45907) (undo-tree-id8768 . -1) (#("i" 0 1 (fontified t)) . -45908) (undo-tree-id8769 . -1) 45909 (45906 . 45909) (t 25725 32228 1860 989000)) nil (25725 32937 110459 668000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -46130) (undo-tree-id8744 . -1) (#("k" 0 1 (fontified t)) . -46131) (undo-tree-id8745 . -1) (#("k" 0 1 (fontified t)) . -46132) (undo-tree-id8746 . -1) (#("k" 0 1 (fontified t)) . -46133) (undo-tree-id8747 . -1) 46134 (46130 . 46134) (nil rear-nonsticky nil 46129 . 46130) (nil fontified nil 46129 . 46130) (nil fontified nil 46128 . 46129) (nil fontified nil 46120 . 46128) (nil fontified nil 46119 . 46120) (nil fontified nil 46073 . 46119) (46073 . 46130) (46069 . 46073) 46067) nil (25725 32937 110393 104000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -46120) (undo-tree-id8743 . -3) 46123 (46119 . 46123) 46100) nil (25725 32937 110374 874000) 0 nil])
([nil nil ((nil rear-nonsticky nil 46485 . 46486) (nil fontified nil 46120 . 46486) (46120 . 46486)) nil (25725 32937 110367 400000) 0 nil])
([nil nil ((46098 . 46099) (#("creatingelements.html
" 0 21 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 21 22 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 46098) (undo-tree-id8738 . -21) (undo-tree-id8739 . -21) (undo-tree-id8740 . -22) (undo-tree-id8741 . -21) (undo-tree-id8742 . -21) 46119) nil (25725 32937 110361 114000) 0 nil])
([nil nil ((46109 . 46127) (46103 . 46109) (46098 . 46103) (#("g" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -46098) (undo-tree-id8724 . -1) (undo-tree-id8725 . -1) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -46099) (undo-tree-id8726 . -1) (undo-tree-id8727 . -1) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -46100) (undo-tree-id8728 . -1) (undo-tree-id8729 . -1) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -46101) (undo-tree-id8730 . -1) (undo-tree-id8731 . -1) (#("i" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -46102) (undo-tree-id8732 . -1) (undo-tree-id8733 . -1) (#("n" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -46103) (undo-tree-id8734 . -1) (undo-tree-id8735 . -1) (#("g" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -46104) (undo-tree-id8736 . -1) (undo-tree-id8737 . -1) 46105 (46097 . 46105)) nil (25725 32937 110335 899000) 0 nil])
([nil nil ((nil rear-nonsticky nil 46907 . 46908) (nil fontified nil 46907 . 46908) (nil fontified nil 46906 . 46907) (nil fontified nil 46898 . 46906) (nil fontified nil 46897 . 46898) (nil fontified nil 46851 . 46897) (46851 . 46908) (#("s" 0 1 (fontified t)) . -46851) (undo-tree-id8770 . -1) (#("r" 0 1 (fontified t)) . -46852) (undo-tree-id8771 . -1) 46853 (46851 . 46853) (#("s" 0 1 (fontified t)) . -46851) (undo-tree-id8772 . -1) (#("r" 0 1 (fontified t)) . -46852) (undo-tree-id8773 . -1) (#("x" 0 1 (fontified t)) . -46853) (undo-tree-id8774 . -1) 46854 (46851 . 46854) (46850 . 46851) (46837 . 46850) (#("n" 0 1 (fontified t)) . -46837) (undo-tree-id8775 . -1) (undo-tree-id8776 . -1) (#("e" 0 1 (fontified t)) . -46838) (undo-tree-id8777 . -1) (undo-tree-id8778 . -1) (#(" " 0 1 (fontified t)) . -46839) (undo-tree-id8779 . -1) (#("l" 0 1 (fontified t)) . -46840) (undo-tree-id8780 . -1) 46841 (46827 . 46841) (#("d" 0 1 (fontified t)) . -46827) (undo-tree-id8781 . -1) 46828 (46821 . 46828) (#(" " 0 1 (fontified t)) . -46821) (undo-tree-id8782 . -1) 46822 (46816 . 46822) (46815 . 46816) (#("e" 0 1 (fontified t)) . -46815) (undo-tree-id8783 . -1) (#("t" 0 1 (fontified t)) . -46816) (undo-tree-id8784 . -1) 46817 (46815 . 46817) (#("e" 0 1 (fontified t)) . -46815) (undo-tree-id8785 . -1) (#("m" 0 1 (fontified t)) . -46816) (undo-tree-id8786 . -1) 46817 (46804 . 46817) (46783 . 46804) (#("c" 0 1 (fontified t)) . -46783) (undo-tree-id8787 . -1) 46784 (46778 . 46784) (#(" " 0 1 (fontified t)) . -46778) (undo-tree-id8788 . -1) 46779 (46777 . 46779) (#(" " 0 1 (fontified t)) . -46777) (undo-tree-id8789 . -1) (#("y" 0 1 (fontified t)) . -46778) (undo-tree-id8790 . -1) 46779 (46773 . 46779) (46772 . 46773) (#("d" 0 1 (fontified t)) . -46772) (undo-tree-id8791 . -1) (undo-tree-id8792 . -1) 46773 (46769 . 46773) (#(" " 0 1 (fontified t)) . -46769) (undo-tree-id8793 . -1) (#("x" 0 1 (fontified t)) . -46770) (undo-tree-id8794 . -1) 46771 (46760 . 46771) (#("g" 0 1 (fontified t)) . -46760) (undo-tree-id8795 . -1) 46761 (46753 . 46761) (#("c" 0 1 (fontified t)) . -46753) (undo-tree-id8796 . -1) 46754 (46736 . 46754) (#("s" 0 1 (fontified t)) . -46736) (undo-tree-id8797 . -1) (#("t" 0 1 (fontified t)) . -46737) (undo-tree-id8798 . -1) (#(" " 0 1 (fontified t)) . -46738) (undo-tree-id8799 . -1) (#("u" 0 1 (fontified t)) . -46739) (undo-tree-id8800 . -1) 46740 (46735 . 46740) (46734 . 46735) (#("s" 0 1 (fontified t)) . -46734) (undo-tree-id8801 . -1) (#("
" 0 1 (fontified t)) . -46735) (undo-tree-id8802 . -1) (undo-tree-id8803 . -1) 46736 (46735 . 46736) (46734 . 46735) (46730 . 46734) (#("u" 0 1 (fontified t)) . -46730) (undo-tree-id8804 . -1) (#("m" 0 1 (fontified nil)) . -46731) (undo-tree-id8805 . -1) (#("e" 0 1 (fontified t)) . -46732) (undo-tree-id8806 . -1) 46733 (46726 . 46733) (#("o" 0 1 (fontified t)) . -46726) (undo-tree-id8807 . -1) (#("c" 0 1 (fontified t)) . -46727) (undo-tree-id8808 . -1) 46728 (46720 . 46728) (46699 . 46720) (46678 . 46699) (46667 . 46678) (#(" " 0 1 (fontified t)) . -46667) (undo-tree-id8809 . -1) 46668 (46656 . 46668) (#("referen" 0 7 (fontified nil)) . 46656) (undo-tree-id8810 . -7) (undo-tree-id8811 . -7) (undo-tree-id8812 . -7) (46647 . 46656) 46654 (#("d" 0 1 (fontified t)) . -46654) (undo-tree-id8813 . -1) (#("e" 0 1 (fontified t)) . -46655) (undo-tree-id8814 . -1) 46656 (46651 . 46656) (46631 . 46651) (#("i" 0 1 (fontified nil)) . -46631) (undo-tree-id8815 . -1) (undo-tree-id8816 . -1) (#("s" 0 1 (fontified t)) . -46632) (undo-tree-id8817 . -1) (undo-tree-id8818 . -1) (#("s" 0 1 (fontified t)) . -46633) (undo-tree-id8819 . -1) (#("b" 0 1 (fontified t)) . -46634) (undo-tree-id8820 . -1) 46635 (46622 . 46635) (46613 . 46622) (46611 . 46613) (46605 . 46611) (#("t" 0 1 (fontified t)) . -46605) (undo-tree-id8821 . -1) (#(" " 0 1 (fontified t)) . -46606) (undo-tree-id8822 . -1) (#("e" 0 1 (fontified t)) . -46607) (undo-tree-id8823 . -1) 46608 (46600 . 46608) (46595 . 46600) (t 25725 32937 203756 285000) 46507) nil (25725 33057 714288 800000) 0 nil])
([nil nil ((nil rear-nonsticky nil 47208 . 47209) (nil fontified nil 46898 . 47209) (46898 . 47209)) nil (25725 33057 714833 458000) 0 nil])
([nil nil ((46892 . 46899) (#(")" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block-begin-line))) . -46892) (undo-tree-id8831 . -1) (#("(" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block-begin-line))) . -46893) (undo-tree-id8832 . -1) 46894 (46876 . 46894) (#("creatingelements.html" 0 21 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 46876) (undo-tree-id8833 . -20)) nil (25725 33076 13484 259000) 0 nil] [nil nil ((nil rear-nonsticky nil 47365 . 47366) (nil fontified nil 47055 . 47366) (47055 . 47366)) ((#("<!DOCTYPE html>
<html lang=\"en\">
<head>
<style>
div{height:50px;width:50px;background-color:red;position:absolute;top:50px;left:50px;}
</style>
</head>
<body>

<div id=\"bottom\"></div><div id=\"top\"></div>

<script>

console.log(document.elementFromPoint(50,50)); //logs <div id=\"top\">

</script>
</body>
</html>
" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face font-lock-string-face org-block)) 1 14 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 14 15 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face font-lock-string-face org-block)) 15 16 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 16 17 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 17 21 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 21 22 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 22 26 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 26 27 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 27 31 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 31 32 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 32 33 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 33 34 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 34 38 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 38 39 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 39 40 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 40 41 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 41 46 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 46 47 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 47 51 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 51 52 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 52 133 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 133 134 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 134 135 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 135 136 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 136 137 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 137 142 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 142 143 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 143 144 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 144 145 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 145 146 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 146 150 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 150 151 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 151 152 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 152 153 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 153 157 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 157 158 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 158 160 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 160 161 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 161 164 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 164 165 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 165 167 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 167 168 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 168 176 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 176 177 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 177 178 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 178 179 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 179 182 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 182 183 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 183 184 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 184 187 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 187 188 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 188 190 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 190 191 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 191 196 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 196 197 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 197 198 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 198 199 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 199 202 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 202 203 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 203 205 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 205 206 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 206 212 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 212 213 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 213 226 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 226 227 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 227 252 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 252 253 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-4-face org-block)) 253 258 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 258 259 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-4-face org-block)) 259 260 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 260 269 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 269 270 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 270 273 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 273 274 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 274 276 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 276 277 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 277 282 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-string-face org-block)) 282 283 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 283 285 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 285 286 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 286 287 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 287 293 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 293 294 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 294 295 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 295 296 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 296 297 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 297 301 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 301 302 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 302 303 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 303 304 (font-lock-fontified t src-block t fontified nil font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 304 305 (font-lock-fontified t src-block t fontified nil font-lock-multiline t face (org-block)) 305 309 (font-lock-fontified t src-block t fontified nil font-lock-multiline t face (font-lock-function-name-face org-block)) 309 310 (font-lock-fontified t src-block t fontified nil font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block)) 310 311 (rear-nonsticky nil font-lock-fontified t src-block t fontified nil font-lock-multiline t face (org-block))) . 47055) (undo-tree-id8824 . -310) (undo-tree-id8825 . -303) (undo-tree-id8826 . -311) (undo-tree-id8827 . -309) (undo-tree-id8828 . -303) (undo-tree-id8829 . -309) (undo-tree-id8830 . -309) (nil rear-nonsticky t 47365 . 47366)) (25725 33057 714098 610000) 0 nil])
([nil nil ((47311 . 47316) (t 25725 33076 102362 386000) 47222) nil (25725 33174 531819 706000) 0 nil])
nil
([nil nil ((47322 . 47327) (47316 . 47322)) nil (25725 33174 531815 445000) 0 nil])
([nil nil ((47336 . 47344) (47327 . 47336)) nil (25725 33174 531811 604000) 0 nil])
([nil nil ((47344 . 47352)) nil (25725 33174 531806 785000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -47350) (undo-tree-id8843 . -1) (#("s" 0 1 (fontified t)) . -47351) (undo-tree-id8844 . -1) 47352) nil (25725 33174 531801 965000) 0 nil])
([nil nil ((47359 . 47367) (47350 . 47359)) nil (25725 33174 531792 536000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -47362) (undo-tree-id8839 . -1) (#("5" 0 1 (fontified t)) . -47363) (undo-tree-id8840 . -1) (#("0" 0 1 (fontified t)) . -47364) (undo-tree-id8841 . -1) (#("p" 0 1 (fontified t)) . -47365) (undo-tree-id8842 . -1) (#("x" 0 1 (fontified nil)) . -47366) 47367) nil (25725 33174 531785 412000) 0 nil])
([nil nil ((47362 . 47371)) nil (25725 33174 531771 443000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -47370) (undo-tree-id8838 . -1) 47371) nil (25725 33174 531767 182000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -47369) (undo-tree-id8836 . -1) (undo-tree-id8837 . -1) 47370) nil (25725 33174 531760 58000) 0 nil])
([nil nil ((47369 . 47372)) nil (25725 33174 531751 258000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -47371) (undo-tree-id8835 . -1) 47372) nil (25725 33174 531746 927000) 0 nil])
([nil nil ((47371 . 47373)) nil (25725 33174 531740 222000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -47372) (undo-tree-id8834 . -1) 47373) nil (25725 33174 531735 473000) 0 nil])
([nil nil ((47372 . 47378)) nil (25725 33174 531716 684000) 0 nil])
([nil nil ((47401 . 47403) (47399 . 47401) (47378 . 47399)) nil (25725 33174 531711 865000) 0 nil])
([nil nil ((47403 . 47404)) nil (25725 33174 531698 315000) 0 nil])
([nil nil ((nil rear-nonsticky nil 47465 . 47466) (nil fontified nil 47465 . 47466) (nil fontified nil 47464 . 47465) (nil fontified nil 47456 . 47464) (nil fontified nil 47455 . 47456) (nil fontified nil 47409 . 47455) (47409 . 47466) (47404 . 47409) (t 25725 33174 624656 824000) 47403) nil (25725 33222 544422 71000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -47456) (undo-tree-id8854 . -4) 47460 (47455 . 47460) 47405) nil (25725 33222 544415 17000) 0 nil])
([nil nil ((nil rear-nonsticky nil 47816 . 47817) (nil fontified nil 47456 . 47817) (47456 . 47817)) nil (25725 33222 544408 731000) 0 nil])
([nil nil ((#("creatingelements.html" 0 21 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 47434) (undo-tree-id8853 . -20)) nil (25725 33222 544403 493000) 0 nil])
([nil nil ((#("(" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block-begin-line))) . -47462) (undo-tree-id8845 . -1) (#(")" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block-begin-line))) . -47463) (undo-tree-id8846 . -1) 47464 (47460 . 47464) (#("g" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -47460) (undo-tree-id8847 . -1) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -47461) (undo-tree-id8848 . -1) (#("h" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -47462) (undo-tree-id8849 . -1) 47463 (47457 . 47463) (#("w" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -47457) (undo-tree-id8850 . -1) (#("i" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -47458) (undo-tree-id8851 . -1) (#("d" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -47459) (undo-tree-id8852 . -1) 47460 (47455 . 47460) (47434 . 47455)) nil (25725 33222 544371 15000) 0 nil])
([nil nil ((47835 . 47836) (t 25725 33222 635418 211000)) nil (25725 33226 59817 204000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -47835) (undo-tree-id8855 . -1) (undo-tree-id8856 . -1) 47836) nil (25725 33226 59804 702000) 0 nil])
([nil nil ((47868 . 47876) (47847 . 47868) (#("u" 0 1 (fontified t)) . -47847) (undo-tree-id8893 . -1) 47848 (47835 . 47848) (t 25725 33226 163613 983000)) nil (25725 33426 315752 522000) 0 nil])
([nil nil ((48004 . 48021) (#("i" 0 1 (fontified t)) . -48004) (undo-tree-id8861 . -1) (#("t" 0 1 (fontified t)) . -48005) (undo-tree-id8862 . -1) 48006 (47999 . 48006) (#("s" 0 1 (fontified t)) . -47999) (undo-tree-id8863 . -1) 48000 (47996 . 48000) (#("o" 0 1 (fontified t)) . -47996) (undo-tree-id8864 . -1) 47997 (47988 . 47997) (#("s" 0 1 (fontified t)) . -47988) (undo-tree-id8865 . -1) (undo-tree-id8866 . -1) (#("c" 0 1 (fontified t)) . -47989) (undo-tree-id8867 . -1) (undo-tree-id8868 . -1) (#("o" 0 1 (fontified t)) . -47990) (undo-tree-id8869 . -1) 47991 (47979 . 47991) (47974 . 47979) (47973 . 47974) (#(" " 0 1 (fontified t)) . -47973) (undo-tree-id8870 . -1) 47974 (47967 . 47974) (47961 . 47967) (#(" " 0 1 (fontified t)) . -47961) (undo-tree-id8871 . -1) 47962 (47950 . 47962) (47929 . 47950) (#("d" 0 1 (fontified t)) . -47929) (undo-tree-id8872 . -1) (undo-tree-id8873 . -1) (#("i" 0 1 (fontified t)) . -47930) (undo-tree-id8874 . -1) (undo-tree-id8875 . -1) (#("n" 0 1 (fontified t)) . -47931) (undo-tree-id8876 . -1) (#("f" 0 1 (fontified t)) . -47932) (undo-tree-id8877 . -1) 47933 (47929 . 47933) (#("g" 0 1 (fontified t)) . -47929) (undo-tree-id8878 . -1) (undo-tree-id8879 . -1) (#("i" 0 1 (fontified t)) . -47930) (undo-tree-id8880 . -1) (undo-tree-id8881 . -1) (#("n" 0 1 (fontified t)) . -47931) (undo-tree-id8882 . -1) 47932 (47931 . 47932) (47910 . 47931) (47901 . 47910) (#("i" 0 1 (fontified t)) . -47901) (undo-tree-id8883 . -1) (#("t" 0 1 (fontified t)) . -47902) (undo-tree-id8884 . -1) (#("e" 0 1 (fontified t)) . -47903) (undo-tree-id8885 . -1) (#("m" 0 1 (fontified t)) . -47904) (undo-tree-id8886 . -1) (#(" " 0 1 (fontified t)) . -47905) (undo-tree-id8887 . -1) 47906 (47898 . 47906) (47877 . 47898) (#("l" 0 1 (fontified t)) . -47877) (undo-tree-id8888 . -1) (undo-tree-id8889 . -1) 47878 (47865 . 47878) (#("scorllable" 0 10 (fontified t)) . 47865) (undo-tree-id8890 . -9) (undo-tree-id8891 . -2) (undo-tree-id8892 . -8) 47873) nil (25725 33426 315728 426000) 0 nil])
([nil nil ((48022 . 48023) 48020) nil (25725 33426 315519 313000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -48119) (undo-tree-id8857 . -4) (undo-tree-id8858 . -4) (undo-tree-id8859 . -4) (undo-tree-id8860 . -4) 48123 (48118 . 48123) 48024) nil (25725 33426 315513 586000) 0 nil])
([nil nil ((nil rear-nonsticky nil 48354 . 48355) (nil fontified nil 48119 . 48355) (48119 . 48355)) nil (25725 33426 315480 340000) 0 nil])
([nil nil ((48355 . 48356) 48354) nil (25725 33426 315200 196000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -48356) (undo-tree-id8902 . -1) 48357 (48356 . 48357) (t 25725 33426 413355 983000)) nil (25725 33471 33405 222000) 0 nil])
([nil nil ((nil rear-nonsticky nil 48412 . 48413) (nil fontified nil 48412 . 48413) (nil fontified nil 48411 . 48412) (nil fontified nil 48403 . 48411) (nil fontified nil 48402 . 48403) (nil fontified nil 48356 . 48402) (48356 . 48413)) nil (25725 33471 33397 470000) 0 nil])
([nil nil ((#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -48410) (undo-tree-id8894 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -48411) (undo-tree-id8895 . -1) (#("h" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -48412) (undo-tree-id8896 . -1) 48413 (48407 . 48413) (48402 . 48407) (48381 . 48402) (#("creatingelements.html" 0 21 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 48381) (undo-tree-id8897 . -20) (undo-tree-id8898 . 17) (undo-tree-id8899 . -3) (undo-tree-id8900 . -3) (undo-tree-id8901 . -3) 48384) nil (25725 33471 33383 431000) 0 nil])
([nil nil ((48390 . 48391) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 48390)) nil (25725 33471 32463 798000) 0 nil])
([nil nil ((48394 . 48395) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 48394)) nil (25725 33471 32400 380000) 0 nil])
([nil nil ((48410 . 48411) 48385) nil (25725 33471 32386 411000) 0 nil])
([nil nil ((nil rear-nonsticky nil 48784 . 48785) (nil fontified nil 48411 . 48785) (48411 . 48785) (t 25725 33471 123218 163000)) nil (25725 33483 425605 481000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -49015) (undo-tree-id8903 . -1) (undo-tree-id8904 . -1) (undo-tree-id8905 . -1) (undo-tree-id8906 . -1) (undo-tree-id8907 . -1) (undo-tree-id8908 . -1) (undo-tree-id8909 . -1) (undo-tree-id8910 . -1) (undo-tree-id8911 . -1) (undo-tree-id8912 . -1) (undo-tree-id8913 . -1) (undo-tree-id8914 . -1) (undo-tree-id8915 . -1) (undo-tree-id8916 . -1) (undo-tree-id8917 . -1) (undo-tree-id8918 . -1) (undo-tree-id8919 . -1) (undo-tree-id8920 . -1) (undo-tree-id8921 . -1) (undo-tree-id8922 . -1) (undo-tree-id8923 . -1) (undo-tree-id8924 . -1) (undo-tree-id8925 . -1) (undo-tree-id8926 . -1) (undo-tree-id8927 . -1) (undo-tree-id8928 . -1) (undo-tree-id8929 . -1) (undo-tree-id8930 . -1) (undo-tree-id8931 . -1) (undo-tree-id8932 . -1) (undo-tree-id8933 . -1) (undo-tree-id8934 . -1) (undo-tree-id8935 . -1) (undo-tree-id8936 . -1) (undo-tree-id8937 . -1) (undo-tree-id8938 . -1) (undo-tree-id8939 . -1) (undo-tree-id8940 . -1) (undo-tree-id8941 . -1) (undo-tree-id8942 . -1) (undo-tree-id8943 . -1) (undo-tree-id8944 . -1) (undo-tree-id8945 . -1) (undo-tree-id8946 . -1) (undo-tree-id8947 . -1) (undo-tree-id8948 . -1) (undo-tree-id8949 . -1) (undo-tree-id8950 . -1) (undo-tree-id8951 . -1) (undo-tree-id8952 . -1) (undo-tree-id8953 . -1) (undo-tree-id8954 . -1) (undo-tree-id8955 . -1) (undo-tree-id8956 . -1) (undo-tree-id8957 . -1) (undo-tree-id8958 . -1) (undo-tree-id8959 . -1) (undo-tree-id8960 . -1) (undo-tree-id8961 . -1) (undo-tree-id8962 . -1) (undo-tree-id8963 . -1) (undo-tree-id8964 . -1) (undo-tree-id8965 . -1) (undo-tree-id8966 . -1) (undo-tree-id8967 . -1) (undo-tree-id8968 . -1) (undo-tree-id8969 . -1) (undo-tree-id8970 . -1) (undo-tree-id8971 . -1) (undo-tree-id8972 . -1) (undo-tree-id8973 . -1) (undo-tree-id8974 . -1) (undo-tree-id8975 . -1) (undo-tree-id8976 . -1) (undo-tree-id8977 . -1) (undo-tree-id8978 . -1) (undo-tree-id8979 . -1) (undo-tree-id8980 . -1) (undo-tree-id8981 . -1) (undo-tree-id8982 . -1) (undo-tree-id8983 . -1) (undo-tree-id8984 . -1) (undo-tree-id8985 . -1) (undo-tree-id8986 . -1) (undo-tree-id8987 . -1) (undo-tree-id8988 . -1) (undo-tree-id8989 . -1) (undo-tree-id8990 . -1) (undo-tree-id8991 . -1) (undo-tree-id8992 . -1) (undo-tree-id8993 . -1) (undo-tree-id8994 . -1) (undo-tree-id8995 . -1) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (undo-tree-id8998 . -1) (undo-tree-id8999 . -1) (undo-tree-id9000 . -1) (undo-tree-id9001 . -1) (undo-tree-id9002 . -1) (undo-tree-id9003 . -1) (undo-tree-id9004 . -1) (undo-tree-id9005 . -1) (undo-tree-id9006 . -1) (undo-tree-id9007 . -1) (undo-tree-id9008 . -1) (undo-tree-id9009 . -1) (undo-tree-id9010 . -1) (undo-tree-id9011 . -1) (undo-tree-id9012 . -1) (undo-tree-id9013 . -1) (undo-tree-id9014 . -1) (undo-tree-id9015 . -1) (undo-tree-id9016 . -1) (undo-tree-id9017 . -1) (undo-tree-id9018 . -1) (undo-tree-id9019 . -1) (undo-tree-id9020 . -1) (undo-tree-id9021 . -1) (undo-tree-id9022 . -1) (undo-tree-id9023 . -1) (undo-tree-id9024 . -1) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) (undo-tree-id9031 . -1) (undo-tree-id9032 . -1) (undo-tree-id9033 . -1) (undo-tree-id9034 . -1) (undo-tree-id9035 . -1) (undo-tree-id9036 . -1) (undo-tree-id9037 . -1) (undo-tree-id9038 . -1) (undo-tree-id9039 . -1) (undo-tree-id9040 . -1) (undo-tree-id9041 . -1) (undo-tree-id9042 . -1) (undo-tree-id9043 . -1) (undo-tree-id9044 . -1) (undo-tree-id9045 . -1) (undo-tree-id9046 . -1) (undo-tree-id9047 . -1) (undo-tree-id9048 . -1) (undo-tree-id9049 . -1) (undo-tree-id9050 . -1) (undo-tree-id9051 . -1) (undo-tree-id9052 . -1) (undo-tree-id9053 . -1) (undo-tree-id9054 . -1) (undo-tree-id9055 . -1) (undo-tree-id9056 . -1) (undo-tree-id9057 . -1) (undo-tree-id9058 . -1) (undo-tree-id9059 . -1) (undo-tree-id9060 . -1) (undo-tree-id9061 . -1) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) (undo-tree-id9069 . -1) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (undo-tree-id9077 . -1) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (undo-tree-id9083 . -1) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (undo-tree-id9091 . -1) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) (undo-tree-id9108 . -1) (undo-tree-id9109 . -1) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) (undo-tree-id9112 . -1) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1) (undo-tree-id9115 . -1) (undo-tree-id9116 . -1) (undo-tree-id9117 . -1) (undo-tree-id9118 . -1) (undo-tree-id9119 . -1) (undo-tree-id9120 . -1) (undo-tree-id9121 . -1) (undo-tree-id9122 . -1) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (undo-tree-id9125 . -1) (undo-tree-id9126 . -1) (undo-tree-id9127 . -1) (undo-tree-id9128 . -1) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (undo-tree-id9133 . -1) (undo-tree-id9134 . -1) (undo-tree-id9135 . -1) (undo-tree-id9136 . -1) (undo-tree-id9137 . -1) (#("k" 0 1 (fontified t)) . -49016) (undo-tree-id9138 . -1) (undo-tree-id9139 . -1) (undo-tree-id9140 . -1) (undo-tree-id9141 . -1) (undo-tree-id9142 . -1) (undo-tree-id9143 . -1) (undo-tree-id9144 . -1) (undo-tree-id9145 . -1) (undo-tree-id9146 . -1) (undo-tree-id9147 . -1) (undo-tree-id9148 . -1) (undo-tree-id9149 . -1) (undo-tree-id9150 . -1) (undo-tree-id9151 . -1) (undo-tree-id9152 . -1) (undo-tree-id9153 . -1) (undo-tree-id9154 . -1) (undo-tree-id9155 . -1) (undo-tree-id9156 . -1) (undo-tree-id9157 . -1) (undo-tree-id9158 . -1) (undo-tree-id9159 . -1) (undo-tree-id9160 . -1) (undo-tree-id9161 . -1) (undo-tree-id9162 . -1) (undo-tree-id9163 . -1) (undo-tree-id9164 . -1) (undo-tree-id9165 . -1) (undo-tree-id9166 . -1) (undo-tree-id9167 . -1) (undo-tree-id9168 . -1) (undo-tree-id9169 . -1) (undo-tree-id9170 . -1) (undo-tree-id9171 . -1) (undo-tree-id9172 . -1) (undo-tree-id9173 . -1) (undo-tree-id9174 . -1) (undo-tree-id9175 . -1) (undo-tree-id9176 . -1) (undo-tree-id9177 . -1) (undo-tree-id9178 . -1) (undo-tree-id9179 . -1) (undo-tree-id9180 . -1) (undo-tree-id9181 . -1) (undo-tree-id9182 . -1) (undo-tree-id9183 . -1) (undo-tree-id9184 . -1) (undo-tree-id9185 . -1) (undo-tree-id9186 . -1) (undo-tree-id9187 . -1) (undo-tree-id9188 . -1) (undo-tree-id9189 . -1) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) (undo-tree-id9196 . -1) (undo-tree-id9197 . -1) (undo-tree-id9198 . -1) (undo-tree-id9199 . -1) (undo-tree-id9200 . -1) (#("o" 0 1 (fontified t)) . -49017) (undo-tree-id9201 . -1) (undo-tree-id9202 . -1) 49018 (49015 . 49018) (#("j" 0 1 (fontified t)) . -49015) (undo-tree-id9203 . -1) (#("k" 0 1 (fontified t)) . -49016) (undo-tree-id9204 . -1) (#("o" 0 1 (fontified t)) . -49017) (undo-tree-id9205 . -1) 49018 (49005 . 49018) (48997 . 49005) (48994 . 48997) (#("r" 0 1 (fontified t)) . -48994) (undo-tree-id9206 . -1) (#("o" 0 1 (fontified t)) . -48995) (undo-tree-id9207 . -1) (#("l" 0 1 (fontified t)) . -48996) (undo-tree-id9208 . -1) 48997 (48994 . 48997) (#("o" 0 1 (fontified t)) . -48994) (undo-tree-id9209 . -1) (undo-tree-id9210 . -1) (#("o" 0 1 (fontified t)) . -48995) (undo-tree-id9211 . -1) (#("l" 0 1 (fontified t)) . -48996) (undo-tree-id9212 . -1) 48997 (48995 . 48997) (48974 . 48995) (#(" " 0 1 (fontified t)) . -48974) (undo-tree-id9213 . -1) 48975 (48959 . 48975) (#("d" 0 1 (fontified t)) . -48959) (undo-tree-id9214 . -1) (#(" " 0 1 (fontified t)) . -48960) (undo-tree-id9215 . -1) 48961 (48945 . 48961) (#("c" 0 1 (fontified t)) . -48945) (undo-tree-id9216 . -1) 48946 (48945 . 48946) (48935 . 48945) (#("w" 0 1 (fontified t)) . -48935) (undo-tree-id9217 . -1) (undo-tree-id9218 . -1) (#("e" 0 1 (fontified t)) . -48936) (undo-tree-id9219 . -1) (undo-tree-id9220 . -1) 48937 (48918 . 48937) (#("n" 0 1 (fontified t)) . -48918) (undo-tree-id9221 . -1) (undo-tree-id9222 . -1) 48919 (48910 . 48919) (48905 . 48910) (#("." 0 1 (fontified t)) . -48905) (undo-tree-id9223 . -1) 48906 (48898 . 48906) (#("o" 0 1 (fontified t)) . -48898) (undo-tree-id9224 . -1) (undo-tree-id9225 . -1) (#("r" 0 1 (fontified t)) . -48899) (undo-tree-id9226 . -1) (#("p" 0 1 (fontified t)) . -48900) (undo-tree-id9227 . -1) (#("e" 0 1 (fontified t)) . -48901) (undo-tree-id9228 . -1) 48902 (48887 . 48902) (#("m" 0 1 (fontified t)) . -48887) (undo-tree-id9229 . -1) 48888 (48887 . 48888) (#("e" 0 1 (fontified t)) . -48887) (undo-tree-id9230 . -1) (undo-tree-id9231 . -1) (#("i" 0 1 (fontified t)) . -48888) (undo-tree-id9232 . -1) (undo-tree-id9233 . -1) 48889 (48886 . 48889) (48883 . 48886) (48862 . 48883) (#("t" 0 1 (fontified t)) . -48862) (undo-tree-id9234 . -1) 48863 (48862 . 48863) (#("t" 0 1 (fontified t)) . -48862) (undo-tree-id9235 . -1) (undo-tree-id9236 . -1) (#("H" 0 1 (fontified t)) . -48863) (undo-tree-id9237 . -1) (undo-tree-id9238 . -1) (#("i" 0 1 (fontified t)) . -48864) (undo-tree-id9239 . -1) (undo-tree-id9240 . -1) (#("s" 0 1 (fontified t)) . -48865) (undo-tree-id9241 . -1) (#(" " 0 1 (fontified t)) . -48866) (undo-tree-id9242 . -1) 48867 (48863 . 48867) (#("o" 0 1 (fontified t)) . -48863) (undo-tree-id9243 . -1) (undo-tree-id9244 . -1) (#(" " 0 1 (fontified t)) . -48864) (undo-tree-id9245 . -1) (undo-tree-id9246 . -1) (#("b" 0 1 (fontified t)) . -48865) (undo-tree-id9247 . -1) (undo-tree-id9248 . -1) (#("r" 0 1 (fontified t)) . -48866) (undo-tree-id9249 . -1) (undo-tree-id9250 . -1) (#("i" 0 1 (fontified t)) . -48867) (undo-tree-id9251 . -1) (undo-tree-id9252 . -1) (#("n" 0 1 (fontified t)) . -48868) (undo-tree-id9253 . -1) (undo-tree-id9254 . -1) (#("g" 0 1 (fontified t)) . -48869) (undo-tree-id9255 . -1) (undo-tree-id9256 . -1) (#(" " 0 1 (fontified t)) . -48870) (undo-tree-id9257 . -1) (undo-tree-id9258 . -1) (#("a" 0 1 (fontified t)) . -48871) (undo-tree-id9259 . -1) (undo-tree-id9260 . -1) (#("n" 0 1 (fontified t)) . -48872) (undo-tree-id9261 . -1) (undo-tree-id9262 . -1) (#(" " 0 1 (fontified t)) . -48873) (undo-tree-id9263 . -1) 48874 (48862 . 48874) (t 25725 33483 519717 463000)) nil (25725 33562 302460 868000) 0 nil])
([nil nil ((49016 . 49020) 49014) nil (25725 33562 300972 503000) 0 nil])
([nil nil ((nil rear-nonsticky nil 49076 . 49077) (nil fontified nil 49076 . 49077) (nil fontified nil 49075 . 49076) (nil fontified nil 49067 . 49075) (nil fontified nil 49066 . 49067) (nil fontified nil 49020 . 49066) (49020 . 49077) (t 25725 33562 402736 222000)) nil (25725 33597 215386 525000) 0 nil])
([nil nil ((#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -49063) (undo-tree-id9265 . -1) 49064 (49063 . 49064) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -49063) (undo-tree-id9266 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -49064) (undo-tree-id9267 . -1) 49065 (49045 . 49065) (#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 49045) (undo-tree-id9268 . -15)) nil (25725 33597 215377 376000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -49069) (undo-tree-id9264 . -3) 49072 (49068 . 49072) 49062) nil (25725 33597 215358 378000) 0 nil])
([nil nil ((nil rear-nonsticky nil 49583 . 49584) (nil fontified nil 49069 . 49584) (49069 . 49584)) nil (25725 33597 215330 231000) 0 nil])
([nil nil ((49595 . 49596) (t 25725 33597 311991 615000)) nil (25725 33608 350648 31000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -49595) (undo-tree-id9269 . -1) 49596) nil (25725 33608 350577 419000) 0 nil])
([nil nil ((49595 . 49598) (t 25725 33608 444382 379000)) nil (25725 33620 572111 516000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 49596) (undo-tree-id9274 . -1) (undo-tree-id9275 . -1) (undo-tree-id9276 . -1) (undo-tree-id9277 . -1) (undo-tree-id9278 . -1) (undo-tree-id9279 . -1) (undo-tree-id9280 . -1) (undo-tree-id9281 . -1) (undo-tree-id9282 . -1) (undo-tree-id9283 . -1) (undo-tree-id9284 . -1) (undo-tree-id9285 . -1) (undo-tree-id9286 . -1) (undo-tree-id9287 . -1) (undo-tree-id9288 . -1) (undo-tree-id9289 . -1) (undo-tree-id9290 . -1) (undo-tree-id9291 . -1) (undo-tree-id9292 . -1) (undo-tree-id9293 . -1) (undo-tree-id9294 . -1) (undo-tree-id9295 . -1) (undo-tree-id9296 . -1) (undo-tree-id9297 . -1) (undo-tree-id9298 . -1) (undo-tree-id9299 . -1) (undo-tree-id9300 . -1) (undo-tree-id9301 . -1) (undo-tree-id9302 . -1)) nil (25725 33620 572103 833000) 0 nil])
([nil nil ((49596 . 49599)) nil (25725 33620 572039 508000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -49596) (undo-tree-id9270 . -1) (undo-tree-id9271 . -1) (#("x" 0 1 (fontified t)) . -49597) (undo-tree-id9272 . -1) (#("l" 0 1 (fontified t)) . -49598) (undo-tree-id9273 . -1) 49599) nil (25725 33620 572026 726000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -49730) (undo-tree-id9303 . -1) (undo-tree-id9304 . -1) (#("k" 0 1 (fontified t)) . -49731) (undo-tree-id9305 . -1) (undo-tree-id9306 . -1) (#("," 0 1 (fontified t)) . -49732) (undo-tree-id9307 . -1) 49733 (49713 . 49733) (#("l" 0 1 (fontified t)) . -49713) (undo-tree-id9308 . -1) (#("m" 0 1 (fontified t)) . -49714) (undo-tree-id9309 . -1) 49715 (49710 . 49715) (#("o" 0 1 (fontified t)) . -49710) (undo-tree-id9310 . -1) (undo-tree-id9311 . -1) (#("t" 0 1 (fontified t)) . -49711) (undo-tree-id9312 . -1) 49712 (49706 . 49712) (49698 . 49706) (#("c" 0 1 (fontified t)) . -49698) (undo-tree-id9313 . -1) 49699 (49695 . 49699) (49674 . 49695) (49653 . 49674) (49632 . 49653) (49629 . 49632) (49623 . 49629) (49622 . 49623) (#(" " 0 1 (fontified t)) . -49622) (undo-tree-id9314 . -1) 49623 (49621 . 49623) (#("n" 0 1 (fontified t)) . -49621) (undo-tree-id9315 . -1) (#("t" 0 1 (fontified t)) . -49622) (undo-tree-id9316 . -1) 49623 (49609 . 49623) (#("y" 0 1 (fontified t)) . -49609) (undo-tree-id9317 . -1) (undo-tree-id9318 . -1) (#("e" 0 1 (fontified t)) . -49610) (undo-tree-id9319 . -1) (#(" " 0 1 (fontified t)) . -49611) (undo-tree-id9320 . -1) 49612 (49607 . 49612) (#("s" 0 1 (fontified t)) . -49607) (undo-tree-id9321 . -1) (undo-tree-id9322 . -1) (#("t" 0 1 (fontified t)) . -49608) (undo-tree-id9323 . -1) (undo-tree-id9324 . -1) 49609 (49600 . 49609) (#(" " 0 1 (fontified t)) . -49600) (undo-tree-id9325 . -1) (#("e" 0 1 (fontified t)) . -49601) (undo-tree-id9326 . -1) 49602 (49596 . 49602) (t 25725 33620 668806 345000)) nil (25725 33667 890225 733000) 0 nil])
([nil nil ((49761 . 49765) (t 25725 33667 982398 897000) 49732) nil (25725 33671 183271 33000) 0 nil])
([nil nil ((nil rear-nonsticky nil 50146 . 50147) (nil fontified nil 49765 . 50147) (49765 . 50147) 49764 (t 25725 33671 274506 959000)) nil (25725 33707 162787 930000) 0 nil])
([nil nil (("" . -50088) (50088 . 50092) ("" . -49967) (49967 . 49971) ("" . -49904) (49904 . 49908) ("" . -49834) (49834 . 49838) ("" . -49762) (49762 . 49766)) nil (25725 33726 883631 965000) 0 nil] [nil nil ((#("   6.1 Style Attribute (aka element inline CSS properties) Overview
6.2 Getting, setting, & removing individual inline CSS properties
6.3 Getting, setting, & removing all inline CSS properties
6.4 Getting an elements computed styles (i.e. actual styles including any from the cascade) using getComputedStyle()
6.5 Apply & remove css properties on an element using class & id attributes
" 0 2 (fontified t) 2 3 (fontified t) 3 23 (fontified t) 23 24 (fontified t face (rainbow-delimiters-depth-2-face)) 24 57 (fontified t) 57 58 (fontified t face (rainbow-delimiters-depth-2-face)) 58 67 (fontified t) 67 233 (fontified t) 233 234 (fontified t face (rainbow-delimiters-depth-2-face)) 234 283 (fontified t) 283 284 (fontified t face (rainbow-delimiters-depth-2-face)) 284 307 (fontified t) 307 308 (fontified t face (rainbow-delimiters-depth-2-face)) 308 309 (fontified t face (rainbow-delimiters-depth-2-face)) 309 384 (fontified t) 384 385 (fontified t rear-nonsticky t) 385 386 (fontified t)) . 49762) (undo-tree-id11601 . -376) (undo-tree-id11602 . -385) (undo-tree-id11603 . 1) (undo-tree-id11604 . -310) (undo-tree-id11605 . -386) (undo-tree-id11606 . -376) (undo-tree-id11607 . -67) (undo-tree-id11608 . -66) (undo-tree-id11609 . -376) (undo-tree-id11610 . -376) 50138) ((49762 . 50148)) (25725 33707 162084 191000) 0 nil] [nil nil ((#("   " 0 3 (fontified t)) . -49762) (undo-tree-id9327 . -3) (undo-tree-id9328 . -3) (undo-tree-id9329 . -3) (undo-tree-id9330 . -3) (undo-tree-id9331 . -3) (undo-tree-id9332 . -3) (undo-tree-id9333 . -3) (undo-tree-id9334 . -3) (undo-tree-id9335 . -3) (undo-tree-id9336 . -3) (undo-tree-id9337 . -3) (undo-tree-id9338 . -3) (undo-tree-id9339 . -3) (undo-tree-id9340 . -3) (undo-tree-id9341 . -3) (undo-tree-id9342 . -3) (undo-tree-id9343 . -3) (undo-tree-id9344 . -3) (undo-tree-id9345 . -3) (undo-tree-id9346 . -3) (undo-tree-id9347 . -3) (undo-tree-id9348 . -3) (undo-tree-id9349 . -3) (undo-tree-id9350 . -3) (undo-tree-id9351 . -3) (undo-tree-id9352 . -3) (undo-tree-id9353 . -3) (undo-tree-id9354 . -3) (undo-tree-id9355 . -3) (undo-tree-id9356 . -3) (undo-tree-id9357 . -3) (undo-tree-id9358 . -3) (undo-tree-id9359 . -3) (undo-tree-id9360 . -3) (undo-tree-id9361 . -3) (undo-tree-id9362 . -3) (undo-tree-id9363 . -3) (undo-tree-id9364 . -3) (undo-tree-id9365 . -3) (undo-tree-id9366 . -3) (undo-tree-id9367 . -3) (undo-tree-id9368 . -3) (undo-tree-id9369 . -3) (undo-tree-id9370 . -3) (undo-tree-id9371 . -3) (undo-tree-id9372 . -3) (undo-tree-id9373 . -3) (undo-tree-id9374 . -3) (undo-tree-id9375 . -3) (undo-tree-id9376 . -3) (undo-tree-id9377 . -3) (undo-tree-id9378 . -3) (undo-tree-id9379 . -3) (undo-tree-id9380 . -3) (undo-tree-id9381 . -3) (undo-tree-id9382 . -3) (undo-tree-id9383 . -3) (undo-tree-id9384 . -3) (undo-tree-id9385 . -3) (undo-tree-id9386 . -3) (undo-tree-id9387 . -3) (undo-tree-id9388 . -3) (undo-tree-id9389 . -3) (undo-tree-id9390 . -3) (undo-tree-id9391 . -3) (undo-tree-id9392 . -3) (undo-tree-id9393 . -3) (undo-tree-id9394 . -3) (undo-tree-id9395 . -3) (undo-tree-id9396 . -3) (undo-tree-id9397 . -3) (undo-tree-id9398 . -3) (undo-tree-id9399 . -3) (undo-tree-id9400 . -3) (undo-tree-id9401 . -3) (undo-tree-id9402 . -3) (undo-tree-id9403 . -3) (undo-tree-id9404 . -3) (undo-tree-id9405 . -3) (undo-tree-id9406 . -3) (undo-tree-id9407 . -3) (undo-tree-id9408 . -3) (undo-tree-id9409 . -3) (undo-tree-id9410 . -3) (undo-tree-id9411 . -3) (undo-tree-id9412 . -3) (undo-tree-id9413 . -3) (undo-tree-id9414 . -3) (undo-tree-id9415 . -3) (undo-tree-id9416 . -3) (undo-tree-id9417 . -3) (undo-tree-id9418 . -3) (undo-tree-id9419 . -3) (undo-tree-id9420 . -3) (undo-tree-id9421 . -3) (undo-tree-id9422 . -3) (undo-tree-id9423 . -3) (undo-tree-id9424 . -3) (undo-tree-id9425 . -3) (undo-tree-id9426 . -3) (undo-tree-id9427 . -3) (undo-tree-id9428 . -3) (undo-tree-id9429 . -3) (undo-tree-id9430 . -3) (undo-tree-id9431 . -3) (undo-tree-id9432 . -3) (undo-tree-id9433 . -3) (undo-tree-id9434 . -3) (undo-tree-id9435 . -3) (undo-tree-id9436 . -3) (undo-tree-id9437 . -3) (undo-tree-id9438 . -3) (undo-tree-id9439 . -3) (undo-tree-id9440 . -3) (undo-tree-id9441 . -3) (undo-tree-id9442 . -3) (undo-tree-id9443 . -3) (undo-tree-id9444 . -3) (undo-tree-id9445 . -3) (undo-tree-id9446 . -3) (undo-tree-id9447 . -3) (undo-tree-id9448 . -3) (undo-tree-id9449 . -3) (undo-tree-id9450 . -3) (undo-tree-id9451 . -3) (undo-tree-id9452 . -3) (undo-tree-id9453 . -3) (undo-tree-id9454 . -3) (undo-tree-id9455 . -3) (undo-tree-id9456 . -3) (undo-tree-id9457 . -3) (undo-tree-id9458 . -3) (undo-tree-id9459 . -3) (undo-tree-id9460 . -3) (undo-tree-id9461 . -3) (undo-tree-id9462 . -3) (undo-tree-id9463 . -3) (undo-tree-id9464 . -3) (undo-tree-id9465 . -3) (undo-tree-id9466 . -3) (undo-tree-id9467 . -3) (undo-tree-id9468 . -3) (undo-tree-id9469 . -3) (undo-tree-id9470 . -3) (undo-tree-id9471 . -3) (undo-tree-id9472 . -3) (undo-tree-id9473 . -3) (undo-tree-id9474 . -3) (undo-tree-id9475 . -3) (undo-tree-id9476 . -3) (undo-tree-id9477 . -3) (undo-tree-id9478 . -3) (undo-tree-id9479 . -3) (undo-tree-id9480 . -3) (undo-tree-id9481 . -3) (undo-tree-id9482 . -3) (undo-tree-id9483 . -3) (undo-tree-id9484 . -3) (undo-tree-id9485 . -3) (undo-tree-id9486 . -3) (undo-tree-id9487 . -3) (undo-tree-id9488 . -3) (undo-tree-id9489 . -3) (undo-tree-id9490 . -3) (undo-tree-id9491 . -3) (undo-tree-id9492 . -3) (undo-tree-id9493 . -3) (undo-tree-id9494 . -3) (undo-tree-id9495 . -3) (undo-tree-id9496 . -3) (undo-tree-id9497 . -3) (undo-tree-id9498 . -3) (undo-tree-id9499 . -3) (undo-tree-id9500 . -3) (undo-tree-id9501 . -3) (undo-tree-id9502 . -3) (undo-tree-id9503 . -3) (undo-tree-id9504 . -3) (undo-tree-id9505 . -3) (undo-tree-id9506 . -3) (undo-tree-id9507 . -3) (undo-tree-id9508 . -3) (undo-tree-id9509 . -3) (undo-tree-id9510 . -3) (undo-tree-id9511 . -3) (undo-tree-id9512 . -3) (undo-tree-id9513 . -3) (undo-tree-id9514 . -3) (undo-tree-id9515 . -3) (undo-tree-id9516 . -3) (undo-tree-id9517 . -3) (undo-tree-id9518 . -3) (undo-tree-id9519 . -3) (undo-tree-id9520 . -3) (undo-tree-id9521 . -3) (undo-tree-id9522 . -3) (undo-tree-id9523 . -3) (undo-tree-id9524 . -3) (undo-tree-id9525 . -3) (undo-tree-id9526 . -3) (undo-tree-id9527 . -3) (undo-tree-id9528 . -3) (undo-tree-id9529 . -3) (undo-tree-id9530 . -3) (undo-tree-id9531 . -3) (undo-tree-id9532 . -3) (undo-tree-id9533 . -3) (undo-tree-id9534 . -3) (undo-tree-id9535 . -3) (undo-tree-id9536 . -3) (undo-tree-id9537 . -3) (undo-tree-id9538 . -3) (undo-tree-id9539 . -3) (undo-tree-id9540 . -3) (undo-tree-id9541 . -3) (undo-tree-id9542 . -3) (undo-tree-id9543 . -3) (undo-tree-id9544 . -3) (undo-tree-id9545 . -3) (undo-tree-id9546 . -3) (undo-tree-id9547 . -3) (undo-tree-id9548 . -3) (undo-tree-id9549 . -3) (undo-tree-id9550 . -3) (undo-tree-id9551 . -3) (undo-tree-id9552 . -3) (undo-tree-id9553 . -3) (undo-tree-id9554 . -3) (undo-tree-id9555 . -3) (undo-tree-id9556 . -3) (undo-tree-id9557 . -3) (undo-tree-id9558 . -3) (undo-tree-id9559 . -3) (undo-tree-id9560 . -3) (undo-tree-id9561 . -3) (undo-tree-id9562 . -3) (undo-tree-id9563 . -3) (undo-tree-id9564 . -3) (undo-tree-id9565 . -3) (undo-tree-id9566 . -3) (undo-tree-id9567 . -3) (undo-tree-id9568 . -3) (undo-tree-id9569 . -3) (undo-tree-id9570 . -3) (undo-tree-id9571 . -3) (undo-tree-id9572 . -3) (undo-tree-id9573 . -3) (undo-tree-id9574 . -3) (undo-tree-id9575 . -3) (undo-tree-id9576 . -3) (undo-tree-id9577 . -3) (undo-tree-id9578 . -3) (undo-tree-id9579 . -3) (undo-tree-id9580 . -3) (undo-tree-id9581 . -3) (undo-tree-id9582 . -3) (undo-tree-id9583 . -3) (undo-tree-id9584 . -3) (undo-tree-id9585 . -3) (undo-tree-id9586 . -3) (undo-tree-id9587 . -3) (undo-tree-id9588 . -3) (undo-tree-id9589 . -3) (undo-tree-id9590 . -3) (undo-tree-id9591 . -3) (undo-tree-id9592 . -3) (undo-tree-id9593 . -3) (undo-tree-id9594 . -3) (undo-tree-id9595 . -3) (undo-tree-id9596 . -3) (undo-tree-id9597 . -3) (undo-tree-id9598 . -3) (undo-tree-id9599 . -3) (undo-tree-id9600 . -3) (undo-tree-id9601 . -3) (undo-tree-id9602 . -3) (undo-tree-id9603 . -3) (undo-tree-id9604 . -3) (undo-tree-id9605 . -3) (undo-tree-id9606 . -3) (undo-tree-id9607 . -3) (undo-tree-id9608 . -3) (undo-tree-id9609 . -3) (undo-tree-id9610 . -3) (undo-tree-id9611 . -3) (undo-tree-id9612 . -3) (undo-tree-id9613 . -3) (undo-tree-id9614 . -3) (undo-tree-id9615 . -3) (undo-tree-id9616 . -3) (undo-tree-id9617 . -3) (undo-tree-id9618 . -3) (undo-tree-id9619 . -3) (undo-tree-id9620 . -3) (undo-tree-id9621 . -3) (undo-tree-id9622 . -3) (undo-tree-id9623 . -3) (undo-tree-id9624 . -3) (undo-tree-id9625 . -3) (undo-tree-id9626 . -3) (undo-tree-id9627 . -3) (undo-tree-id9628 . -3) (undo-tree-id9629 . -3) (undo-tree-id9630 . -3) (undo-tree-id9631 . -3) (undo-tree-id9632 . -3) (undo-tree-id9633 . -3) (undo-tree-id9634 . -3) (undo-tree-id9635 . -3) (undo-tree-id9636 . -3) (undo-tree-id9637 . -3) (undo-tree-id9638 . -3) (undo-tree-id9639 . -3) (undo-tree-id9640 . -3) (undo-tree-id9641 . -3) (undo-tree-id9642 . -3) (undo-tree-id9643 . -3) (undo-tree-id9644 . -3) (undo-tree-id9645 . -3) (undo-tree-id9646 . -3) (undo-tree-id9647 . -3) (undo-tree-id9648 . -3) (undo-tree-id9649 . -3) (undo-tree-id9650 . -3) (undo-tree-id9651 . -3) (undo-tree-id9652 . -3) (undo-tree-id9653 . -3) (undo-tree-id9654 . -3) (undo-tree-id9655 . -3) (undo-tree-id9656 . -3) (undo-tree-id9657 . -3) (undo-tree-id9658 . -3) (undo-tree-id9659 . -3) (undo-tree-id9660 . -3) (undo-tree-id9661 . -3) (undo-tree-id9662 . -3) (undo-tree-id9663 . -3) (undo-tree-id9664 . -3) (undo-tree-id9665 . -3) (undo-tree-id9666 . -3) (undo-tree-id9667 . -3) (undo-tree-id9668 . -3) (undo-tree-id9669 . -3) (undo-tree-id9670 . -3) (undo-tree-id9671 . -3) (undo-tree-id9672 . -3) (undo-tree-id9673 . -3) (undo-tree-id9674 . -3) (undo-tree-id9675 . -3) (undo-tree-id9676 . -3) (undo-tree-id9677 . -3) (undo-tree-id9678 . -3) (undo-tree-id9679 . -3) (undo-tree-id9680 . -3) (undo-tree-id9681 . -3) (undo-tree-id9682 . -3) (undo-tree-id9683 . -3) (undo-tree-id9684 . -3) (undo-tree-id9685 . -3) (undo-tree-id9686 . -3) (undo-tree-id9687 . -3) (undo-tree-id9688 . -3) (undo-tree-id9689 . -3) (undo-tree-id9690 . -3) (undo-tree-id9691 . -3) (undo-tree-id9692 . -3) (undo-tree-id9693 . -3) (undo-tree-id9694 . -3) (undo-tree-id9695 . -3) (undo-tree-id9696 . -3) (undo-tree-id9697 . -3) (undo-tree-id9698 . -3) (undo-tree-id9699 . -3) (undo-tree-id9700 . -3) (undo-tree-id9701 . -3) (undo-tree-id9702 . -3) (undo-tree-id9703 . -3) (undo-tree-id9704 . -3) (undo-tree-id9705 . -3) (undo-tree-id9706 . -3) (undo-tree-id9707 . -3) (undo-tree-id9708 . -3) (undo-tree-id9709 . -3) (undo-tree-id9710 . -3) (undo-tree-id9711 . -3) (undo-tree-id9712 . -3) (undo-tree-id9713 . -3) (undo-tree-id9714 . -3) (undo-tree-id9715 . -3) (undo-tree-id9716 . -3) (undo-tree-id9717 . -3) (undo-tree-id9718 . -3) (undo-tree-id9719 . -3) (undo-tree-id9720 . -3) (undo-tree-id9721 . -3) (undo-tree-id9722 . -3) (undo-tree-id9723 . -3) (undo-tree-id9724 . -3) (undo-tree-id9725 . -3) (undo-tree-id9726 . -3) (undo-tree-id9727 . -3) (undo-tree-id9728 . -3) (undo-tree-id9729 . -3) (undo-tree-id9730 . -3) (undo-tree-id9731 . -3) (undo-tree-id9732 . -3) (undo-tree-id9733 . -3) (undo-tree-id9734 . -3) (undo-tree-id9735 . -3) (undo-tree-id9736 . -3) (undo-tree-id9737 . -3) (undo-tree-id9738 . -3) (undo-tree-id9739 . -3) (undo-tree-id9740 . -3) (undo-tree-id9741 . -3) (undo-tree-id9742 . -3) (undo-tree-id9743 . -3) (undo-tree-id9744 . -3) (undo-tree-id9745 . -3) (undo-tree-id9746 . -3) (undo-tree-id9747 . -3) (undo-tree-id9748 . -3) (undo-tree-id9749 . -3) (undo-tree-id9750 . -3) (undo-tree-id9751 . -3) (undo-tree-id9752 . -3) (undo-tree-id9753 . -3) (undo-tree-id9754 . -3) (undo-tree-id9755 . -3) (undo-tree-id9756 . -3) (undo-tree-id9757 . -3) (undo-tree-id9758 . -3) (undo-tree-id9759 . -3) (undo-tree-id9760 . -3) (undo-tree-id9761 . -3) (undo-tree-id9762 . -3) (undo-tree-id9763 . -3) (undo-tree-id9764 . -3) (undo-tree-id9765 . -3) (undo-tree-id9766 . -3) (undo-tree-id9767 . -3) (undo-tree-id9768 . -3) (undo-tree-id9769 . -3) (undo-tree-id9770 . -3) (undo-tree-id9771 . -3) (undo-tree-id9772 . -3) (undo-tree-id9773 . -3) (undo-tree-id9774 . -3) (undo-tree-id9775 . -3) (undo-tree-id9776 . -3) (undo-tree-id9777 . -3) (undo-tree-id9778 . -3) (undo-tree-id9779 . -3) (undo-tree-id9780 . -3) (undo-tree-id9781 . -3) (undo-tree-id9782 . -3) (undo-tree-id9783 . -3) (undo-tree-id9784 . -3) (undo-tree-id9785 . -3) (undo-tree-id9786 . -3) (undo-tree-id9787 . -3) (undo-tree-id9788 . -3) (undo-tree-id9789 . -3) (undo-tree-id9790 . -3) (undo-tree-id9791 . -3) (undo-tree-id9792 . -3) (undo-tree-id9793 . -3) (undo-tree-id9794 . -3) (undo-tree-id9795 . -3) (undo-tree-id9796 . -3) (undo-tree-id9797 . -3) (undo-tree-id9798 . -3) (undo-tree-id9799 . -3) (undo-tree-id9800 . -3) (undo-tree-id9801 . -3) (undo-tree-id9802 . -3) (undo-tree-id9803 . -3) (undo-tree-id9804 . -3) (undo-tree-id9805 . -3) (undo-tree-id9806 . -3) (undo-tree-id9807 . -3) (undo-tree-id9808 . -3) (undo-tree-id9809 . -3) (undo-tree-id9810 . -3) (undo-tree-id9811 . -3) (undo-tree-id9812 . -3) (undo-tree-id9813 . -3) (undo-tree-id9814 . -3) (undo-tree-id9815 . -3) (undo-tree-id9816 . -3) (undo-tree-id9817 . -3) (undo-tree-id9818 . -3) (undo-tree-id9819 . -3) (undo-tree-id9820 . -3) (undo-tree-id9821 . -3) (undo-tree-id9822 . -3) (undo-tree-id9823 . -3) (undo-tree-id9824 . -3) (undo-tree-id9825 . -3) (undo-tree-id9826 . -3) (undo-tree-id9827 . -3) (undo-tree-id9828 . -3) (undo-tree-id9829 . -3) (undo-tree-id9830 . -3) (undo-tree-id9831 . -3) (undo-tree-id9832 . -3) (undo-tree-id9833 . -3) (undo-tree-id9834 . -3) (undo-tree-id9835 . -3) (undo-tree-id9836 . -3) (undo-tree-id9837 . -3) (undo-tree-id9838 . -3) (undo-tree-id9839 . -3) (undo-tree-id9840 . -3) (undo-tree-id9841 . -3) (undo-tree-id9842 . -3) (undo-tree-id9843 . -3) (undo-tree-id9844 . -3) (undo-tree-id9845 . -3) (undo-tree-id9846 . -3) (undo-tree-id9847 . -3) (undo-tree-id9848 . -3) (undo-tree-id9849 . -3) (undo-tree-id9850 . -3) (undo-tree-id9851 . -3) (undo-tree-id9852 . -3) (undo-tree-id9853 . -3) (undo-tree-id9854 . -3) (undo-tree-id9855 . -3) (undo-tree-id9856 . -3) (undo-tree-id9857 . -3) (undo-tree-id9858 . -3) (undo-tree-id9859 . -3) (undo-tree-id9860 . -3) (undo-tree-id9861 . -3) (undo-tree-id9862 . -3) (undo-tree-id9863 . -3) (undo-tree-id9864 . -3) (undo-tree-id9865 . -3) (undo-tree-id9866 . -3) (undo-tree-id9867 . -3) (undo-tree-id9868 . -3) (undo-tree-id9869 . -3) (undo-tree-id9870 . -3) (undo-tree-id9871 . -3) (undo-tree-id9872 . -3) (undo-tree-id9873 . -3) (undo-tree-id9874 . -3) (undo-tree-id9875 . -3) (undo-tree-id9876 . -3) (undo-tree-id9877 . -3) (undo-tree-id9878 . -3) (undo-tree-id9879 . -3) (undo-tree-id9880 . -3) (undo-tree-id9881 . -3) (undo-tree-id9882 . -3) (undo-tree-id9883 . -3) (undo-tree-id9884 . -3) (undo-tree-id9885 . -3) (undo-tree-id9886 . -3) (undo-tree-id9887 . -3) (undo-tree-id9888 . -3) (undo-tree-id9889 . -3) (undo-tree-id9890 . -3) (undo-tree-id9891 . -3) (undo-tree-id9892 . -3) (undo-tree-id9893 . -3) (undo-tree-id9894 . -3) (undo-tree-id9895 . -3) (undo-tree-id9896 . -3) (undo-tree-id9897 . -3) (undo-tree-id9898 . -3) (undo-tree-id9899 . -3) (undo-tree-id9900 . -3) (undo-tree-id9901 . -3) (undo-tree-id9902 . -3) (undo-tree-id9903 . -3) (undo-tree-id9904 . -3) (undo-tree-id9905 . -3) (undo-tree-id9906 . -3) (undo-tree-id9907 . -3) (undo-tree-id9908 . -3) (undo-tree-id9909 . -3) (undo-tree-id9910 . -3) (undo-tree-id9911 . -3) (undo-tree-id9912 . -3) (undo-tree-id9913 . -3) (undo-tree-id9914 . -3) (undo-tree-id9915 . -3) (undo-tree-id9916 . -3) (undo-tree-id9917 . -3) (undo-tree-id9918 . -3) (undo-tree-id9919 . -3) (undo-tree-id9920 . -3) (undo-tree-id9921 . -3) (undo-tree-id9922 . -3) (undo-tree-id9923 . -3) (undo-tree-id9924 . -3) (undo-tree-id9925 . -3) (undo-tree-id9926 . -3) (undo-tree-id9927 . -3) (undo-tree-id9928 . -3) (undo-tree-id9929 . -3) (undo-tree-id9930 . -3) (undo-tree-id9931 . -3) (undo-tree-id9932 . -3) (undo-tree-id9933 . -3) (undo-tree-id9934 . -3) (undo-tree-id9935 . -3) (undo-tree-id9936 . -3) (undo-tree-id9937 . -3) (undo-tree-id9938 . -3) (undo-tree-id9939 . -3) (undo-tree-id9940 . -3) (undo-tree-id9941 . -3) (undo-tree-id9942 . -3) (undo-tree-id9943 . -3) (undo-tree-id9944 . -3) (undo-tree-id9945 . -3) (undo-tree-id9946 . -3) (undo-tree-id9947 . -3) (undo-tree-id9948 . -3) (undo-tree-id9949 . -3) (undo-tree-id9950 . -3) (undo-tree-id9951 . -3) (undo-tree-id9952 . -3) (undo-tree-id9953 . -3) (undo-tree-id9954 . -3) (undo-tree-id9955 . -3) (undo-tree-id9956 . -3) (undo-tree-id9957 . -3) (undo-tree-id9958 . -3) (undo-tree-id9959 . -3) (undo-tree-id9960 . -3) (undo-tree-id9961 . -3) (undo-tree-id9962 . -3) (undo-tree-id9963 . -3) (undo-tree-id9964 . -3) (undo-tree-id9965 . -3) (undo-tree-id9966 . -3) (undo-tree-id9967 . -3) (undo-tree-id9968 . -3) (undo-tree-id9969 . -3) (undo-tree-id9970 . -3) (undo-tree-id9971 . -3) (undo-tree-id9972 . -3) (undo-tree-id9973 . -3) (undo-tree-id9974 . -3) (undo-tree-id9975 . -3) (undo-tree-id9976 . -3) (undo-tree-id9977 . -3) (undo-tree-id9978 . -3) (undo-tree-id9979 . -3) (undo-tree-id9980 . -3) (undo-tree-id9981 . -3) (undo-tree-id9982 . -3) (undo-tree-id9983 . -3) (undo-tree-id9984 . -3) (undo-tree-id9985 . -3) (undo-tree-id9986 . -3) (undo-tree-id9987 . -3) (undo-tree-id9988 . -3) (undo-tree-id9989 . -3) (undo-tree-id9990 . -3) (undo-tree-id9991 . -3) (undo-tree-id9992 . -3) (undo-tree-id9993 . -3) (undo-tree-id9994 . -3) (undo-tree-id9995 . -3) (undo-tree-id9996 . -3) (undo-tree-id9997 . -3) (undo-tree-id9998 . -3) (undo-tree-id9999 . -3) (undo-tree-id10000 . -3) (undo-tree-id10001 . -3) (undo-tree-id10002 . -3) (undo-tree-id10003 . -3) (undo-tree-id10004 . -3) (undo-tree-id10005 . -3) (undo-tree-id10006 . -3) (undo-tree-id10007 . -3) (undo-tree-id10008 . -3) (undo-tree-id10009 . -3) (undo-tree-id10010 . -3) (undo-tree-id10011 . -3) (undo-tree-id10012 . -3) (undo-tree-id10013 . -3) (undo-tree-id10014 . -3) (undo-tree-id10015 . -3) (undo-tree-id10016 . -3) (undo-tree-id10017 . -3) (undo-tree-id10018 . -3) (undo-tree-id10019 . -3) (undo-tree-id10020 . -3) (undo-tree-id10021 . -3) (undo-tree-id10022 . -3) (undo-tree-id10023 . -3) (undo-tree-id10024 . -3) (undo-tree-id10025 . -3) (undo-tree-id10026 . -3) (undo-tree-id10027 . -3) (undo-tree-id10028 . -3) (undo-tree-id10029 . -3) (undo-tree-id10030 . -3) (undo-tree-id10031 . -3) 49765 (49762 . 49765) (49762 . 49763) (#("   6.1 Style Attribute (aka element inline CSS properties) Overview
6.2 Getting, setting, & removing individual inline CSS properties
6.3 Getting, setting, & removing all inline CSS properties
6.4 Getting an elements computed styles (i.e. actual styles including any from the cascade) using getComputedStyle()
6.5 Apply & remove css properties on an element using class & id attributes
" 0 2 (fontified t) 2 3 (fontified t) 3 23 (fontified t) 23 24 (fontified t face (rainbow-delimiters-depth-2-face)) 24 57 (fontified t) 57 58 (fontified t face (rainbow-delimiters-depth-2-face)) 58 233 (fontified t) 233 234 (fontified t face (rainbow-delimiters-depth-2-face)) 234 283 (fontified t) 283 284 (fontified t face (rainbow-delimiters-depth-2-face)) 284 307 (fontified t) 307 308 (fontified t face (rainbow-delimiters-depth-2-face)) 308 309 (fontified t face (rainbow-delimiters-depth-2-face)) 309 384 (fontified t) 384 385 (fontified t rear-nonsticky t) 385 386 (fontified t)) . 49762) (undo-tree-id10032 . -384) (undo-tree-id10033 . -385) (undo-tree-id10034 . 1) (undo-tree-id10035 . -68) (undo-tree-id10036 . -67) (undo-tree-id10037 . -386) (undo-tree-id10038 . -67) (undo-tree-id10039 . -384) (undo-tree-id10040 . -67) (undo-tree-id10041 . -67) (undo-tree-id10042 . -67) (undo-tree-id10043 . -67) (undo-tree-id10044 . -67) (undo-tree-id10045 . -67) (undo-tree-id10046 . -67) (undo-tree-id10047 . -67) (undo-tree-id10048 . -67) (undo-tree-id10049 . -67) (undo-tree-id10050 . -67) (undo-tree-id10051 . -67) (undo-tree-id10052 . -67) (undo-tree-id10053 . -67) (undo-tree-id10054 . -67) (undo-tree-id10055 . -67) (undo-tree-id10056 . -67) (undo-tree-id10057 . -67) (undo-tree-id10058 . -67) (undo-tree-id10059 . -67) (undo-tree-id10060 . -67) (undo-tree-id10061 . -67) (undo-tree-id10062 . -67) (undo-tree-id10063 . -67) (undo-tree-id10064 . -67) (undo-tree-id10065 . -67) (undo-tree-id10066 . -67) (undo-tree-id10067 . -67) (undo-tree-id10068 . -67) (undo-tree-id10069 . -67) (undo-tree-id10070 . -67) (undo-tree-id10071 . -67) (undo-tree-id10072 . -67) (undo-tree-id10073 . -67) (undo-tree-id10074 . -67) (undo-tree-id10075 . -67) (undo-tree-id10076 . -67) (undo-tree-id10077 . -67) (undo-tree-id10078 . -67) (undo-tree-id10079 . -67) (undo-tree-id10080 . -67) (undo-tree-id10081 . -67) (undo-tree-id10082 . -67) (undo-tree-id10083 . -67) (undo-tree-id10084 . -67) (undo-tree-id10085 . -67) (undo-tree-id10086 . -67) (undo-tree-id10087 . -67) (undo-tree-id10088 . -67) (undo-tree-id10089 . -67) (undo-tree-id10090 . -67) (undo-tree-id10091 . -67) (undo-tree-id10092 . -67) (undo-tree-id10093 . -67) (undo-tree-id10094 . -67) (undo-tree-id10095 . -67) (undo-tree-id10096 . -67) (undo-tree-id10097 . -67) (undo-tree-id10098 . -67) (undo-tree-id10099 . -67) (undo-tree-id10100 . -67) (undo-tree-id10101 . -67) (undo-tree-id10102 . -67) (undo-tree-id10103 . -67) (undo-tree-id10104 . -67) (undo-tree-id10105 . -67) (undo-tree-id10106 . -67) (undo-tree-id10107 . -67) (undo-tree-id10108 . -67) (undo-tree-id10109 . -67) (undo-tree-id10110 . -67) (undo-tree-id10111 . -67) (undo-tree-id10112 . -67) (undo-tree-id10113 . -67) (undo-tree-id10114 . -67) (undo-tree-id10115 . -67) (undo-tree-id10116 . -67) (undo-tree-id10117 . -67) (undo-tree-id10118 . -67) (undo-tree-id10119 . -67) (undo-tree-id10120 . -67) (undo-tree-id10121 . -67) (undo-tree-id10122 . -67) (undo-tree-id10123 . -67) (undo-tree-id10124 . -67) (undo-tree-id10125 . -67) (undo-tree-id10126 . -67) (undo-tree-id10127 . -67) (undo-tree-id10128 . -67) (undo-tree-id10129 . -67) (undo-tree-id10130 . -67) (undo-tree-id10131 . -67) (undo-tree-id10132 . -67) (undo-tree-id10133 . -67) (undo-tree-id10134 . -67) (undo-tree-id10135 . -67) (undo-tree-id10136 . -67) (undo-tree-id10137 . -67) (undo-tree-id10138 . -67) (undo-tree-id10139 . -67) (undo-tree-id10140 . -67) (undo-tree-id10141 . -67) (undo-tree-id10142 . -67) (undo-tree-id10143 . -67) (undo-tree-id10144 . -67) (undo-tree-id10145 . -67) (undo-tree-id10146 . -67) (undo-tree-id10147 . -67) (undo-tree-id10148 . -67) (undo-tree-id10149 . -67) (undo-tree-id10150 . -67) (undo-tree-id10151 . -67) (undo-tree-id10152 . -67) (undo-tree-id10153 . -67) (undo-tree-id10154 . -67) (undo-tree-id10155 . -67) (undo-tree-id10156 . -67) (undo-tree-id10157 . -67) (undo-tree-id10158 . -67) (undo-tree-id10159 . -67) (undo-tree-id10160 . -67) (undo-tree-id10161 . -67) (undo-tree-id10162 . -67) (undo-tree-id10163 . -67) (undo-tree-id10164 . -67) (undo-tree-id10165 . -67) (undo-tree-id10166 . -67) (undo-tree-id10167 . -67) (undo-tree-id10168 . -67) (undo-tree-id10169 . -67) (undo-tree-id10170 . -67) (undo-tree-id10171 . -67) (undo-tree-id10172 . -67) (undo-tree-id10173 . -67) (undo-tree-id10174 . -67) (undo-tree-id10175 . -67) (undo-tree-id10176 . -67) (undo-tree-id10177 . -67) (undo-tree-id10178 . -67) (undo-tree-id10179 . -67) (undo-tree-id10180 . -67) (undo-tree-id10181 . -67) (undo-tree-id10182 . -67) (undo-tree-id10183 . -67) (undo-tree-id10184 . -67) (undo-tree-id10185 . -67) (undo-tree-id10186 . -67) (undo-tree-id10187 . -67) (undo-tree-id10188 . -67) (undo-tree-id10189 . -67) (undo-tree-id10190 . -67) (undo-tree-id10191 . -67) (undo-tree-id10192 . -67) (undo-tree-id10193 . -67) (undo-tree-id10194 . -67) (undo-tree-id10195 . -67) (undo-tree-id10196 . -67) (undo-tree-id10197 . -67) (undo-tree-id10198 . -67) (undo-tree-id10199 . -67) (undo-tree-id10200 . -67) (undo-tree-id10201 . -67) (undo-tree-id10202 . -67) (undo-tree-id10203 . -67) (undo-tree-id10204 . -67) (undo-tree-id10205 . -67) (undo-tree-id10206 . -67) (undo-tree-id10207 . -67) (undo-tree-id10208 . -67) (undo-tree-id10209 . -67) (undo-tree-id10210 . -67) (undo-tree-id10211 . -67) (undo-tree-id10212 . -67) (undo-tree-id10213 . -67) (undo-tree-id10214 . -67) (undo-tree-id10215 . -67) (undo-tree-id10216 . -67) (undo-tree-id10217 . -67) (undo-tree-id10218 . -67) (undo-tree-id10219 . -67) (undo-tree-id10220 . -67) (undo-tree-id10221 . -67) (undo-tree-id10222 . -67) (undo-tree-id10223 . -67) (undo-tree-id10224 . -67) (undo-tree-id10225 . -67) (undo-tree-id10226 . -67) (undo-tree-id10227 . -67) (undo-tree-id10228 . -67) (undo-tree-id10229 . -67) (undo-tree-id10230 . -67) (undo-tree-id10231 . -67) (undo-tree-id10232 . -67) (undo-tree-id10233 . -67) (undo-tree-id10234 . -67) (undo-tree-id10235 . -67) (undo-tree-id10236 . -67) (undo-tree-id10237 . -67) (undo-tree-id10238 . -67) (undo-tree-id10239 . -67) (undo-tree-id10240 . -67) (undo-tree-id10241 . -67) (undo-tree-id10242 . -67) (undo-tree-id10243 . -67) (undo-tree-id10244 . -67) (undo-tree-id10245 . -67) (undo-tree-id10246 . -67) (undo-tree-id10247 . -67) (undo-tree-id10248 . -67) (undo-tree-id10249 . -67) (undo-tree-id10250 . -67) (undo-tree-id10251 . -67) (undo-tree-id10252 . -67) (undo-tree-id10253 . -67) (undo-tree-id10254 . -67) (undo-tree-id10255 . -67) (undo-tree-id10256 . -67) (undo-tree-id10257 . -67) (undo-tree-id10258 . -67) (undo-tree-id10259 . -67) (undo-tree-id10260 . -67) (undo-tree-id10261 . -67) (undo-tree-id10262 . -67) (undo-tree-id10263 . -67) (undo-tree-id10264 . -67) (undo-tree-id10265 . -67) (undo-tree-id10266 . -67) (undo-tree-id10267 . -67) (undo-tree-id10268 . -67) (undo-tree-id10269 . -67) (undo-tree-id10270 . -67) (undo-tree-id10271 . -67) (undo-tree-id10272 . -67) (undo-tree-id10273 . -67) (undo-tree-id10274 . -67) (undo-tree-id10275 . -67) (undo-tree-id10276 . -67) (undo-tree-id10277 . -67) (undo-tree-id10278 . -67) (undo-tree-id10279 . -67) (undo-tree-id10280 . -67) (undo-tree-id10281 . -67) (undo-tree-id10282 . -67) (undo-tree-id10283 . -67) (undo-tree-id10284 . -67) (undo-tree-id10285 . -67) (undo-tree-id10286 . -67) (undo-tree-id10287 . -67) (undo-tree-id10288 . -67) (undo-tree-id10289 . -67) (undo-tree-id10290 . -67) (undo-tree-id10291 . -67) (undo-tree-id10292 . -67) (undo-tree-id10293 . -67) (undo-tree-id10294 . -67) (undo-tree-id10295 . -67) (undo-tree-id10296 . -67) (undo-tree-id10297 . -67) (undo-tree-id10298 . -67) (undo-tree-id10299 . -67) (undo-tree-id10300 . -67) (undo-tree-id10301 . -67) (undo-tree-id10302 . -67) (undo-tree-id10303 . -67) (undo-tree-id10304 . -67) (undo-tree-id10305 . -67) (undo-tree-id10306 . -67) (undo-tree-id10307 . -67) (undo-tree-id10308 . -67) (undo-tree-id10309 . -67) (undo-tree-id10310 . -67) (undo-tree-id10311 . -67) (undo-tree-id10312 . -67) (undo-tree-id10313 . -67) (undo-tree-id10314 . -67) (undo-tree-id10315 . -67) (undo-tree-id10316 . -67) (undo-tree-id10317 . -67) (undo-tree-id10318 . -67) (undo-tree-id10319 . -67) (undo-tree-id10320 . -67) (undo-tree-id10321 . -67) (undo-tree-id10322 . -67) (undo-tree-id10323 . -67) (undo-tree-id10324 . -67) (undo-tree-id10325 . -67) (undo-tree-id10326 . -67) (undo-tree-id10327 . -67) (undo-tree-id10328 . -67) (undo-tree-id10329 . -67) (undo-tree-id10330 . -67) (undo-tree-id10331 . -67) (undo-tree-id10332 . -67) (undo-tree-id10333 . -67) (undo-tree-id10334 . -67) (undo-tree-id10335 . -67) (undo-tree-id10336 . -67) (undo-tree-id10337 . -67) (undo-tree-id10338 . -67) (undo-tree-id10339 . -67) (undo-tree-id10340 . -67) (undo-tree-id10341 . -67) (undo-tree-id10342 . -67) (undo-tree-id10343 . -67) (undo-tree-id10344 . -67) (undo-tree-id10345 . -67) (undo-tree-id10346 . -67) (undo-tree-id10347 . -67) (undo-tree-id10348 . -67) (undo-tree-id10349 . -67) (undo-tree-id10350 . -67) (undo-tree-id10351 . -67) (undo-tree-id10352 . -67) (undo-tree-id10353 . -67) (undo-tree-id10354 . -67) (undo-tree-id10355 . -67) (undo-tree-id10356 . -67) (undo-tree-id10357 . -67) (undo-tree-id10358 . -67) (undo-tree-id10359 . -67) (undo-tree-id10360 . -67) (undo-tree-id10361 . -67) (undo-tree-id10362 . -67) (undo-tree-id10363 . -67) (undo-tree-id10364 . -67) (undo-tree-id10365 . -67) (undo-tree-id10366 . -67) (undo-tree-id10367 . -67) (undo-tree-id10368 . -67) (undo-tree-id10369 . -67) (undo-tree-id10370 . -67) (undo-tree-id10371 . -67) (undo-tree-id10372 . -67) (undo-tree-id10373 . -67) (undo-tree-id10374 . -67) (undo-tree-id10375 . -67) (undo-tree-id10376 . -67) (undo-tree-id10377 . -67) (undo-tree-id10378 . -67) (undo-tree-id10379 . -67) (undo-tree-id10380 . -67) (undo-tree-id10381 . -67) (undo-tree-id10382 . -67) (undo-tree-id10383 . -67) (undo-tree-id10384 . -67) (undo-tree-id10385 . -67) (undo-tree-id10386 . -67) (undo-tree-id10387 . -67) (undo-tree-id10388 . -67) (undo-tree-id10389 . -67) (undo-tree-id10390 . -67) (undo-tree-id10391 . -67) (undo-tree-id10392 . -67) (undo-tree-id10393 . -67) (undo-tree-id10394 . -67) (undo-tree-id10395 . -67) (undo-tree-id10396 . -67) (undo-tree-id10397 . -67) (undo-tree-id10398 . -67) (undo-tree-id10399 . -67) (undo-tree-id10400 . -67) (undo-tree-id10401 . -67) (undo-tree-id10402 . -67) (undo-tree-id10403 . -67) (undo-tree-id10404 . -67) (undo-tree-id10405 . -67) (undo-tree-id10406 . -67) (undo-tree-id10407 . -67) (undo-tree-id10408 . -67) (undo-tree-id10409 . -67) (undo-tree-id10410 . -67) (undo-tree-id10411 . -67) (undo-tree-id10412 . -67) (undo-tree-id10413 . -67) (undo-tree-id10414 . -67) (undo-tree-id10415 . -67) (undo-tree-id10416 . -67) (undo-tree-id10417 . -67) (undo-tree-id10418 . -67) (undo-tree-id10419 . -67) (undo-tree-id10420 . -67) (undo-tree-id10421 . -67) (undo-tree-id10422 . -67) (undo-tree-id10423 . -67) (undo-tree-id10424 . -67) (undo-tree-id10425 . -67) (undo-tree-id10426 . -67) (undo-tree-id10427 . -67) (undo-tree-id10428 . -67) (undo-tree-id10429 . -67) (undo-tree-id10430 . -67) (undo-tree-id10431 . -67) (undo-tree-id10432 . -67) (undo-tree-id10433 . -67) (undo-tree-id10434 . -67) (undo-tree-id10435 . -67) (undo-tree-id10436 . -67) (undo-tree-id10437 . -67) (undo-tree-id10438 . -67) (undo-tree-id10439 . -67) (undo-tree-id10440 . -67) (undo-tree-id10441 . -67) (undo-tree-id10442 . -67) (undo-tree-id10443 . -67) (undo-tree-id10444 . -67) (undo-tree-id10445 . -67) (undo-tree-id10446 . -67) (undo-tree-id10447 . -67) (undo-tree-id10448 . -67) (undo-tree-id10449 . -67) (undo-tree-id10450 . -67) (undo-tree-id10451 . -67) (undo-tree-id10452 . -67) (undo-tree-id10453 . -67) (undo-tree-id10454 . -67) (undo-tree-id10455 . -67) (undo-tree-id10456 . -67) (undo-tree-id10457 . -67) (undo-tree-id10458 . -67) (undo-tree-id10459 . -67) (undo-tree-id10460 . -67) (undo-tree-id10461 . -67) (undo-tree-id10462 . -67) (undo-tree-id10463 . -67) (undo-tree-id10464 . -67) (undo-tree-id10465 . -67) (undo-tree-id10466 . -67) (undo-tree-id10467 . -67) (undo-tree-id10468 . -67) (undo-tree-id10469 . -67) (undo-tree-id10470 . -67) (undo-tree-id10471 . -67) (undo-tree-id10472 . -67) (undo-tree-id10473 . -67) (undo-tree-id10474 . -67) (undo-tree-id10475 . -67) (undo-tree-id10476 . -67) (undo-tree-id10477 . -67) (undo-tree-id10478 . -67) (undo-tree-id10479 . -67) (undo-tree-id10480 . -67) (undo-tree-id10481 . -67) (undo-tree-id10482 . -67) (undo-tree-id10483 . -67) (undo-tree-id10484 . -67) (undo-tree-id10485 . -67) (undo-tree-id10486 . -67) (undo-tree-id10487 . -67) (undo-tree-id10488 . -67) (undo-tree-id10489 . -67) (undo-tree-id10490 . -67) (undo-tree-id10491 . -67) (undo-tree-id10492 . -67) (undo-tree-id10493 . -67) (undo-tree-id10494 . -67) (undo-tree-id10495 . -67) (undo-tree-id10496 . -67) (undo-tree-id10497 . -67) (undo-tree-id10498 . -67) (undo-tree-id10499 . -67) (undo-tree-id10500 . -67) (undo-tree-id10501 . -67) (undo-tree-id10502 . -67) (undo-tree-id10503 . -67) (undo-tree-id10504 . -67) (undo-tree-id10505 . -67) (undo-tree-id10506 . -67) (undo-tree-id10507 . -67) (undo-tree-id10508 . -67) (undo-tree-id10509 . -67) (undo-tree-id10510 . -67) (undo-tree-id10511 . -67) (undo-tree-id10512 . -67) (undo-tree-id10513 . -67) (undo-tree-id10514 . -67) (undo-tree-id10515 . -67) (undo-tree-id10516 . -67) (undo-tree-id10517 . -67) (undo-tree-id10518 . -67) (undo-tree-id10519 . -67) (undo-tree-id10520 . -67) (undo-tree-id10521 . -67) (undo-tree-id10522 . -67) (undo-tree-id10523 . -67) (undo-tree-id10524 . -67) (undo-tree-id10525 . -67) (undo-tree-id10526 . -67) (undo-tree-id10527 . -67) (undo-tree-id10528 . -67) (undo-tree-id10529 . -67) (undo-tree-id10530 . -67) (undo-tree-id10531 . -67) (undo-tree-id10532 . -67) (undo-tree-id10533 . -67) (undo-tree-id10534 . -67) (undo-tree-id10535 . -67) (undo-tree-id10536 . -67) (undo-tree-id10537 . -67) (undo-tree-id10538 . -67) (undo-tree-id10539 . -67) (undo-tree-id10540 . -67) (undo-tree-id10541 . -67) (undo-tree-id10542 . -67) (undo-tree-id10543 . -67) (undo-tree-id10544 . -67) (undo-tree-id10545 . -67) (undo-tree-id10546 . -67) (undo-tree-id10547 . -67) (undo-tree-id10548 . -67) (undo-tree-id10549 . -67) (undo-tree-id10550 . -67) (undo-tree-id10551 . -67) (undo-tree-id10552 . -67) (undo-tree-id10553 . -67) (undo-tree-id10554 . -67) (undo-tree-id10555 . -67) (undo-tree-id10556 . -67) (undo-tree-id10557 . -67) (undo-tree-id10558 . -67) (undo-tree-id10559 . -67) (undo-tree-id10560 . -67) (undo-tree-id10561 . -67) (undo-tree-id10562 . -67) (undo-tree-id10563 . -67) (undo-tree-id10564 . -67) (undo-tree-id10565 . -67) (undo-tree-id10566 . -67) (undo-tree-id10567 . -67) (undo-tree-id10568 . -67) (undo-tree-id10569 . -67) (undo-tree-id10570 . -67) (undo-tree-id10571 . -67) (undo-tree-id10572 . -67) (undo-tree-id10573 . -67) (undo-tree-id10574 . -67) (undo-tree-id10575 . -67) (undo-tree-id10576 . -67) (undo-tree-id10577 . -67) (undo-tree-id10578 . -67) (undo-tree-id10579 . -67) (undo-tree-id10580 . -67) (undo-tree-id10581 . -67) (undo-tree-id10582 . -67) (undo-tree-id10583 . -67) (undo-tree-id10584 . -67) (undo-tree-id10585 . -67) (undo-tree-id10586 . -67) (undo-tree-id10587 . -67) (undo-tree-id10588 . -67) (undo-tree-id10589 . -67) (undo-tree-id10590 . -67) (undo-tree-id10591 . -67) (undo-tree-id10592 . -67) (undo-tree-id10593 . -67) (undo-tree-id10594 . -67) (undo-tree-id10595 . -67) (undo-tree-id10596 . -67) (undo-tree-id10597 . -67) (undo-tree-id10598 . -67) (undo-tree-id10599 . -67) (undo-tree-id10600 . -67) (undo-tree-id10601 . -67) (undo-tree-id10602 . -67) (undo-tree-id10603 . -67) (undo-tree-id10604 . -67) (undo-tree-id10605 . -67) (undo-tree-id10606 . -67) (undo-tree-id10607 . -67) (undo-tree-id10608 . -67) (undo-tree-id10609 . -67) (undo-tree-id10610 . -67) (undo-tree-id10611 . -67) (undo-tree-id10612 . -67) (undo-tree-id10613 . -67) (undo-tree-id10614 . -67) (undo-tree-id10615 . -67) (undo-tree-id10616 . -67) (undo-tree-id10617 . -67) (undo-tree-id10618 . -67) (undo-tree-id10619 . -67) (undo-tree-id10620 . -67) (undo-tree-id10621 . -67) (undo-tree-id10622 . -67) (undo-tree-id10623 . -67) (undo-tree-id10624 . -67) (undo-tree-id10625 . -67) (undo-tree-id10626 . -67) (undo-tree-id10627 . -67) (undo-tree-id10628 . -67) (undo-tree-id10629 . -67) (undo-tree-id10630 . -67) (undo-tree-id10631 . -67) (undo-tree-id10632 . -67) (undo-tree-id10633 . -67) (undo-tree-id10634 . -67) (undo-tree-id10635 . -67) (undo-tree-id10636 . -67) (undo-tree-id10637 . -67) (undo-tree-id10638 . -67) (undo-tree-id10639 . -67) (undo-tree-id10640 . -67) (undo-tree-id10641 . -67) (undo-tree-id10642 . -67) (undo-tree-id10643 . -67) (undo-tree-id10644 . -67) (undo-tree-id10645 . -67) (undo-tree-id10646 . -67) (undo-tree-id10647 . -67) (undo-tree-id10648 . -67) (undo-tree-id10649 . -67) (undo-tree-id10650 . -67) (undo-tree-id10651 . -67) (undo-tree-id10652 . -67) (undo-tree-id10653 . -67) (undo-tree-id10654 . -67) (undo-tree-id10655 . -67) (undo-tree-id10656 . -67) (undo-tree-id10657 . -67) (undo-tree-id10658 . -67) (undo-tree-id10659 . -67) (undo-tree-id10660 . -67) (undo-tree-id10661 . -67) (undo-tree-id10662 . -67) (undo-tree-id10663 . -67) (undo-tree-id10664 . -67) (undo-tree-id10665 . -67) (undo-tree-id10666 . -67) (undo-tree-id10667 . -67) (undo-tree-id10668 . -67) (undo-tree-id10669 . -67) (undo-tree-id10670 . -67) (undo-tree-id10671 . -67) (undo-tree-id10672 . -67) (undo-tree-id10673 . -67) (undo-tree-id10674 . -67) (undo-tree-id10675 . -67) (undo-tree-id10676 . -67) (undo-tree-id10677 . -67) (undo-tree-id10678 . -67) (undo-tree-id10679 . -67) (undo-tree-id10680 . -67) (undo-tree-id10681 . -67) (undo-tree-id10682 . -67) (undo-tree-id10683 . -67) (undo-tree-id10684 . -67) (undo-tree-id10685 . -67) (undo-tree-id10686 . -67) (undo-tree-id10687 . -67) (undo-tree-id10688 . -67) (undo-tree-id10689 . -67) (undo-tree-id10690 . -67) (undo-tree-id10691 . -67) (undo-tree-id10692 . -67) (undo-tree-id10693 . -67) (undo-tree-id10694 . -67) (undo-tree-id10695 . -67) (undo-tree-id10696 . -67) (undo-tree-id10697 . -67) (undo-tree-id10698 . -67) (undo-tree-id10699 . -67) (undo-tree-id10700 . -67) (undo-tree-id10701 . -67) (undo-tree-id10702 . -67) (undo-tree-id10703 . -67) (undo-tree-id10704 . -67) (undo-tree-id10705 . -67) (undo-tree-id10706 . -67) (undo-tree-id10707 . -67) (undo-tree-id10708 . -67) (undo-tree-id10709 . -67) (undo-tree-id10710 . -67) (undo-tree-id10711 . -67) (undo-tree-id10712 . -67) (undo-tree-id10713 . -67) (undo-tree-id10714 . -67) (undo-tree-id10715 . -67) (undo-tree-id10716 . -67) (undo-tree-id10717 . -67) (undo-tree-id10718 . -67) (undo-tree-id10719 . -67) (undo-tree-id10720 . -67) (undo-tree-id10721 . -67) (undo-tree-id10722 . -67) (undo-tree-id10723 . -67) (undo-tree-id10724 . -67) (undo-tree-id10725 . -67) (undo-tree-id10726 . -67) (undo-tree-id10727 . -67) (undo-tree-id10728 . -67) (undo-tree-id10729 . -67) (undo-tree-id10730 . -67) (undo-tree-id10731 . -67) (undo-tree-id10732 . -67) (undo-tree-id10733 . -67) (undo-tree-id10734 . -67) (undo-tree-id10735 . -67) (undo-tree-id10736 . -67) (undo-tree-id10737 . -67) (undo-tree-id10738 . -67) (undo-tree-id10739 . -67) (undo-tree-id10740 . -67) (undo-tree-id10741 . -67) (undo-tree-id10742 . -67) (undo-tree-id10743 . -67) (undo-tree-id10744 . -67) (undo-tree-id10745 . -67) (undo-tree-id10746 . -67) (undo-tree-id10747 . -67) (undo-tree-id10748 . -67) (undo-tree-id10749 . -67) (undo-tree-id10750 . -67) (undo-tree-id10751 . -67) (undo-tree-id10752 . -67) (undo-tree-id10753 . -67) (undo-tree-id10754 . -67) (undo-tree-id10755 . -67) (undo-tree-id10756 . -67) (undo-tree-id10757 . -67) (undo-tree-id10758 . -67) (undo-tree-id10759 . -67) (undo-tree-id10760 . -67) (undo-tree-id10761 . -67) (undo-tree-id10762 . -67) (undo-tree-id10763 . -67) (undo-tree-id10764 . -67) (undo-tree-id10765 . -67) (undo-tree-id10766 . -67) (undo-tree-id10767 . -67) (undo-tree-id10768 . -67) (undo-tree-id10769 . -67) (undo-tree-id10770 . -67) (undo-tree-id10771 . -67) (undo-tree-id10772 . -67) (undo-tree-id10773 . -67) (undo-tree-id10774 . -67) (undo-tree-id10775 . -67) (undo-tree-id10776 . -67) (undo-tree-id10777 . -67) (undo-tree-id10778 . -67) (undo-tree-id10779 . -67) (undo-tree-id10780 . -67) (undo-tree-id10781 . -67) (undo-tree-id10782 . -67) (undo-tree-id10783 . -67) (undo-tree-id10784 . -67) (undo-tree-id10785 . -67) (undo-tree-id10786 . -67) (undo-tree-id10787 . -67) (undo-tree-id10788 . -67) (undo-tree-id10789 . -67) (undo-tree-id10790 . -67) (undo-tree-id10791 . -67) (undo-tree-id10792 . -67) (undo-tree-id10793 . -67) (undo-tree-id10794 . -67) (undo-tree-id10795 . -67) (undo-tree-id10796 . -67) (undo-tree-id10797 . -67) (undo-tree-id10798 . -67) (undo-tree-id10799 . -67) (undo-tree-id10800 . -67) (undo-tree-id10801 . -67) (undo-tree-id10802 . -67) (undo-tree-id10803 . -67) (undo-tree-id10804 . -67) (undo-tree-id10805 . -67) (undo-tree-id10806 . -67) (undo-tree-id10807 . -67) (undo-tree-id10808 . -67) (undo-tree-id10809 . -67) (undo-tree-id10810 . -67) (undo-tree-id10811 . -67) (undo-tree-id10812 . -67) (undo-tree-id10813 . -67) (undo-tree-id10814 . -67) (undo-tree-id10815 . -67) (undo-tree-id10816 . -67) (undo-tree-id10817 . -67) (undo-tree-id10818 . -67) (undo-tree-id10819 . -67) (undo-tree-id10820 . -67) (undo-tree-id10821 . -67) (undo-tree-id10822 . -67) (undo-tree-id10823 . -67) (undo-tree-id10824 . -67) (undo-tree-id10825 . -67) (undo-tree-id10826 . -67) (undo-tree-id10827 . -67) (undo-tree-id10828 . -67) (undo-tree-id10829 . -67) (undo-tree-id10830 . -67) (undo-tree-id10831 . -67) (undo-tree-id10832 . -67) (undo-tree-id10833 . -67) (undo-tree-id10834 . -67) (undo-tree-id10835 . -67) (undo-tree-id10836 . -67) (undo-tree-id10837 . -67) (undo-tree-id10838 . -67) (undo-tree-id10839 . -67) (undo-tree-id10840 . -67) (undo-tree-id10841 . -67) (undo-tree-id10842 . -67) (undo-tree-id10843 . -67) (undo-tree-id10844 . -67) (undo-tree-id10845 . -67) (undo-tree-id10846 . -67) (undo-tree-id10847 . -67) (undo-tree-id10848 . -67) (undo-tree-id10849 . -67) (undo-tree-id10850 . -67) (undo-tree-id10851 . -67) (undo-tree-id10852 . -67) (undo-tree-id10853 . -67) (undo-tree-id10854 . -67) (undo-tree-id10855 . -67) (undo-tree-id10856 . -67) (undo-tree-id10857 . -67) (undo-tree-id10858 . -67) (undo-tree-id10859 . -67) (undo-tree-id10860 . -67) (undo-tree-id10861 . -67) (undo-tree-id10862 . -67) (undo-tree-id10863 . -67) (undo-tree-id10864 . -67) (undo-tree-id10865 . -67) (undo-tree-id10866 . -67) (undo-tree-id10867 . -67) (undo-tree-id10868 . -67) (undo-tree-id10869 . -67) (undo-tree-id10870 . -67) (undo-tree-id10871 . -67) (undo-tree-id10872 . -67) (undo-tree-id10873 . -67) (undo-tree-id10874 . -67) (undo-tree-id10875 . -67) (undo-tree-id10876 . -67) (undo-tree-id10877 . -67) (undo-tree-id10878 . -67) (undo-tree-id10879 . -67) (undo-tree-id10880 . -67) (undo-tree-id10881 . -67) (undo-tree-id10882 . -67) (undo-tree-id10883 . -67) (undo-tree-id10884 . -67) (undo-tree-id10885 . -67) (undo-tree-id10886 . -67) (undo-tree-id10887 . -67) (undo-tree-id10888 . -67) (undo-tree-id10889 . -67) (undo-tree-id10890 . -67) (undo-tree-id10891 . -67) (undo-tree-id10892 . -386) (undo-tree-id10893 . -386) (undo-tree-id10894 . -386) 49829) ((49762 . 50148) (#("
" 0 1 (fontified nil)) . 49762) (undo-tree-id10895 . 1) (undo-tree-id10896 . -1) (#("   " 0 3 (fontified nil)) . 49762) (undo-tree-id10897 . -3) (undo-tree-id10898 . -3) (undo-tree-id10899 . -3) (undo-tree-id10900 . -3) (undo-tree-id10901 . -3) (undo-tree-id10902 . -3) (undo-tree-id10903 . -3) (undo-tree-id10904 . -3) (undo-tree-id10905 . -3) (undo-tree-id10906 . -3) (undo-tree-id10907 . -3) (undo-tree-id10908 . -3) (undo-tree-id10909 . -3) (undo-tree-id10910 . -3) (undo-tree-id10911 . -3) (undo-tree-id10912 . -3) (undo-tree-id10913 . -3) (undo-tree-id10914 . -3) (undo-tree-id10915 . -3) (undo-tree-id10916 . -3) (undo-tree-id10917 . -3) (undo-tree-id10918 . -3) (undo-tree-id10919 . -3) (undo-tree-id10920 . -3) (undo-tree-id10921 . -3) (undo-tree-id10922 . -3) (undo-tree-id10923 . -3) (undo-tree-id10924 . -3) (undo-tree-id10925 . -3) (undo-tree-id10926 . -3) (undo-tree-id10927 . -3) (undo-tree-id10928 . -3) (undo-tree-id10929 . -3) (undo-tree-id10930 . -3) (undo-tree-id10931 . -3) (undo-tree-id10932 . -3) (undo-tree-id10933 . -3) (undo-tree-id10934 . -3) (undo-tree-id10935 . -3) (undo-tree-id10936 . -3) (undo-tree-id10937 . -3) (undo-tree-id10938 . -3) (undo-tree-id10939 . -3) (undo-tree-id10940 . -3) (undo-tree-id10941 . -3) (undo-tree-id10942 . -3) (undo-tree-id10943 . -3) (undo-tree-id10944 . -3) (undo-tree-id10945 . -3) (undo-tree-id10946 . -3) (undo-tree-id10947 . -3) (undo-tree-id10948 . -3) (undo-tree-id10949 . -3) (undo-tree-id10950 . -3) (undo-tree-id10951 . -3) (undo-tree-id10952 . -3) (undo-tree-id10953 . -3) (undo-tree-id10954 . -3) (undo-tree-id10955 . -3) (undo-tree-id10956 . -3) (undo-tree-id10957 . -3) (undo-tree-id10958 . -3) (undo-tree-id10959 . -3) (undo-tree-id10960 . -3) (undo-tree-id10961 . -3) (undo-tree-id10962 . -3) (undo-tree-id10963 . -3) (undo-tree-id10964 . -3) (undo-tree-id10965 . -3) (undo-tree-id10966 . -3) (undo-tree-id10967 . -3) (undo-tree-id10968 . -3) (undo-tree-id10969 . -3) (undo-tree-id10970 . -3) (undo-tree-id10971 . -3) (undo-tree-id10972 . -3) (undo-tree-id10973 . -3) (undo-tree-id10974 . -3) (undo-tree-id10975 . -3) (undo-tree-id10976 . -3) (undo-tree-id10977 . -3) (undo-tree-id10978 . -3) (undo-tree-id10979 . -3) (undo-tree-id10980 . -3) (undo-tree-id10981 . -3) (undo-tree-id10982 . -3) (undo-tree-id10983 . -3) (undo-tree-id10984 . -3) (undo-tree-id10985 . -3) (undo-tree-id10986 . -3) (undo-tree-id10987 . -3) (undo-tree-id10988 . -3) (undo-tree-id10989 . -3) (undo-tree-id10990 . -3) (undo-tree-id10991 . -3) (undo-tree-id10992 . -3) (undo-tree-id10993 . -3) (undo-tree-id10994 . -3) (undo-tree-id10995 . -3) (undo-tree-id10996 . -3) (undo-tree-id10997 . -3) (undo-tree-id10998 . -3) (undo-tree-id10999 . -3) (undo-tree-id11000 . -3) (undo-tree-id11001 . -3) (undo-tree-id11002 . -3) (undo-tree-id11003 . -3) (undo-tree-id11004 . -3) (undo-tree-id11005 . -3) (undo-tree-id11006 . -3) (undo-tree-id11007 . -3) (undo-tree-id11008 . -3) (undo-tree-id11009 . -3) (undo-tree-id11010 . -3) (undo-tree-id11011 . -3) (undo-tree-id11012 . -3) (undo-tree-id11013 . -3) (undo-tree-id11014 . -3) (undo-tree-id11015 . -3) (undo-tree-id11016 . -3) (undo-tree-id11017 . -3) (undo-tree-id11018 . -3) (undo-tree-id11019 . -3) (undo-tree-id11020 . -3) (undo-tree-id11021 . -3) (undo-tree-id11022 . -3) (undo-tree-id11023 . -3) (undo-tree-id11024 . -3) (undo-tree-id11025 . -3) (undo-tree-id11026 . -3) (undo-tree-id11027 . -3) (undo-tree-id11028 . -3) (undo-tree-id11029 . -3) (undo-tree-id11030 . -3) (undo-tree-id11031 . -3) (undo-tree-id11032 . -3) (undo-tree-id11033 . -3) (undo-tree-id11034 . -3) (undo-tree-id11035 . -3) (undo-tree-id11036 . -3) (undo-tree-id11037 . -3) (undo-tree-id11038 . -3) (undo-tree-id11039 . -3) (undo-tree-id11040 . -3) (undo-tree-id11041 . -3) (undo-tree-id11042 . -3) (undo-tree-id11043 . -3) (undo-tree-id11044 . -3) (undo-tree-id11045 . -3) (undo-tree-id11046 . -3) (undo-tree-id11047 . -3) (undo-tree-id11048 . -3) (undo-tree-id11049 . -3) (undo-tree-id11050 . -3) (undo-tree-id11051 . -3) (undo-tree-id11052 . -3) (undo-tree-id11053 . -3) (undo-tree-id11054 . -3) (undo-tree-id11055 . -3) (undo-tree-id11056 . -3) (undo-tree-id11057 . -3) (undo-tree-id11058 . -3) (undo-tree-id11059 . -3) (undo-tree-id11060 . -3) (undo-tree-id11061 . -3) (undo-tree-id11062 . -3) (undo-tree-id11063 . -3) (undo-tree-id11064 . -3) (undo-tree-id11065 . -3) (undo-tree-id11066 . -3) (undo-tree-id11067 . -3) (undo-tree-id11068 . -3) (undo-tree-id11069 . -3) (undo-tree-id11070 . -3) (undo-tree-id11071 . -3) (undo-tree-id11072 . -3) (undo-tree-id11073 . -3) (undo-tree-id11074 . -3) (undo-tree-id11075 . -3) (undo-tree-id11076 . -3) (undo-tree-id11077 . -3) (undo-tree-id11078 . -3) (undo-tree-id11079 . -3) (undo-tree-id11080 . -3) (undo-tree-id11081 . -3) (undo-tree-id11082 . -3) (undo-tree-id11083 . -3) (undo-tree-id11084 . -3) (undo-tree-id11085 . -3) (undo-tree-id11086 . -3) (undo-tree-id11087 . -3) (undo-tree-id11088 . -3) (undo-tree-id11089 . -3) (undo-tree-id11090 . -3) (undo-tree-id11091 . -3) (undo-tree-id11092 . -3) (undo-tree-id11093 . -3) (undo-tree-id11094 . -3) (undo-tree-id11095 . -3) (undo-tree-id11096 . -3) (undo-tree-id11097 . -3) (undo-tree-id11098 . -3) (undo-tree-id11099 . -3) (undo-tree-id11100 . -3) (undo-tree-id11101 . -3) (undo-tree-id11102 . -3) (undo-tree-id11103 . -3) (undo-tree-id11104 . -3) (undo-tree-id11105 . -3) (undo-tree-id11106 . -3) (undo-tree-id11107 . -3) (undo-tree-id11108 . -3) (undo-tree-id11109 . -3) (undo-tree-id11110 . -3) (undo-tree-id11111 . -3) (undo-tree-id11112 . -3) (undo-tree-id11113 . -3) (undo-tree-id11114 . -3) (undo-tree-id11115 . -3) (undo-tree-id11116 . -3) (undo-tree-id11117 . -3) (undo-tree-id11118 . -3) (undo-tree-id11119 . -3) (undo-tree-id11120 . -3) (undo-tree-id11121 . -3) (undo-tree-id11122 . -3) (undo-tree-id11123 . -3) (undo-tree-id11124 . -3) (undo-tree-id11125 . -3) (undo-tree-id11126 . -3) (undo-tree-id11127 . -3) (undo-tree-id11128 . -3) (undo-tree-id11129 . -3) (undo-tree-id11130 . -3) (undo-tree-id11131 . -3) (undo-tree-id11132 . -3) (undo-tree-id11133 . -3) (undo-tree-id11134 . -3) (undo-tree-id11135 . -3) (undo-tree-id11136 . -3) (undo-tree-id11137 . -3) (undo-tree-id11138 . -3) (undo-tree-id11139 . -3) (undo-tree-id11140 . -3) (undo-tree-id11141 . -3) (undo-tree-id11142 . -3) (undo-tree-id11143 . -3) (undo-tree-id11144 . -3) (undo-tree-id11145 . -3) (undo-tree-id11146 . -3) (undo-tree-id11147 . -3) (undo-tree-id11148 . -3) (undo-tree-id11149 . -3) (undo-tree-id11150 . -3) (undo-tree-id11151 . -3) (undo-tree-id11152 . -3) (undo-tree-id11153 . -3) (undo-tree-id11154 . -3) (undo-tree-id11155 . -3) (undo-tree-id11156 . -3) (undo-tree-id11157 . -3) (undo-tree-id11158 . -3) (undo-tree-id11159 . -3) (undo-tree-id11160 . -3) (undo-tree-id11161 . -3) (undo-tree-id11162 . -3) (undo-tree-id11163 . -3) (undo-tree-id11164 . -3) (undo-tree-id11165 . -3) (undo-tree-id11166 . -3) (undo-tree-id11167 . -3) (undo-tree-id11168 . -3) (undo-tree-id11169 . -3) (undo-tree-id11170 . -3) (undo-tree-id11171 . -3) (undo-tree-id11172 . -3) (undo-tree-id11173 . -3) (undo-tree-id11174 . -3) (undo-tree-id11175 . -3) (undo-tree-id11176 . -3) (undo-tree-id11177 . -3) (undo-tree-id11178 . -3) (undo-tree-id11179 . -3) (undo-tree-id11180 . -3) (undo-tree-id11181 . -3) (undo-tree-id11182 . -3) (undo-tree-id11183 . -3) (undo-tree-id11184 . -3) (undo-tree-id11185 . -3) (undo-tree-id11186 . -3) (undo-tree-id11187 . -3) (undo-tree-id11188 . -3) (undo-tree-id11189 . -3) (undo-tree-id11190 . -3) (undo-tree-id11191 . -3) (undo-tree-id11192 . -3) (undo-tree-id11193 . -3) (undo-tree-id11194 . -3) (undo-tree-id11195 . -3) (undo-tree-id11196 . -3) (undo-tree-id11197 . -3) (undo-tree-id11198 . -3) (undo-tree-id11199 . -3) (undo-tree-id11200 . -3) (undo-tree-id11201 . -3) (undo-tree-id11202 . -3) (undo-tree-id11203 . -3) (undo-tree-id11204 . -3) (undo-tree-id11205 . -3) (undo-tree-id11206 . -3) (undo-tree-id11207 . -3) (undo-tree-id11208 . -3) (undo-tree-id11209 . -3) (undo-tree-id11210 . -3) (undo-tree-id11211 . -3) (undo-tree-id11212 . -3) (undo-tree-id11213 . -3) (undo-tree-id11214 . -3) (undo-tree-id11215 . -3) (undo-tree-id11216 . -3) (undo-tree-id11217 . -3) (undo-tree-id11218 . -3) (undo-tree-id11219 . -3) (undo-tree-id11220 . -3) (undo-tree-id11221 . -3) (undo-tree-id11222 . -3) (undo-tree-id11223 . -3) (undo-tree-id11224 . -3) (undo-tree-id11225 . -3) (undo-tree-id11226 . -3) (undo-tree-id11227 . -3) (undo-tree-id11228 . -3) (undo-tree-id11229 . -3) (undo-tree-id11230 . -3) (undo-tree-id11231 . -3) (undo-tree-id11232 . -3) (undo-tree-id11233 . -3) (undo-tree-id11234 . -3) (undo-tree-id11235 . -3) (undo-tree-id11236 . -3) (undo-tree-id11237 . -3) (undo-tree-id11238 . -3) (undo-tree-id11239 . -3) (undo-tree-id11240 . -3) (undo-tree-id11241 . -3) (undo-tree-id11242 . -3) (undo-tree-id11243 . -3) (undo-tree-id11244 . -3) (undo-tree-id11245 . -3) (undo-tree-id11246 . -3) (undo-tree-id11247 . -3) (undo-tree-id11248 . -3) (undo-tree-id11249 . -3) (undo-tree-id11250 . -3) (undo-tree-id11251 . -3) (undo-tree-id11252 . -3) (undo-tree-id11253 . -3) (undo-tree-id11254 . -3) (undo-tree-id11255 . -3) (undo-tree-id11256 . -3) (undo-tree-id11257 . -3) (undo-tree-id11258 . -3) (undo-tree-id11259 . -3) (undo-tree-id11260 . -3) (undo-tree-id11261 . -3) (undo-tree-id11262 . -3) (undo-tree-id11263 . -3) (undo-tree-id11264 . -3) (undo-tree-id11265 . -3) (undo-tree-id11266 . -3) (undo-tree-id11267 . -3) (undo-tree-id11268 . -3) (undo-tree-id11269 . -3) (undo-tree-id11270 . -3) (undo-tree-id11271 . -3) (undo-tree-id11272 . -3) (undo-tree-id11273 . -3) (undo-tree-id11274 . -3) (undo-tree-id11275 . -3) (undo-tree-id11276 . -3) (undo-tree-id11277 . -3) (undo-tree-id11278 . -3) (undo-tree-id11279 . -3) (undo-tree-id11280 . -3) (undo-tree-id11281 . -3) (undo-tree-id11282 . -3) (undo-tree-id11283 . -3) (undo-tree-id11284 . -3) (undo-tree-id11285 . -3) (undo-tree-id11286 . -3) (undo-tree-id11287 . -3) (undo-tree-id11288 . -3) (undo-tree-id11289 . -3) (undo-tree-id11290 . -3) (undo-tree-id11291 . -3) (undo-tree-id11292 . -3) (undo-tree-id11293 . -3) (undo-tree-id11294 . -3) (undo-tree-id11295 . -3) (undo-tree-id11296 . -3) (undo-tree-id11297 . -3) (undo-tree-id11298 . -3) (undo-tree-id11299 . -3) (undo-tree-id11300 . -3) (undo-tree-id11301 . -3) (undo-tree-id11302 . -3) (undo-tree-id11303 . -3) (undo-tree-id11304 . -3) (undo-tree-id11305 . -3) (undo-tree-id11306 . -3) (undo-tree-id11307 . -3) (undo-tree-id11308 . -3) (undo-tree-id11309 . -3) (undo-tree-id11310 . -3) (undo-tree-id11311 . -3) (undo-tree-id11312 . -3) (undo-tree-id11313 . -3) (undo-tree-id11314 . -3) (undo-tree-id11315 . -3) (undo-tree-id11316 . -3) (undo-tree-id11317 . -3) (undo-tree-id11318 . -3) (undo-tree-id11319 . -3) (undo-tree-id11320 . -3) (undo-tree-id11321 . -3) (undo-tree-id11322 . -3) (undo-tree-id11323 . -3) (undo-tree-id11324 . -3) (undo-tree-id11325 . -3) (undo-tree-id11326 . -3) (undo-tree-id11327 . -3) (undo-tree-id11328 . -3) (undo-tree-id11329 . -3) (undo-tree-id11330 . -3) (undo-tree-id11331 . -3) (undo-tree-id11332 . -3) (undo-tree-id11333 . -3) (undo-tree-id11334 . -3) (undo-tree-id11335 . -3) (undo-tree-id11336 . -3) (undo-tree-id11337 . -3) (undo-tree-id11338 . -3) (undo-tree-id11339 . -3) (undo-tree-id11340 . -3) (undo-tree-id11341 . -3) (undo-tree-id11342 . -3) (undo-tree-id11343 . -3) (undo-tree-id11344 . -3) (undo-tree-id11345 . -3) (undo-tree-id11346 . -3) (undo-tree-id11347 . -3) (undo-tree-id11348 . -3) (undo-tree-id11349 . -3) (undo-tree-id11350 . -3) (undo-tree-id11351 . -3) (undo-tree-id11352 . -3) (undo-tree-id11353 . -3) (undo-tree-id11354 . -3) (undo-tree-id11355 . -3) (undo-tree-id11356 . -3) (undo-tree-id11357 . -3) (undo-tree-id11358 . -3) (undo-tree-id11359 . -3) (undo-tree-id11360 . -3) (undo-tree-id11361 . -3) (undo-tree-id11362 . -3) (undo-tree-id11363 . -3) (undo-tree-id11364 . -3) (undo-tree-id11365 . -3) (undo-tree-id11366 . -3) (undo-tree-id11367 . -3) (undo-tree-id11368 . -3) (undo-tree-id11369 . -3) (undo-tree-id11370 . -3) (undo-tree-id11371 . -3) (undo-tree-id11372 . -3) (undo-tree-id11373 . -3) (undo-tree-id11374 . -3) (undo-tree-id11375 . -3) (undo-tree-id11376 . -3) (undo-tree-id11377 . -3) (undo-tree-id11378 . -3) (undo-tree-id11379 . -3) (undo-tree-id11380 . -3) (undo-tree-id11381 . -3) (undo-tree-id11382 . -3) (undo-tree-id11383 . -3) (undo-tree-id11384 . -3) (undo-tree-id11385 . -3) (undo-tree-id11386 . -3) (undo-tree-id11387 . -3) (undo-tree-id11388 . -3) (undo-tree-id11389 . -3) (undo-tree-id11390 . -3) (undo-tree-id11391 . -3) (undo-tree-id11392 . -3) (undo-tree-id11393 . -3) (undo-tree-id11394 . -3) (undo-tree-id11395 . -3) (undo-tree-id11396 . -3) (undo-tree-id11397 . -3) (undo-tree-id11398 . -3) (undo-tree-id11399 . -3) (undo-tree-id11400 . -3) (undo-tree-id11401 . -3) (undo-tree-id11402 . -3) (undo-tree-id11403 . -3) (undo-tree-id11404 . -3) (undo-tree-id11405 . -3) (undo-tree-id11406 . -3) (undo-tree-id11407 . -3) (undo-tree-id11408 . -3) (undo-tree-id11409 . -3) (undo-tree-id11410 . -3) (undo-tree-id11411 . -3) (undo-tree-id11412 . -3) (undo-tree-id11413 . -3) (undo-tree-id11414 . -3) (undo-tree-id11415 . -3) (undo-tree-id11416 . -3) (undo-tree-id11417 . -3) (undo-tree-id11418 . -3) (undo-tree-id11419 . -3) (undo-tree-id11420 . -3) (undo-tree-id11421 . -3) (undo-tree-id11422 . -3) (undo-tree-id11423 . -3) (undo-tree-id11424 . -3) (undo-tree-id11425 . -3) (undo-tree-id11426 . -3) (undo-tree-id11427 . -3) (undo-tree-id11428 . -3) (undo-tree-id11429 . -3) (undo-tree-id11430 . -3) (undo-tree-id11431 . -3) (undo-tree-id11432 . -3) (undo-tree-id11433 . -3) (undo-tree-id11434 . -3) (undo-tree-id11435 . -3) (undo-tree-id11436 . -3) (undo-tree-id11437 . -3) (undo-tree-id11438 . -3) (undo-tree-id11439 . -3) (undo-tree-id11440 . -3) (undo-tree-id11441 . -3) (undo-tree-id11442 . -3) (undo-tree-id11443 . -3) (undo-tree-id11444 . -3) (undo-tree-id11445 . -3) (undo-tree-id11446 . -3) (undo-tree-id11447 . -3) (undo-tree-id11448 . -3) (undo-tree-id11449 . -3) (undo-tree-id11450 . -3) (undo-tree-id11451 . -3) (undo-tree-id11452 . -3) (undo-tree-id11453 . -3) (undo-tree-id11454 . -3) (undo-tree-id11455 . -3) (undo-tree-id11456 . -3) (undo-tree-id11457 . -3) (undo-tree-id11458 . -3) (undo-tree-id11459 . -3) (undo-tree-id11460 . -3) (undo-tree-id11461 . -3) (undo-tree-id11462 . -3) (undo-tree-id11463 . -3) (undo-tree-id11464 . -3) (undo-tree-id11465 . -3) (undo-tree-id11466 . -3) (undo-tree-id11467 . -3) (undo-tree-id11468 . -3) (undo-tree-id11469 . -3) (undo-tree-id11470 . -3) (undo-tree-id11471 . -3) (undo-tree-id11472 . -3) (undo-tree-id11473 . -3) (undo-tree-id11474 . -3) (undo-tree-id11475 . -3) (undo-tree-id11476 . -3) (undo-tree-id11477 . -3) (undo-tree-id11478 . -3) (undo-tree-id11479 . -3) (undo-tree-id11480 . -3) (undo-tree-id11481 . -3) (undo-tree-id11482 . -3) (undo-tree-id11483 . -3) (undo-tree-id11484 . -3) (undo-tree-id11485 . -3) (undo-tree-id11486 . -3) (undo-tree-id11487 . -3) (undo-tree-id11488 . -3) (undo-tree-id11489 . -3) (undo-tree-id11490 . -3) (undo-tree-id11491 . -3) (undo-tree-id11492 . -3) (undo-tree-id11493 . -3) (undo-tree-id11494 . -3) (undo-tree-id11495 . -3) (undo-tree-id11496 . -3) (undo-tree-id11497 . -3) (undo-tree-id11498 . -3) (undo-tree-id11499 . -3) (undo-tree-id11500 . -3) (undo-tree-id11501 . -3) (undo-tree-id11502 . -3) (undo-tree-id11503 . -3) (undo-tree-id11504 . -3) (undo-tree-id11505 . -3) (undo-tree-id11506 . -3) (undo-tree-id11507 . -3) (undo-tree-id11508 . -3) (undo-tree-id11509 . -3) (undo-tree-id11510 . -3) (undo-tree-id11511 . -3) (undo-tree-id11512 . -3) (undo-tree-id11513 . -3) (undo-tree-id11514 . -3) (undo-tree-id11515 . -3) (undo-tree-id11516 . -3) (undo-tree-id11517 . -3) (undo-tree-id11518 . -3) (undo-tree-id11519 . -3) (undo-tree-id11520 . -3) (undo-tree-id11521 . -3) (undo-tree-id11522 . -3) (undo-tree-id11523 . -3) (undo-tree-id11524 . -3) (undo-tree-id11525 . -3) (undo-tree-id11526 . -3) (undo-tree-id11527 . -3) (undo-tree-id11528 . -3) (undo-tree-id11529 . -3) (undo-tree-id11530 . -3) (undo-tree-id11531 . -3) (undo-tree-id11532 . -3) (undo-tree-id11533 . -3) (undo-tree-id11534 . -3) (undo-tree-id11535 . -3) (undo-tree-id11536 . -3) (undo-tree-id11537 . -3) (undo-tree-id11538 . -3) (undo-tree-id11539 . -3) (undo-tree-id11540 . -3) (undo-tree-id11541 . -3) (undo-tree-id11542 . -3) (undo-tree-id11543 . -3) (undo-tree-id11544 . -3) (undo-tree-id11545 . -3) (undo-tree-id11546 . -3) (undo-tree-id11547 . -3) (undo-tree-id11548 . -3) (undo-tree-id11549 . -3) (undo-tree-id11550 . -3) (undo-tree-id11551 . -3) (undo-tree-id11552 . -3) (undo-tree-id11553 . -3) (undo-tree-id11554 . -3) (undo-tree-id11555 . -3) (undo-tree-id11556 . -3) (undo-tree-id11557 . -3) (undo-tree-id11558 . -3) (undo-tree-id11559 . -3) (undo-tree-id11560 . -3) (undo-tree-id11561 . -3) (undo-tree-id11562 . -3) (undo-tree-id11563 . -3) (undo-tree-id11564 . -3) (undo-tree-id11565 . -3) (undo-tree-id11566 . -3) (undo-tree-id11567 . -3) (undo-tree-id11568 . -3) (undo-tree-id11569 . -3) (undo-tree-id11570 . -3) (undo-tree-id11571 . -3) (undo-tree-id11572 . -3) (undo-tree-id11573 . -3) (undo-tree-id11574 . -3) (undo-tree-id11575 . -3) (undo-tree-id11576 . -3) (undo-tree-id11577 . -3) (undo-tree-id11578 . -3) (undo-tree-id11579 . -3) (undo-tree-id11580 . -3) (undo-tree-id11581 . -3) (undo-tree-id11582 . -3) (undo-tree-id11583 . -3) (undo-tree-id11584 . -3) (undo-tree-id11585 . -3) (undo-tree-id11586 . -3) (undo-tree-id11587 . -3) (undo-tree-id11588 . -3) (undo-tree-id11589 . -3) (undo-tree-id11590 . -3) (undo-tree-id11591 . -3) (undo-tree-id11592 . -3) (undo-tree-id11593 . -3) (undo-tree-id11594 . -3) (undo-tree-id11595 . -3) (undo-tree-id11596 . -3) (undo-tree-id11597 . -3) (undo-tree-id11598 . -3) (undo-tree-id11599 . -3) (undo-tree-id11600 . -3) (49762 . 49765)) (25725 33702 880042 136000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face org-level-3)) . 49766)) nil (25725 33726 883622 537000) 0 nil])
nil
nil
([nil nil ((#(" " 0 1 (fontified t face org-level-3)) . 49766) (undo-tree-id11615 . -1) (undo-tree-id11616 . -1)) nil (25725 33726 883618 276000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face org-level-3)) . 49766) (undo-tree-id11613 . -1) (undo-tree-id11614 . -1)) nil (25725 33726 884026 579000) 0 nil])
([nil nil ((49830 . 49835) 49766) nil (25725 33729 595280 653000) 0 nil] [nil nil ((#("6" 0 1 (fontified t face org-level-3)) . 49766) (undo-tree-id11611 . -1) (undo-tree-id11612 . -1)) ((49766 . 49767)) (25725 33726 882970 831000) 0 nil])
([nil nil ((nil rear-nonsticky nil 50007 . 50008) (nil fontified nil 50007 . 50008) (nil fontified nil 50006 . 50007) (nil fontified nil 49998 . 50006) (nil fontified nil 49997 . 49998) (nil fontified nil 49951 . 49997) (49951 . 50008) (#("s" 0 1 (fontified t)) . -49951) (undo-tree-id11617 . -1) (#("r" 0 1 (fontified t)) . -49952) (undo-tree-id11618 . -1) 49953 (49951 . 49953) (49950 . 49951) (49933 . 49950) (#("b" 0 1 (fontified t)) . -49933) (undo-tree-id11619 . -1) 49934 (49924 . 49934) (49903 . 49924) (#(" " 0 1 (fontified t)) . -49903) (undo-tree-id11620 . -1) 49904 (49903 . 49904) (49898 . 49903) (49877 . 49898) (49856 . 49877) (49835 . 49856) (t 25725 33729 696369 327000)) nil (25725 34269 820199 164000) 0 nil])
nil
([nil nil ((49997 . 49998) 49951) nil (25725 34269 820150 624000) 0 nil])
([nil nil ((nil rear-nonsticky nil 50298 . 50299) (nil fontified nil 49998 . 50299) (49998 . 50299) (t 25725 34269 914125 167000)) nil (25725 34283 97253 976000) 0 nil])
([nil nil ((49997 . 50001) (49987 . 49997) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -49987) (undo-tree-id12660 . -1) (#("h" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -49988) (undo-tree-id12661 . -1) 49989 (49985 . 49989) (#(")" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face (rainbow-delimiters-depth-1-face org-block-begin-line))) . -49985) (undo-tree-id12662 . -1) 49986 (49985 . 49986) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -49985) (undo-tree-id12663 . -1) 49986 (49985 . 49986) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -49985) (undo-tree-id12664 . -1) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -49986) (undo-tree-id12665 . -1) 49987 (49986 . 49987) (#("h" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -49986) (undo-tree-id12666 . -1) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -49987) (undo-tree-id12667 . -1) 49988 (49978 . 49988) (49976 . 49978) (#("c" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -49976) (undo-tree-id12668 . -1) (#("h" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -49977) (undo-tree-id12669 . -1) (#("a" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -49978) (undo-tree-id12670 . -1) 49979 (49976 . 49979) (#("creatingelements.html" 0 21 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 49976) (undo-tree-id12671 . -20)) nil (25725 34308 778932 770000) 0 nil] [nil nil ((49955 . 49956) (49951 . 49955) (49951 . 49952) (#("#+BEGIN_SRC html :tangle creatingelements.html
" 0 46 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 46 47 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 49951) (undo-tree-id11621 . -47) (undo-tree-id11622 . -46) (undo-tree-id11623 . -47) (undo-tree-id11624 . -25) (undo-tree-id11625 . -25) (undo-tree-id11626 . -25) (undo-tree-id11627 . -25) (undo-tree-id11628 . -25) (undo-tree-id11629 . -25) (undo-tree-id11630 . -25) (undo-tree-id11631 . -25) (undo-tree-id11632 . -25) (undo-tree-id11633 . -25) (undo-tree-id11634 . -25) (undo-tree-id11635 . -25) (undo-tree-id11636 . -25) (undo-tree-id11637 . -25) (undo-tree-id11638 . -25) (undo-tree-id11639 . -25) (undo-tree-id11640 . -25) (undo-tree-id11641 . -25) (undo-tree-id11642 . -25) (undo-tree-id11643 . -25) (undo-tree-id11644 . -25) (undo-tree-id11645 . -25) (undo-tree-id11646 . -25) (undo-tree-id11647 . -25) (undo-tree-id11648 . -25) (undo-tree-id11649 . -25) (undo-tree-id11650 . -25) (undo-tree-id11651 . -25) (undo-tree-id11652 . -25) (undo-tree-id11653 . -25) (undo-tree-id11654 . -25) (undo-tree-id11655 . -25) (undo-tree-id11656 . -25) (undo-tree-id11657 . -25) (undo-tree-id11658 . -25) (undo-tree-id11659 . -25) (undo-tree-id11660 . -25) (undo-tree-id11661 . -25) (undo-tree-id11662 . -25) (undo-tree-id11663 . -25) (undo-tree-id11664 . -25) (undo-tree-id11665 . -25) (undo-tree-id11666 . -25) (undo-tree-id11667 . -25) (undo-tree-id11668 . -25) (undo-tree-id11669 . -25) (undo-tree-id11670 . -25) (undo-tree-id11671 . -25) (undo-tree-id11672 . -25) (undo-tree-id11673 . -25) (undo-tree-id11674 . -25) (undo-tree-id11675 . -25) (undo-tree-id11676 . -25) (undo-tree-id11677 . -25) (undo-tree-id11678 . -25) (undo-tree-id11679 . -25) (undo-tree-id11680 . -25) (undo-tree-id11681 . -25) (undo-tree-id11682 . -25) (undo-tree-id11683 . -25) (undo-tree-id11684 . -25) (undo-tree-id11685 . -25) (undo-tree-id11686 . -25) (undo-tree-id11687 . -25) (undo-tree-id11688 . -25) (undo-tree-id11689 . -25) (undo-tree-id11690 . -25) (undo-tree-id11691 . -25) (undo-tree-id11692 . -25) (undo-tree-id11693 . -25) (undo-tree-id11694 . -25) (undo-tree-id11695 . -25) (undo-tree-id11696 . -25) (undo-tree-id11697 . -25) (undo-tree-id11698 . -25) (undo-tree-id11699 . -25) (undo-tree-id11700 . -25) (undo-tree-id11701 . -25) (undo-tree-id11702 . -25) (undo-tree-id11703 . -25) (undo-tree-id11704 . -25) (undo-tree-id11705 . -25) (undo-tree-id11706 . -25) (undo-tree-id11707 . -25) (undo-tree-id11708 . -25) (undo-tree-id11709 . -25) (undo-tree-id11710 . -25) (undo-tree-id11711 . -25) (undo-tree-id11712 . -25) (undo-tree-id11713 . -25) (undo-tree-id11714 . -25) (undo-tree-id11715 . -25) (undo-tree-id11716 . -25) (undo-tree-id11717 . -25) (undo-tree-id11718 . -25) (undo-tree-id11719 . -25) (undo-tree-id11720 . -25) (undo-tree-id11721 . -25) (undo-tree-id11722 . -25) (undo-tree-id11723 . -25) (undo-tree-id11724 . -25) (undo-tree-id11725 . -25) (undo-tree-id11726 . -25) (undo-tree-id11727 . -25) (undo-tree-id11728 . -25) (undo-tree-id11729 . -25) (undo-tree-id11730 . -25) (undo-tree-id11731 . -25) (undo-tree-id11732 . -25) (undo-tree-id11733 . -25) (undo-tree-id11734 . -25) (undo-tree-id11735 . -25) (undo-tree-id11736 . -25) (undo-tree-id11737 . -25) (undo-tree-id11738 . -25) (undo-tree-id11739 . -25) (undo-tree-id11740 . -25) (undo-tree-id11741 . -25) (undo-tree-id11742 . -25) (undo-tree-id11743 . -25) (undo-tree-id11744 . -25) (undo-tree-id11745 . -25) (undo-tree-id11746 . -25) (undo-tree-id11747 . -25) (undo-tree-id11748 . -25) (undo-tree-id11749 . -25) (undo-tree-id11750 . -25) (undo-tree-id11751 . -25) (undo-tree-id11752 . -25) (undo-tree-id11753 . -25) (undo-tree-id11754 . -25) (undo-tree-id11755 . -25) (undo-tree-id11756 . -25) (undo-tree-id11757 . -25) (undo-tree-id11758 . -25) (undo-tree-id11759 . -25) (undo-tree-id11760 . -25) (undo-tree-id11761 . -25) (undo-tree-id11762 . -25) (undo-tree-id11763 . -25) (undo-tree-id11764 . -25) (undo-tree-id11765 . -25) (undo-tree-id11766 . -25) (undo-tree-id11767 . -25) (undo-tree-id11768 . -25) (undo-tree-id11769 . -25) (undo-tree-id11770 . -25) (undo-tree-id11771 . -25) (undo-tree-id11772 . -25) (undo-tree-id11773 . -25) (undo-tree-id11774 . -25) (undo-tree-id11775 . -25) (undo-tree-id11776 . -25) (undo-tree-id11777 . -25) (undo-tree-id11778 . -25) (undo-tree-id11779 . -25) (undo-tree-id11780 . -25) (undo-tree-id11781 . -25) (undo-tree-id11782 . -25) (undo-tree-id11783 . -25) (undo-tree-id11784 . -25) (undo-tree-id11785 . -25) (undo-tree-id11786 . -25) (undo-tree-id11787 . -25) (undo-tree-id11788 . -25) (undo-tree-id11789 . -25) (undo-tree-id11790 . -25) (undo-tree-id11791 . -25) (undo-tree-id11792 . -25) (undo-tree-id11793 . -25) (undo-tree-id11794 . -25) (undo-tree-id11795 . -25) (undo-tree-id11796 . -25) (undo-tree-id11797 . -25) (undo-tree-id11798 . -25) (undo-tree-id11799 . -25) (undo-tree-id11800 . -25) (undo-tree-id11801 . -25) (undo-tree-id11802 . -25) (undo-tree-id11803 . -25) (undo-tree-id11804 . -25) (undo-tree-id11805 . -25) (undo-tree-id11806 . -25) (undo-tree-id11807 . -25) (undo-tree-id11808 . -25) (undo-tree-id11809 . -25) (undo-tree-id11810 . -25) (undo-tree-id11811 . -25) (undo-tree-id11812 . -25) (undo-tree-id11813 . -25) (undo-tree-id11814 . -25) (undo-tree-id11815 . -25) (undo-tree-id11816 . -25) (undo-tree-id11817 . -25) (undo-tree-id11818 . -25) (undo-tree-id11819 . -25) (undo-tree-id11820 . -25) (undo-tree-id11821 . -25) (undo-tree-id11822 . -25) (undo-tree-id11823 . -25) (undo-tree-id11824 . -25) (undo-tree-id11825 . -25) (undo-tree-id11826 . -25) (undo-tree-id11827 . -25) (undo-tree-id11828 . -25) (undo-tree-id11829 . -25) (undo-tree-id11830 . -25) (undo-tree-id11831 . -25) (undo-tree-id11832 . -25) (undo-tree-id11833 . -25) (undo-tree-id11834 . -25) (undo-tree-id11835 . -25) (undo-tree-id11836 . -25) (undo-tree-id11837 . -25) (undo-tree-id11838 . -25) (undo-tree-id11839 . -25) (undo-tree-id11840 . -25) (undo-tree-id11841 . -25) (undo-tree-id11842 . -25) (undo-tree-id11843 . -25) (undo-tree-id11844 . -25) (undo-tree-id11845 . -25) (undo-tree-id11846 . -25) (undo-tree-id11847 . -25) (undo-tree-id11848 . -25) (undo-tree-id11849 . -25) (undo-tree-id11850 . -25) (undo-tree-id11851 . -25) (undo-tree-id11852 . -25) (undo-tree-id11853 . -25) (undo-tree-id11854 . -25) (undo-tree-id11855 . -25) (undo-tree-id11856 . -25) (undo-tree-id11857 . -25) (undo-tree-id11858 . -25) (undo-tree-id11859 . -25) (undo-tree-id11860 . -25) (undo-tree-id11861 . -25) (undo-tree-id11862 . -25) (undo-tree-id11863 . -25) (undo-tree-id11864 . -25) (undo-tree-id11865 . -25) (undo-tree-id11866 . -25) (undo-tree-id11867 . -25) (undo-tree-id11868 . -25) (undo-tree-id11869 . -25) (undo-tree-id11870 . -25) (undo-tree-id11871 . -25) (undo-tree-id11872 . -25) (undo-tree-id11873 . -25) (undo-tree-id11874 . -25) (undo-tree-id11875 . -25) (undo-tree-id11876 . -25) (undo-tree-id11877 . -25) (undo-tree-id11878 . -25) (undo-tree-id11879 . -25) (undo-tree-id11880 . -25) (undo-tree-id11881 . -25) (undo-tree-id11882 . -25) (undo-tree-id11883 . -25) (undo-tree-id11884 . -25) (undo-tree-id11885 . -25) (undo-tree-id11886 . -25) (undo-tree-id11887 . -25) (undo-tree-id11888 . -25) (undo-tree-id11889 . -25) (undo-tree-id11890 . -25) (undo-tree-id11891 . -25) (undo-tree-id11892 . -25) (undo-tree-id11893 . -25) (undo-tree-id11894 . -25) (undo-tree-id11895 . -25) (undo-tree-id11896 . -25) (undo-tree-id11897 . -25) (undo-tree-id11898 . -25) (undo-tree-id11899 . -25) (undo-tree-id11900 . -25) (undo-tree-id11901 . -25) (undo-tree-id11902 . -25) (undo-tree-id11903 . -25) (undo-tree-id11904 . -25) (undo-tree-id11905 . -25) (undo-tree-id11906 . -25) (undo-tree-id11907 . -25) (undo-tree-id11908 . -25) (undo-tree-id11909 . -25) (undo-tree-id11910 . -25) (undo-tree-id11911 . -25) (undo-tree-id11912 . -25) (undo-tree-id11913 . -25) (undo-tree-id11914 . -25) (undo-tree-id11915 . -25) (undo-tree-id11916 . -25) (undo-tree-id11917 . -25) (undo-tree-id11918 . -25) (undo-tree-id11919 . -25) (undo-tree-id11920 . -25) (undo-tree-id11921 . -25) (undo-tree-id11922 . -25) (undo-tree-id11923 . -25) (undo-tree-id11924 . -25) (undo-tree-id11925 . -25) (undo-tree-id11926 . -25) (undo-tree-id11927 . -25) (undo-tree-id11928 . -25) (undo-tree-id11929 . -25) (undo-tree-id11930 . -25) (undo-tree-id11931 . -25) (undo-tree-id11932 . -25) (undo-tree-id11933 . -25) (undo-tree-id11934 . -25) (undo-tree-id11935 . -25) (undo-tree-id11936 . -25) (undo-tree-id11937 . -25) (undo-tree-id11938 . -25) (undo-tree-id11939 . -25) (undo-tree-id11940 . -25) (undo-tree-id11941 . -25) (undo-tree-id11942 . -25) (undo-tree-id11943 . -25) (undo-tree-id11944 . -25) (undo-tree-id11945 . -25) (undo-tree-id11946 . -25) (undo-tree-id11947 . -25) (undo-tree-id11948 . -25) (undo-tree-id11949 . -25) (undo-tree-id11950 . -25) (undo-tree-id11951 . -25) (undo-tree-id11952 . -25) (undo-tree-id11953 . -25) (undo-tree-id11954 . -25) (undo-tree-id11955 . -25) (undo-tree-id11956 . -25) (undo-tree-id11957 . -25) (undo-tree-id11958 . -25) (undo-tree-id11959 . -25) (undo-tree-id11960 . -25) (undo-tree-id11961 . -25) (undo-tree-id11962 . -25) (undo-tree-id11963 . -25) (undo-tree-id11964 . -25) (undo-tree-id11965 . -25) (undo-tree-id11966 . -25) (undo-tree-id11967 . -25) (undo-tree-id11968 . -25) (undo-tree-id11969 . -25) (undo-tree-id11970 . -25) (undo-tree-id11971 . -25) (undo-tree-id11972 . -25) (undo-tree-id11973 . -25) (undo-tree-id11974 . -25) (undo-tree-id11975 . -25) (undo-tree-id11976 . -25) (undo-tree-id11977 . -25) (undo-tree-id11978 . -25) (undo-tree-id11979 . -25) (undo-tree-id11980 . -25) (undo-tree-id11981 . -25) (undo-tree-id11982 . -25) (undo-tree-id11983 . -25) (undo-tree-id11984 . -25) (undo-tree-id11985 . -25) (undo-tree-id11986 . -25) (undo-tree-id11987 . -25) (undo-tree-id11988 . -25) (undo-tree-id11989 . -25) (undo-tree-id11990 . -25) (undo-tree-id11991 . -25) (undo-tree-id11992 . -25) (undo-tree-id11993 . -25) (undo-tree-id11994 . -25) (undo-tree-id11995 . -25) (undo-tree-id11996 . -25) (undo-tree-id11997 . -25) (undo-tree-id11998 . -25) (undo-tree-id11999 . -25) (undo-tree-id12000 . -25) (undo-tree-id12001 . -25) (undo-tree-id12002 . -25) (undo-tree-id12003 . -25) (undo-tree-id12004 . -25) (undo-tree-id12005 . -25) (undo-tree-id12006 . -25) (undo-tree-id12007 . -25) (undo-tree-id12008 . -25) (undo-tree-id12009 . -25) (undo-tree-id12010 . -25) (undo-tree-id12011 . -25) (undo-tree-id12012 . -25) (undo-tree-id12013 . -25) (undo-tree-id12014 . -25) (undo-tree-id12015 . -25) (undo-tree-id12016 . -25) (undo-tree-id12017 . -25) (undo-tree-id12018 . -25) (undo-tree-id12019 . -25) (undo-tree-id12020 . -25) (undo-tree-id12021 . -25) (undo-tree-id12022 . -25) (undo-tree-id12023 . -25) (undo-tree-id12024 . -25) (undo-tree-id12025 . -25) (undo-tree-id12026 . -25) (undo-tree-id12027 . -25) (undo-tree-id12028 . -25) (undo-tree-id12029 . -25) (undo-tree-id12030 . -25) (undo-tree-id12031 . -25) (undo-tree-id12032 . -25) (undo-tree-id12033 . -25) (undo-tree-id12034 . -25) (undo-tree-id12035 . -25) (undo-tree-id12036 . -25) (undo-tree-id12037 . -25) (undo-tree-id12038 . -25) (undo-tree-id12039 . -25) (undo-tree-id12040 . -25) (undo-tree-id12041 . -25) (undo-tree-id12042 . -25) (undo-tree-id12043 . -25) (undo-tree-id12044 . -25) (undo-tree-id12045 . -25) (undo-tree-id12046 . -25) (undo-tree-id12047 . -25) (undo-tree-id12048 . -25) (undo-tree-id12049 . -25) (undo-tree-id12050 . -25) (undo-tree-id12051 . -25) (undo-tree-id12052 . -25) (undo-tree-id12053 . -25) (undo-tree-id12054 . -25) (undo-tree-id12055 . -25) (undo-tree-id12056 . -25) (undo-tree-id12057 . -25) (undo-tree-id12058 . -25) (undo-tree-id12059 . -25) (undo-tree-id12060 . -25) (undo-tree-id12061 . -25) (undo-tree-id12062 . -25) (undo-tree-id12063 . -25) (undo-tree-id12064 . -25) (undo-tree-id12065 . -25) (undo-tree-id12066 . -25) (undo-tree-id12067 . -25) (undo-tree-id12068 . -25) (undo-tree-id12069 . -25) (undo-tree-id12070 . -25) (undo-tree-id12071 . -25) (undo-tree-id12072 . -25) (undo-tree-id12073 . -25) (undo-tree-id12074 . -25) (undo-tree-id12075 . -25) (undo-tree-id12076 . -25) (undo-tree-id12077 . -25) (undo-tree-id12078 . -25) (undo-tree-id12079 . -25) (undo-tree-id12080 . -25) (undo-tree-id12081 . -25) (undo-tree-id12082 . -25) (undo-tree-id12083 . -25) (undo-tree-id12084 . -25) (undo-tree-id12085 . -25) (undo-tree-id12086 . -25) (undo-tree-id12087 . -25) (undo-tree-id12088 . -25) (undo-tree-id12089 . -25) (undo-tree-id12090 . -25) (undo-tree-id12091 . -25) (undo-tree-id12092 . -25) (undo-tree-id12093 . -25) (undo-tree-id12094 . -25) (undo-tree-id12095 . -25) (undo-tree-id12096 . -25) (undo-tree-id12097 . -25) (undo-tree-id12098 . -25) (undo-tree-id12099 . -25) (undo-tree-id12100 . -25) (undo-tree-id12101 . -25) (undo-tree-id12102 . -25) (undo-tree-id12103 . -25) (undo-tree-id12104 . -25) (undo-tree-id12105 . -25) (undo-tree-id12106 . -25) (undo-tree-id12107 . -25) (undo-tree-id12108 . -25) (undo-tree-id12109 . -25) (undo-tree-id12110 . -25) (undo-tree-id12111 . -25) (undo-tree-id12112 . -25) (undo-tree-id12113 . -25) (undo-tree-id12114 . -25) (undo-tree-id12115 . -25) (undo-tree-id12116 . -25) (undo-tree-id12117 . -25) (undo-tree-id12118 . -25) (undo-tree-id12119 . -25) (undo-tree-id12120 . -25) (undo-tree-id12121 . -25) (undo-tree-id12122 . -25) (undo-tree-id12123 . -25) (undo-tree-id12124 . -25) (undo-tree-id12125 . -25) (undo-tree-id12126 . -25) (undo-tree-id12127 . -25) (undo-tree-id12128 . -25) (undo-tree-id12129 . -25) (undo-tree-id12130 . -25) (undo-tree-id12131 . -25) (undo-tree-id12132 . -25) (undo-tree-id12133 . -25) (undo-tree-id12134 . -25) (undo-tree-id12135 . -25) (undo-tree-id12136 . -25) (undo-tree-id12137 . -25) (undo-tree-id12138 . -25) (undo-tree-id12139 . -25) (undo-tree-id12140 . -25) (undo-tree-id12141 . -25) (undo-tree-id12142 . -25) (undo-tree-id12143 . -25) (undo-tree-id12144 . -25) (undo-tree-id12145 . -25) (undo-tree-id12146 . -25) (undo-tree-id12147 . -25) (undo-tree-id12148 . -25) (undo-tree-id12149 . -25) (undo-tree-id12150 . -25) (undo-tree-id12151 . -25) (undo-tree-id12152 . -25) (undo-tree-id12153 . -25) (undo-tree-id12154 . -25) (undo-tree-id12155 . -25) (undo-tree-id12156 . -25) (undo-tree-id12157 . -25) (undo-tree-id12158 . -25) (undo-tree-id12159 . -25) (undo-tree-id12160 . -25) (undo-tree-id12161 . -25) (undo-tree-id12162 . -25) (undo-tree-id12163 . -25) (undo-tree-id12164 . -25) (undo-tree-id12165 . -25) (undo-tree-id12166 . -25) (undo-tree-id12167 . -25) (undo-tree-id12168 . -25) (undo-tree-id12169 . -25) (undo-tree-id12170 . -25) (undo-tree-id12171 . -25) (undo-tree-id12172 . -25) (undo-tree-id12173 . -25) (undo-tree-id12174 . -25) (undo-tree-id12175 . -25) (undo-tree-id12176 . -25) (undo-tree-id12177 . -25) (undo-tree-id12178 . -25) (undo-tree-id12179 . -25) (undo-tree-id12180 . -25) (undo-tree-id12181 . -25) (undo-tree-id12182 . -25) (undo-tree-id12183 . -25) (undo-tree-id12184 . -25) (undo-tree-id12185 . -25) (undo-tree-id12186 . -25) (undo-tree-id12187 . -25) (undo-tree-id12188 . -25) (undo-tree-id12189 . -25) (undo-tree-id12190 . -25) (undo-tree-id12191 . -25) (undo-tree-id12192 . -25) (undo-tree-id12193 . -25) (undo-tree-id12194 . -25) (undo-tree-id12195 . -25) (undo-tree-id12196 . -25) (undo-tree-id12197 . -25) (undo-tree-id12198 . -25) (undo-tree-id12199 . -25) (undo-tree-id12200 . -25) (undo-tree-id12201 . -25) (undo-tree-id12202 . -25) (undo-tree-id12203 . -25) (undo-tree-id12204 . -25) (undo-tree-id12205 . -25) (undo-tree-id12206 . -25) (undo-tree-id12207 . -25) (undo-tree-id12208 . -25) (undo-tree-id12209 . -25) (undo-tree-id12210 . -25) (undo-tree-id12211 . -25) (undo-tree-id12212 . -25) (undo-tree-id12213 . -25) (undo-tree-id12214 . -25) (undo-tree-id12215 . -25) (undo-tree-id12216 . -25) (undo-tree-id12217 . -25) (undo-tree-id12218 . -25) (undo-tree-id12219 . -25) (undo-tree-id12220 . -25) (undo-tree-id12221 . -25) (undo-tree-id12222 . -25) (undo-tree-id12223 . -25) (undo-tree-id12224 . -25) (undo-tree-id12225 . -25) (undo-tree-id12226 . -25) (undo-tree-id12227 . -25) (undo-tree-id12228 . -25) (undo-tree-id12229 . -25) (undo-tree-id12230 . -25) (undo-tree-id12231 . -25) (undo-tree-id12232 . -25) (undo-tree-id12233 . -25) (undo-tree-id12234 . -25) (undo-tree-id12235 . -25) (undo-tree-id12236 . -25) (undo-tree-id12237 . -25) (undo-tree-id12238 . -25) (undo-tree-id12239 . -25) (undo-tree-id12240 . -25) (undo-tree-id12241 . -25) (undo-tree-id12242 . -25) (undo-tree-id12243 . -25) (undo-tree-id12244 . -25) (undo-tree-id12245 . -25) (undo-tree-id12246 . -25) (undo-tree-id12247 . -25) (undo-tree-id12248 . -25) (undo-tree-id12249 . -25) (undo-tree-id12250 . -25) (undo-tree-id12251 . -25) (undo-tree-id12252 . -25) (undo-tree-id12253 . -25) (undo-tree-id12254 . -25) (undo-tree-id12255 . -25) (undo-tree-id12256 . -25) (undo-tree-id12257 . -25) (undo-tree-id12258 . -25) (undo-tree-id12259 . -25) (undo-tree-id12260 . -25) (undo-tree-id12261 . -25) (undo-tree-id12262 . -25) (undo-tree-id12263 . -25) (undo-tree-id12264 . -25) (undo-tree-id12265 . -25) (undo-tree-id12266 . -25) (undo-tree-id12267 . -25) (undo-tree-id12268 . -25) (undo-tree-id12269 . -25) (undo-tree-id12270 . -25) (undo-tree-id12271 . -25) (undo-tree-id12272 . -25) (undo-tree-id12273 . -25) (undo-tree-id12274 . -25) (undo-tree-id12275 . -25) (undo-tree-id12276 . -25) (undo-tree-id12277 . -25) (undo-tree-id12278 . -25) (undo-tree-id12279 . -25) (undo-tree-id12280 . -25) (undo-tree-id12281 . -25) (undo-tree-id12282 . -25) (undo-tree-id12283 . -25) (undo-tree-id12284 . -25) (undo-tree-id12285 . -25) (undo-tree-id12286 . -25) (undo-tree-id12287 . -25) (undo-tree-id12288 . -25) (undo-tree-id12289 . -25) (undo-tree-id12290 . -25) (undo-tree-id12291 . -25) (undo-tree-id12292 . -25) (undo-tree-id12293 . -25) (undo-tree-id12294 . -25) (undo-tree-id12295 . -25) (undo-tree-id12296 . -25) (undo-tree-id12297 . -25) (undo-tree-id12298 . -25) (undo-tree-id12299 . -25) (undo-tree-id12300 . -25) (undo-tree-id12301 . -25) (undo-tree-id12302 . -25) (undo-tree-id12303 . -25) (undo-tree-id12304 . -25) (undo-tree-id12305 . -25) (undo-tree-id12306 . -25) (undo-tree-id12307 . -25) (undo-tree-id12308 . -25) (undo-tree-id12309 . -25) (undo-tree-id12310 . -25) (undo-tree-id12311 . -25) (undo-tree-id12312 . -25) (undo-tree-id12313 . -25) (undo-tree-id12314 . -25) (undo-tree-id12315 . -25) (undo-tree-id12316 . -25) (undo-tree-id12317 . -25) (undo-tree-id12318 . -25) (undo-tree-id12319 . -25) (undo-tree-id12320 . -25) (undo-tree-id12321 . -25) (undo-tree-id12322 . -25) (undo-tree-id12323 . -25) (undo-tree-id12324 . -25) (undo-tree-id12325 . -25) (undo-tree-id12326 . -25) (undo-tree-id12327 . -25) (undo-tree-id12328 . -25) (undo-tree-id12329 . -25) (undo-tree-id12330 . -25) (undo-tree-id12331 . -25) (undo-tree-id12332 . -25) (undo-tree-id12333 . -25) (undo-tree-id12334 . -25) (undo-tree-id12335 . -25) (undo-tree-id12336 . -25) (undo-tree-id12337 . -25) (undo-tree-id12338 . -25) (undo-tree-id12339 . -25) (undo-tree-id12340 . -25) (undo-tree-id12341 . -25) (undo-tree-id12342 . -25) (undo-tree-id12343 . -25) (undo-tree-id12344 . -25) (undo-tree-id12345 . -25) (undo-tree-id12346 . -25) (undo-tree-id12347 . -25) (undo-tree-id12348 . -25) (undo-tree-id12349 . -25) (undo-tree-id12350 . -25) (undo-tree-id12351 . -25) (undo-tree-id12352 . -25) (undo-tree-id12353 . -25) (undo-tree-id12354 . -25) (undo-tree-id12355 . -25) (undo-tree-id12356 . -25) (undo-tree-id12357 . -25) (undo-tree-id12358 . -25) (undo-tree-id12359 . -25) (undo-tree-id12360 . -25) (undo-tree-id12361 . -25) (undo-tree-id12362 . -25) (undo-tree-id12363 . -25) (undo-tree-id12364 . -25) (undo-tree-id12365 . -25) (undo-tree-id12366 . -25) (undo-tree-id12367 . -25) (undo-tree-id12368 . -25) (undo-tree-id12369 . -25) (undo-tree-id12370 . -25) (undo-tree-id12371 . -25) (undo-tree-id12372 . -25) (undo-tree-id12373 . -25) (undo-tree-id12374 . -25) (undo-tree-id12375 . -25) (undo-tree-id12376 . -25) (undo-tree-id12377 . -25) (undo-tree-id12378 . -25) (undo-tree-id12379 . -25) (undo-tree-id12380 . -25) (undo-tree-id12381 . -25) (undo-tree-id12382 . -25) (undo-tree-id12383 . -25) (undo-tree-id12384 . -25) (undo-tree-id12385 . -25) (undo-tree-id12386 . -25) (undo-tree-id12387 . -25) (undo-tree-id12388 . -25) (undo-tree-id12389 . -25) (undo-tree-id12390 . -25) (undo-tree-id12391 . -25) (undo-tree-id12392 . -25) (undo-tree-id12393 . -25) (undo-tree-id12394 . -25) (undo-tree-id12395 . -25) (undo-tree-id12396 . -25) (undo-tree-id12397 . -25) (undo-tree-id12398 . -25) (undo-tree-id12399 . -25) (undo-tree-id12400 . -25) (undo-tree-id12401 . -25) (undo-tree-id12402 . -25) (undo-tree-id12403 . -25) (undo-tree-id12404 . -25) (undo-tree-id12405 . -25) (undo-tree-id12406 . -25) (undo-tree-id12407 . -25) (undo-tree-id12408 . -25) (undo-tree-id12409 . -25) (undo-tree-id12410 . -25) (undo-tree-id12411 . -25) (undo-tree-id12412 . -25) (undo-tree-id12413 . -25) (undo-tree-id12414 . -25) (undo-tree-id12415 . -25) (undo-tree-id12416 . -25) (undo-tree-id12417 . -25) (undo-tree-id12418 . -25) (undo-tree-id12419 . -25) (undo-tree-id12420 . -25) (undo-tree-id12421 . -25) (undo-tree-id12422 . -25) (undo-tree-id12423 . -25) (undo-tree-id12424 . -25) (undo-tree-id12425 . -25) (undo-tree-id12426 . -25) (undo-tree-id12427 . -25) (undo-tree-id12428 . -25) (undo-tree-id12429 . -25) (undo-tree-id12430 . -25) (undo-tree-id12431 . -25) (undo-tree-id12432 . -25) (undo-tree-id12433 . -25) (undo-tree-id12434 . -25) (undo-tree-id12435 . -25) (undo-tree-id12436 . -25) (undo-tree-id12437 . -25) (undo-tree-id12438 . -25) (undo-tree-id12439 . -25) (undo-tree-id12440 . -25) (undo-tree-id12441 . -25) (undo-tree-id12442 . -25) (undo-tree-id12443 . -25) (undo-tree-id12444 . -25) (undo-tree-id12445 . -25) (undo-tree-id12446 . -25) (undo-tree-id12447 . -25) (undo-tree-id12448 . -25) (undo-tree-id12449 . -25) (undo-tree-id12450 . -25) (undo-tree-id12451 . -25) (undo-tree-id12452 . -25) (undo-tree-id12453 . -25) (undo-tree-id12454 . -25) (undo-tree-id12455 . -25) (undo-tree-id12456 . -25) (undo-tree-id12457 . -25) (undo-tree-id12458 . -25) (undo-tree-id12459 . -25) (undo-tree-id12460 . -25) (undo-tree-id12461 . -25) (undo-tree-id12462 . -25) (undo-tree-id12463 . -25) (undo-tree-id12464 . -25) (undo-tree-id12465 . -25) (undo-tree-id12466 . -25) (undo-tree-id12467 . -25) (undo-tree-id12468 . -25) (undo-tree-id12469 . -25) (undo-tree-id12470 . -25) (undo-tree-id12471 . -25) (undo-tree-id12472 . -25) (undo-tree-id12473 . -25) (undo-tree-id12474 . -25) (undo-tree-id12475 . -25) (undo-tree-id12476 . -25) (undo-tree-id12477 . -25) (undo-tree-id12478 . -25) (undo-tree-id12479 . -25) (undo-tree-id12480 . -25) (undo-tree-id12481 . -25) (undo-tree-id12482 . -25) (undo-tree-id12483 . -25) (undo-tree-id12484 . -25) (undo-tree-id12485 . -25) (undo-tree-id12486 . -25) (undo-tree-id12487 . -25) (undo-tree-id12488 . -25) (undo-tree-id12489 . -25) (undo-tree-id12490 . -25) (undo-tree-id12491 . -25) (undo-tree-id12492 . -25) (undo-tree-id12493 . -25) (undo-tree-id12494 . -25) (undo-tree-id12495 . -25) (undo-tree-id12496 . -25) (undo-tree-id12497 . -25) (undo-tree-id12498 . -25) (undo-tree-id12499 . -25) (undo-tree-id12500 . -25) (undo-tree-id12501 . -25) (undo-tree-id12502 . -25) (undo-tree-id12503 . -25) (undo-tree-id12504 . -25) (undo-tree-id12505 . -25) (undo-tree-id12506 . -25) (undo-tree-id12507 . -25) (undo-tree-id12508 . -25) (undo-tree-id12509 . -25) (undo-tree-id12510 . -25) (undo-tree-id12511 . -25) (undo-tree-id12512 . -25) (undo-tree-id12513 . -25) (undo-tree-id12514 . -25) (undo-tree-id12515 . -25) (undo-tree-id12516 . -25) (undo-tree-id12517 . -25) (undo-tree-id12518 . -25) (undo-tree-id12519 . -25) (undo-tree-id12520 . -25) (undo-tree-id12521 . -25) (undo-tree-id12522 . -25) (undo-tree-id12523 . -25) (undo-tree-id12524 . -25) (undo-tree-id12525 . -25) (undo-tree-id12526 . -25) (undo-tree-id12527 . -25) (undo-tree-id12528 . -25) (undo-tree-id12529 . -25) (undo-tree-id12530 . -25) (undo-tree-id12531 . -25) (undo-tree-id12532 . -25) (undo-tree-id12533 . -25) (undo-tree-id12534 . -25) (undo-tree-id12535 . -25) (undo-tree-id12536 . -25) (undo-tree-id12537 . -25) (undo-tree-id12538 . -25) (undo-tree-id12539 . -25) (undo-tree-id12540 . -25) (undo-tree-id12541 . -25) (undo-tree-id12542 . -25) (undo-tree-id12543 . -25) (undo-tree-id12544 . -25) (undo-tree-id12545 . -25) (undo-tree-id12546 . -25) (undo-tree-id12547 . -25) (undo-tree-id12548 . -25) (undo-tree-id12549 . -25) (undo-tree-id12550 . -25) (undo-tree-id12551 . -25) (undo-tree-id12552 . -25) (undo-tree-id12553 . -25) (undo-tree-id12554 . -25) (undo-tree-id12555 . -25) (undo-tree-id12556 . -25) (undo-tree-id12557 . -25) (undo-tree-id12558 . -25) (undo-tree-id12559 . -25) (undo-tree-id12560 . -25) (undo-tree-id12561 . -25) (undo-tree-id12562 . -25) (undo-tree-id12563 . -25) (undo-tree-id12564 . -25) (undo-tree-id12565 . -25) (undo-tree-id12566 . -25) (undo-tree-id12567 . -25) (undo-tree-id12568 . -25) (undo-tree-id12569 . -25) (undo-tree-id12570 . -25) (undo-tree-id12571 . -25) (undo-tree-id12572 . -25) (undo-tree-id12573 . -25) (undo-tree-id12574 . -25) (undo-tree-id12575 . -25) (undo-tree-id12576 . -25) (undo-tree-id12577 . -25) (undo-tree-id12578 . -25) (undo-tree-id12579 . -25) (undo-tree-id12580 . -25) (undo-tree-id12581 . -25) (undo-tree-id12582 . -25) (undo-tree-id12583 . -25) (undo-tree-id12584 . -25) (undo-tree-id12585 . -25) (undo-tree-id12586 . -25) (undo-tree-id12587 . -25) (undo-tree-id12588 . -25) (undo-tree-id12589 . -25) (undo-tree-id12590 . -25) (undo-tree-id12591 . -25) (undo-tree-id12592 . -25) (undo-tree-id12593 . -25) (undo-tree-id12594 . -25) (undo-tree-id12595 . -25) (undo-tree-id12596 . -25) (undo-tree-id12597 . -25) (undo-tree-id12598 . -25) (undo-tree-id12599 . -25) (undo-tree-id12600 . -25) (undo-tree-id12601 . -25) (undo-tree-id12602 . -25) (undo-tree-id12603 . -25) (undo-tree-id12604 . -25) (undo-tree-id12605 . -25) (undo-tree-id12606 . -25) (undo-tree-id12607 . -25) (undo-tree-id12608 . -25) (undo-tree-id12609 . -25) (undo-tree-id12610 . -25) (undo-tree-id12611 . -25) (undo-tree-id12612 . -25) (undo-tree-id12613 . -25) (undo-tree-id12614 . -25) (undo-tree-id12615 . -25) (undo-tree-id12616 . -25) (undo-tree-id12617 . -25) (undo-tree-id12618 . -25) (undo-tree-id12619 . -25) (undo-tree-id12620 . -25) (undo-tree-id12621 . -25) (undo-tree-id12622 . -25) (undo-tree-id12623 . -25) (undo-tree-id12624 . -25) (undo-tree-id12625 . -25) (undo-tree-id12626 . -25) (undo-tree-id12627 . -25) (undo-tree-id12628 . -25) (undo-tree-id12629 . -25) (undo-tree-id12630 . -25) (undo-tree-id12631 . -25) (undo-tree-id12632 . -25) (undo-tree-id12633 . -25) (undo-tree-id12634 . -25) (undo-tree-id12635 . -25) (undo-tree-id12636 . -25) (undo-tree-id12637 . -25) (undo-tree-id12638 . -25) (undo-tree-id12639 . -25) (undo-tree-id12640 . -25) (undo-tree-id12641 . -25) (undo-tree-id12642 . -25) (undo-tree-id12643 . -25) (undo-tree-id12644 . -25) (undo-tree-id12645 . -25) (undo-tree-id12646 . -25) (undo-tree-id12647 . -25) (undo-tree-id12648 . -25) (undo-tree-id12649 . -25) (undo-tree-id12650 . -25) (undo-tree-id12651 . -25) (undo-tree-id12652 . -25) (undo-tree-id12653 . -47) (undo-tree-id12654 . -47) 49976) ((49951 . 49998) (#("
" 0 1 (fontified nil)) . 49951) (undo-tree-id12655 . 1) (undo-tree-id12656 . -1) (#("    " 0 4 (fontified nil)) . 49951) (undo-tree-id12657 . -4) (undo-tree-id12658 . -4) (undo-tree-id12659 . -4) (#("i" 0 1 (fontified t)) . 49955)) (25725 34283 94182 27000) 0 nil])
([nil nil ((50314 . 50315) (t 25725 34308 874957 362000) 50314) nil (25725 34441 441370 420000) 0 nil])
nil
([nil nil ((#("i" 0 1 (fontified t)) . -50314) (undo-tree-id12672 . -1) (undo-tree-id12673 . -1) (undo-tree-id12674 . -1) (#("f" 0 1 (fontified t)) . -50315) (undo-tree-id12675 . -1) (undo-tree-id12676 . -1) (undo-tree-id12677 . -1) 50316 (nil fontified t 50315 . 50316) (nil face org-block-end-line 50315 . 50316) (nil fontified t 50307 . 50315) (nil font-lock-fontified t 50307 . 50315) (nil font-lock-multiline t 50307 . 50315) (nil face org-block-end-line 50307 . 50315) (#("+END_SRC
" 0 8 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 8 9 (fontified t face org-block-end-line)) . -50305) (50314 . 50325) 50314 (#("i" 0 1 (fontified t)) . -50314) (undo-tree-id12678 . -1) (undo-tree-id12679 . -1) (#("f" 0 1 (fontified t)) . -50315) (undo-tree-id12680 . -1) (undo-tree-id12681 . -1) (#("x" 0 1 (fontified t)) . -50316) (undo-tree-id12682 . -1) 50317 (50316 . 50317) (nil rear-nonsticky t 50315 . 50316) (nil fontified t 50315 . 50316) (nil face org-block-end-line 50315 . 50316) (nil font-lock-fontified t 50314 . 50315) (nil fontified t 50314 . 50315) (nil font-lock-multiline t 50314 . 50315) (nil face org-block-end-line 50314 . 50315) (#("+END_SRC
" 0 7 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 7 8 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 8 9 (rear-nonsticky t fontified t face org-block-end-line)) . -50305) (50314 . 50325) 50314 (#("[" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -50314) (undo-tree-id12683 . -1) (#("j" 0 1 (fontified t)) . -50315) (undo-tree-id12684 . -1) 50316 (50314 . 50316) (#("{" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -50314) (undo-tree-id12685 . -1) 50315 (50314 . 50315) (#("P" 0 1 (fontified t)) . -50314) (undo-tree-id12686 . -1) 50315 (50314 . 50315)) nil (25725 34441 441350 515000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -50386) (undo-tree-id12696 . -4) 50390 (50385 . 50390) (t 25725 34441 541692 867000) 50316) nil (25725 34548 21998 263000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -50386) (undo-tree-id12687 . -1) (undo-tree-id12688 . -1) (undo-tree-id12689 . -1) (#("a" 0 1 (fontified t)) . -50387) (undo-tree-id12690 . -1) (undo-tree-id12691 . -1) (undo-tree-id12692 . -1) (#("r" 0 1 (fontified t)) . -50388) (undo-tree-id12693 . -1) (undo-tree-id12694 . -1) (undo-tree-id12695 . -1) 50389 (nil fontified t 50388 . 50389) (#("properties
" 0 10 (fontified t face org-level-3) 10 11 (fontified t)) . -50375) (50386 . 50400) 50386) nil (25725 34548 21980 244000) 0 nil])
([nil nil ((nil rear-nonsticky nil 50512 . 50513) (nil fontified nil 50512 . 50513) (nil fontified nil 50511 . 50512) (nil fontified nil 50503 . 50511) (nil fontified nil 50502 . 50503) (nil fontified nil 50456 . 50502) (50456 . 50513) (#("s" 0 1 (fontified t)) . -50456) (undo-tree-id12699 . -1) (#("r" 0 1 (fontified t)) . -50457) (undo-tree-id12700 . -1) 50458 (50456 . 50458) (50455 . 50456) (50444 . 50455) (50443 . 50444) (50429 . 50443) (50423 . 50429) (50420 . 50423) (#("o" 0 1 (fontified t)) . -50420) (undo-tree-id12701 . -1) (undo-tree-id12702 . -1) (#("r" 0 1 (fontified t)) . -50421) (undo-tree-id12703 . -1) (#("p" 0 1 (fontified t)) . -50422) (undo-tree-id12704 . -1) (#("e" 0 1 (fontified t)) . -50423) (undo-tree-id12705 . -1) (#("r" 0 1 (fontified t)) . -50424) (undo-tree-id12706 . -1) 50425 (50414 . 50425) (50410 . 50414) (50408 . 50410) (#("u" 0 1 (fontified t)) . -50408) (undo-tree-id12707 . -1) 50409 (50407 . 50409) (50386 . 50407) (t 25725 34548 119798 497000)) nil (25725 34670 404566 36000) 0 nil])
([nil nil ((50502 . 50503) 50456) nil (25725 34670 404365 938000) 0 nil])
([nil nil ((nil rear-nonsticky nil 51020 . 51021) (nil fontified nil 50503 . 51021) (50503 . 51021)) nil (25725 34670 404361 608000) 0 nil])
([nil nil ((50499 . 50508) (50481 . 50499) (#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 50481) (undo-tree-id12697 . -15) (undo-tree-id12698 . -5) 50486) nil (25725 34670 404350 573000) 0 nil])
([nil nil ((51043 . 51044) (t 25725 34670 514136 794000)) nil (25725 34673 50242 789000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -51043) (undo-tree-id12708 . -1) 51044) nil (25725 34673 50230 427000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -51111) (undo-tree-id12791 . -1) (undo-tree-id12792 . -1) (#("h" 0 1 (fontified t)) . -51112) (undo-tree-id12793 . -1) (undo-tree-id12794 . -1) (#("e" 0 1 (fontified t)) . -51113) (undo-tree-id12795 . -1) (undo-tree-id12796 . -1) (#(" " 0 1 (fontified t)) . -51114) (undo-tree-id12797 . -1) (undo-tree-id12798 . -1) (#("p" 0 1 (fontified t)) . -51115) (undo-tree-id12799 . -1) (undo-tree-id12800 . -1) (#("r" 0 1 (fontified t)) . -51116) (undo-tree-id12801 . -1) (undo-tree-id12802 . -1) 51117 (51111 . 51117) (51106 . 51111) (t 25725 34673 162186 575000) 51044) nil (25725 34906 223978 211000) 0 nil])
([nil nil ((51311 . 51329) (#("e" 0 1 (fontified t)) . -51311) (undo-tree-id12746 . -1) (#("t" 0 1 (fontified t)) . -51312) (undo-tree-id12747 . -1) (#(" " 0 1 (fontified t)) . -51313) (undo-tree-id12748 . -1) 51314 (51301 . 51314) (#("i" 0 1 (fontified t)) . -51301) (undo-tree-id12749 . -1) (undo-tree-id12750 . -1) (#("n" 0 1 (fontified t)) . -51302) (undo-tree-id12751 . -1) (undo-tree-id12752 . -1) 51303 (51292 . 51303) (#("e" 0 1 (fontified t)) . -51292) (undo-tree-id12753 . -1) 51293 (51290 . 51293) (#("=" 0 1 (fontified t)) . -51290) (undo-tree-id12754 . -1) (#("s" 0 1 (fontified t)) . -51291) (undo-tree-id12755 . -1) 51292 (51271 . 51292) (#("c" 0 1 (fontified t)) . -51271) (undo-tree-id12756 . -1) 51272 (51267 . 51272) (#(" " 0 1 (fontified t)) . -51267) (undo-tree-id12757 . -1) 51268 (51263 . 51268) (51262 . 51263) (51256 . 51262) (#("r" 0 1 (fontified t)) . -51256) (undo-tree-id12758 . -1) 51257 (51239 . 51257) (#("o" 0 1 (fontified t)) . -51239) (undo-tree-id12759 . -1) 51240 (#("c" 0 1 (fontified t)) . -51240) (undo-tree-id12760 . -1) (#("n" 0 1 (fontified t)) . -51241) (undo-tree-id12761 . -1) 51242 (51226 . 51242) (51205 . 51226) (51184 . 51205) (51183 . 51184) (51182 . 51183) (51179 . 51182) (#("e" 0 1 (fontified t)) . -51179) (undo-tree-id12762 . -1) (#("i" 0 1 (fontified t)) . -51180) (undo-tree-id12763 . -1) (#("o" 0 1 (fontified t)) . -51181) (undo-tree-id12764 . -1) (#("n" 0 1 (fontified t)) . -51182) (undo-tree-id12765 . -1) 51183 (51162 . 51183) (#("u" 0 1 (fontified t)) . -51162) (undo-tree-id12766 . -1) 51163 (51151 . 51163) (#("e" 0 1 (fontified t)) . -51151) (undo-tree-id12767 . -1) (#("r" 0 1 (fontified t)) . -51152) (undo-tree-id12768 . -1) 51153 (#("e" 0 1 (fontified t)) . -51153) (undo-tree-id12769 . -1) (#(" " 0 1 (fontified t)) . -51154) (undo-tree-id12770 . -1) 51155 (51142 . 51155) (51121 . 51142) (#("a" 0 1 (fontified t)) . -51121) (undo-tree-id12771 . -1) (#("o" 0 1 (fontified t)) . -51122) (undo-tree-id12772 . -1) (#("u" 0 1 (fontified t)) . -51123) (undo-tree-id12773 . -1) (#("r" 0 1 (fontified t)) . -51124) (undo-tree-id12774 . -1) (#(" " 0 1 (fontified t)) . -51125) (undo-tree-id12775 . -1) 51126 (51122 . 51126) (#("o" 0 1 (fontified t)) . -51122) (undo-tree-id12776 . -1) 51123 (51112 . 51123) (51107 . 51112) (#(" " 0 1 (fontified t)) . -51107) (undo-tree-id12777 . -1) 51108 (51096 . 51108) (#("l" 0 1 (fontified t)) . -51096) (undo-tree-id12778 . -1) (#("y" 0 1 (fontified t)) . -51097) (undo-tree-id12779 . -1) 51098 (51095 . 51098) (#("t" 0 1 (fontified t)) . -51095) (undo-tree-id12780 . -1) 51096 (51095 . 51096) (#("c" 0 1 (fontified t)) . -51095) (undo-tree-id12781 . -1) (undo-tree-id12782 . -1) (#("l" 0 1 (fontified t)) . -51096) (undo-tree-id12783 . -1) (#("t" 0 1 (fontified t)) . -51097) (undo-tree-id12784 . -1) 51098 (51081 . 51098) (#("s" 0 1 (fontified t)) . -51081) (undo-tree-id12785 . -1) (#("t" 0 1 (fontified t)) . -51082) (undo-tree-id12786 . -1) 51083 (51078 . 51083) (#("h" 0 1 (fontified t)) . -51078) (undo-tree-id12787 . -1) (#("e" 0 1 (fontified t)) . -51079) (undo-tree-id12788 . -1) (#("c" 0 1 (fontified t)) . -51080) (undo-tree-id12789 . -1) 51081 (51080 . 51081) (51076 . 51080) (51055 . 51076) (#(" " 0 1 (fontified t)) . -51055) (undo-tree-id12790 . -1) 51056 (51044 . 51056) (51043 . 51044) 51043) nil (25725 34906 223920 451000) 0 nil])
([nil nil ((51418 . 51436) (51397 . 51418) (51386 . 51397) (#("o" 0 1 (fontified t)) . -51386) (undo-tree-id12714 . -1) (#("c" 0 1 (fontified t)) . -51387) (undo-tree-id12715 . -1) 51388 (51384 . 51388) (#("e" 0 1 (fontified t)) . -51384) (undo-tree-id12716 . -1) (#("o" 0 1 (fontified t)) . -51385) (undo-tree-id12717 . -1) 51386 (51376 . 51386) (51375 . 51376) (#("e" 0 1 (fontified t)) . -51375) (undo-tree-id12718 . -1) (undo-tree-id12719 . -1) (#("t" 0 1 (fontified t)) . -51376) (undo-tree-id12720 . -1) (undo-tree-id12721 . -1) (#("c" 0 1 (fontified t)) . -51377) (undo-tree-id12722 . -1) (undo-tree-id12723 . -1) (#(" " 0 1 (fontified t)) . -51378) (undo-tree-id12724 . -1) (undo-tree-id12725 . -1) (#("e" 0 1 (fontified t)) . -51379) (undo-tree-id12726 . -1) (undo-tree-id12727 . -1) (#("t" 0 1 (fontified t)) . -51380) (undo-tree-id12728 . -1) (undo-tree-id12729 . -1) (#("c" 0 1 (fontified t)) . -51381) (undo-tree-id12730 . -1) (undo-tree-id12731 . -1) (#("
" 0 1 (fontified t)) . -51382) (undo-tree-id12732 . -1) (undo-tree-id12733 . -1) (undo-tree-id12734 . -1) (#("o" 0 1 (fontified t)) . -51383) (undo-tree-id12735 . -1) (undo-tree-id12736 . -1) (#("r" 0 1 (fontified t)) . -51384) (undo-tree-id12737 . -1) (undo-tree-id12738 . -1) (#(" " 0 1 (fontified t)) . -51385) (undo-tree-id12739 . -1) 51386 (51383 . 51386) (51382 . 51383) (51361 . 51382) (51353 . 51361) (#("o" 0 1 (fontified t)) . -51353) (undo-tree-id12740 . -1) 51354 (51350 . 51354) (#("-" 0 1 (fontified t)) . -51350) (undo-tree-id12741 . -1) 51351 (51330 . 51351) (#("r" 0 1 (fontified t)) . -51330) (undo-tree-id12742 . -1) (undo-tree-id12743 . -1) (#("o" 0 1 (fontified t)) . -51331) (undo-tree-id12744 . -1) (undo-tree-id12745 . -1) 51332 (51330 . 51332) (51329 . 51330) 51328) nil (25725 34906 223625 717000) 0 nil])
([nil nil ((51436 . 51437) 51435) nil (25725 34906 223540 999000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 51501) (undo-tree-id12712 . -1) (undo-tree-id12713 . -1)) nil (25725 34906 223535 341000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 51501) (undo-tree-id12709 . -1) (undo-tree-id12710 . -1) (undo-tree-id12711 . -1)) nil (25725 34906 223518 859000) 0 nil])
([nil nil ((51302 . 51322) (#(" " 0 1 (fontified t)) . -51302) (undo-tree-id12803 . -1) 51303 (51302 . 51303) (51295 . 51302) (t 25725 34906 346463 465000)) nil (25725 34941 718108 918000) 0 nil])
([nil nil ((51558 . 51563) (#(" " 0 1 (fontified t)) . -51558) (undo-tree-id12809 . -1) 51559 (51555 . 51559) (51535 . 51555) (#("t" 0 1 (fontified t)) . -51535) (undo-tree-id12810 . -1) (#("p" 0 1 (fontified t)) . -51536) (undo-tree-id12811 . -1) (#("e" 0 1 (fontified t)) . -51537) (undo-tree-id12812 . -1) (#("r" 0 1 (fontified t)) . -51538) (undo-tree-id12813 . -1) 51539 (51518 . 51539) (51507 . 51518) (51486 . 51507) (51465 . 51486) (51464 . 51465) (t 25725 34941 819098 551000)) nil (25725 35086 537683 259000) 0 nil])
([nil nil ((51539 . 51544) (#("v" 0 1 (fontified t)) . -51539) (undo-tree-id12805 . -1) (#("a" 0 1 (fontified t)) . -51540) (undo-tree-id12806 . -1) 51541 (51539 . 51541) (#("v" 0 1 (fontified t)) . -51539) (undo-tree-id12807 . -1) (#("l" 0 1 (fontified t)) . -51540) (undo-tree-id12808 . -1) 51541 (51539 . 51541)) nil (25725 35086 537659 24000) 0 nil])
([nil nil ((51529 . 51531) (#("e" 0 1 (fontified t)) . -51529) (undo-tree-id12804 . -1) 51530 (51526 . 51530)) nil (25725 35086 537634 719000) 0 nil])
([nil nil ((51573 . 51574) (t 25725 35086 641659 30000) 51529) nil (25725 35097 106518 752000) 0 nil])
([nil nil ((51574 . 51594) (t 25725 35097 205844 10000)) nil (25725 35145 947488 114000) 0 nil])
([nil nil ((nil rear-nonsticky nil 51651 . 51652) (nil fontified nil 51651 . 51652) (nil fontified nil 51650 . 51651) (nil fontified nil 51642 . 51650) (nil fontified nil 51641 . 51642) (nil fontified nil 51595 . 51641) (51595 . 51652) (51594 . 51595) 51593) nil (25725 35145 947482 876000) 0 nil])
([nil nil ((51647 . 51658) (51626 . 51647) (#("p" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -51626) (undo-tree-id12814 . -1) 51627 (51620 . 51627) (#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 51620) (undo-tree-id12815 . -15)) nil (25725 35145 947472 469000) 0 nil])
([nil nil ((51663 . 51664) 51657) nil (25725 35145 947448 164000) 0 nil])
([nil nil ((nil rear-nonsticky nil 52490 . 52491) (nil fontified nil 51664 . 52491) (51664 . 52491)) nil (25725 35145 947434 894000) 0 nil])
([nil nil ((51675 . 51683) (51672 . 51675) (51669 . 51672) (51648 . 51669) (#("u" 0 1 (fontified t)) . -51648) (undo-tree-id12826 . -1) 51649 (51636 . 51649) (51631 . 51636) (#("a" 0 1 (fontified t)) . -51631) (undo-tree-id12827 . -1) 51632 (51621 . 51632) (#(" " 0 1 (fontified t)) . -51621) (undo-tree-id12828 . -1) 51622 (51619 . 51622) (#("s" 0 1 (fontified t)) . -51619) (undo-tree-id12829 . -1) (#("e" 0 1 (fontified t)) . -51620) (undo-tree-id12830 . -1) 51621 (51619 . 51621) (#("e" 0 1 (fontified t)) . -51619) (undo-tree-id12831 . -1) 51620 (51600 . 51620) (#("a" 0 1 (fontified t)) . -51600) (undo-tree-id12832 . -1) (undo-tree-id12833 . -1) (#("t" 0 1 (fontified t)) . -51601) (undo-tree-id12834 . -1) (undo-tree-id12835 . -1) (#("a" 0 1 (fontified t)) . -51602) (undo-tree-id12836 . -1) (undo-tree-id12837 . -1) (#("k" 0 1 (fontified t)) . -51603) (undo-tree-id12838 . -1) 51604 (51601 . 51604) (#("k" 0 1 (fontified nil)) . -51601) 51602 (51599 . 51602) (#("n" 0 1 (fontified t)) . -51599) (undo-tree-id12839 . -1) 51600 (51595 . 51600) (51594 . 51595) (t 25725 35146 210699 303000) 51574) nil (25725 35256 92962 588000) 0 nil])
([nil nil ((#("Selector
" 0 8 (fontified t) 8 9 (fontified t)) . 51675) (undo-tree-id12819 . -8) (undo-tree-id12820 . -8) (undo-tree-id12821 . 1) (undo-tree-id12822 . -9) (undo-tree-id12823 . -8) (undo-tree-id12824 . -9) (undo-tree-id12825 . -8) 51683) nil (25725 35256 92911 883000) 0 nil])
([nil nil ((51675 . 51676)) nil (25725 35256 92889 533000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -51688) (undo-tree-id12816 . -1) (#("k" 0 1 (fontified t)) . -51689) (undo-tree-id12817 . -1) 51690 (51687 . 51690) (#("r" 0 1 (fontified t)) . -51687) (undo-tree-id12818 . -1) 51688 (51675 . 51688)) nil (25725 35256 92875 704000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -52744) (undo-tree-id12901 . -1) 52745 (52744 . 52745) (#("h" 0 1 (fontified t)) . -52744) (undo-tree-id12902 . -1) 52745 (52743 . 52745) (#("tyle" 0 4 (fontified nil)) . 52743) (undo-tree-id12903 . -4) (undo-tree-id12904 . -4) (52728 . 52743) 52732 (52714 . 52732) (52703 . 52714) (#(" " 0 1 (fontified t)) . -52703) (undo-tree-id12905 . -1) (#("=" 0 1 (fontified t)) . -52704) (undo-tree-id12906 . -1) 52705 (52704 . 52705) (52703 . 52704) (52682 . 52703) (52661 . 52682) (t 25725 35256 196603 925000)) nil (25725 35468 791312 341000) 0 nil])
([nil nil ((52731 . 52732) (#("E" 0 1 (fontified nil)) . 52731) (52730 . 52731) (#("L" 0 1 (fontified nil)) . 52730) (undo-tree-id12897 . -1) (undo-tree-id12898 . -1) (undo-tree-id12899 . -1) (undo-tree-id12900 . -1) (52729 . 52730) (#("Y" 0 1 (fontified nil)) . 52729) (52728 . 52729) (#("T" 0 1 (fontified t)) . 52728) 52731) nil (25725 35468 791284 614000) 0 nil])
([nil nil ((52742 . 52743) (#("N" 0 1 (fontified nil)) . 52742) (undo-tree-id12892 . -1) (52741 . 52742) (#("O" 0 1 (fontified nil)) . 52741) (undo-tree-id12893 . -1) (undo-tree-id12894 . -1) (undo-tree-id12895 . -1) (undo-tree-id12896 . -1) (52740 . 52741) (#("I" 0 1 (fontified nil)) . 52740) (52739 . 52740) (#("T" 0 1 (fontified nil)) . 52739) (52738 . 52739) (#("A" 0 1 (fontified nil)) . 52738) (52737 . 52738) (#("R" 0 1 (fontified nil)) . 52737) (52736 . 52737) (#("A" 0 1 (fontified nil)) . 52736) (52735 . 52736) (#("L" 0 1 (fontified nil)) . 52735) (52734 . 52735) (#("C" 0 1 (fontified nil)) . 52734) (52733 . 52734) (#("E" 0 1 (fontified t)) . 52733) 52742) nil (25725 35468 791264 989000) 0 nil])
([nil nil ((52859 . 52866) (52853 . 52859) (52849 . 52853) (52842 . 52849) (#("i" 0 1 (fontified t)) . -52842) (undo-tree-id12868 . -1) (#("s" 0 1 (fontified t)) . -52843) (undo-tree-id12869 . -1) (#("n" 0 1 (fontified t)) . -52844) (undo-tree-id12870 . -1) (#("0" 0 1 (fontified t)) . -52845) (undo-tree-id12871 . -1) 52846 (52845 . 52846) (#("g" 0 1 (fontified t)) . -52845) (undo-tree-id12872 . -1) (#(" " 0 1 (fontified t)) . -52846) (undo-tree-id12873 . -1) 52847 (52841 . 52847) (#("y" 0 1 (fontified t)) . -52841) (undo-tree-id12874 . -1) (#("i" 0 1 (fontified t)) . -52842) (undo-tree-id12875 . -1) (#("s" 0 1 (fontified t)) . -52843) (undo-tree-id12876 . -1) (#("n" 0 1 (fontified t)) . -52844) (undo-tree-id12877 . -1) (#("g" 0 1 (fontified t)) . -52845) (undo-tree-id12878 . -1) 52846 (52836 . 52846) (#("l" 0 1 (fontified t)) . -52836) (undo-tree-id12879 . -1) (undo-tree-id12880 . -1) (#("y" 0 1 (fontified t)) . -52837) (undo-tree-id12881 . -1) (#("e" 0 1 (fontified t)) . -52838) (undo-tree-id12882 . -1) (#("s" 0 1 (fontified t)) . -52839) (undo-tree-id12883 . -1) (#(" " 0 1 (fontified t)) . -52840) (undo-tree-id12884 . -1) 52841 (52828 . 52841) (52807 . 52828) (52806 . 52807) (52799 . 52806) (#("
" 0 1 (fontified t)) . -52799) (undo-tree-id12885 . -1) (undo-tree-id12886 . -1) 52800 (52799 . 52800) (52797 . 52799) (52789 . 52797) (52788 . 52789) (#(" " 0 1 (fontified t)) . -52788) (undo-tree-id12887 . -1) 52789 (52778 . 52789) (#(" " 0 1 (fontified t)) . -52778) (undo-tree-id12888 . -1) 52779 (52778 . 52779) (52769 . 52778) (52767 . 52769) (52746 . 52767) (52744 . 52746) (#(" " 0 1 (fontified t)) . -52744) (undo-tree-id12889 . 1) (undo-tree-id12890 . -1) (#("=" 0 1 (fontified t)) . -52745) (undo-tree-id12891 . -1) 52746 (52745 . 52746)) nil (25725 35468 791225 737000) 0 nil])
([nil nil ((nil rear-nonsticky nil 52923 . 52924) (nil fontified nil 52923 . 52924) (nil fontified nil 52922 . 52923) (nil fontified nil 52914 . 52922) (nil fontified nil 52913 . 52914) (nil fontified nil 52867 . 52913) (52867 . 52924) (#("i" 0 1 (fontified t)) . -52867) (undo-tree-id12867 . -1) 52868 (52867 . 52868) (52866 . 52867) 52865) nil (25725 35468 790976 401000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face org-level-3)) . -52984) (undo-tree-id12840 . -1) 52985 (52984 . 52985) (52900 . 52907) (#("o" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52900) (undo-tree-id12841 . -1) (#("r" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52901) (undo-tree-id12842 . -1) (#("p" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52902) (undo-tree-id12843 . -1) 52903 (52899 . 52903) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52899) (undo-tree-id12844 . -1) 52900 (52899 . 52900) (#("P" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52899) (undo-tree-id12845 . -1) 52900 (52892 . 52900) (52891 . 52892) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52891) (undo-tree-id12846 . -1) (undo-tree-id12847 . -1) (undo-tree-id12848 . -1) (#("c" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52892) (undo-tree-id12849 . -1) (#("h" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52893) (undo-tree-id12850 . -1) (#("a" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52894) (undo-tree-id12851 . -1) (#("n" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52895) (undo-tree-id12852 . -1) (#("g" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52896) (undo-tree-id12853 . -1) (#("i" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52897) (undo-tree-id12854 . -1) (#("n" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52898) (undo-tree-id12855 . -1) (#("g" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52899) (undo-tree-id12856 . -1) (#("C" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52900) (undo-tree-id12857 . -1) (#("S" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52901) (undo-tree-id12858 . -1) (#("S" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52902) (undo-tree-id12859 . -1) (#("P" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52903) (undo-tree-id12860 . -1) (#("o" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52904) (undo-tree-id12861 . -1) 52905 (52896 . 52905) (#("i" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52896) (undo-tree-id12862 . -1) 52897 (52896 . 52897) (#("g" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52896) (undo-tree-id12863 . -1) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52897) (undo-tree-id12864 . -1) 52898 (52892 . 52898) (#("c" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -52892) (undo-tree-id12865 . -1) 52893 (52892 . 52893) (#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 52892) (undo-tree-id12866 . -15)) nil (25725 35468 790950 350000) 0 nil])
([nil nil ((52912 . 52913) 52911) nil (25725 35468 790795 510000) 0 nil])
([nil nil ((nil rear-nonsticky nil 53563 . 53564) (nil fontified nil 52913 . 53564) (52913 . 53564)) nil (25725 35468 790782 240000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -53697) (undo-tree-id12948 . -4) 53701 (53696 . 53701) (t 25725 35468 896240 773000) 53576) nil (25725 35603 690281 381000) 0 nil])
([nil nil ((53575 . 53576) 53575) nil (25725 35603 690273 699000) 0 nil])
([nil nil ((nil rear-nonsticky nil 53733 . 53734) (nil fontified nil 53575 . 53734) (53575 . 53734)) nil (25725 35603 690268 949000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -53858) (undo-tree-id12947 . -4) 53862 (53857 . 53862) 53857) nil (25725 35603 690263 781000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -54058) (undo-tree-id12911 . -1) 54059 (54058 . 54059) (54057 . 54058) (#("'" 0 1 (fontified t)) . -54057) (undo-tree-id12912 . -1) 54058 (54055 . 54058) (54045 . 54055) (54039 . 54045) (54033 . 54039) (54012 . 54033) (#("s" 0 1 (fontified t)) . -54012) (undo-tree-id12913 . -1) (undo-tree-id12914 . -1) (#(" " 0 1 (fontified t)) . -54013) (undo-tree-id12915 . -1) (undo-tree-id12916 . -1) (#("i" 0 1 (fontified t)) . -54014) (undo-tree-id12917 . -1) (undo-tree-id12918 . -1) (#("n" 0 1 (fontified t)) . -54015) (undo-tree-id12919 . -1) (undo-tree-id12920 . -1) (#("l" 0 1 (fontified t)) . -54016) (undo-tree-id12921 . -1) (undo-tree-id12922 . -1) (#("i" 0 1 (fontified t)) . -54017) (undo-tree-id12923 . -1) (undo-tree-id12924 . -1) (#("n" 0 1 (fontified t)) . -54018) (undo-tree-id12925 . -1) (undo-tree-id12926 . -1) (#("e" 0 1 (fontified t)) . -54019) (undo-tree-id12927 . -1) (undo-tree-id12928 . -1) 54020 (54000 . 54020) (#(" " 0 1 (fontified t)) . -54000) (undo-tree-id12929 . -1) 54001 (53999 . 54001) (#(" " 0 1 (fontified t)) . -53999) (undo-tree-id12930 . -1) 54000 (53999 . 54000) (#("e" 0 1 (fontified t)) . -53999) (undo-tree-id12931 . -1) (undo-tree-id12932 . -1) (#("s" 0 1 (fontified t)) . -54000) (undo-tree-id12933 . -1) (#(" " 0 1 (fontified t)) . -54001) (undo-tree-id12934 . -1) 54002 (53997 . 54002) (53976 . 53997) (#("a" 0 1 (fontified t)) . -53976) (undo-tree-id12935 . -1) (#("h" 0 1 (fontified t)) . -53977) (undo-tree-id12936 . -1) (#("t" 0 1 (fontified t)) . -53978) (undo-tree-id12937 . -1) (#(" " 0 1 (fontified t)) . -53979) (undo-tree-id12938 . -1) 53980 (53973 . 53980) (#(" " 0 1 (fontified t)) . -53973) (undo-tree-id12939 . -1) 53974 (53970 . 53974) (53949 . 53970) (53948 . 53949) (53946 . 53948) (53925 . 53946) (#("i" 0 1 (fontified t)) . -53925) (undo-tree-id12940 . -1) (undo-tree-id12941 . -1) 53926 (53918 . 53926) (#("i" 0 1 (fontified t)) . -53918) (undo-tree-id12942 . -1) (#("f" 0 1 (fontified t)) . -53919) (undo-tree-id12943 . -1) 53920 (53910 . 53920) (#("b" 0 1 (fontified t)) . -53910) (undo-tree-id12944 . -1) 53911 (53910 . 53911) (#(" " 0 1 (fontified nil)) . -53910) (undo-tree-id12945 . -1) (#("e" 0 1 (fontified t)) . -53911) (undo-tree-id12946 . -1) 53912 (53910 . 53912) (53899 . 53910) (53878 . 53899) (53857 . 53878)) nil (25725 35603 690238 428000) 0 nil])
([nil nil ((nil rear-nonsticky nil 54115 . 54116) (nil fontified nil 54115 . 54116) (nil fontified nil 54114 . 54115) (nil fontified nil 54106 . 54114) (nil fontified nil 54105 . 54106) (nil fontified nil 54059 . 54105) (54059 . 54116) (54058 . 54059) 54057) nil (25725 35603 690140 510000) 0 nil])
([nil nil ((54106 . 54110) (#("c" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -54106) (undo-tree-id12907 . -1) 54107 (54105 . 54107) (54084 . 54105) (#("creatingelements.html" 0 21 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 54084) (undo-tree-id12908 . -20) (undo-tree-id12909 . -21) (undo-tree-id12910 . -21)) nil (25725 35603 690130 173000) 0 nil])
([nil nil ((54110 . 54111) 54109) nil (25725 35603 690093 506000) 0 nil])
([nil nil ((nil rear-nonsticky nil 54900 . 54901) (nil fontified nil 54111 . 54901) (54111 . 54901) (t 25725 35603 786523 607000)) nil (25725 35614 792934 722000) 0 nil])
([nil nil ((54966 . 54968) (#("u" 0 1 (fontified t)) . -54966) (undo-tree-id12953 . -1) 54967 (54958 . 54967) (#(" " 0 1 (fontified t)) . -54958) (undo-tree-id12954 . -1) 54959 (54950 . 54959) (#("f" 0 1 (fontified t)) . -54950) (undo-tree-id12955 . -1) (#("i" 0 1 (fontified t)) . -54951) (undo-tree-id12956 . -1) 54952 (54949 . 54952) (#("r" 0 1 (fontified t)) . -54949) (undo-tree-id12957 . -1) (#("e" 0 1 (fontified t)) . -54950) (undo-tree-id12958 . -1) 54951 (54948 . 54951) (#("e" 0 1 (fontified t)) . -54948) (undo-tree-id12959 . -1) 54949 (54932 . 54949) (54919 . 54932) (54912 . 54919) (t 25725 35614 898711 24000)) nil (25725 35678 80555 13000) 0 nil])
([nil nil ((54958 . 54959)) nil (25725 35693 782399 397000) 0 nil] [nil nil ((#("j" 0 1 (fontified t)) . -54959) (undo-tree-id12949 . -1) (#("k" 0 1 (fontified t)) . -54960) (undo-tree-id12950 . -1) (#("h" 0 1 (fontified t)) . -54961) (undo-tree-id12951 . -1) 54962 (54959 . 54962) (#("h" 0 1 (fontified t)) . -54959) (undo-tree-id12952 . -1) 54960 (54958 . 54960)) ((#(" h" 0 1 (fontified nil) 1 2 (fontified nil)) . 54958) (54959 . 54960) (#("jkh" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 54959) (54959 . 54962)) (25725 35678 80059 274000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -54947) (undo-tree-id12961 . -1) (#("k" 0 1 (fontified t)) . -54948) (undo-tree-id12962 . -1) (#(" " 0 1 (fontified t)) . -54949) (undo-tree-id12963 . -1) 54950 (54947 . 54950) (#("j" 0 1 (fontified t)) . -54947) (undo-tree-id12964 . -1) (#("k" 0 1 (fontified t)) . -54948) (undo-tree-id12965 . -1) (#(" " 0 1 (fontified t)) . -54949) (undo-tree-id12966 . -1) 54950 (54947 . 54950)) nil (25725 35693 782390 806000) 0 nil])
nil
([nil nil ((54947 . 54948)) nil (25725 35693 782107 387000) 0 nil])
([nil nil ((54970 . 54971)) nil (25725 35693 781856 374000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -54970) (undo-tree-id12960 . -1) 54971) nil (25725 35693 781790 234000) 0 nil])
([nil nil ((54970 . 54971) (#(";" 0 1 (fontified t)) . -54970) (undo-tree-id12973 . -1) 54971 (54970 . 54971) (t 25725 35693 896040 963000)) nil (25725 35788 384679 346000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . 54970)) nil (25725 35812 915023 873000) 0 nil] [nil nil ((#("The getComputedStyle honors the css Specificity Hierarchy k
" 0 48 (fontified t) 48 59 (fontified t) 59 60 (fontified t)) . 54912) (undo-tree-id12967 . -59) (undo-tree-id12968 . 1) (undo-tree-id12969 . -60) (undo-tree-id12970 . -37) (undo-tree-id12971 . -58) (undo-tree-id12972 . -58) 54970) ((54912 . 54972)) (25725 35788 383814 73000) 0 nil])
([nil nil ((55181 . 55187) (55176 . 55181) (55167 . 55176) (#("a" 0 1 (fontified t)) . -55167) (undo-tree-id12986 . -1) (undo-tree-id12987 . -1) 55168 (#("n" 0 1 (fontified t)) . -55168) (undo-tree-id12988 . -1) (undo-tree-id12989 . -1) (#("d" 0 1 (fontified t)) . -55169) (undo-tree-id12990 . -1) (#(" " 0 1 (fontified t)) . -55170) (undo-tree-id12991 . -1) 55171 (55165 . 55171) (55156 . 55165) (55150 . 55156) (55146 . 55150) (#("l" 0 1 (fontified t)) . -55146) (undo-tree-id12992 . -1) 55147 (55126 . 55147) (#("d" 0 1 (fontified t)) . -55126) (undo-tree-id12993 . -1) (undo-tree-id12994 . -1) 55127 (55123 . 55127) (#(" " 0 1 (fontified t)) . -55123) (undo-tree-id12995 . -1) 55124 (55123 . 55124) (55102 . 55123) (55099 . 55102) (55078 . 55099) (55057 . 55078) (#("e" 0 1 (fontified t)) . -55057) (undo-tree-id12996 . -1) (undo-tree-id12997 . -1) 55058 (55056 . 55058) (55051 . 55056) (t 25725 35813 14039 307000) 54972) nil (25725 35953 461863 490000) 0 nil])
nil
([nil nil ((55214 . 55225) (#("w" 0 1 (fontified t)) . -55214) (undo-tree-id12977 . -1) (undo-tree-id12978 . -1) (#("a" 0 1 (fontified t)) . -55215) (undo-tree-id12979 . -1) (#("s" 0 1 (fontified t)) . -55216) (undo-tree-id12980 . -1) (#("i" 0 1 (fontified t)) . -55217) (undo-tree-id12981 . -1) 55218 (55215 . 55218) (#("e" 0 1 (fontified t)) . -55215) (undo-tree-id12982 . -1) 55216 (55215 . 55216) (#("a" 0 1 (fontified t)) . -55215) (undo-tree-id12983 . -1) (undo-tree-id12984 . -1) (#("i" 0 1 (fontified t)) . -55216) (undo-tree-id12985 . -1) 55217 (55208 . 55217) (55189 . 55208) (55188 . 55189) (55187 . 55188)) nil (25725 35953 461706 560000) 0 nil])
([nil nil ((55251 . 55255) (#("w" 0 1 (fontified t)) . -55251) (undo-tree-id12974 . -1) 55252 (55249 . 55252) (55246 . 55249) (55225 . 55246) (#(" " 0 1 (fontified t)) . -55225) (undo-tree-id12975 . -1) (#("j" 0 1 (fontified t)) . -55226) (undo-tree-id12976 . -1) 55227 (55225 . 55227)) nil (25725 35953 461670 243000) 0 nil])
([nil nil ((55255 . 55256) 55254) nil (25725 35953 461152 520000) 0 nil])
([nil nil ((nil rear-nonsticky nil 55312 . 55313) (nil fontified nil 55312 . 55313) (nil fontified nil 55311 . 55312) (nil fontified nil 55303 . 55311) (nil fontified nil 55302 . 55303) (nil fontified nil 55256 . 55302) (55256 . 55313) (t 25725 35953 563570 249000)) nil (25725 35994 423979 259000) 0 nil])
([nil nil ((55312 . 55314) (55299 . 55312) (#("c" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -55299) (undo-tree-id12998 . -1) (#("l" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -55300) (undo-tree-id12999 . -1) (#("a" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -55301) (undo-tree-id13000 . -1) (#("s" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -55302) (undo-tree-id13001 . -1) 55303 (55294 . 55303) (#("s" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -55294) (undo-tree-id13002 . -1) 55295 (55294 . 55295) (55281 . 55294) (#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 55281) (undo-tree-id13003 . -15) (undo-tree-id13004 . -5) 55286) nil (25725 35994 423964 803000) 0 nil])
([nil nil ((55319 . 55320) 55313) nil (25725 35994 423510 144000) 0 nil])
([nil nil ((nil rear-nonsticky nil 55711 . 55712) (nil fontified nil 55320 . 55712) (55320 . 55712)) nil (25725 35994 423496 315000) 0 nil])
([nil nil ((55737 . 55741) (t 25725 35994 523016 170000) 55736) nil (25725 36009 67960 437000) 0 nil])
([nil nil ((nil rear-nonsticky nil 56302 . 56303) (nil fontified nil 55741 . 56303) (55741 . 56303) 55740 (t 25725 36009 166837 832000)) nil (25725 36173 431825 775000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 55738)) nil (25725 36173 431820 677000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 55738)) nil (25725 36173 431817 883000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 55738) (undo-tree-id13015 . -1)) nil (25725 36173 431814 601000) 0 nil])
([nil nil (("" . -56295) (56295 . 56299) ("" . -56222) (56222 . 56226) ("" . -56167) (56167 . 56171) ("" . -56095) (56095 . 56099) ("" . -56048) (56048 . 56052) ("" . -55937) (55937 . 55941) ("" . -55879) (55879 . 55883) ("" . -55839) (55839 . 55843) ("" . -55800) (55800 . 55804) ("" . -55767) (55767 . 55771) ("" . -55738) (55738 . 55742)) nil (25725 36173 431806 918000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -56372) (undo-tree-id13014 . -3) 56375 (56371 . 56375) 56345) nil (25725 36173 431794 626000) 0 nil])
([nil nil ((nil rear-nonsticky nil 56621 . 56622) (nil fontified nil 56372 . 56622) (56372 . 56622)) nil (25725 36173 431786 176000) 0 nil])
([nil nil (("" . -56576) (56576 . 56580) ("" . -56530) (56530 . 56534) ("" . -56480) (56480 . 56484) ("" . -56413) (56413 . 56417) ("" . -56372) (56372 . 56376)) nil (25725 36173 431781 7000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -56675) (undo-tree-id13013 . -3) 56678 (56674 . 56678) 56643) nil (25725 36173 431770 811000) 0 nil])
([nil nil ((nil rear-nonsticky nil 57274 . 57275) (nil fontified nil 56675 . 57275) (56675 . 57275)) nil (25725 36173 431446 401000) 0 nil])
([nil nil (("" . -57255) (57255 . 57259) ("" . -57181) (57181 . 57185) ("" . -57134) (57134 . 57138) ("" . -57064) (57064 . 57068) ("" . -56970) (56970 . 56974) ("" . -56902) (56902 . 56906) ("" . -56858) (56858 . 56862) ("" . -56828) (56828 . 56832) ("" . -56783) (56783 . 56787) ("" . -56708) (56708 . 56712) ("" . -56675) (56675 . 56679)) nil (25725 36173 431439 766000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -57346) (undo-tree-id13012 . -3) 57349 (57345 . 57349) 57320) nil (25725 36173 431427 405000) 0 nil])
([nil nil ((nil rear-nonsticky nil 57897 . 57898) (nil fontified nil 57346 . 57898) (57346 . 57898)) nil (25725 36173 431418 256000) 0 nil])
([nil nil (("" . -57882) (57882 . 57886) ("" . -57808) (57808 . 57812) ("" . -57717) (57717 . 57721) ("" . -57619) (57619 . 57623) ("" . -57533) (57533 . 57537) ("" . -57452) (57452 . 57456) ("" . -57397) (57397 . 57401) ("" . -57346) (57346 . 57350)) nil (25725 36173 431331 514000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -57945) (undo-tree-id13011 . -3) 57948 (57944 . 57948) 57931) nil (25725 36173 431321 457000) 0 nil])
([nil nil ((nil rear-nonsticky nil 58625 . 58626) (nil fontified nil 57945 . 58626) (57945 . 58626)) nil (25725 36173 431313 914000) 0 nil])
([nil nil (("" . -58656) (58656 . 58660) ("" . -58611) (58611 . 58615) ("" . -58587) (58587 . 58591) ("" . -58473) (58473 . 58477) ("" . -58416) (58416 . 58420) ("" . -58350) (58350 . 58354) ("" . -58255) (58255 . 58259) ("" . -58198) (58198 . 58202) ("" . -58142) (58142 . 58146) ("" . -58108) (58108 . 58112) ("" . -58023) (58023 . 58027) ("" . -57999) (57999 . 58003) ("" . -57974) (57974 . 57978) ("" . -57945) (57945 . 57949)) nil (25725 36173 431305 393000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -58767) (undo-tree-id13010 . -3) 58770 (58766 . 58770) 58683) nil (25725 36173 431290 28000) 0 nil])
([nil nil ((nil rear-nonsticky nil 59237 . 59238) (nil fontified nil 58767 . 59238) (58767 . 59238)) nil (25725 36173 431279 133000) 0 nil])
([nil nil (("" . -59274) (59274 . 59278) ("" . -59229) (59229 . 59233) ("" . -59195) (59195 . 59199) ("" . -59144) (59144 . 59148) ("" . -59083) (59083 . 59087) ("" . -58999) (58999 . 59003) ("" . -58940) (58940 . 58944) ("" . -58823) (58823 . 58827) ("" . -58792) (58792 . 58796) ("" . -58767) (58767 . 58771)) nil (25725 36173 431269 76000) 0 nil])
([nil nil ((#("*** 
" 0 2 (fontified t face org-hide keymap (keymap)) 2 3 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 3 4 (fontified t keymap (keymap) face org-level-3) 4 5 (fontified t)) . 59274) (undo-tree-id13005 . -5) (undo-tree-id13006 . -4) (undo-tree-id13007 . 1) (undo-tree-id13008 . -5) (undo-tree-id13009 . -4)) nil (25725 36173 431143 573000) 0 nil])
([nil nil ((55896 . 55901) (#("m" 0 1 (fontified t)) . -55896) (undo-tree-id13032 . -1) 55897 (55884 . 55897) (55875 . 55884) (#("m" 0 1 (fontified t)) . -55875) (undo-tree-id13033 . -1) 55876 (55875 . 55876) (#("i" 0 1 (fontified t)) . -55875) (undo-tree-id13034 . -1) 55876 (55863 . 55876) (#("m" 0 1 (fontified t)) . -55863) (undo-tree-id13035 . -1) (undo-tree-id13036 . -1) 55864 (55862 . 55864) (55841 . 55862) (55840 . 55841) (#(" " 0 1 (fontified t)) . -55840) (undo-tree-id13037 . -1) (undo-tree-id13038 . -1) (#("a" 0 1 (fontified t)) . -55841) (undo-tree-id13039 . -1) (undo-tree-id13040 . -1) (#("l" 0 1 (fontified t)) . -55842) (undo-tree-id13041 . -1) (undo-tree-id13042 . -1) (#("l" 0 1 (fontified t)) . -55843) (undo-tree-id13043 . -1) (undo-tree-id13044 . -1) (#(" " 0 1 (fontified t)) . -55844) (undo-tree-id13045 . -1) 55845 (55841 . 55845) (55840 . 55841) (#("s" 0 1 (fontified t)) . -55840) (undo-tree-id13046 . -1) (#(" " 0 1 (fontified t)) . -55841) (undo-tree-id13047 . -1) 55842 (55841 . 55842) (55836 . 55841) (55835 . 55836) (#(" " 0 1 (fontified t)) . -55835) (undo-tree-id13048 . -1) 55836 (55835 . 55836) (55834 . 55835) (#("c" 0 1 (fontified t)) . -55834) (undo-tree-id13049 . -1) (undo-tree-id13050 . -1) (#("n" 0 1 (fontified t)) . -55835) (undo-tree-id13051 . -1) 55836 (55831 . 55836) (55824 . 55831) (55819 . 55824) (#("c" 0 1 (fontified t)) . -55819) (undo-tree-id13052 . -1) (undo-tree-id13053 . -1) (#(" " 0 1 (fontified t)) . -55820) (undo-tree-id13054 . -1) 55821 (55820 . 55821) (#("o" 0 1 (fontified t)) . -55820) (undo-tree-id13055 . -1) (undo-tree-id13056 . -1) (#("n" 0 1 (fontified t)) . -55821) (undo-tree-id13057 . -1) (undo-tree-id13058 . -1) (#("s" 0 1 (fontified t)) . -55822) (undo-tree-id13059 . -1) (undo-tree-id13060 . -1) (#("t" 0 1 (fontified t)) . -55823) (undo-tree-id13061 . -1) (undo-tree-id13062 . -1) 55824 (55813 . 55824) (#("t" 0 1 (fontified t)) . -55813) (undo-tree-id13063 . -1) (undo-tree-id13064 . -1) (#("e" 0 1 (fontified t)) . -55814) (undo-tree-id13065 . -1) (undo-tree-id13066 . -1) (#("x" 0 1 (fontified t)) . -55815) (undo-tree-id13067 . -1) (undo-tree-id13068 . -1) (#("t" 0 1 (fontified t)) . -55816) (undo-tree-id13069 . -1) (undo-tree-id13070 . -1) 55817 (55805 . 55817) (#("c" 0 1 (fontified t)) . -55805) (undo-tree-id13071 . -1) (#("n" 0 1 (fontified t)) . -55806) (undo-tree-id13072 . -1) 55807 (55792 . 55807) (55771 . 55792) (55766 . 55771) (t 25725 36173 537456 558000) 55741) nil (25725 38282 732566 679000) 0 nil])
([nil nil ((55898 . 55901) (#("t" 0 1 (fontified t)) . -55898) (undo-tree-id13025 . -1) (#("n" 0 1 (fontified t)) . -55899) (undo-tree-id13026 . -1) (#("t" 0 1 (fontified t)) . -55900) (undo-tree-id13027 . -1) (#("s" 0 1 (fontified t)) . -55901) (undo-tree-id13028 . -1) 55902 (55899 . 55902) (#("s" 0 1 (fontified t)) . -55899) (undo-tree-id13029 . -1) 55900 (55883 . 55900) (#(" " 0 1 (fontified t)) . -55883) (undo-tree-id13030 . -1) (#("t" 0 1 (fontified t)) . -55884) (undo-tree-id13031 . -1) 55885 (55874 . 55885)) nil (25725 38282 732046 46000) 0 nil])
([nil nil ((nil rear-nonsticky nil 56060 . 56061) (nil fontified nil 56060 . 56061) (nil fontified nil 56059 . 56060) (nil fontified nil 56051 . 56059) (nil fontified nil 56050 . 56051) (nil fontified nil 56004 . 56050) (56004 . 56061) (56003 . 56004) (55991 . 56003) (#("e" 0 1 (fontified t)) . -55991) (undo-tree-id13020 . -1) 55992 (55990 . 55992) (55969 . 55990) (#("v" 0 1 (fontified t)) . -55969) (undo-tree-id13021 . -1) (undo-tree-id13022 . -1) (#("e" 0 1 (fontified t)) . -55970) (undo-tree-id13023 . -1) (undo-tree-id13024 . -1) 55971 (55966 . 55971) (55961 . 55966) 55960) nil (25725 38282 732019 717000) 0 nil])
([nil nil ((56050 . 56051) 56004) nil (25725 38282 731998 696000) 0 nil])
([nil nil ((nil rear-nonsticky nil 56667 . 56668) (nil fontified nil 56051 . 56668) (56051 . 56668)) nil (25725 38282 731993 947000) 0 nil])
([nil nil ((nil rear-nonsticky nil 56058 . 56059) (nil fontified nil 56029 . 56059) (56029 . 56059) (#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 56029) (undo-tree-id13016 . -16) (undo-tree-id13017 . -15) (undo-tree-id13018 . -15) (undo-tree-id13019 . -15) 56045) nil (25725 38282 731981 656000) 0 nil])
([nil nil ((56722 . 56723) (56717 . 56722) (56713 . 56717) (56711 . 56713) (#(" " 0 1 (fontified t)) . -56711) (undo-tree-id13073 . -1) 56712 (56702 . 56712) (#("t" 0 1 (fontified t)) . -56702) (undo-tree-id13074 . -1) (undo-tree-id13075 . -1) (#("e" 0 1 (fontified t)) . -56703) (undo-tree-id13076 . -1) (undo-tree-id13077 . -1) (#("x" 0 1 (fontified t)) . -56704) (undo-tree-id13078 . -1) (undo-tree-id13079 . -1) (#("t" 0 1 (fontified t)) . -56705) (undo-tree-id13080 . -1) (undo-tree-id13081 . -1) (#(" " 0 1 (fontified t)) . -56706) (undo-tree-id13082 . -1) (undo-tree-id13083 . -1) (#("p" 0 1 (fontified t)) . -56707) (undo-tree-id13084 . -1) (undo-tree-id13085 . -1) (#("o" 0 1 (fontified t)) . -56708) (undo-tree-id13086 . -1) (undo-tree-id13087 . -1) (#("e" 0 1 (fontified t)) . -56709) (undo-tree-id13088 . -1) 56710 (56693 . 56710) (t 25725 38282 837774 963000)) nil (25725 38332 661386 564000) 0 nil])
([nil nil ((nil rear-nonsticky nil 56857 . 56858) (nil fontified nil 56723 . 56858) (56723 . 56858)) nil (25725 38332 661331 253000) 0 nil])
([nil nil (("" . -56849) (56849 . 56851) ("" . -56842) (56842 . 56844) ("" . -56828) (56828 . 56830) ("" . -56810) (56810 . 56812) ("" . -56794) (56794 . 56796) ("" . -56779) (56779 . 56781) ("" . -56764) (56764 . 56766) ("" . -56749) (56749 . 56751) ("" . -56735) (56735 . 56737)) nil (25725 38332 661322 733000) 0 nil])
([nil nil ((56915 . 56920) 56877) nil (25725 38332 661303 598000) 0 nil])
([nil nil ((57022 . 57023) (57004 . 57022) (56983 . 57004) (#("V" 0 1 (fontified t)) . -56983) (undo-tree-id13089 . -1) (#("a" 0 1 (fontified t)) . -56984) (undo-tree-id13090 . -1) (#("l" 0 1 (fontified t)) . -56985) (undo-tree-id13091 . -1) (#("u" 0 1 (fontified t)) . -56986) (undo-tree-id13092 . -1) (#("e" 0 1 (fontified t)) . -56987) (undo-tree-id13093 . -1) 56988 (56983 . 56988) (56979 . 56983) (56958 . 56979) (#("a" 0 1 (fontified t)) . -56958) (undo-tree-id13094 . -1) (#(" " 0 1 (fontified t)) . -56959) (undo-tree-id13095 . -1) 56960 (56947 . 56960) (#("t" 0 1 (fontified t)) . -56947) (undo-tree-id13096 . -1) 56948 (56941 . 56948) (56920 . 56941) (t 25725 38332 770979 163000)) nil (25725 38391 728535 886000) 0 nil])
([nil nil ((57002 . 57003)) nil (25725 38391 728495 520000) 0 nil])
([nil nil ((57012 . 57013)) nil (25725 38391 728491 190000) 0 nil])
([nil nil ((57024 . 57029) 57012) nil (25725 38391 728478 968000) 0 nil])
([nil nil ((57086 . 57088) (57066 . 57086) (57045 . 57066) (#("r" 0 1 (fontified t)) . -57045) (undo-tree-id13099 . -1) (#("u" 0 1 (fontified t)) . -57046) (undo-tree-id13100 . -1) 57047 (57033 . 57047) (#("v" 0 1 (fontified t)) . -57033) (undo-tree-id13101 . -1) (#("a" 0 1 (fontified t)) . -57034) (undo-tree-id13102 . -1) 57035 (57028 . 57035) (t 25725 38391 939993 681000)) nil (25725 38436 309933 125000) 0 nil])
([nil nil ((57089 . 57093) 57087) nil (25725 38436 309646 370000) 0 nil])
([nil nil ((57093 . 57094)) nil (25725 38436 309641 621000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -57093) (undo-tree-id13098 . -1) 57094) nil (25725 38436 309635 336000) 0 nil])
([nil nil ((57093 . 57094)) nil (25725 38436 309432 38000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -57093) (undo-tree-id13097 . -1) 57094) nil (25725 38436 309362 549000) 0 nil])
([nil nil ((nil rear-nonsticky nil 57148 . 57149) (nil fontified nil 57148 . 57149) (nil fontified nil 57147 . 57148) (nil fontified nil 57139 . 57147) (nil fontified nil 57138 . 57139) (nil fontified nil 57092 . 57138) (57092 . 57149) (t 25725 38436 409961 361000)) nil (25725 38462 153522 801000) 0 nil])
([nil nil ((nil rear-nonsticky nil 57205 . 57206) (nil fontified nil 57205 . 57206) (nil fontified nil 57204 . 57205) (nil fontified nil 57196 . 57204) (nil fontified nil 57195 . 57196) (nil fontified nil 57149 . 57195) (57149 . 57206)) nil (25725 38462 153516 166000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -57139) (undo-tree-id13103 . -2) 57141 (57138 . 57141) 57090) nil (25725 38462 153508 414000) 0 nil])
([nil nil ((nil rear-nonsticky nil 57391 . 57392) (nil fontified nil 57139 . 57392) (57139 . 57392)) nil (25725 38462 155020 617000) 0 nil])
([nil nil ((57449 . 57450) 57409) nil (25725 38496 46217 678000) 0 nil] [nil nil ((nil rear-nonsticky nil 57678 . 57679) (nil fontified nil 57410 . 57679) (57410 . 57679) 57409) ((#("<!DOCTYPE html>
<html lang=\"en\">
<body>

<p id=\"p1\"></p> //yes there is a carriage return text node before this comment, even this comment is a node
<p id=\"p2\"></p>

<script>

console.log(document.querySelector('#p1').nextSibling) //logs Text

</script>
</body>
</html>" 0 1 (fontified nil font-lock-fontified t face (rainbow-delimiters-unmatched-face org-meta-line)) 1 14 (fontified nil font-lock-fontified t face org-meta-line) 14 15 (fontified nil font-lock-fontified t face (rainbow-delimiters-unmatched-face org-meta-line)) 15 16 (fontified nil) 16 17 (fontified nil face (rainbow-delimiters-unmatched-face)) 17 31 (fontified nil) 31 32 (fontified nil face (rainbow-delimiters-unmatched-face)) 32 33 (fontified nil) 33 34 (fontified nil face (rainbow-delimiters-unmatched-face)) 34 38 (fontified nil) 38 39 (fontified nil face (rainbow-delimiters-unmatched-face)) 39 41 (fontified nil) 41 42 (fontified nil face (rainbow-delimiters-unmatched-face)) 42 51 (fontified nil) 51 52 (fontified nil face (rainbow-delimiters-unmatched-face)) 52 53 (fontified nil face (rainbow-delimiters-unmatched-face)) 53 55 (fontified nil) 55 56 (fontified nil face (rainbow-delimiters-unmatched-face)) 56 149 (fontified nil) 149 150 (fontified nil face (rainbow-delimiters-unmatched-face)) 150 159 (fontified nil) 159 160 (fontified nil face (rainbow-delimiters-unmatched-face)) 160 161 (fontified nil face (rainbow-delimiters-unmatched-face)) 161 163 (fontified nil) 163 164 (fontified nil face (rainbow-delimiters-unmatched-face)) 164 166 (fontified nil) 166 167 (fontified nil face (rainbow-delimiters-unmatched-face)) 167 173 (fontified nil) 173 174 (fontified nil face (rainbow-delimiters-unmatched-face)) 174 187 (fontified nil) 187 188 (fontified nil face (rainbow-delimiters-unmatched-face)) 188 210 (fontified nil) 210 211 (fontified nil face (rainbow-delimiters-unmatched-face)) 211 216 (fontified nil) 216 217 (fontified nil face (rainbow-delimiters-unmatched-face)) 217 229 (fontified nil) 229 230 (fontified nil face (rainbow-delimiters-unmatched-face)) 230 244 (fontified nil) 244 245 (fontified nil face (rainbow-delimiters-unmatched-face)) 245 252 (fontified nil) 252 253 (fontified nil face (rainbow-delimiters-unmatched-face)) 253 254 (fontified nil) 254 255 (fontified nil face (rainbow-delimiters-unmatched-face)) 255 260 (fontified nil) 260 261 (fontified nil face (rainbow-delimiters-unmatched-face)) 261 262 (fontified nil) 262 263 (fontified nil face (rainbow-delimiters-unmatched-face)) 263 268 (fontified nil) 268 269 (fontified nil rear-nonsticky nil face (rainbow-delimiters-unmatched-face))) . 57410) (undo-tree-id13104 . -268) (undo-tree-id13105 . -262) (undo-tree-id13106 . -268) (undo-tree-id13107 . -262) (undo-tree-id13108 . -268) (undo-tree-id13109 . -268) (nil fontified t 57671 . 57672) (nil fontified t 57670 . 57671) (nil fontified t 57665 . 57670) (nil fontified t 57664 . 57665) (nil fontified t 57663 . 57664) (nil fontified t 57662 . 57663) (nil fontified t 57655 . 57662) (nil fontified t 57654 . 57655) (nil fontified t 57640 . 57654) (nil fontified t 57639 . 57640) (nil fontified t 57627 . 57639) (nil fontified t 57626 . 57627) (nil fontified t 57621 . 57626) (nil fontified t 57620 . 57621) (nil fontified t 57598 . 57620) (nil fontified t 57597 . 57598) (nil fontified t 57584 . 57597) (nil fontified t 57583 . 57584) (nil fontified t 57577 . 57583) (nil fontified t 57576 . 57577) (nil fontified t 57574 . 57576) (nil fontified t 57573 . 57574) (nil fontified t 57571 . 57573) (nil fontified t 57570 . 57571) (nil fontified t 57569 . 57570) (nil fontified t 57560 . 57569) (nil fontified t 57559 . 57560) (nil fontified t 57466 . 57559) (nil fontified t 57465 . 57466) (nil fontified t 57463 . 57465) (nil fontified t 57462 . 57463) (nil fontified t 57461 . 57462) (nil fontified t 57452 . 57461) (nil fontified t 57451 . 57452) (nil fontified t 57449 . 57451) (nil fontified t 57448 . 57449) (nil fontified t 57444 . 57448) (nil fontified t 57443 . 57444) (nil fontified t 57442 . 57443) (nil fontified t 57441 . 57442) (nil fontified t 57427 . 57441) (nil fontified t 57426 . 57427) (nil fontified t 57425 . 57426) (nil fontified t 57424 . 57425) (nil fontified t 57411 . 57424) (nil fontified t 57410 . 57411) (nil rear-nonsticky t 57678 . 57679)) (25725 38462 153386 826000) 0 nil])
([nil nil ((nil rear-nonsticky nil 57718 . 57719) (nil fontified nil 57450 . 57719) (57450 . 57719)) nil (25725 38496 46212 859000) 0 nil])
nil
([nil nil ((57410 . 57422) (#("a" 0 1 (fontified t)) . -57410) (undo-tree-id13120 . -1) 57411 (57403 . 57411) (57402 . 57403) 57399) nil (25725 38496 46206 714000) 0 nil])
([nil nil ((#("r" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -57127) (undo-tree-id13115 . -1) 57128 (57117 . 57128) (#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 57117) (undo-tree-id13116 . -15) (undo-tree-id13117 . -15) (undo-tree-id13118 . -15) (undo-tree-id13119 . -15) 57132) nil (25725 38496 46193 444000) 0 nil])
([nil nil ((#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -57447) (undo-tree-id13110 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -57448) (undo-tree-id13111 . -1) 57449 (57442 . 57449) (#("c" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -57442) (undo-tree-id13112 . -1) 57443 (57442 . 57443) (#("creatingelements" 0 16 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 57442) (undo-tree-id13113 . -15) (undo-tree-id13114 . -11) 57453) nil (25725 38496 45895 654000) 0 nil])
([nil nil ((57775 . 57780) (t 25725 38496 147488 109000) 57736) nil (25725 38506 902001 960000) 0 nil])
([nil nil ((57828 . 57829) (57827 . 57828) (57825 . 57827) (57816 . 57825) (57796 . 57816) (#("t" 0 1 (fontified t)) . -57796) (undo-tree-id13134 . -1) 57797 (57796 . 57797) (57780 . 57796) (t 25725 38507 7067 825000)) nil (25725 38599 403596 56000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -57829) (undo-tree-id13130 . -1) (#("k" 0 1 (fontified t)) . -57830) (undo-tree-id13131 . -1) 57831 (57829 . 57831) (#("i" 0 1 (fontified t)) . -57829) (undo-tree-id13132 . -1) 57830 (57829 . 57830) (#("i" 0 1 (fontified t)) . -57829) (undo-tree-id13133 . -1) 57830 (57829 . 57830)) nil (25725 38599 403582 438000) 0 nil])
([nil nil ((nil rear-nonsticky nil 57829 . 57830) (#("
" 0 1 (font-lock-fontified t font-lock-multiline t face org-block-begin-line fontified nil)) . -57865) (57829 . 57866)) nil (25725 38599 403563 162000) 0 nil])
([nil nil ((nil rear-nonsticky nil 57865 . 57866) (#("
" 0 1 (rear-nonsticky t face org-block-end-line fontified nil)) . -57875) (57865 . 57876) 57830) nil (25725 38599 403557 86000) 0 nil])
([nil nil ((#("#+BEGIN_SRC html :tangle enter.html
#+END_SRC
" 0 6 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 6 7 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 7 35 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 35 36 (fontified t rear-nonsticky t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 36 44 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 44 45 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 45 46 (fontified t face org-block-end-line)) . 57830) (undo-tree-id13121 . -36) (undo-tree-id13122 . -45) (undo-tree-id13123 . 1) (undo-tree-id13124 . -46) (undo-tree-id13125 . -36) (undo-tree-id13126 . -46) (undo-tree-id13127 . -46) (undo-tree-id13128 . -36) (undo-tree-id13129 . -36) 57866) nil (25725 38599 403441 154000) 0 nil])
([nil nil ((nil rear-nonsticky nil 57874 . 57875) (nil fontified nil 57874 . 57875) (nil fontified nil 57873 . 57874) (nil fontified nil 57865 . 57873) (nil fontified nil 57864 . 57865) (nil fontified nil 57836 . 57864) (nil fontified nil 57835 . 57836) (nil fontified nil 57829 . 57835) (57829 . 57875)) nil (25725 38599 403400 159000) 0 nil])
([nil nil ((57864 . 57865) 57829) nil (25725 38599 403104 881000) 0 nil])
([nil nil ((nil rear-nonsticky nil 58120 . 58121) (nil fontified nil 57865 . 58121) (57865 . 58121)) nil (25725 38599 402893 60000) 0 nil])
([nil nil ((nil rear-nonsticky nil 58217 . 58218) (nil fontified nil 58217 . 58218) (nil fontified nil 58216 . 58217) (nil fontified nil 58208 . 58216) (nil fontified nil 58207 . 58208) (nil fontified nil 58179 . 58207) (nil fontified nil 58178 . 58179) (nil fontified nil 58172 . 58178) (58172 . 58218) (#("k" 0 1 (fontified t)) . -58172) (undo-tree-id14217 . -1) 58173 (58172 . 58173) (58170 . 58172) (58166 . 58170) (58154 . 58166) (58133 . 58154) (58132 . 58133) (t 25725 38599 507817 33000) 58132) nil (25725 38649 113611 384000) 0 nil])
([nil nil ((58207 . 58208) 58172) nil (25725 38649 113599 22000) 0 nil])
([nil nil ((nil rear-nonsticky nil 58558 . 58559) (nil fontified nil 58208 . 58559) (58208 . 58559)) nil (25725 38649 113594 692000) 0 nil])
([nil nil ((58205 . 58206) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -58205) (undo-tree-id13135 . -1) (#("y" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -58206) (undo-tree-id13136 . -1) 58207 (58196 . 58207) (#(" enter" 0 6 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 58196) (undo-tree-id13137 . -5) (undo-tree-id13138 . -5) (undo-tree-id13139 . -5) (undo-tree-id13140 . -6) (undo-tree-id13141 . -5) (undo-tree-id13142 . -1) (undo-tree-id13143 . -1) (undo-tree-id13144 . -1) (undo-tree-id13145 . -1) (undo-tree-id13146 . -1) (undo-tree-id13147 . -1) (undo-tree-id13148 . -1) (undo-tree-id13149 . -1) (undo-tree-id13150 . -1) (undo-tree-id13151 . -1) (undo-tree-id13152 . -1) (undo-tree-id13153 . -1) (undo-tree-id13154 . -1) (undo-tree-id13155 . -1) (undo-tree-id13156 . -1) (undo-tree-id13157 . -1) (undo-tree-id13158 . -1) (undo-tree-id13159 . -1) (undo-tree-id13160 . -1) (undo-tree-id13161 . -1) (undo-tree-id13162 . -1) (undo-tree-id13163 . -1) (undo-tree-id13164 . -1) (undo-tree-id13165 . -1) (undo-tree-id13166 . -1) (undo-tree-id13167 . -1) (undo-tree-id13168 . -1) (undo-tree-id13169 . -1) (undo-tree-id13170 . -1) (undo-tree-id13171 . -1) (undo-tree-id13172 . -1) (undo-tree-id13173 . -1) (undo-tree-id13174 . -1) (undo-tree-id13175 . -1) (undo-tree-id13176 . -1) (undo-tree-id13177 . -1) (undo-tree-id13178 . -1) (undo-tree-id13179 . -1) (undo-tree-id13180 . -1) (undo-tree-id13181 . -1) (undo-tree-id13182 . -1) (undo-tree-id13183 . -1) (undo-tree-id13184 . -1) (undo-tree-id13185 . -1) (undo-tree-id13186 . -1) (undo-tree-id13187 . -1) (undo-tree-id13188 . -1) (undo-tree-id13189 . -1) (undo-tree-id13190 . -1) (undo-tree-id13191 . -1) (undo-tree-id13192 . -1) (undo-tree-id13193 . -1) (undo-tree-id13194 . -1) (undo-tree-id13195 . -1) (undo-tree-id13196 . -1) (undo-tree-id13197 . -1) (undo-tree-id13198 . -1) (undo-tree-id13199 . -1) (undo-tree-id13200 . -1) (undo-tree-id13201 . -1) (undo-tree-id13202 . -1) (undo-tree-id13203 . -1) (undo-tree-id13204 . -1) (undo-tree-id13205 . -1) (undo-tree-id13206 . -1) (undo-tree-id13207 . -1) (undo-tree-id13208 . -1) (undo-tree-id13209 . -1) (undo-tree-id13210 . -1) (undo-tree-id13211 . -1) (undo-tree-id13212 . -1) (undo-tree-id13213 . -1) (undo-tree-id13214 . -1) (undo-tree-id13215 . -1) (undo-tree-id13216 . -1) (undo-tree-id13217 . -1) (undo-tree-id13218 . -1) (undo-tree-id13219 . -1) (undo-tree-id13220 . -2) (undo-tree-id13221 . -2) (undo-tree-id13222 . -2) (undo-tree-id13223 . -2) (undo-tree-id13224 . -2) (undo-tree-id13225 . -2) (undo-tree-id13226 . -2) (undo-tree-id13227 . -2) (undo-tree-id13228 . -2) (undo-tree-id13229 . -2) (undo-tree-id13230 . -2) (undo-tree-id13231 . -2) (undo-tree-id13232 . -2) (undo-tree-id13233 . -2) (undo-tree-id13234 . -2) (undo-tree-id13235 . -2) (undo-tree-id13236 . -2) (undo-tree-id13237 . -2) (undo-tree-id13238 . -2) (undo-tree-id13239 . -2) (undo-tree-id13240 . -2) (undo-tree-id13241 . -2) (undo-tree-id13242 . -2) (undo-tree-id13243 . -2) (undo-tree-id13244 . -2) (undo-tree-id13245 . -2) (undo-tree-id13246 . -2) (undo-tree-id13247 . -2) (undo-tree-id13248 . -2) (undo-tree-id13249 . -2) (undo-tree-id13250 . -2) (undo-tree-id13251 . -2) (undo-tree-id13252 . -2) (undo-tree-id13253 . -2) (undo-tree-id13254 . -2) (undo-tree-id13255 . -2) (undo-tree-id13256 . -2) (undo-tree-id13257 . -2) (undo-tree-id13258 . -2) (undo-tree-id13259 . -2) (undo-tree-id13260 . -2) (undo-tree-id13261 . -2) (undo-tree-id13262 . -2) (undo-tree-id13263 . -2) (undo-tree-id13264 . -2) (undo-tree-id13265 . -2) (undo-tree-id13266 . -2) (undo-tree-id13267 . -2) (undo-tree-id13268 . -2) (undo-tree-id13269 . -2) (undo-tree-id13270 . -2) (undo-tree-id13271 . -2) (undo-tree-id13272 . -2) (undo-tree-id13273 . -2) (undo-tree-id13274 . -2) (undo-tree-id13275 . -2) (undo-tree-id13276 . -2) (undo-tree-id13277 . -2) (undo-tree-id13278 . -2) (undo-tree-id13279 . -2) (undo-tree-id13280 . -2) (undo-tree-id13281 . -2) (undo-tree-id13282 . -2) (undo-tree-id13283 . -3) (undo-tree-id13284 . -3) (undo-tree-id13285 . -3) (undo-tree-id13286 . -3) (undo-tree-id13287 . -3) (undo-tree-id13288 . -3) (undo-tree-id13289 . -3) (undo-tree-id13290 . -3) (undo-tree-id13291 . -3) (undo-tree-id13292 . -3) (undo-tree-id13293 . -3) (undo-tree-id13294 . -3) (undo-tree-id13295 . -3) (undo-tree-id13296 . -3) (undo-tree-id13297 . -3) (undo-tree-id13298 . -3) (undo-tree-id13299 . -3) (undo-tree-id13300 . -3) (undo-tree-id13301 . -3) (undo-tree-id13302 . -3) (undo-tree-id13303 . -3) (undo-tree-id13304 . -3) (undo-tree-id13305 . -3) (undo-tree-id13306 . -3) (undo-tree-id13307 . -3) (undo-tree-id13308 . -3) (undo-tree-id13309 . -3) (undo-tree-id13310 . -3) (undo-tree-id13311 . -3) (undo-tree-id13312 . -3) (undo-tree-id13313 . -3) (undo-tree-id13314 . -3) (undo-tree-id13315 . -3) (undo-tree-id13316 . -3) (undo-tree-id13317 . -3) (undo-tree-id13318 . -3) (undo-tree-id13319 . -3) (undo-tree-id13320 . -3) (undo-tree-id13321 . -3) (undo-tree-id13322 . -3) (undo-tree-id13323 . -3) (undo-tree-id13324 . -3) (undo-tree-id13325 . -3) (undo-tree-id13326 . -3) (undo-tree-id13327 . -3) (undo-tree-id13328 . -3) (undo-tree-id13329 . -3) (undo-tree-id13330 . -3) (undo-tree-id13331 . -3) (undo-tree-id13332 . -3) (undo-tree-id13333 . -3) (undo-tree-id13334 . -3) (undo-tree-id13335 . -3) (undo-tree-id13336 . -3) (undo-tree-id13337 . -3) (undo-tree-id13338 . -3) (undo-tree-id13339 . -3) (undo-tree-id13340 . -3) (undo-tree-id13341 . -3) (undo-tree-id13342 . -3) (undo-tree-id13343 . -3) (undo-tree-id13344 . -3) (undo-tree-id13345 . -3) (undo-tree-id13346 . -3) (undo-tree-id13347 . -3) (undo-tree-id13348 . -3) (undo-tree-id13349 . -3) (undo-tree-id13350 . -3) (undo-tree-id13351 . -3) (undo-tree-id13352 . -3) (undo-tree-id13353 . -3) (undo-tree-id13354 . -3) (undo-tree-id13355 . -3) (undo-tree-id13356 . -3) (undo-tree-id13357 . -3) (undo-tree-id13358 . -3) (undo-tree-id13359 . -3) (undo-tree-id13360 . -3) (undo-tree-id13361 . -3) (undo-tree-id13362 . -3) (undo-tree-id13363 . -3) (undo-tree-id13364 . -3) (undo-tree-id13365 . -3) (undo-tree-id13366 . -3) (undo-tree-id13367 . -3) (undo-tree-id13368 . -3) (undo-tree-id13369 . -3) (undo-tree-id13370 . -3) (undo-tree-id13371 . -3) (undo-tree-id13372 . -3) (undo-tree-id13373 . -3) (undo-tree-id13374 . -3) (undo-tree-id13375 . -3) (undo-tree-id13376 . -3) (undo-tree-id13377 . -3) (undo-tree-id13378 . -3) (undo-tree-id13379 . -3) (undo-tree-id13380 . -3) (undo-tree-id13381 . -3) (undo-tree-id13382 . -3) (undo-tree-id13383 . -3) (undo-tree-id13384 . -3) (undo-tree-id13385 . -3) (undo-tree-id13386 . -3) (undo-tree-id13387 . -3) (undo-tree-id13388 . -3) (undo-tree-id13389 . -3) (undo-tree-id13390 . -3) (undo-tree-id13391 . -3) (undo-tree-id13392 . -3) (undo-tree-id13393 . -3) (undo-tree-id13394 . -3) (undo-tree-id13395 . -3) (undo-tree-id13396 . -3) (undo-tree-id13397 . -3) (undo-tree-id13398 . -3) (undo-tree-id13399 . -3) (undo-tree-id13400 . -3) (undo-tree-id13401 . -3) (undo-tree-id13402 . -3) (undo-tree-id13403 . -3) (undo-tree-id13404 . -3) (undo-tree-id13405 . -3) (undo-tree-id13406 . -3) (undo-tree-id13407 . -3) (undo-tree-id13408 . -3) (undo-tree-id13409 . -3) (undo-tree-id13410 . -3) (undo-tree-id13411 . -3) (undo-tree-id13412 . -3) (undo-tree-id13413 . -3) (undo-tree-id13414 . -3) (undo-tree-id13415 . -3) (undo-tree-id13416 . -3) (undo-tree-id13417 . -3) (undo-tree-id13418 . -3) (undo-tree-id13419 . -3) (undo-tree-id13420 . -3) (undo-tree-id13421 . -3) (undo-tree-id13422 . -3) (undo-tree-id13423 . -3) (undo-tree-id13424 . -3) (undo-tree-id13425 . -3) (undo-tree-id13426 . -3) (undo-tree-id13427 . -3) (undo-tree-id13428 . -3) (undo-tree-id13429 . -3) (undo-tree-id13430 . -3) (undo-tree-id13431 . -3) (undo-tree-id13432 . -3) (undo-tree-id13433 . -3) (undo-tree-id13434 . -3) (undo-tree-id13435 . -3) (undo-tree-id13436 . -3) (undo-tree-id13437 . -3) (undo-tree-id13438 . -3) (undo-tree-id13439 . -3) (undo-tree-id13440 . -3) (undo-tree-id13441 . -3) (undo-tree-id13442 . -3) (undo-tree-id13443 . -3) (undo-tree-id13444 . -3) (undo-tree-id13445 . -3) (undo-tree-id13446 . -3) (undo-tree-id13447 . -3) (undo-tree-id13448 . -3) (undo-tree-id13449 . -3) (undo-tree-id13450 . -3) (undo-tree-id13451 . -3) (undo-tree-id13452 . -3) (undo-tree-id13453 . -3) (undo-tree-id13454 . -3) (undo-tree-id13455 . -3) (undo-tree-id13456 . -3) (undo-tree-id13457 . -3) (undo-tree-id13458 . -3) (undo-tree-id13459 . -3) (undo-tree-id13460 . -3) (undo-tree-id13461 . -3) (undo-tree-id13462 . -3) (undo-tree-id13463 . -3) (undo-tree-id13464 . -3) (undo-tree-id13465 . -3) (undo-tree-id13466 . -3) (undo-tree-id13467 . -3) (undo-tree-id13468 . -3) (undo-tree-id13469 . -4) (undo-tree-id13470 . -4) (undo-tree-id13471 . -4) (undo-tree-id13472 . -4) (undo-tree-id13473 . -4) (undo-tree-id13474 . -4) (undo-tree-id13475 . -4) (undo-tree-id13476 . -4) (undo-tree-id13477 . -4) (undo-tree-id13478 . -4) (undo-tree-id13479 . -4) (undo-tree-id13480 . -4) (undo-tree-id13481 . -4) (undo-tree-id13482 . -4) (undo-tree-id13483 . -4) (undo-tree-id13484 . -4) (undo-tree-id13485 . -4) (undo-tree-id13486 . -4) (undo-tree-id13487 . -4) (undo-tree-id13488 . -4) (undo-tree-id13489 . -4) (undo-tree-id13490 . -4) (undo-tree-id13491 . -4) (undo-tree-id13492 . -4) (undo-tree-id13493 . -4) (undo-tree-id13494 . -4) (undo-tree-id13495 . -4) (undo-tree-id13496 . -4) (undo-tree-id13497 . -4) (undo-tree-id13498 . -4) (undo-tree-id13499 . -4) (undo-tree-id13500 . -4) (undo-tree-id13501 . -4) (undo-tree-id13502 . -4) (undo-tree-id13503 . -4) (undo-tree-id13504 . -4) (undo-tree-id13505 . -4) (undo-tree-id13506 . -4) (undo-tree-id13507 . -4) (undo-tree-id13508 . -4) (undo-tree-id13509 . -4) (undo-tree-id13510 . -4) (undo-tree-id13511 . -4) (undo-tree-id13512 . -4) (undo-tree-id13513 . -4) (undo-tree-id13514 . -4) (undo-tree-id13515 . -4) (undo-tree-id13516 . -4) (undo-tree-id13517 . -4) (undo-tree-id13518 . -4) (undo-tree-id13519 . -4) (undo-tree-id13520 . -4) (undo-tree-id13521 . -4) (undo-tree-id13522 . -4) (undo-tree-id13523 . -4) (undo-tree-id13524 . -4) (undo-tree-id13525 . -4) (undo-tree-id13526 . -4) (undo-tree-id13527 . -4) (undo-tree-id13528 . -4) (undo-tree-id13529 . -4) (undo-tree-id13530 . -4) (undo-tree-id13531 . -5) (undo-tree-id13532 . -5) (undo-tree-id13533 . -5) (undo-tree-id13534 . -5) (undo-tree-id13535 . -5) (undo-tree-id13536 . -5) (undo-tree-id13537 . -5) (undo-tree-id13538 . -5) (undo-tree-id13539 . -5) (undo-tree-id13540 . -5) (undo-tree-id13541 . -5) (undo-tree-id13542 . -5) (undo-tree-id13543 . -5) (undo-tree-id13544 . -5) (undo-tree-id13545 . -5) (undo-tree-id13546 . -5) (undo-tree-id13547 . -5) (undo-tree-id13548 . -5) (undo-tree-id13549 . -5) (undo-tree-id13550 . -5) (undo-tree-id13551 . -5) (undo-tree-id13552 . -5) (undo-tree-id13553 . -5) (undo-tree-id13554 . -5) (undo-tree-id13555 . -5) (undo-tree-id13556 . -5) (undo-tree-id13557 . -5) (undo-tree-id13558 . -5) (undo-tree-id13559 . -5) (undo-tree-id13560 . -5) (undo-tree-id13561 . -5) (undo-tree-id13562 . -5) (undo-tree-id13563 . -5) (undo-tree-id13564 . -5) (undo-tree-id13565 . -5) (undo-tree-id13566 . -5) (undo-tree-id13567 . -5) (undo-tree-id13568 . -5) (undo-tree-id13569 . -5) (undo-tree-id13570 . -5) (undo-tree-id13571 . -5) (undo-tree-id13572 . -5) (undo-tree-id13573 . -5) (undo-tree-id13574 . -5) (undo-tree-id13575 . -5) (undo-tree-id13576 . -5) (undo-tree-id13577 . -5) (undo-tree-id13578 . -5) (undo-tree-id13579 . -5) (undo-tree-id13580 . -5) (undo-tree-id13581 . -5) (undo-tree-id13582 . -5) (undo-tree-id13583 . -5) (undo-tree-id13584 . -5) (undo-tree-id13585 . -5) (undo-tree-id13586 . -5) (undo-tree-id13587 . -5) (undo-tree-id13588 . -5) (undo-tree-id13589 . -5) (undo-tree-id13590 . -5) (undo-tree-id13591 . -5) (undo-tree-id13592 . -5) (undo-tree-id13593 . -5) (undo-tree-id13594 . -5) (undo-tree-id13595 . -5) (undo-tree-id13596 . -5) (undo-tree-id13597 . -5) (undo-tree-id13598 . -5) (undo-tree-id13599 . -5) (undo-tree-id13600 . -5) (undo-tree-id13601 . -5) (undo-tree-id13602 . -5) (undo-tree-id13603 . -5) (undo-tree-id13604 . -5) (undo-tree-id13605 . -5) (undo-tree-id13606 . -5) (undo-tree-id13607 . -5) (undo-tree-id13608 . -5) (undo-tree-id13609 . -5) (undo-tree-id13610 . -5) (undo-tree-id13611 . -5) (undo-tree-id13612 . -5) (undo-tree-id13613 . -5) (undo-tree-id13614 . -5) (undo-tree-id13615 . -5) (undo-tree-id13616 . -5) (undo-tree-id13617 . -5) (undo-tree-id13618 . -5) (undo-tree-id13619 . -5) (undo-tree-id13620 . -5) (undo-tree-id13621 . -5) (undo-tree-id13622 . -5) (undo-tree-id13623 . -5) (undo-tree-id13624 . -5) (undo-tree-id13625 . -5) (undo-tree-id13626 . -5) (undo-tree-id13627 . -5) (undo-tree-id13628 . -5) (undo-tree-id13629 . -5) (undo-tree-id13630 . -5) (undo-tree-id13631 . -5) (undo-tree-id13632 . -5) (undo-tree-id13633 . -5) (undo-tree-id13634 . -5) (undo-tree-id13635 . -5) (undo-tree-id13636 . -5) (undo-tree-id13637 . -5) (undo-tree-id13638 . -5) (undo-tree-id13639 . -5) (undo-tree-id13640 . -5) (undo-tree-id13641 . -5) (undo-tree-id13642 . -5) (undo-tree-id13643 . -5) (undo-tree-id13644 . -5) (undo-tree-id13645 . -5) (undo-tree-id13646 . -5) (undo-tree-id13647 . -5) (undo-tree-id13648 . -5) (undo-tree-id13649 . -5) (undo-tree-id13650 . -5) (undo-tree-id13651 . -5) (undo-tree-id13652 . -5) (undo-tree-id13653 . -5) (undo-tree-id13654 . -5) (undo-tree-id13655 . -5) (undo-tree-id13656 . -5) (undo-tree-id13657 . -5) (undo-tree-id13658 . -5) (undo-tree-id13659 . -5) (undo-tree-id13660 . -5) (undo-tree-id13661 . -5) (undo-tree-id13662 . -5) (undo-tree-id13663 . -5) (undo-tree-id13664 . -5) (undo-tree-id13665 . -5) (undo-tree-id13666 . -5) (undo-tree-id13667 . -5) (undo-tree-id13668 . -5) (undo-tree-id13669 . -5) (undo-tree-id13670 . -5) (undo-tree-id13671 . -5) (undo-tree-id13672 . -5) (undo-tree-id13673 . -5) (undo-tree-id13674 . -5) (undo-tree-id13675 . -5) (undo-tree-id13676 . -5) (undo-tree-id13677 . -5) (undo-tree-id13678 . -5) (undo-tree-id13679 . -5) (undo-tree-id13680 . -5) (undo-tree-id13681 . -5) (undo-tree-id13682 . -5) (undo-tree-id13683 . -5) (undo-tree-id13684 . -5) (undo-tree-id13685 . -5) (undo-tree-id13686 . -5) (undo-tree-id13687 . -5) (undo-tree-id13688 . -5) (undo-tree-id13689 . -5) (undo-tree-id13690 . -5) (undo-tree-id13691 . -5) (undo-tree-id13692 . -5) (undo-tree-id13693 . -5) (undo-tree-id13694 . -5) (undo-tree-id13695 . -5) (undo-tree-id13696 . -5) (undo-tree-id13697 . -5) (undo-tree-id13698 . -5) (undo-tree-id13699 . -5) (undo-tree-id13700 . -5) (undo-tree-id13701 . -5) (undo-tree-id13702 . -5) (undo-tree-id13703 . -5) (undo-tree-id13704 . -5) (undo-tree-id13705 . -5) (undo-tree-id13706 . -5) (undo-tree-id13707 . -5) (undo-tree-id13708 . -5) (undo-tree-id13709 . -5) (undo-tree-id13710 . -5) (undo-tree-id13711 . -5) (undo-tree-id13712 . -5) (undo-tree-id13713 . -5) (undo-tree-id13714 . -5) (undo-tree-id13715 . -5) (undo-tree-id13716 . -5) (undo-tree-id13717 . -5) (undo-tree-id13718 . -5) (undo-tree-id13719 . -5) (undo-tree-id13720 . -5) (undo-tree-id13721 . -5) (undo-tree-id13722 . -5) (undo-tree-id13723 . -5) (undo-tree-id13724 . -5) (undo-tree-id13725 . -5) (undo-tree-id13726 . -5) (undo-tree-id13727 . -5) (undo-tree-id13728 . -5) (undo-tree-id13729 . -5) (undo-tree-id13730 . -5) (undo-tree-id13731 . -5) (undo-tree-id13732 . -5) (undo-tree-id13733 . -5) (undo-tree-id13734 . -5) (undo-tree-id13735 . -5) (undo-tree-id13736 . -5) (undo-tree-id13737 . -5) (undo-tree-id13738 . -5) (undo-tree-id13739 . -5) (undo-tree-id13740 . -5) (undo-tree-id13741 . -5) (undo-tree-id13742 . -5) (undo-tree-id13743 . -5) (undo-tree-id13744 . -5) (undo-tree-id13745 . -5) (undo-tree-id13746 . -5) (undo-tree-id13747 . -5) (undo-tree-id13748 . -5) (undo-tree-id13749 . -5) (undo-tree-id13750 . -5) (undo-tree-id13751 . -5) (undo-tree-id13752 . -5) (undo-tree-id13753 . -5) (undo-tree-id13754 . -5) (undo-tree-id13755 . -5) (undo-tree-id13756 . -5) (undo-tree-id13757 . -5) (undo-tree-id13758 . -5) (undo-tree-id13759 . -5) (undo-tree-id13760 . -5) (undo-tree-id13761 . -5) (undo-tree-id13762 . -5) (undo-tree-id13763 . -5) (undo-tree-id13764 . -5) (undo-tree-id13765 . -5) (undo-tree-id13766 . -5) (undo-tree-id13767 . -5) (undo-tree-id13768 . -5) (undo-tree-id13769 . -5) (undo-tree-id13770 . -5) (undo-tree-id13771 . -5) (undo-tree-id13772 . -5) (undo-tree-id13773 . -5) (undo-tree-id13774 . -5) (undo-tree-id13775 . -5) (undo-tree-id13776 . -5) (undo-tree-id13777 . -5) (undo-tree-id13778 . -5) (undo-tree-id13779 . -5) (undo-tree-id13780 . -5) (undo-tree-id13781 . -5) (undo-tree-id13782 . -5) (undo-tree-id13783 . -5) (undo-tree-id13784 . -5) (undo-tree-id13785 . -5) (undo-tree-id13786 . -5) (undo-tree-id13787 . -5) (undo-tree-id13788 . -5) (undo-tree-id13789 . -5) (undo-tree-id13790 . -5) (undo-tree-id13791 . -5) (undo-tree-id13792 . -5) (undo-tree-id13793 . -5) (undo-tree-id13794 . -5) (undo-tree-id13795 . -5) (undo-tree-id13796 . -5) (undo-tree-id13797 . -5) (undo-tree-id13798 . -5) (undo-tree-id13799 . -5) (undo-tree-id13800 . -5) (undo-tree-id13801 . -5) (undo-tree-id13802 . -5) (undo-tree-id13803 . -5) (undo-tree-id13804 . -5) (undo-tree-id13805 . -5) (undo-tree-id13806 . -5) (undo-tree-id13807 . -5) (undo-tree-id13808 . -5) (undo-tree-id13809 . -5) (undo-tree-id13810 . -5) (undo-tree-id13811 . -5) (undo-tree-id13812 . -5) (undo-tree-id13813 . -5) (undo-tree-id13814 . -5) (undo-tree-id13815 . -5) (undo-tree-id13816 . -5) (undo-tree-id13817 . -5) (undo-tree-id13818 . -5) (undo-tree-id13819 . -5) (undo-tree-id13820 . -5) (undo-tree-id13821 . -5) (undo-tree-id13822 . -5) (undo-tree-id13823 . -5) (undo-tree-id13824 . -5) (undo-tree-id13825 . -5) (undo-tree-id13826 . -5) (undo-tree-id13827 . -5) (undo-tree-id13828 . -5) (undo-tree-id13829 . -5) (undo-tree-id13830 . -5) (undo-tree-id13831 . -5) (undo-tree-id13832 . -5) (undo-tree-id13833 . -5) (undo-tree-id13834 . -5) (undo-tree-id13835 . -5) (undo-tree-id13836 . -5) (undo-tree-id13837 . -5) (undo-tree-id13838 . -5) (undo-tree-id13839 . -5) (undo-tree-id13840 . -5) (undo-tree-id13841 . -5) (undo-tree-id13842 . -5) (undo-tree-id13843 . -5) (undo-tree-id13844 . -5) (undo-tree-id13845 . -5) (undo-tree-id13846 . -5) (undo-tree-id13847 . -5) (undo-tree-id13848 . -5) (undo-tree-id13849 . -5) (undo-tree-id13850 . -5) (undo-tree-id13851 . -5) (undo-tree-id13852 . -5) (undo-tree-id13853 . -5) (undo-tree-id13854 . -5) (undo-tree-id13855 . -5) (undo-tree-id13856 . -5) (undo-tree-id13857 . -5) (undo-tree-id13858 . -5) (undo-tree-id13859 . -5) (undo-tree-id13860 . -5) (undo-tree-id13861 . -5) (undo-tree-id13862 . -5) (undo-tree-id13863 . -5) (undo-tree-id13864 . -5) (undo-tree-id13865 . -5) (undo-tree-id13866 . -5) (undo-tree-id13867 . -5) (undo-tree-id13868 . -5) (undo-tree-id13869 . -5) (undo-tree-id13870 . -5) (undo-tree-id13871 . -5) (undo-tree-id13872 . -5) (undo-tree-id13873 . -5) (undo-tree-id13874 . -5) (undo-tree-id13875 . -5) (undo-tree-id13876 . -5) (undo-tree-id13877 . -5) (undo-tree-id13878 . -5) (undo-tree-id13879 . -5) (undo-tree-id13880 . -5) (undo-tree-id13881 . -5) (undo-tree-id13882 . -5) (undo-tree-id13883 . -5) (undo-tree-id13884 . -5) (undo-tree-id13885 . -5) (undo-tree-id13886 . -5) (undo-tree-id13887 . -5) (undo-tree-id13888 . -5) (undo-tree-id13889 . -5) (undo-tree-id13890 . -5) (undo-tree-id13891 . -5) (undo-tree-id13892 . -5) (undo-tree-id13893 . -5) (undo-tree-id13894 . -5) (undo-tree-id13895 . -5) (undo-tree-id13896 . -5) (undo-tree-id13897 . -5) (undo-tree-id13898 . -5) (undo-tree-id13899 . -5) (undo-tree-id13900 . -5) (undo-tree-id13901 . -5) (undo-tree-id13902 . -5) (undo-tree-id13903 . -5) (undo-tree-id13904 . -5) (undo-tree-id13905 . -5) (undo-tree-id13906 . -5) (undo-tree-id13907 . -5) (undo-tree-id13908 . -5) (undo-tree-id13909 . -5) (undo-tree-id13910 . -5) (undo-tree-id13911 . -5) (undo-tree-id13912 . -5) (undo-tree-id13913 . -5) (undo-tree-id13914 . -5) (undo-tree-id13915 . -5) (undo-tree-id13916 . -5) (undo-tree-id13917 . -5) (undo-tree-id13918 . -5) (undo-tree-id13919 . -5) (undo-tree-id13920 . -5) (undo-tree-id13921 . -5) (undo-tree-id13922 . -5) (undo-tree-id13923 . -5) (undo-tree-id13924 . -5) (undo-tree-id13925 . -5) (undo-tree-id13926 . -5) (undo-tree-id13927 . -5) (undo-tree-id13928 . -5) (undo-tree-id13929 . -5) (undo-tree-id13930 . -5) (undo-tree-id13931 . -5) (undo-tree-id13932 . -5) (undo-tree-id13933 . -5) (undo-tree-id13934 . -5) (undo-tree-id13935 . -5) (undo-tree-id13936 . -5) (undo-tree-id13937 . -5) (undo-tree-id13938 . -5) (undo-tree-id13939 . -5) (undo-tree-id13940 . -5) (undo-tree-id13941 . -5) (undo-tree-id13942 . -5) (undo-tree-id13943 . -5) (undo-tree-id13944 . -5) (undo-tree-id13945 . -5) (undo-tree-id13946 . -5) (undo-tree-id13947 . -5) (undo-tree-id13948 . -5) (undo-tree-id13949 . -5) (undo-tree-id13950 . -5) (undo-tree-id13951 . -5) (undo-tree-id13952 . -5) (undo-tree-id13953 . -5) (undo-tree-id13954 . -5) (undo-tree-id13955 . -5) (undo-tree-id13956 . -5) (undo-tree-id13957 . -5) (undo-tree-id13958 . -5) (undo-tree-id13959 . -5) (undo-tree-id13960 . -5) (undo-tree-id13961 . -5) (undo-tree-id13962 . -5) (undo-tree-id13963 . -5) (undo-tree-id13964 . -5) (undo-tree-id13965 . -5) (undo-tree-id13966 . -5) (undo-tree-id13967 . -5) (undo-tree-id13968 . -5) (undo-tree-id13969 . -5) (undo-tree-id13970 . -5) (undo-tree-id13971 . -5) (undo-tree-id13972 . -5) (undo-tree-id13973 . -5) (undo-tree-id13974 . -5) (undo-tree-id13975 . -5) (undo-tree-id13976 . -5) (undo-tree-id13977 . -5) (undo-tree-id13978 . -5) (undo-tree-id13979 . -5) (undo-tree-id13980 . -5) (undo-tree-id13981 . -5) (undo-tree-id13982 . -5) (undo-tree-id13983 . -5) (undo-tree-id13984 . -5) (undo-tree-id13985 . -5) (undo-tree-id13986 . -5) (undo-tree-id13987 . -5) (undo-tree-id13988 . -5) (undo-tree-id13989 . -5) (undo-tree-id13990 . -5) (undo-tree-id13991 . -5) (undo-tree-id13992 . -5) (undo-tree-id13993 . -5) (undo-tree-id13994 . -5) (undo-tree-id13995 . -5) (undo-tree-id13996 . -5) (undo-tree-id13997 . -5) (undo-tree-id13998 . -5) (undo-tree-id13999 . -5) (undo-tree-id14000 . -5) (undo-tree-id14001 . -5) (undo-tree-id14002 . -5) (undo-tree-id14003 . -5) (undo-tree-id14004 . -5) (undo-tree-id14005 . -5) (undo-tree-id14006 . -5) (undo-tree-id14007 . -5) (undo-tree-id14008 . -5) (undo-tree-id14009 . -5) (undo-tree-id14010 . -5) (undo-tree-id14011 . -5) (undo-tree-id14012 . -5) (undo-tree-id14013 . -5) (undo-tree-id14014 . -5) (undo-tree-id14015 . -5) (undo-tree-id14016 . -5) (undo-tree-id14017 . -5) (undo-tree-id14018 . -5) (undo-tree-id14019 . -5) (undo-tree-id14020 . -5) (undo-tree-id14021 . -5) (undo-tree-id14022 . -5) (undo-tree-id14023 . -5) (undo-tree-id14024 . -5) (undo-tree-id14025 . -5) (undo-tree-id14026 . -5) (undo-tree-id14027 . -5) (undo-tree-id14028 . -5) (undo-tree-id14029 . -5) (undo-tree-id14030 . -5) (undo-tree-id14031 . -5) (undo-tree-id14032 . -5) (undo-tree-id14033 . -5) (undo-tree-id14034 . -5) (undo-tree-id14035 . -5) (undo-tree-id14036 . -5) (undo-tree-id14037 . -5) (undo-tree-id14038 . -5) (undo-tree-id14039 . -5) (undo-tree-id14040 . -5) (undo-tree-id14041 . -5) (undo-tree-id14042 . -5) (undo-tree-id14043 . -5) (undo-tree-id14044 . -5) (undo-tree-id14045 . -5) (undo-tree-id14046 . -5) (undo-tree-id14047 . -5) (undo-tree-id14048 . -5) (undo-tree-id14049 . -5) (undo-tree-id14050 . -5) (undo-tree-id14051 . -5) (undo-tree-id14052 . -5) (undo-tree-id14053 . -5) (undo-tree-id14054 . -5) (undo-tree-id14055 . -5) (undo-tree-id14056 . -5) (undo-tree-id14057 . -5) (undo-tree-id14058 . -5) (undo-tree-id14059 . -5) (undo-tree-id14060 . -5) (undo-tree-id14061 . -5) (undo-tree-id14062 . -5) (undo-tree-id14063 . -5) (undo-tree-id14064 . -5) (undo-tree-id14065 . -5) (undo-tree-id14066 . -5) (undo-tree-id14067 . -5) (undo-tree-id14068 . -5) (undo-tree-id14069 . -5) (undo-tree-id14070 . -5) (undo-tree-id14071 . -5) (undo-tree-id14072 . -5) (undo-tree-id14073 . -5) (undo-tree-id14074 . -5) (undo-tree-id14075 . -5) (undo-tree-id14076 . -5) (undo-tree-id14077 . -5) (undo-tree-id14078 . -5) (undo-tree-id14079 . -5) (undo-tree-id14080 . -5) (undo-tree-id14081 . -5) (undo-tree-id14082 . -5) (undo-tree-id14083 . -5) (undo-tree-id14084 . -5) (undo-tree-id14085 . -5) (undo-tree-id14086 . -5) (undo-tree-id14087 . -5) (undo-tree-id14088 . -5) (undo-tree-id14089 . -5) (undo-tree-id14090 . -5) (undo-tree-id14091 . -5) (undo-tree-id14092 . -5) (undo-tree-id14093 . -5) (undo-tree-id14094 . -5) (undo-tree-id14095 . -5) (undo-tree-id14096 . -5) (undo-tree-id14097 . -5) (undo-tree-id14098 . -5) (undo-tree-id14099 . -5) (undo-tree-id14100 . -5) (undo-tree-id14101 . -5) (undo-tree-id14102 . -5) (undo-tree-id14103 . -5) (undo-tree-id14104 . -5) (undo-tree-id14105 . -5) (undo-tree-id14106 . -5) (undo-tree-id14107 . -5) (undo-tree-id14108 . -5) (undo-tree-id14109 . -5) (undo-tree-id14110 . -5) (undo-tree-id14111 . -5) (undo-tree-id14112 . -5) (undo-tree-id14113 . -5) (undo-tree-id14114 . -5) (undo-tree-id14115 . -5) (undo-tree-id14116 . -5) (undo-tree-id14117 . -5) (undo-tree-id14118 . -5) (undo-tree-id14119 . -5) (undo-tree-id14120 . -5) (undo-tree-id14121 . -5) (undo-tree-id14122 . -5) (undo-tree-id14123 . -5) (undo-tree-id14124 . -5) (undo-tree-id14125 . -5) (undo-tree-id14126 . -5) (undo-tree-id14127 . -5) (undo-tree-id14128 . -5) (undo-tree-id14129 . -5) (undo-tree-id14130 . -5) (undo-tree-id14131 . -5) (undo-tree-id14132 . -5) (undo-tree-id14133 . -5) (undo-tree-id14134 . -5) (undo-tree-id14135 . -5) (undo-tree-id14136 . -5) (undo-tree-id14137 . -5) (undo-tree-id14138 . -5) (undo-tree-id14139 . -5) (undo-tree-id14140 . -5) (undo-tree-id14141 . -5) (undo-tree-id14142 . -5) (undo-tree-id14143 . -5) (undo-tree-id14144 . -5) (undo-tree-id14145 . -5) (undo-tree-id14146 . -5) (undo-tree-id14147 . -5) (undo-tree-id14148 . -5) (undo-tree-id14149 . -5) (undo-tree-id14150 . -5) (undo-tree-id14151 . -5) (undo-tree-id14152 . -5) (undo-tree-id14153 . -5) (undo-tree-id14154 . -5) (undo-tree-id14155 . -5) (undo-tree-id14156 . -5) (undo-tree-id14157 . -5) (undo-tree-id14158 . -5) (undo-tree-id14159 . -5) (undo-tree-id14160 . -5) (undo-tree-id14161 . -5) (undo-tree-id14162 . -5) (undo-tree-id14163 . -5) (undo-tree-id14164 . -5) (undo-tree-id14165 . -5) (undo-tree-id14166 . -5) (undo-tree-id14167 . -5) (undo-tree-id14168 . -5) (undo-tree-id14169 . -5) (undo-tree-id14170 . -5) (undo-tree-id14171 . -5) (undo-tree-id14172 . -5) (undo-tree-id14173 . -5) (undo-tree-id14174 . -5) (undo-tree-id14175 . -5) (undo-tree-id14176 . -5) (undo-tree-id14177 . -5) (undo-tree-id14178 . -5) (undo-tree-id14179 . -5) (undo-tree-id14180 . -5) (undo-tree-id14181 . -5) (undo-tree-id14182 . -5) (undo-tree-id14183 . -5) (undo-tree-id14184 . -5) (undo-tree-id14185 . -5) (undo-tree-id14186 . -5) (undo-tree-id14187 . -5) (undo-tree-id14188 . -5) (undo-tree-id14189 . -5) (undo-tree-id14190 . -5) (undo-tree-id14191 . -5) (undo-tree-id14192 . -5) (undo-tree-id14193 . -5) (undo-tree-id14194 . -5) (undo-tree-id14195 . -5) (undo-tree-id14196 . -5) (undo-tree-id14197 . -5) (undo-tree-id14198 . -5) (undo-tree-id14199 . -5) (undo-tree-id14200 . -5) (undo-tree-id14201 . -5) (undo-tree-id14202 . -5) (undo-tree-id14203 . -5) (undo-tree-id14204 . -5) (undo-tree-id14205 . -5) (undo-tree-id14206 . -5) (undo-tree-id14207 . -5) (undo-tree-id14208 . -5) (undo-tree-id14209 . -5) (undo-tree-id14210 . -5) (undo-tree-id14211 . -5) (undo-tree-id14212 . -5) (undo-tree-id14213 . -5) (undo-tree-id14214 . -6) (undo-tree-id14215 . -6) (undo-tree-id14216 . -6) 58201) nil (25725 38649 113481 204000) 0 nil])
([nil nil ((#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 57854) (undo-tree-id14235 . -4) (undo-tree-id14236 . -4) (undo-tree-id14237 . -4) (undo-tree-id14238 . -4) 57858 (t 25725 38649 238289 799000)) nil (25725 39801 962191 348000) 0 nil])
([nil nil ((57864 . 57871) (#("s" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -57864) (undo-tree-id14233 . -1) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -57865) (undo-tree-id14234 . -1) 57866 (57854 . 57866)) nil (25725 39801 962172 142000) 0 nil])
([nil nil ((58233 . 58239) (58231 . 58233) (#("s" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -58231) (undo-tree-id14218 . -1) 58232 (58220 . 58232) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -58220) (undo-tree-id14219 . -1) 58221 (58214 . 58221) (#("w" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -58214) (undo-tree-id14220 . -1) (#("a" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -58215) (undo-tree-id14221 . -1) (#("y" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -58216) (undo-tree-id14222 . -1) 58217 (58214 . 58217) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -58214) (undo-tree-id14223 . -1) (#("a" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -58215) (undo-tree-id14224 . -1) (#("w" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -58216) (undo-tree-id14225 . -1) (#("a" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -58217) (undo-tree-id14226 . -1) 58218 (58214 . 58218) (#("w" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -58214) (undo-tree-id14227 . -1) (#("a" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -58215) (undo-tree-id14228 . -1) 58216 (58209 . 58216) (#("other way" 0 9 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 58209) (undo-tree-id14229 . -8) (undo-tree-id14230 . -8) (undo-tree-id14231 . -8) (undo-tree-id14232 . -8) 58217) nil (25725 39801 962148 326000) 0 nil])
([nil nil ((58183 . 58187) (t 25725 39802 64036 820000)) nil (25725 39810 809111 915000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 58184) (undo-tree-id14241 . -1)) nil (25725 39810 809105 630000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 58184) (undo-tree-id14239 . -1) (undo-tree-id14240 . -1)) nil (25725 39810 809092 360000) 0 nil])
([nil nil ((nil rear-nonsticky nil 58797 . 58798) (nil fontified nil 58797 . 58798) (nil fontified nil 58796 . 58797) (nil fontified nil 58788 . 58796) (nil fontified nil 58787 . 58788) (nil fontified nil 58759 . 58787) (nil fontified nil 58758 . 58759) (nil fontified nil 58752 . 58758) (58752 . 58798) (58751 . 58752) (58746 . 58751) (58744 . 58746) (#("o" 0 1 (fontified t)) . -58744) (undo-tree-id14245 . -1) (undo-tree-id14246 . -1) (#("r" 0 1 (fontified t)) . -58745) (undo-tree-id14247 . -1) 58746 (58745 . 58746) (#("r" 0 1 (fontified t)) . -58745) (undo-tree-id14248 . -1) 58746 (58743 . 58746) (#("r" 0 1 (fontified t)) . -58743) (undo-tree-id14249 . -1) 58744 (58742 . 58744) (58736 . 58742) (58734 . 58736) (#("d" 0 1 (fontified t)) . -58734) (undo-tree-id14250 . -1) 58735 (58733 . 58735) (#("N" 0 1 (fontified t)) . -58733) (undo-tree-id14251 . -1) 58734 (58719 . 58734) (#("i" 0 1 (fontified t)) . -58719) (undo-tree-id14252 . -1) (#("s" 0 1 (fontified t)) . -58720) (undo-tree-id14253 . -1) (#("n" 0 1 (fontified t)) . -58721) (undo-tree-id14254 . -1) (#("g" 0 1 (fontified t)) . -58722) (undo-tree-id14255 . -1) (#(" " 0 1 (fontified t)) . -58723) (undo-tree-id14256 . -1) 58724 (58723 . 58724) (58714 . 58723) (58709 . 58714) (58699 . 58709) (#("d" 0 1 (fontified t)) . -58699) (undo-tree-id14257 . -1) (undo-tree-id14258 . -1) (#("i" 0 1 (fontified t)) . -58700) (undo-tree-id14259 . -1) (undo-tree-id14260 . -1) (#("d" 0 1 (fontified t)) . -58701) (undo-tree-id14261 . -1) 58702 (58693 . 58702) (58672 . 58693) (58667 . 58672) (t 25725 39810 916000 237000) 58610) nil (25725 39919 232208 546000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -58796) (undo-tree-id14242 . -1) 58797 (58777 . 58797) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 58777) (undo-tree-id14243 . -4) (undo-tree-id14244 . -1) 58778) nil (25725 39919 232157 632000) 0 nil])
([nil nil ((58801 . 58802) 58795) nil (25725 39919 232128 579000) 0 nil])
([nil nil ((nil rear-nonsticky nil 59058 . 59059) (nil fontified nil 58802 . 59059) (58802 . 59059)) nil (25725 39919 232116 287000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -59182) (undo-tree-id14277 . -4) 59186 (59181 . 59186) (t 25725 39919 335585 966000) 59071) nil (25725 40196 752182 851000) 0 nil])
([nil nil ((nil rear-nonsticky nil 59410 . 59411) (nil fontified nil 59182 . 59411) (59182 . 59411)) nil (25725 40196 752174 261000) 0 nil])
([nil nil ((nil rear-nonsticky nil 59482 . 59483) (nil fontified nil 59482 . 59483) (nil fontified nil 59481 . 59482) (nil fontified nil 59473 . 59481) (nil fontified nil 59472 . 59473) (nil fontified nil 59444 . 59472) (nil fontified nil 59443 . 59444) (nil fontified nil 59437 . 59443) (59437 . 59483) (#("*" 0 1 (fontified t)) . -59437) (undo-tree-id14273 . -1) 59438 (59437 . 59438) (59436 . 59437) (59434 . 59436) (#("i" 0 1 (fontified t)) . -59434) (undo-tree-id14274 . -1) (undo-tree-id14275 . -1) (#("s" 0 1 (fontified t)) . -59435) (undo-tree-id14276 . -1) 59436 (59433 . 59436) (59412 . 59433) (59411 . 59412) 59410) nil (25725 40196 752166 508000) 0 nil])
([nil nil ((59497 . 59508) (59476 . 59497) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -59476) (undo-tree-id14262 . -1) 59477 (59476 . 59477) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -59476) (undo-tree-id14263 . -1) 59477 (59476 . 59477) (#("l" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -59476) (undo-tree-id14264 . -1) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -59477) (undo-tree-id14265 . -1) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -59478) (undo-tree-id14266 . -1) 59479 (59468 . 59479) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -59468) (undo-tree-id14267 . -1) 59469 (59468 . 59469) (#("," 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -59468) (undo-tree-id14268 . -1) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -59469) (undo-tree-id14269 . -1) (#("d" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -59470) (undo-tree-id14270 . -1) 59471 (59468 . 59471) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -59468) (undo-tree-id14271 . -1) 59469 (59462 . 59469) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 59462) (undo-tree-id14272 . -4)) nil (25725 40196 752138 431000) 0 nil])
([nil nil ((59513 . 59514) 59507) nil (25725 40196 752086 188000) 0 nil])
([nil nil ((nil rear-nonsticky nil 60109 . 60110) (nil fontified nil 59514 . 60110) (59514 . 60110)) nil (25725 40196 752073 337000) 0 nil])
([nil nil ((60333 . 60344) (#("d" 0 1 (fontified t)) . -60333) (undo-tree-id14345 . -1) 60334 (60322 . 60334) (60308 . 60322) (60287 . 60308) (60266 . 60287) (#("i" 0 1 (fontified t)) . -60266) (undo-tree-id14346 . -1) (undo-tree-id14347 . -1) 60267 (#("d" 0 1 (fontified t)) . -60267) (undo-tree-id14348 . -1) (undo-tree-id14349 . -1) 60268 (60257 . 60268) (60236 . 60257) (#("t" 0 1 (fontified t)) . -60236) (undo-tree-id14350 . -1) (#(" " 0 1 (fontified t)) . -60237) (undo-tree-id14351 . -1) 60238 (60234 . 60238) (#("y" 0 1 (fontified t)) . -60234) (undo-tree-id14352 . -1) (#("b" 0 1 (fontified t)) . -60235) (undo-tree-id14353 . -1) 60236 (60234 . 60236) (60230 . 60234) (#("e" 0 1 (fontified t)) . -60230) (undo-tree-id14354 . -1) 60231 (60226 . 60231) (60205 . 60226) (#(" " 0 1 (fontified t)) . -60205) (undo-tree-id14355 . -1) 60206 (60194 . 60206) (60173 . 60194) (60168 . 60173) (t 25725 40196 858411 406000) 60122) nil (25725 40648 843166 836000) 0 nil])
([nil nil ((nil rear-nonsticky nil 60394 . 60395) (nil fontified nil 60394 . 60395) (nil fontified nil 60393 . 60394) (nil fontified nil 60385 . 60393) (nil fontified nil 60384 . 60385) (nil fontified nil 60356 . 60384) (nil fontified nil 60355 . 60356) (nil fontified nil 60349 . 60355) (60349 . 60395) (60344 . 60349) 60343) nil (25725 40648 842863 790000) 0 nil])
([nil nil ((nil rear-nonsticky nil 60391 . 60392) (nil fontified nil 60374 . 60392) (60374 . 60392) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 60374) (undo-tree-id14341 . -5) (undo-tree-id14342 . -4) (undo-tree-id14343 . -4) (undo-tree-id14344 . -4) 60379) nil (25725 40648 842854 292000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -60398) (undo-tree-id14340 . -4) 60402 (60397 . 60402) 60391) nil (25725 40648 842839 904000) 0 nil])
([nil nil ((nil rear-nonsticky nil 60825 . 60826) (nil fontified nil 60398 . 60826) (60398 . 60826)) nil (25725 40648 842827 123000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face org-level-3)) . -60843) (undo-tree-id14278 . -1) (undo-tree-id14279 . -1) (undo-tree-id14280 . -1) (undo-tree-id14281 . -1) (undo-tree-id14282 . -1) (undo-tree-id14283 . -1) (undo-tree-id14284 . -1) (undo-tree-id14285 . -1) (undo-tree-id14286 . -1) (undo-tree-id14287 . -1) (undo-tree-id14288 . -1) (undo-tree-id14289 . -1) (undo-tree-id14290 . -1) (undo-tree-id14291 . -1) (undo-tree-id14292 . -1) (undo-tree-id14293 . -1) (undo-tree-id14294 . -1) (undo-tree-id14295 . -1) (undo-tree-id14296 . -1) (undo-tree-id14297 . -1) (undo-tree-id14298 . -1) (undo-tree-id14299 . -1) (undo-tree-id14300 . -1) (undo-tree-id14301 . -1) (undo-tree-id14302 . -1) (undo-tree-id14303 . -1) (undo-tree-id14304 . -1) (undo-tree-id14305 . -1) (undo-tree-id14306 . -1) (undo-tree-id14307 . -1) (undo-tree-id14308 . -1) (undo-tree-id14309 . -1) (undo-tree-id14310 . -1) (undo-tree-id14311 . -1) (undo-tree-id14312 . -1) (undo-tree-id14313 . -1) (undo-tree-id14314 . -1) (undo-tree-id14315 . -1) (undo-tree-id14316 . -1) (undo-tree-id14317 . -1) (undo-tree-id14318 . -1) (undo-tree-id14319 . -1) (undo-tree-id14320 . -1) (undo-tree-id14321 . -1) (undo-tree-id14322 . -1) (undo-tree-id14323 . -1) (undo-tree-id14324 . -1) (undo-tree-id14325 . -1) (undo-tree-id14326 . -1) (undo-tree-id14327 . -1) (undo-tree-id14328 . -1) (undo-tree-id14329 . -1) (undo-tree-id14330 . -1) (undo-tree-id14331 . -1) (undo-tree-id14332 . -1) (undo-tree-id14333 . -1) (undo-tree-id14334 . -1) (undo-tree-id14335 . -1) (undo-tree-id14336 . -1) (undo-tree-id14337 . -1) (#("k" 0 1 (fontified t face org-level-3)) . -60844) (undo-tree-id14338 . -1) (undo-tree-id14339 . -1) 60845 (60843 . 60845)) nil (25725 40648 842810 82000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -60887) (undo-tree-id14364 . -1) (#("k" 0 1 (fontified t)) . -60888) (undo-tree-id14365 . -1) 60889 (60887 . 60889) (60883 . 60887) (#("f" 0 1 (fontified t)) . -60883) (undo-tree-id14366 . -1) (#("v" 0 1 (fontified t)) . -60884) (undo-tree-id14367 . -1) (#("e" 0 1 (fontified t)) . -60885) (undo-tree-id14368 . -1) 60886 (60883 . 60886) (60862 . 60883) (60841 . 60862) (#("n" 0 1 (fontified t)) . -60841) (undo-tree-id14369 . -1) (undo-tree-id14370 . -1) (#("e" 0 1 (fontified t)) . -60842) (undo-tree-id14371 . -1) (undo-tree-id14372 . -1) 60843 (60837 . 60843) (t 25725 40648 946254 275000)) nil (25725 40716 755010 94000) 0 nil])
([nil nil ((nil rear-nonsticky nil 60933 . 60934) (nil fontified nil 60933 . 60934) (nil fontified nil 60932 . 60933) (nil fontified nil 60924 . 60932) (nil fontified nil 60923 . 60924) (nil fontified nil 60895 . 60923) (nil fontified nil 60894 . 60895) (nil fontified nil 60888 . 60894) (60888 . 60934) (60887 . 60888) 60886) nil (25725 40716 754913 293000) 0 nil])
([nil nil ((#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -60933) (undo-tree-id14356 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -60934) (undo-tree-id14357 . -1) (#("o" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -60935) (undo-tree-id14358 . -1) 60936 (60925 . 60936) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -60925) (undo-tree-id14359 . -1) 60926 (60916 . 60926) (60913 . 60916) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 60913) (undo-tree-id14360 . -4) (undo-tree-id14361 . -4) (undo-tree-id14362 . -4) (undo-tree-id14363 . -4) 60917) nil (25725 40716 754900 651000) 0 nil])
([nil nil ((60938 . 60939) 60932) nil (25725 40716 754859 724000) 0 nil])
([nil nil ((nil rear-nonsticky nil 61393 . 61394) (nil fontified nil 60939 . 61394) (60939 . 61394)) nil (25725 40716 754846 384000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -61405) (undo-tree-id14375 . -1) (#("k" 0 1 (fontified t)) . -61406) (undo-tree-id14376 . -1) 61407 (61405 . 61407) (t 25725 40716 871476 826000)) nil (25725 40941 342765 842000) 0 nil])
([nil nil ((nil rear-nonsticky nil 61608 . 61609) (nil fontified nil 61608 . 61609) (nil fontified nil 61607 . 61608) (nil fontified nil 61599 . 61607) (nil fontified nil 61598 . 61599) (nil fontified nil 61570 . 61598) (nil fontified nil 61569 . 61570) (nil fontified nil 61563 . 61569) (61563 . 61609) (61562 . 61563) (61553 . 61562) (61550 . 61553) (61542 . 61550) (61524 . 61542) (61503 . 61524) (61482 . 61503) (61477 . 61482) 61406) nil (25725 40941 342752 642000) 0 nil])
([nil nil ((61591 . 61602) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -61591) (undo-tree-id14373 . -1) 61592 (61588 . 61592) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 61588) (undo-tree-id14374 . -4)) nil (25725 40941 342738 674000) 0 nil])
([nil nil ((61607 . 61608) 61601) nil (25725 40941 342714 508000) 0 nil])
([nil nil ((nil rear-nonsticky nil 61824 . 61825) (nil fontified nil 61608 . 61825) (61608 . 61825)) nil (25725 40941 342700 51000) 0 nil])
([nil nil ((#("#+auto_tangle:t 
" 0 16 (fontified t font-lock-fontified t face org-meta-line) 16 17 (fontified t)) . 51) (undo-tree-id14377 . -16) (undo-tree-id14378 . -17) (t 25725 40941 446893 445000)) nil (25725 40961 508842 577000) 0 nil])
([nil nil ((nil rear-nonsticky nil 61997 . 61998) (nil fontified nil 61997 . 61998) (nil fontified nil 61996 . 61997) (nil fontified nil 61988 . 61996) (nil fontified nil 61987 . 61988) (nil fontified nil 61959 . 61987) (nil fontified nil 61958 . 61959) (nil fontified nil 61952 . 61958) (61952 . 61998) (61951 . 61952) (#("V" 0 1 (fontified t)) . -61951) (undo-tree-id14379 . -1) (#("a" 0 1 (fontified t)) . -61952) (undo-tree-id14380 . -1) (#("l" 0 1 (fontified t)) . -61953) (undo-tree-id14381 . -1) (#("u" 0 1 (fontified t)) . -61954) (undo-tree-id14382 . -1) (#("e" 0 1 (fontified t)) . -61955) (undo-tree-id14383 . -1) 61956 (61951 . 61956) (61947 . 61951) (#("o" 0 1 (fontified t)) . -61947) (undo-tree-id14384 . -1) (#("d" 0 1 (fontified t)) . -61948) (undo-tree-id14385 . -1) (#("e" 0 1 (fontified t)) . -61949) (undo-tree-id14386 . -1) (#("
" 0 1 (fontified t)) . -61950) (undo-tree-id14387 . -1) (undo-tree-id14388 . -1) 61951 (61950 . 61951) (61947 . 61950) (61943 . 61947) (61922 . 61943) (61901 . 61922) (#("e" 0 1 (fontified t)) . -61901) (undo-tree-id14389 . -1) (undo-tree-id14390 . -1) 61902 (61886 . 61902) (61884 . 61886) (61863 . 61884) (#("g" 0 1 (fontified t)) . -61863) (undo-tree-id14391 . -1) (#(" " 0 1 (fontified t)) . -61864) (undo-tree-id14392 . -1) (#("n" 0 1 (fontified t)) . -61865) (undo-tree-id14393 . -1) 61866 (61859 . 61866) (#("h" 0 1 (fontified t)) . -61859) (undo-tree-id14394 . -1) 61860 (61850 . 61860) (#("n" 0 1 (fontified t)) . -61850) (undo-tree-id14395 . -1) 61851 (61850 . 61851) (#("c" 0 1 (fontified t)) . -61850) (undo-tree-id14396 . -1) (#("o" 0 1 (fontified t)) . -61851) (undo-tree-id14397 . -1) (#("n" 0 1 (fontified t)) . -61852) (undo-tree-id14398 . -1) (#("t" 0 1 (fontified t)) . -61853) (undo-tree-id14399 . -1) (#("e" 0 1 (fontified t)) . -61854) (undo-tree-id14400 . -1) 61855 (61844 . 61855) (61824 . 61844) (#("t" 0 1 (fontified t)) . -61824) (undo-tree-id14401 . -1) (undo-tree-id14402 . -1) (#("h" 0 1 (fontified t)) . -61825) (undo-tree-id14403 . -1) (undo-tree-id14404 . -1) 61826 (61819 . 61826) (t 25725 40961 615162 0)) nil (25725 41037 914945 40000) 0 nil])
([nil nil ((61987 . 61988) 61952) nil (25725 41037 914835 318000) 0 nil])
([nil nil ((nil rear-nonsticky nil 62253 . 62254) (nil fontified nil 61988 . 62254) (61988 . 62254)) nil (25725 41037 914821 490000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -62265) (undo-tree-id14405 . -1) 62266 (62265 . 62266) (t 25725 41038 20133 207000)) nil (25725 41066 717111 595000) 0 nil])
([nil nil ((97 . 99) (76 . 97) (73 . 76) 54) nil (25725 41066 717088 338000) 0 nil])
([nil nil ((nil rear-nonsticky nil 127 . 128) (nil fontified nil 99 . 128) (99 . 128) 98) nil (25725 41066 717072 973000) 0 nil])
([nil nil ((62523 . 62530) (#("r" 0 1 (fontified t face org-table)) . -62523) (undo-tree-id14555 . -1) (undo-tree-id14556 . -1) (#(" " 0 1 (fontified t face org-table)) . -62524) (undo-tree-id14557 . -1) 62525 (#(" " 0 1 (fontified nil face org-table)) . 62525) (62524 . 62525) (#(" " 0 1 (fontified nil face org-table)) . 62525) (62523 . 62524) (#(" " 0 1 (fontified nil face org-table)) . 62525) (62522 . 62523) (#(" " 0 1 (fontified nil face org-table)) . 62525) (62521 . 62522) (#(" " 0 1 (fontified nil face org-table)) . 62525) (62520 . 62521) (#(" " 0 1 (fontified nil face org-table)) . 62525) (62519 . 62520) (#(" " 0 1 (fontified nil face org-table)) . 62525) (62518 . 62519) (#(" " 0 1 (fontified nil face org-table)) . 62525) (62517 . 62518) (#(" " 0 1 (fontified nil face org-table)) . 62525) (62516 . 62517) (#(" " 0 1 (fontified nil face org-table)) . 62525) (62515 . 62516) (#(" " 0 1 (fontified nil face org-table)) . 62525) (62514 . 62515) (#(" " 0 1 (fontified nil)) . 62525) (62513 . 62514) (#("|              " 0 15 (fontified t face org-table)) . 62511) (62526 . 62541) 62513 (62490 . 62528) (#("    | unaware of css | aware of css  |
" 0 1 (fontified nil) 1 4 (fontified nil) 4 5 (fontified nil face org-table) 5 6 (display (space :relative-width 1) fontified nil face org-table) 6 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 37 (fontified nil face org-table) 37 38 (fontified nil face org-table) 38 39 (fontified nil)) . 62490) (undo-tree-id14558 . -39) (undo-tree-id14559 . -35) (undo-tree-id14560 . -36) (undo-tree-id14561 . -39) (62452 . 62490) (#("    |----------------+------------|
" 0 1 (fontified nil) 1 4 (fontified nil) 4 35 (fontified nil face org-table) 35 36 (fontified nil)) . 62452) (undo-tree-id14562 . -36) (62414 . 62452) (#("    | text content   | inner text |
" 0 4 (fontified nil) 4 5 (fontified nil face org-table) 5 6 (display (space :relative-width 1) fontified nil face org-table) 6 10 (fontified nil face org-table) 10 18 (fontified nil face org-table) 18 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 22 (fontified nil face org-table) 22 23 (display (space :relative-width 1) fontified nil face org-table) 23 28 (fontified nil face org-table) 28 33 (fontified nil face org-table) 33 34 (display (space :relative-width 1) fontified nil face org-table) 34 35 (fontified nil face org-table) 35 36 (fontified nil)) . 62414) (62376 . 62414) 62484 (62481 . 62484) (#(" " 0 1 (fontified nil face org-table)) . 62481) (62480 . 62481) (#(" " 0 1 (fontified nil face org-table)) . 62481) (62479 . 62480) (#(" " 0 1 (fontified nil face org-table)) . 62481) (62478 . 62479) (#(" " 0 1 (fontified nil face org-table)) . 62481) (62477 . 62478) (#(" " 0 1 (fontified nil face org-table)) . 62481) (62476 . 62477) (#(" " 0 1 (fontified nil face org-table)) . 62481) (62475 . 62476) (#(" " 0 1 (fontified nil face org-table)) . 62481) (62474 . 62475) (#(" " 0 1 (fontified nil face org-table)) . 62481) (62473 . 62474) (#(" " 0 1 (fontified nil face org-table)) . 62481) (62472 . 62473) (#(" " 0 1 (fontified nil)) . 62481) (62471 . 62472) (nil display (space :relative-width 1) 62481 . 62482) (nil fontified t 62481 . 62482) (nil face org-table 62481 . 62482) (nil fontified t 62471 . 62481) (nil face org-table 62471 . 62481) (nil display (space :relative-width 1) 62470 . 62471) (nil fontified t 62470 . 62471) (nil face org-table 62470 . 62471) (nil fontified t 62469 . 62470) (nil face org-table 62469 . 62470) (#("|            " 0 1 (fontified t face org-table) 1 2 (display (space :relative-width 1) fontified t face org-table) 2 12 (fontified t face org-table) 12 13 (display (space :relative-width 1) fontified t face org-table)) . 62469) (62482 . 62495) 62471 (#("    | unaware of css  |            |
" 0 1 (fontified nil) 1 4 (fontified nil) 4 22 (fontified nil face org-table) 22 36 (fontified nil face org-table) 36 37 (fontified nil)) . 62484) (undo-tree-id14563 . -37) (undo-tree-id14564 . -20) (undo-tree-id14565 . -21) (undo-tree-id14566 . -37) (62448 . 62484) (#("    |--------------+------------|
" 0 1 (fontified nil) 1 4 (fontified nil) 4 33 (fontified nil face org-table) 33 34 (fontified nil)) . 62448) (undo-tree-id14567 . -34) (62412 . 62448) (#("    | text content | inner text |
" 0 4 (fontified nil) 4 5 (fontified nil face org-table) 5 6 (display (space :relative-width 1) fontified nil face org-table) 6 10 (fontified nil face org-table) 10 18 (fontified nil face org-table) 18 19 (display (space :relative-width 1) fontified nil face org-table) 19 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 26 (fontified nil face org-table) 26 31 (fontified nil face org-table) 31 32 (display (space :relative-width 1) fontified nil face org-table) 32 33 (fontified nil face org-table) 33 34 (fontified nil)) . 62412) (62376 . 62412) 62465 (62464 . 62465) (#("T" 0 1 (fontified t face org-table)) . -62464) (undo-tree-id14568 . -1) (#("e" 0 1 (fontified t face org-table)) . -62465) (undo-tree-id14569 . -1) (#("x" 0 1 (fontified t face org-table)) . -62466) (undo-tree-id14570 . -1) (#("t" 0 1 (fontified t face org-table)) . -62467) (undo-tree-id14571 . -1) (#("P" 0 1 (fontified t face org-table)) . -62468) (undo-tree-id14572 . -1) (#("r" 0 1 (fontified t face org-table)) . -62469) (undo-tree-id14573 . -1) (#("o" 0 1 (fontified t face org-table)) . -62470) (undo-tree-id14574 . -1) (#("p" 0 1 (fontified t face org-table)) . -62471) (undo-tree-id14575 . -1) (#("e" 0 1 (fontified t face org-table)) . -62472) (undo-tree-id14576 . -1) (#("r" 0 1 (fontified t face org-table)) . -62473) (undo-tree-id14577 . -1) (#("t" 0 1 (fontified t face org-table)) . -62474) (undo-tree-id14578 . -1) (#("y" 0 1 (fontified nil face org-table)) . -62475) 62476 (62464 . 62476) (62459 . 62464) (#(" " 0 1 (fontified nil face org-table)) . 62459) (62458 . 62459) (#(" " 0 1 (fontified nil face org-table)) . 62459) (62457 . 62458) (#(" " 0 1 (fontified nil face org-table)) . 62459) (62456 . 62457) (#(" " 0 1 (fontified nil face org-table)) . 62459) (62455 . 62456) (#(" " 0 1 (fontified nil face org-table)) . 62459) (62454 . 62455) (#(" " 0 1 (fontified nil face org-table)) . 62459) (62453 . 62454) (#("v" 0 1 (fontified t face org-table)) . -62453) (undo-tree-id14579 . -1) 62454 (#(" " 0 1 (fontified nil face org-table)) . 62460) (62453 . 62454) (#(" " 0 1 (fontified nil face org-table)) . 62460) (62452 . 62453) (#(" " 0 1 (fontified nil face org-table)) . 62460) (62451 . 62452) (#(" " 0 1 (fontified nil face org-table)) . 62460) (62450 . 62451) (#("n" 0 1 (fontified t face org-table)) . -62450) (undo-tree-id14580 . -1) 62451 (#(" " 0 1 (fontified nil face org-table)) . 62461) (62450 . 62451) (#("a" 0 1 (fontified t face org-table)) . -62450) (undo-tree-id14581 . -1) 62451 (#(" " 0 1 (fontified nil)) . 62462) (62450 . 62451) (#("|              " 0 15 (fontified t face org-table)) . 62448) (62463 . 62478) 62450 (62444 . 62478) (#("    |
" 0 1 (fontified nil) 1 5 (fontified nil) 5 6 (fontified nil)) . 62444) (undo-tree-id14582 . -6) (undo-tree-id14583 . -5) (undo-tree-id14584 . -6) (62410 . 62444) (#("    |text content|inner text|
" 0 4 (fontified nil) 4 9 (fontified nil face org-table) 9 23 (fontified nil face org-table) 23 29 (fontified nil face org-table) 29 30 (fontified nil)) . 62410) (undo-tree-id14585 . -30) (undo-tree-id14586 . -28) (62376 . 62410) 62411 (62410 . 62411) (62406 . 62410) (62405 . 62406) (62404 . 62405) (62396 . 62404) (#("e" 0 1 (fontified t face org-table)) . -62396) (undo-tree-id14587 . -1) (#("r" 0 1 (fontified t face org-table)) . -62397) (undo-tree-id14588 . -1) (#("r" 0 1 (fontified t face org-table)) . -62398) (undo-tree-id14589 . -1) 62399 (62394 . 62399) (#("|" 0 1 (fontified t face org-table)) . -62394) (undo-tree-id14590 . -1) 62395 (62393 . 62395) (62386 . 62393) (62381 . 62386) (62380 . 62381) (#("t" 0 1 (fontified t)) . -62380) (undo-tree-id14591 . -1) 62381 (62380 . 62381) (62375 . 62380) (t 25725 41066 824481 866000) 62321) nil (25725 41429 611598 169000) 0 nil])
([nil nil ((62519 . 62521) (#("w" 0 1 (fontified t face org-table)) . -62519) (undo-tree-id14546 . -1) (#("o" 0 1 (fontified t face org-table)) . -62520) (undo-tree-id14547 . -1) 62521 (62517 . 62521) (#("l" 0 1 (fontified t face org-table)) . -62517) (undo-tree-id14548 . -1) (undo-tree-id14549 . -1) (#("f" 0 1 (fontified t face org-table)) . -62518) (undo-tree-id14550 . -1) (#("o" 0 1 (fontified t face org-table)) . -62519) (undo-tree-id14551 . -1) (#("w" 0 1 (fontified t face org-table)) . -62520) (undo-tree-id14552 . -1) 62521 (62510 . 62521) (#("v" 0 1 (fontified t face org-table)) . -62510) (undo-tree-id14553 . -1) (#("g" 0 1 (fontified t face org-table)) . -62511) (undo-tree-id14554 . -1) 62512 (62510 . 62512) (#(" " 0 1 (fontified nil face org-table)) . 62510) (62509 . 62510) (#(" " 0 1 (fontified nil face org-table)) . 62510) (62508 . 62509) (#(" " 0 1 (fontified nil face org-table)) . 62510) (62507 . 62508) (#(" " 0 1 (fontified nil face org-table)) . 62510) (62506 . 62507) (#(" " 0 1 (fontified nil face org-table)) . 62510) (62505 . 62506) (#(" " 0 1 (fontified nil face org-table)) . 62510) (62504 . 62505) (#(" " 0 1 (fontified nil face org-table)) . 62510) (62503 . 62504) (#(" " 0 1 (fontified nil face org-table)) . 62510) (62502 . 62503) (#(" " 0 1 (fontified nil face org-table)) . 62510) (62501 . 62502) (#(" " 0 1 (fontified nil face org-table)) . 62510) (62500 . 62501)) nil (25725 41429 611475 947000) 0 nil])
([nil nil ((#("    |     doesnt trigger reflow | triggers a reflow |
" 0 1 (fontified nil) 1 4 (fontified nil) 4 32 (fontified nil face org-table) 32 52 (fontified nil face org-table) 52 53 (fontified nil face org-table) 53 54 (fontified nil)) . 62576) (undo-tree-id14540 . 23) (undo-tree-id14541 . -54) (undo-tree-id14542 . -29) (undo-tree-id14543 . -30) (undo-tree-id14544 . -54) (62526 . 62576) (#("    | unaware of css | aware of css |
" 0 1 (fontified nil) 1 4 (fontified nil) 4 5 (fontified nil face org-table) 5 6 (display (space :relative-width 1) fontified nil face org-table) 6 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 22 (fontified nil face org-table) 22 23 (display (space :relative-width 1) fontified nil face org-table) 23 35 (fontified nil face org-table) 35 36 (display (space :relative-width 1) fontified nil face org-table) 36 37 (fontified nil face org-table) 37 38 (fontified nil)) . 62526) (undo-tree-id14545 . -38) (62476 . 62526) (#("    |----------------+--------------|
" 0 1 (fontified nil) 1 4 (fontified nil) 4 37 (fontified nil face org-table) 37 38 (fontified nil)) . 62476) (62426 . 62476) (#("    | text content   | inner text   |
" 0 4 (fontified nil) 4 5 (fontified nil face org-table) 5 6 (display (space :relative-width 1) fontified nil face org-table) 6 10 (fontified nil face org-table) 10 18 (fontified nil face org-table) 18 20 (fontified nil face org-table) 20 21 (display (space :relative-width 1) fontified nil face org-table) 21 22 (fontified nil face org-table) 22 23 (display (space :relative-width 1) fontified nil face org-table) 23 28 (fontified nil face org-table) 28 33 (fontified nil face org-table) 33 35 (fontified nil face org-table) 35 36 (display (space :relative-width 1) fontified nil face org-table) 36 37 (fontified nil face org-table) 37 38 (fontified nil)) . 62426) (62376 . 62426) 62520) nil (25725 41429 611443 959000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face org-table)) . -62640) (undo-tree-id14512 . -1) (#("k" 0 1 (fontified t face org-table)) . -62641) (undo-tree-id14513 . -1) 62642 (#("h" 0 1 (fontified t face org-table)) . -62642) (undo-tree-id14514 . -1) 62643 (62640 . 62643) (#("j" 0 1 (fontified nil face org-table)) . -62640) (undo-tree-id14515 . -1) (#("k" 0 1 (fontified t face org-table)) . -62641) (undo-tree-id14516 . -1) (#("h" 0 1 (fontified t face org-table)) . -62642) (undo-tree-id14517 . -1) 62643 (62640 . 62643) (#("h" 0 1 (fontified t face org-table)) . -62640) (undo-tree-id14518 . -1) 62641 (62635 . 62641) (#("l" 0 1 (fontified t face org-table)) . -62635) (undo-tree-id14519 . -1) (#("m" 0 1 (fontified t face org-table)) . -62636) (undo-tree-id14520 . -1) (#("e" 0 1 (fontified t face org-table)) . -62637) (undo-tree-id14521 . -1) (#("n" 0 1 (fontified nil face org-table)) . -62638) (undo-tree-id14522 . -1) (#("t" 0 1 (fontified t face org-table)) . -62639) (undo-tree-id14523 . -1) (#("s" 0 1 (fontified t face org-table)) . -62640) (undo-tree-id14524 . -1) 62641 (62634 . 62641) (#("m" 0 1 (fontified t face org-table)) . -62634) (undo-tree-id14525 . -1) (#("e" 0 1 (fontified t face org-table)) . -62635) (undo-tree-id14526 . -1) (#("n" 0 1 (fontified t face org-table)) . -62636) (undo-tree-id14527 . -1) (#("e" 0 1 (fontified t face org-table)) . -62637) (undo-tree-id14528 . -1) (#("t" 0 1 (fontified t face org-table)) . -62638) (undo-tree-id14529 . -1) 62639 (62622 . 62639) (62607 . 62622) (#("a" 0 1 (fontified t face org-table)) . -62607) (undo-tree-id14530 . -1) (undo-tree-id14531 . -1) (#("i" 0 1 (fontified t face org-table)) . -62608) (undo-tree-id14532 . -1) (undo-tree-id14533 . -1) 62609 (62592 . 62609) (#("m" 0 1 (fontified t face org-table)) . -62592) (undo-tree-id14534 . -1) (undo-tree-id14535 . -1) (#("a" 0 1 (fontified t face org-table)) . -62593) (undo-tree-id14536 . -1) (undo-tree-id14537 . -1) (#("g" 0 1 (fontified t face org-table)) . -62594) (undo-tree-id14538 . -1) (undo-tree-id14539 . -1) 62595 (62582 . 62595) (62581 . 62582) (62580 . 62581) (62575 . 62580) 62556) nil (25725 41429 611417 350000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face org-table)) . -62817) (undo-tree-id14504 . -1) (#("k" 0 1 (fontified t face org-table)) . -62818) (undo-tree-id14505 . -1) 62819 (#(" " 0 1 (fontified nil face org-table)) . 62875) (62818 . 62819) (#(" " 0 1 (fontified nil)) . 62875) (62817 . 62818) (#("|                                                            " 0 61 (fontified t face org-table)) . 62815) (62876 . 62937) 62817 (62811 . 62898) (#("    | does not ignore text content in scripts and style elements
" 0 1 (fontified nil) 1 4 (fontified nil) 4 10 (fontified nil face org-table) 10 14 (fontified nil face org-table) 14 21 (fontified nil face org-table) 21 26 (fontified nil face org-table) 26 34 (fontified nil face org-table) 34 37 (fontified nil face org-table) 37 45 (fontified nil face org-table) 45 49 (fontified nil face org-table) 49 55 (fontified nil face org-table) 55 64 (fontified nil face org-table) 64 65 (fontified nil)) . 62811) (undo-tree-id14506 . 1) (undo-tree-id14507 . -65) (undo-tree-id14508 . -64) (undo-tree-id14509 . -34) (undo-tree-id14510 . -65) (62724 . 62811) (#("    | doesnt trigger reflow | triggers a reflow |
" 0 1 (fontified nil) 1 4 (fontified nil) 4 5 (fontified nil face org-table) 5 6 (display (space :relative-width 1) fontified nil face org-table) 6 27 (fontified nil face org-table) 27 28 (display (space :relative-width 1) fontified nil face org-table) 28 29 (fontified nil face org-table) 29 30 (display (space :relative-width 1) fontified nil face org-table) 30 47 (fontified nil face org-table) 47 48 (display (space :relative-width 1) fontified nil face org-table) 48 49 (fontified nil face org-table) 49 50 (fontified nil)) . 62724) (undo-tree-id14511 . -50) (62637 . 62724) (#("    | unaware of css        | aware of css      |
" 0 1 (fontified nil) 1 4 (fontified nil) 4 5 (fontified nil face org-table) 5 6 (display (space :relative-width 1) fontified nil face org-table) 6 20 (fontified nil face org-table) 20 27 (fontified nil face org-table) 27 28 (display (space :relative-width 1) fontified nil face org-table) 28 29 (fontified nil face org-table) 29 30 (display (space :relative-width 1) fontified nil face org-table) 30 42 (fontified nil face org-table) 42 47 (fontified nil face org-table) 47 48 (display (space :relative-width 1) fontified nil face org-table) 48 49 (fontified nil face org-table) 49 50 (fontified nil)) . 62637) (62550 . 62637) (#("    |-----------------------+-------------------|
" 0 1 (fontified nil) 1 4 (fontified nil) 4 49 (fontified nil face org-table) 49 50 (fontified nil)) . 62550) (62463 . 62550) (#("    | text content          | inner text        |
" 0 4 (fontified nil) 4 5 (fontified nil face org-table) 5 6 (display (space :relative-width 1) fontified nil face org-table) 6 10 (fontified nil face org-table) 10 18 (fontified nil face org-table) 18 27 (fontified nil face org-table) 27 28 (display (space :relative-width 1) fontified nil face org-table) 28 29 (fontified nil face org-table) 29 30 (display (space :relative-width 1) fontified nil face org-table) 30 35 (fontified nil face org-table) 35 40 (fontified nil face org-table) 40 47 (fontified nil face org-table) 47 48 (display (space :relative-width 1) fontified nil face org-table) 48 49 (fontified nil face org-table) 49 50 (fontified nil)) . 62463) (62376 . 62463) 62610) nil (25725 41429 611348 67000) 0 nil])
([nil nil ((#("    |                                                          |                   |
" 0 4 (fontified nil) 4 63 (fontified nil face org-table) 63 64 (fontified nil face org-table) 64 65 (display (space :relative-width 1) fontified nil face org-table) 65 82 (fontified nil face org-table) 82 83 (display (space :relative-width 1) fontified nil face org-table) 83 84 (fontified nil face org-table) 84 85 (fontified nil)) . 62898) (undo-tree-id14501 . 79) (undo-tree-id14502 . -85) (undo-tree-id14503 . -85) (62811 . 62898) 62729) nil (25725 41429 611322 435000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t face org-table)) . -62833) (undo-tree-id14481 . -1) (undo-tree-id14482 . -1) (#("l" 0 1 (fontified t face org-table)) . -62834) (undo-tree-id14483 . -1) 62835 (62830 . 62835) (62826 . 62830) (#("m" 0 1 (fontified t face org-table)) . -62826) (undo-tree-id14484 . -1) (#("e" 0 1 (fontified t face org-table)) . -62827) (undo-tree-id14485 . -1) 62828 (62818 . 62828) (#(" " 0 1 (fontified t face org-table)) . -62818) (undo-tree-id14486 . -1) 62819 (62799 . 62819) (#("s" 0 1 (fontified t face org-table)) . -62799) (undo-tree-id14487 . -1) (undo-tree-id14488 . -1) (#("c" 0 1 (fontified t face org-table)) . -62800) (undo-tree-id14489 . -1) (undo-tree-id14490 . -1) (#("r" 0 1 (fontified t face org-table)) . -62801) (undo-tree-id14491 . -1) (undo-tree-id14492 . -1) (#("i" 0 1 (fontified t face org-table)) . -62802) (undo-tree-id14493 . -1) (undo-tree-id14494 . -1) (#("t" 0 1 (fontified t face org-table)) . -62803) (undo-tree-id14495 . -1) (undo-tree-id14496 . -1) (#("p" 0 1 (fontified t face org-table)) . -62804) (undo-tree-id14497 . -1) (#("s" 0 1 (fontified t face org-table)) . -62805) (undo-tree-id14498 . -1) (#(" " 0 1 (fontified t face org-table)) . -62806) (undo-tree-id14499 . -1) 62807 (#(" " 0 1 (fontified nil face org-table)) . 62807) (62806 . 62807) (#(" " 0 1 (fontified nil face org-table)) . 62807) (62805 . 62806) (#(" " 0 1 (fontified nil face org-table)) . 62807) (62804 . 62805) (#(" " 0 1 (fontified nil face org-table)) . 62807) (62803 . 62804) (#(" " 0 1 (fontified nil face org-table)) . 62807) (62802 . 62803) (#(" " 0 1 (fontified nil face org-table)) . 62807) (62801 . 62802) (#(" " 0 1 (fontified nil face org-table)) . 62807) (62800 . 62801) (#(" " 0 1 (fontified nil face org-table)) . 62807) (62799 . 62800) (#(" " 0 1 (fontified nil face org-table)) . 62807) (62798 . 62799) (#(" " 0 1 (fontified nil face org-table)) . 62807) (62797 . 62798) (#(" " 0 1 (fontified nil face org-table)) . 62807) (62796 . 62797) (#(" " 0 1 (fontified nil face org-table)) . 62807) (62795 . 62796) (#(" " 0 1 (fontified nil face org-table)) . 62807) (62794 . 62795) (#(" " 0 1 (fontified nil face org-table)) . 62807) (62793 . 62794) (#(" " 0 1 (fontified nil face org-table)) . 62807) (62792 . 62793) (#(" " 0 1 (fontified nil face org-table)) . 62807) (62791 . 62792) (#("g" 0 1 (fontified t face org-table)) . -62791) (undo-tree-id14500 . -1) 62792 (#(" " 0 1 (fontified nil face org-table)) . 62808) (62791 . 62792)) nil (25725 41429 611301 552000) 0 nil])
([nil nil ((63048 . 63160) (#("    | normalise every text - remove all the whitespaces etc      | won't remove whitespaces etc                  |
" 0 4 (fontified nil) 4 5 (fontified nil face org-table) 5 6 (display (space :relative-width 1) fontified nil face org-table) 6 59 (fontified nil face org-table) 59 64 (fontified nil face org-table) 64 65 (display (space :relative-width 1) fontified nil face org-table) 65 113 (fontified nil face org-table) 113 114 (fontified nil face org-table) 114 115 (fontified nil)) . 63048) (undo-tree-id14467 . -115) (undo-tree-id14468 . -87) (undo-tree-id14469 . -95) (undo-tree-id14470 . -115) (62936 . 63048) 63031 (#(" " 0 1 (fontified nil face org-table)) . 63048) (63030 . 63031) (#(" " 0 1 (fontified nil face org-table)) . 63048) (63029 . 63030) (#(" " 0 1 (fontified nil face org-table)) . 63048) (63028 . 63029) (#(" " 0 1 (fontified nil face org-table)) . 63048) (63027 . 63028) (#(" " 0 1 (fontified nil face org-table)) . 63048) (63026 . 63027) (63023 . 63026) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63022 . 63023) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63021 . 63022) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63020 . 63021) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63019 . 63020) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63018 . 63019) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63017 . 63018) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63016 . 63017) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63015 . 63016) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63014 . 63015) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63013 . 63014) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63012 . 63013) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63011 . 63012) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63010 . 63011) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63009 . 63010) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63008 . 63009) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63007 . 63008) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63006 . 63007) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63005 . 63006) (#(" " 0 1 (fontified nil face org-table)) . 63045) (63004 . 63005) (#(" " 0 1 (fontified nil)) . 63045) (63003 . 63004) (nil display (space :relative-width 1) 63045 . 63046) (nil fontified t 63045 . 63046) (nil face org-table 63045 . 63046) (nil fontified t 63003 . 63045) (nil face org-table 63003 . 63045) (nil display (space :relative-width 1) 63002 . 63003) (nil fontified t 63002 . 63003) (nil face org-table 63002 . 63003) (nil fontified t 63001 . 63002) (nil face org-table 63001 . 63002) (#("|                                            " 0 1 (fontified t face org-table) 1 2 (display (space :relative-width 1) fontified t face org-table) 2 44 (fontified t face org-table) 44 45 (display (space :relative-width 1) fontified t face org-table)) . 63001) (63046 . 63091) 63003 (#("    |                                                    normalise every text - remove all the whitespaces etc  |                   |
" 0 4 (fontified nil) 4 5 (fontified nil face org-table) 5 6 (display (space :relative-width 1) fontified nil face org-table) 6 111 (fontified nil face org-table) 111 112 (display (space :relative-width 1) fontified nil face org-table) 112 113 (fontified nil face org-table) 113 114 (display (space :relative-width 1) fontified nil face org-table) 114 131 (fontified nil face org-table) 131 132 (display (space :relative-width 1) fontified nil face org-table) 132 133 (fontified nil face org-table) 133 134 (fontified nil)) . 63048) (undo-tree-id14471 . -134) (undo-tree-id14472 . -105) (undo-tree-id14473 . -111) (undo-tree-id14474 . -134) (62936 . 63048) (#("    | doesnt trigger reflow                                      | triggers a reflow |
" 0 1 (fontified nil) 1 4 (fontified nil) 4 5 (fontified nil face org-table) 5 6 (display (space :relative-width 1) fontified nil face org-table) 6 27 (fontified nil face org-table) 27 64 (fontified nil face org-table) 64 65 (display (space :relative-width 1) fontified nil face org-table) 65 66 (fontified nil face org-table) 66 67 (display (space :relative-width 1) fontified nil face org-table) 67 84 (fontified nil face org-table) 84 85 (display (space :relative-width 1) fontified nil face org-table) 85 86 (fontified nil face org-table) 86 87 (fontified nil)) . 62824) (62712 . 62824) (#("    | unaware of css                                             | aware of css      |
" 0 1 (fontified nil) 1 4 (fontified nil) 4 5 (fontified nil face org-table) 5 6 (display (space :relative-width 1) fontified nil face org-table) 6 20 (fontified nil face org-table) 20 64 (fontified nil face org-table) 64 65 (display (space :relative-width 1) fontified nil face org-table) 65 66 (fontified nil face org-table) 66 67 (display (space :relative-width 1) fontified nil face org-table) 67 79 (fontified nil face org-table) 79 84 (fontified nil face org-table) 84 85 (display (space :relative-width 1) fontified nil face org-table) 85 86 (fontified nil face org-table) 86 87 (fontified nil)) . 62712) (62600 . 62712) (#("    |------------------------------------------------------------+-------------------|
" 0 1 (fontified nil) 1 4 (fontified nil) 4 86 (fontified nil face org-table) 86 87 (fontified nil)) . 62600) (62488 . 62600) (#("    | text content                                               | inner text        |
" 0 4 (fontified nil) 4 5 (fontified nil face org-table) 5 6 (display (space :relative-width 1) fontified nil face org-table) 6 10 (fontified nil face org-table) 10 18 (fontified nil face org-table) 18 64 (fontified nil face org-table) 64 65 (display (space :relative-width 1) fontified nil face org-table) 65 66 (fontified nil face org-table) 66 67 (display (space :relative-width 1) fontified nil face org-table) 67 72 (fontified nil face org-table) 72 77 (fontified nil face org-table) 77 84 (fontified nil face org-table) 84 85 (display (space :relative-width 1) fontified nil face org-table) 85 86 (fontified nil face org-table) 86 87 (fontified nil)) . 62488) (62376 . 62488) 62947 (62936 . 62947) (#("x" 0 1 (fontified t face org-table)) . -62936) (undo-tree-id14475 . -1) (undo-tree-id14476 . -1) (#("p" 0 1 (fontified t face org-table)) . -62937) (undo-tree-id14477 . -1) (undo-tree-id14478 . -1) (#("a" 0 1 (fontified t face org-table)) . -62938) (undo-tree-id14479 . -1) 62939 (62933 . 62939) (62919 . 62933) (62899 . 62919) (#(" " 0 1 (fontified nil face org-table)) . 62899) (62898 . 62899) (#("i" 0 1 (fontified t face org-table)) . -62898) (undo-tree-id14480 . -1) 62899 (#(" " 0 1 (fontified nil face org-table)) . 62900) (62898 . 62899) (#(" " 0 1 (fontified nil face org-table)) . 62900) (62897 . 62898) (#(" " 0 1 (fontified nil face org-table)) . 62900) (62896 . 62897) (#(" " 0 1 (fontified nil face org-table)) . 62900) (62895 . 62896) (#(" " 0 1 (fontified nil face org-table)) . 62900) (62894 . 62895) (#(" " 0 1 (fontified nil face org-table)) . 62900) (62893 . 62894)) nil (25725 41429 611226 53000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil face org-table)) . 63149) (63137 . 63138) (#(" " 0 1 (fontified nil face org-table)) . 63149) (63136 . 63137) (#(" " 0 1 (fontified nil face org-table)) . 63149) (63135 . 63136) (#(" " 0 1 (fontified nil face org-table)) . 63149) (63134 . 63135) (#(" " 0 1 (fontified nil face org-table)) . 63149) (63133 . 63134) (#(" " 0 1 (fontified nil face org-table)) . 63149) (63132 . 63133) (#(" " 0 1 (fontified nil face org-table)) . 63149) (63131 . 63132) (#(" " 0 1 (fontified nil face org-table)) . 63149) (63130 . 63131) (#(" " 0 1 (fontified nil face org-table)) . 63149) (63129 . 63130) (#(" " 0 1 (fontified nil face org-table)) . 63149) (63128 . 63129) (#(" " 0 1 (fontified nil face org-table)) . 63149) (63127 . 63128) (#(" " 0 1 (fontified nil face org-table)) . 63149) (63126 . 63127) (#(" " 0 1 (fontified nil face org-table)) . 63149) (63125 . 63126) (#(" " 0 1 (fontified nil face org-table)) . 63149) (63124 . 63125) (#("n" 0 1 (fontified t face org-table)) . -63124) (undo-tree-id14450 . -1) (#("d" 0 1 (fontified t face org-table)) . -63125) (undo-tree-id14451 . -1) 63126 (#(" " 0 1 (fontified nil face org-table)) . 63151) (63125 . 63126) (#(" " 0 1 (fontified nil face org-table)) . 63151) (63124 . 63125) (#(" " 0 1 (fontified nil face org-table)) . 63151) (63123 . 63124) (#(" " 0 1 (fontified nil face org-table)) . 63151) (63122 . 63123) (#(" " 0 1 (fontified nil face org-table)) . 63151) (63121 . 63122) (#(" " 0 1 (fontified nil face org-table)) . 63151) (63120 . 63121) (#(" " 0 1 (fontified nil face org-table)) . 63151) (63119 . 63120) (#(" " 0 1 (fontified nil face org-table)) . 63151) (63118 . 63119) (#(" " 0 1 (fontified nil face org-table)) . 63151) (63117 . 63118) (#(" " 0 1 (fontified nil face org-table)) . 63151) (63116 . 63117) (#(" " 0 1 (fontified nil face org-table)) . 63151) (63115 . 63116) (#("n" 0 1 (fontified t face org-table)) . -63115) (undo-tree-id14452 . -1) (undo-tree-id14453 . -1) (#("o" 0 1 (fontified t face org-table)) . -63116) (undo-tree-id14454 . -1) (undo-tree-id14455 . -1) (#("n" 0 1 (fontified t face org-table)) . -63117) (undo-tree-id14456 . -1) (#(" " 0 1 (fontified t face org-table)) . -63118) (undo-tree-id14457 . -1) (#("s" 0 1 (fontified t face org-table)) . -63119) (undo-tree-id14458 . -1) 63120 (#(" " 0 1 (fontified nil face org-table)) . 63156) (63119 . 63120) (#(" " 0 1 (fontified nil face org-table)) . 63156) (63118 . 63119) (#(" " 0 1 (fontified nil face org-table)) . 63156) (63117 . 63118) (#(" " 0 1 (fontified nil face org-table)) . 63156) (63116 . 63117) (#(" " 0 1 (fontified nil face org-table)) . 63156) (63115 . 63116) (#("o" 0 1 (fontified t face org-table)) . -63115) (undo-tree-id14459 . -1) 63116 (#(" " 0 1 (fontified nil)) . 63157) (63115 . 63116) (nil display (space :relative-width 1) 63157 . 63158) (nil fontified t 63157 . 63158) (nil face org-table 63157 . 63158) (nil fontified t 63115 . 63157) (nil face org-table 63115 . 63157) (nil display (space :relative-width 1) 63114 . 63115) (nil fontified t 63114 . 63115) (nil face org-table 63114 . 63115) (nil fontified t 63113 . 63114) (nil face org-table 63113 . 63114) (#("|                                            " 0 1 (fontified t face org-table) 1 2 (display (space :relative-width 1) fontified t face org-table) 2 44 (fontified t face org-table) 44 45 (display (space :relative-width 1) fontified t face org-table)) . 63113) (63158 . 63203) 63115 (#("    |                                               implemented in dom specifications/features |                                            |
" 0 4 (fontified nil) 4 141 (fontified nil face org-table) 141 142 (fontified nil)) . 63160) (undo-tree-id14460 . 45) (undo-tree-id14461 . -142) (undo-tree-id14462 . -76) (undo-tree-id14463 . -94) (undo-tree-id14464 . -142) (63048 . 63160) 63142 (63124 . 63142) (63122 . 63124) (#("d" 0 1 (fontified t face org-table)) . -63122) (undo-tree-id14465 . -1) 63123 (63117 . 63123) (#(" " 0 1 (fontified t face org-table)) . -63117) (undo-tree-id14466 . -1) 63118 (63112 . 63118) (#(" " 0 1 (fontified nil face org-table)) . 63112) (63111 . 63112) (#(" " 0 1 (fontified nil face org-table)) . 63112) (63110 . 63111) (#(" " 0 1 (fontified nil face org-table)) . 63112) (63109 . 63110) (#(" " 0 1 (fontified nil face org-table)) . 63112) (63108 . 63109) (#(" " 0 1 (fontified nil face org-table)) . 63112) (63107 . 63108) (#(" " 0 1 (fontified nil face org-table)) . 63112) (63106 . 63107) (#(" " 0 1 (fontified nil face org-table)) . 63112) (63105 . 63106) (#(" " 0 1 (fontified nil face org-table)) . 63112) (63104 . 63105) (#(" " 0 1 (fontified nil face org-table)) . 63112) (63103 . 63104) (#(" " 0 1 (fontified nil face org-table)) . 63112) (63102 . 63103) (#(" " 0 1 (fontified nil face org-table)) . 63112) (63101 . 63102) (#(" " 0 1 (fontified nil face org-table)) . 63112) (63100 . 63101)) nil (25725 41429 611095 729000) 0 nil])
([nil nil ((63160 . 63272) (#("    | implemented in dom specifications/features                 | considered non standard            |
" 0 4 (fontified nil) 4 5 (fontified nil face org-table) 5 6 (display (space :relative-width 1) fontified nil face org-table) 6 48 (fontified nil face org-table) 48 64 (fontified nil face org-table) 64 65 (display (space :relative-width 1) fontified nil face org-table) 65 102 (fontified nil face org-table) 102 103 (fontified nil face org-table) 103 104 (fontified nil)) . 63160) (undo-tree-id14445 . 14) (undo-tree-id14446 . -104) (undo-tree-id14447 . -90) (undo-tree-id14448 . -89) (undo-tree-id14449 . -104) (63048 . 63160) 63137) nil (25725 41429 611010 173000) 0 nil])
([nil nil ((#("    |                                                            |                                            |
" 0 4 (fontified t) 4 111 (fontified t face org-table) 111 112 (fontified t)) . 63160) (undo-tree-id14440 . -111) (undo-tree-id14441 . -112) (undo-tree-id14442 . -112) (undo-tree-id14443 . -6) (undo-tree-id14444 . -112) 63166) nil (25725 41429 610996 205000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -63160) (undo-tree-id14439 . -4) 63164 (63159 . 63164) 63054) nil (25725 41429 610983 843000) 0 nil])
([nil nil ((nil rear-nonsticky nil 63365 . 63366) (nil fontified nil 63365 . 63366) (nil fontified nil 63364 . 63365) (nil fontified nil 63356 . 63364) (nil fontified nil 63355 . 63356) (nil fontified nil 63327 . 63355) (nil fontified nil 63326 . 63327) (nil fontified nil 63320 . 63326) (63320 . 63366) (63319 . 63320) (#("V" 0 1 (fontified t)) . -63319) (undo-tree-id14413 . -1) (#("a" 0 1 (fontified t)) . -63320) (undo-tree-id14414 . -1) (#("l" 0 1 (fontified t)) . -63321) (undo-tree-id14415 . -1) (#("u" 0 1 (fontified t)) . -63322) (undo-tree-id14416 . -1) (#("e" 0 1 (fontified t)) . -63323) (undo-tree-id14417 . -1) 63324 (#("
" 0 1 (fontified t)) . -63324) (undo-tree-id14418 . -1) (undo-tree-id14419 . -1) 63325 (63324 . 63325) (63319 . 63324) (63304 . 63319) (#("9" 0 1 (fontified t)) . -63304) (undo-tree-id14420 . -1) 63305 (63304 . 63305) (#("n" 0 1 (fontified t)) . -63304) (undo-tree-id14421 . -1) (undo-tree-id14422 . -1) 63305 (63296 . 63305) (#("n" 0 1 (fontified t)) . -63296) (undo-tree-id14423 . -1) 63297 (63281 . 63297) (63268 . 63281) (63247 . 63268) (63244 . 63247) (63238 . 63244) (#("c" 0 1 (fontified t)) . -63238) (undo-tree-id14424 . -1) (undo-tree-id14425 . -1) (#("o" 0 1 (fontified t)) . -63239) (undo-tree-id14426 . -1) (undo-tree-id14427 . -1) (#("m" 0 1 (fontified t)) . -63240) (undo-tree-id14428 . -1) (undo-tree-id14429 . -1) (#("b" 0 1 (fontified t)) . -63241) (undo-tree-id14430 . -1) (undo-tree-id14431 . -1) (#("i" 0 1 (fontified t)) . -63242) (undo-tree-id14432 . -1) (undo-tree-id14433 . -1) (#("n" 0 1 (fontified t)) . -63243) (undo-tree-id14434 . -1) (undo-tree-id14435 . -1) (#("e" 0 1 (fontified t)) . -63244) (undo-tree-id14436 . -1) (undo-tree-id14437 . -1) (#(" " 0 1 (fontified t)) . -63245) (undo-tree-id14438 . -1) 63246 (63238 . 63246) (63233 . 63238) 63161) nil (25725 41429 610968 59000) 0 nil])
([nil nil ((63345 . 63352) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 63345) (undo-tree-id14409 . -4) (undo-tree-id14410 . -4) (undo-tree-id14411 . -4) (undo-tree-id14412 . -4) 63349) nil (25725 41429 610907 506000) 0 nil])
([nil nil ((63357 . 63358) 63351) nil (25725 41429 610895 144000) 0 nil])
([nil nil ((nil rear-nonsticky nil 63948 . 63949) (nil fontified nil 63358 . 63949) (63358 . 63949)) nil (25725 41429 610891 303000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -64011) (undo-tree-id14408 . -4) 64015 (64010 . 64015) 64010) nil (25725 41429 610886 554000) 0 nil])
([nil nil ((64010 . 64011)) nil (25725 41429 610879 500000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -64010) (undo-tree-id14406 . -1) (undo-tree-id14407 . -1) 64011) nil (25725 41429 610868 814000) 0 nil])
([nil nil ((nil rear-nonsticky nil 64385 . 64386) (nil fontified nil 64010 . 64386) (64010 . 64386) (t 25725 41429 740262 5000)) nil (25725 41509 421257 938000) 0 nil])
([nil nil ((64386 . 64387) 64385) nil (25725 41509 421250 674000) 0 nil])
([nil nil ((64387 . 64388)) nil (25725 41509 420880 584000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -64387) (undo-tree-id14592 . -1) (undo-tree-id14593 . -1) (undo-tree-id14594 . -1) (undo-tree-id14595 . -1) (undo-tree-id14596 . -1) (undo-tree-id14597 . -1) (undo-tree-id14598 . -1) (undo-tree-id14599 . -1) (undo-tree-id14600 . -1) (undo-tree-id14601 . -1) (undo-tree-id14602 . -1) (undo-tree-id14603 . -1) (undo-tree-id14604 . -1) (undo-tree-id14605 . -1) (undo-tree-id14606 . -1) (undo-tree-id14607 . -1) (undo-tree-id14608 . -1) (undo-tree-id14609 . -1) (undo-tree-id14610 . -1) (undo-tree-id14611 . -1) (undo-tree-id14612 . -1) (undo-tree-id14613 . -1) (undo-tree-id14614 . -1) (undo-tree-id14615 . -1) (undo-tree-id14616 . -1) (undo-tree-id14617 . -1) (undo-tree-id14618 . -1) (undo-tree-id14619 . -1) (undo-tree-id14620 . -1) (undo-tree-id14621 . -1) (undo-tree-id14622 . -1) (undo-tree-id14623 . -1) (undo-tree-id14624 . -1) (undo-tree-id14625 . -1) (undo-tree-id14626 . -1) (undo-tree-id14627 . -1) (undo-tree-id14628 . -1) (undo-tree-id14629 . -1) (undo-tree-id14630 . -1) (undo-tree-id14631 . -1) (undo-tree-id14632 . -1) (undo-tree-id14633 . -1) (undo-tree-id14634 . -1) (undo-tree-id14635 . -1) (undo-tree-id14636 . -1) (undo-tree-id14637 . -1) (undo-tree-id14638 . -1) (undo-tree-id14639 . -1) (undo-tree-id14640 . -1) (undo-tree-id14641 . -1) (undo-tree-id14642 . -1) (undo-tree-id14643 . -1) (undo-tree-id14644 . -1) (undo-tree-id14645 . -1) (undo-tree-id14646 . -1) (undo-tree-id14647 . -1) (undo-tree-id14648 . -1) (undo-tree-id14649 . -1) (undo-tree-id14650 . -1) (undo-tree-id14651 . -1) (undo-tree-id14652 . -1) (undo-tree-id14653 . -1) (undo-tree-id14654 . -1) (undo-tree-id14655 . -1) (undo-tree-id14656 . -1) (undo-tree-id14657 . -1) (undo-tree-id14658 . -1) (undo-tree-id14659 . -1) (undo-tree-id14660 . -1) (undo-tree-id14661 . -1) (undo-tree-id14662 . -1) (undo-tree-id14663 . -1) (undo-tree-id14664 . -1) (undo-tree-id14665 . -1) (undo-tree-id14666 . -1) (undo-tree-id14667 . -1) (undo-tree-id14668 . -1) (undo-tree-id14669 . -1) (undo-tree-id14670 . -1) 64388 (t 25725 41509 544980 853000)) nil (25725 41510 808314 885000) 0 nil])
([nil nil ((nil rear-nonsticky nil 64432 . 64433) (nil fontified nil 64432 . 64433) (nil fontified nil 64431 . 64432) (nil fontified nil 64423 . 64431) (nil fontified nil 64422 . 64423) (nil fontified nil 64394 . 64422) (nil fontified nil 64393 . 64394) (nil fontified nil 64387 . 64393) (64387 . 64433) (t 25725 41510 936993 127000)) nil (25725 41533 130925 811000) 0 nil])
([nil nil ((#(" enter" 0 6 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 64411) (undo-tree-id14678 . -5) (undo-tree-id14679 . -5) (undo-tree-id14680 . -5) (undo-tree-id14681 . -5) 64416) nil (25725 41533 130916 801000) 0 nil])
([nil nil ((#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -64423) (undo-tree-id14671 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -64424) (undo-tree-id14672 . -1) 64425 (64418 . 64425) (#("E" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -64418) (undo-tree-id14673 . -1) 64419 (#("x" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -64419) (undo-tree-id14674 . -1) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -64420) (undo-tree-id14675 . -1) 64421 (64417 . 64421) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -64417) (undo-tree-id14676 . -1) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -64418) (undo-tree-id14677 . -1) 64419 (64411 . 64419)) nil (25725 41533 130896 617000) 0 nil])
([nil nil ((64428 . 64429) 64422) nil (25725 41533 130648 540000) 0 nil])
([nil nil ((nil rear-nonsticky nil 64755 . 64756) (nil fontified nil 64429 . 64756) (64429 . 64756) (t 25725 41533 241188 640000)) nil (25725 41538 462813 696000) 0 nil])
([nil nil ((64836 . 64841) (t 25725 41538 577235 98000) 64796) nil (25725 47655 59471 679000) 0 nil])
([nil nil ((64841 . 64847)) nil (25725 47655 59466 929000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -64846) (undo-tree-id14719 . -1) 64847) nil (25725 47655 59462 739000) 0 nil])
([nil nil ((64846 . 64847)) nil (25725 47655 59456 34000) 0 nil])
([nil nil ((#("s" 0 1 (fontified nil)) . -64846) 64847) nil (25725 47655 59452 262000) 0 nil])
([nil nil ((64846 . 64847)) nil (25725 47655 59448 351000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -64845) (undo-tree-id14717 . -1) (#(" " 0 1 (fontified t)) . -64846) (undo-tree-id14718 . -1) 64847) nil (25725 47655 59443 532000) 0 nil])
([nil nil ((64845 . 64852)) nil (25725 47655 59434 522000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -64847) (undo-tree-id14710 . -1) (undo-tree-id14711 . -1) (#("i" 0 1 (fontified t)) . -64848) (undo-tree-id14712 . -1) (undo-tree-id14713 . -1) (#("k" 0 1 (fontified t)) . -64849) (undo-tree-id14714 . -1) (#("e" 0 1 (fontified t)) . -64850) (undo-tree-id14715 . -1) (#(" " 0 1 (fontified t)) . -64851) (undo-tree-id14716 . -1) 64852) nil (25725 47655 59427 887000) 0 nil])
([nil nil ((64847 . 64849)) nil (25725 47655 59408 750000) 0 nil])
([nil nil ((64849 . 64855)) nil (25725 47655 59405 398000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -64849) (undo-tree-id14699 . -1) (undo-tree-id14700 . -1) (#(" " 0 1 (fontified t)) . -64850) (undo-tree-id14701 . -1) (undo-tree-id14702 . -1) (#("d" 0 1 (fontified t)) . -64851) (undo-tree-id14703 . -1) (undo-tree-id14704 . -1) (#("o" 0 1 (fontified t)) . -64852) (undo-tree-id14705 . -1) (undo-tree-id14706 . -1) (#("m" 0 1 (fontified t)) . -64853) (undo-tree-id14707 . -1) (undo-tree-id14708 . -1) (#(" " 0 1 (fontified t)) . -64854) (undo-tree-id14709 . -1) 64855) nil (25725 47655 59397 924000) 0 nil])
([nil nil ((64849 . 64870)) nil (25725 47655 59370 197000) 0 nil])
([nil nil ((64870 . 64876)) nil (25725 47655 59367 333000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -64872) (undo-tree-id14691 . -1) (undo-tree-id14692 . -1) (#("l" 0 1 (fontified t)) . -64873) (undo-tree-id14693 . -1) (undo-tree-id14694 . -1) (#("i" 0 1 (fontified t)) . -64874) (undo-tree-id14695 . -1) (undo-tree-id14696 . -1) (#("k" 0 1 (fontified t)) . -64875) (undo-tree-id14697 . -1) (undo-tree-id14698 . -1) 64876) nil (25725 47655 59361 257000) 0 nil])
([nil nil ((64872 . 64874)) nil (25725 47655 59341 72000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -64872) (undo-tree-id14689 . -1) (#(" " 0 1 (fontified t)) . -64873) (undo-tree-id14690 . -1) 64874) nil (25725 47655 59335 415000) 0 nil])
([nil nil ((64872 . 64873)) nil (25725 47655 59326 56000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -64872) (undo-tree-id14688 . -1) 64873) nil (25725 47655 59321 725000) 0 nil])
([nil nil ((64872 . 64876)) nil (25725 47655 59315 370000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -64874) (undo-tree-id14684 . -1) (undo-tree-id14685 . -1) (#("i" 0 1 (fontified t)) . -64875) (undo-tree-id14686 . -1) (undo-tree-id14687 . -1) 64876) nil (25725 47655 59310 131000) 0 nil])
([nil nil ((64874 . 64895)) nil (25725 47655 59296 931000) 0 nil])
([nil nil ((64895 . 64898)) nil (25725 47655 59293 579000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -64896) (undo-tree-id14682 . -1) (#("o" 0 1 (fontified t)) . -64897) (undo-tree-id14683 . -1) 64898) nil (25725 47655 59287 782000) 0 nil])
([nil nil ((64896 . 64903)) nil (25725 47655 59264 454000) 0 nil])
([nil nil ((64903 . 64904)) nil (25725 47655 59250 485000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -64956) (undo-tree-id14727 . -1) (#("k" 0 1 (fontified t)) . -64957) (undo-tree-id14728 . -1) 64958 (64956 . 64958) (#("k" 0 1 (fontified t)) . -64956) (undo-tree-id14729 . -1) 64957 (64940 . 64957) (#("k" 0 1 (fontified t)) . -64940) (undo-tree-id14730 . -1) (undo-tree-id14731 . -1) (#("v" 0 1 (fontified t)) . -64941) (undo-tree-id14732 . -1) (undo-tree-id14733 . -1) (#("e" 0 1 (fontified t)) . -64942) (undo-tree-id14734 . -1) (undo-tree-id14735 . -1) (#(" " 0 1 (fontified t)) . -64943) (undo-tree-id14736 . -1) (undo-tree-id14737 . -1) (#("i" 0 1 (fontified t)) . -64944) (undo-tree-id14738 . -1) (undo-tree-id14739 . -1) (#("n" 0 1 (fontified t)) . -64945) (undo-tree-id14740 . -1) (undo-tree-id14741 . -1) 64946 (64932 . 64946) (64911 . 64932) (#("a" 0 1 (fontified t)) . -64911) (undo-tree-id14742 . -1) (undo-tree-id14743 . -1) 64912 (64904 . 64912) (64903 . 64904) (#("i" 0 1 (fontified t)) . -64903) (undo-tree-id14744 . -1) (#("t" 0 1 (fontified t)) . -64904) (undo-tree-id14745 . -1) 64905 (64903 . 64905) (#("
" 0 1 (fontified t)) . -64903) (undo-tree-id14746 . -1) (undo-tree-id14747 . -1) (#("
" 0 1 (fontified t)) . -64904) (undo-tree-id14748 . -1) (undo-tree-id14749 . -1) 64905 (64904 . 64905) (t 25725 47655 169784 779000)) nil (25725 47710 602967 711000) 0 nil])
([nil nil ((65023 . 65028) 65007) nil (25725 47710 602911 976000) 0 nil])
([nil nil ((65028 . 65035)) nil (25725 47710 602908 135000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -65033) (undo-tree-id14725 . -1) (#(" " 0 1 (fontified t)) . -65034) (undo-tree-id14726 . -1) 65035) nil (25725 47710 602903 735000) 0 nil])
([nil nil ((65033 . 65054)) nil (25725 47710 602896 122000) 0 nil])
([nil nil ((65054 . 65057)) nil (25725 47710 602892 770000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -65052) (undo-tree-id14720 . -1) (#("r" 0 1 (fontified t)) . -65053) (undo-tree-id14721 . -1) (#("e" 0 1 (fontified t)) . -65054) (undo-tree-id14722 . -1) (#("a" 0 1 (fontified t)) . -65055) (undo-tree-id14723 . -1) (#("t" 0 1 (fontified t)) . -65056) (undo-tree-id14724 . -1) 65057) nil (25725 47710 602886 134000) 0 nil])
([nil nil ((65058 . 65073) (65055 . 65058) (65052 . 65055)) nil (25725 47710 602855 124000) 0 nil])
([nil nil ((65073 . 65074)) nil (25725 47710 602843 181000) 0 nil])
([nil nil ((nil rear-nonsticky nil 65119 . 65120) (nil fontified nil 65119 . 65120) (nil fontified nil 65118 . 65119) (nil fontified nil 65110 . 65118) (nil fontified nil 65109 . 65110) (nil fontified nil 65081 . 65109) (nil fontified nil 65080 . 65081) (nil fontified nil 65074 . 65080) (65074 . 65120) (t 25725 47710 711582 169000)) nil (25725 47747 916992 482000) 0 nil])
([nil nil ((#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 65099) (undo-tree-id14815 . -4) (undo-tree-id14816 . -4) (undo-tree-id14817 . -4) (undo-tree-id14818 . -4) 65103) nil (25725 47747 916982 355000) 0 nil])
([nil nil ((65120 . 65121) (#("r" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -65120) (undo-tree-id14804 . -1) 65121 (65113 . 65121) (#("G" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -65113) (undo-tree-id14805 . -1) (#("R" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -65114) (undo-tree-id14806 . -1) 65115 (65113 . 65115) (#("F" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -65113) (undo-tree-id14807 . -1) (#("R" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -65114) (undo-tree-id14808 . -1) (#("A" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -65115) (undo-tree-id14809 . -1) (#("G" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -65116) (undo-tree-id14810 . -1) 65117 (65114 . 65117) (#("F" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -65114) (undo-tree-id14811 . -1) 65115 (65114 . 65115) (#("R" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -65114) (undo-tree-id14812 . -1) (#("A" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -65115) (undo-tree-id14813 . -1) (#("G" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -65116) (undo-tree-id14814 . -1) 65117 (65113 . 65117) (65099 . 65113)) nil (25725 47747 916938 74000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (rainbow-delimiters-unmatched-face org-block) src-block t)) . -65127) (undo-tree-id14802 . -1) 65128 (65127 . 65128) (#("p" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -65127) (undo-tree-id14803 . -1) 65128 (65127 . 65128) (65126 . 65127) 65120) nil (25725 47747 915742 711000) 0 nil])
([nil nil ((nil rear-nonsticky nil 65131 . 65132) (nil fontified nil 65127 . 65132) (65127 . 65132)) nil (25725 47747 915724 621000) 0 nil])
([nil nil ((#("enter
" 0 4 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 4 5 (fontified t rear-nonsticky t font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 5 6 (rear-nonsticky t font-lock-fontified t fontified t src-block t font-lock-multiline t face (org-block))) . 65127) (undo-tree-id14798 . -5) (undo-tree-id14799 . 1) (undo-tree-id14800 . -6) (undo-tree-id14801 . -4) 65131) nil (25725 47747 915717 846000) 0 nil])
([nil nil ((65126 . 65127) 65078) nil (25725 47747 915702 271000) 0 nil])
([nil nil ((nil rear-nonsticky nil 65479 . 65480) (nil fontified nil 65127 . 65480) (65127 . 65480)) nil (25725 47747 915697 103000) 0 nil])
([nil nil ((65491 . 65493)) nil (25725 47747 915690 957000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -65491) (undo-tree-id14750 . -1) (undo-tree-id14751 . -1) (undo-tree-id14752 . -1) (undo-tree-id14753 . -1) (undo-tree-id14754 . -1) (undo-tree-id14755 . -1) (undo-tree-id14756 . -1) (undo-tree-id14757 . -1) (undo-tree-id14758 . -1) (undo-tree-id14759 . -1) (undo-tree-id14760 . -1) (undo-tree-id14761 . -1) (undo-tree-id14762 . -1) (undo-tree-id14763 . -1) (undo-tree-id14764 . -1) (undo-tree-id14765 . -1) (undo-tree-id14766 . -1) (undo-tree-id14767 . -1) (undo-tree-id14768 . -1) (undo-tree-id14769 . -1) (undo-tree-id14770 . -1) (undo-tree-id14771 . -1) (undo-tree-id14772 . -1) (undo-tree-id14773 . -1) (undo-tree-id14774 . -1) (undo-tree-id14775 . -1) (undo-tree-id14776 . -1) (undo-tree-id14777 . -1) (undo-tree-id14778 . -1) (undo-tree-id14779 . -1) (undo-tree-id14780 . -1) (undo-tree-id14781 . -1) (undo-tree-id14782 . -1) (undo-tree-id14783 . -1) (undo-tree-id14784 . -1) (undo-tree-id14785 . -1) (undo-tree-id14786 . -1) (undo-tree-id14787 . -1) (undo-tree-id14788 . -1) (undo-tree-id14789 . -1) (undo-tree-id14790 . -1) (undo-tree-id14791 . -1) (undo-tree-id14792 . -1) (undo-tree-id14793 . -1) (undo-tree-id14794 . -1) (undo-tree-id14795 . -1) (#("x" 0 1 (fontified t)) . -65492) (undo-tree-id14796 . -1) (undo-tree-id14797 . -1) 65493) nil (25725 47852 761763 953000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -65491) (undo-tree-id14976 . -1) (undo-tree-id14977 . -1) (#("j" 0 1 (fontified t)) . -65492) (undo-tree-id14978 . -1) (#("o" 0 1 (fontified t)) . -65493) (undo-tree-id14979 . -1) 65494 (65492 . 65494) (65491 . 65492) (t 25725 47748 28735 649000) 65491) nil (25725 48022 61894 816000) 0 nil] [nil nil ((65227 . 65231) (65647 . 65650) (65646 . 65647) (65643 . 65646) (#(" " 0 1 (fontified t)) . -65643) (undo-tree-id14819 . -1) (undo-tree-id14820 . -1) 65644 (65643 . 65644) (65635 . 65643) (65629 . 65635) (65608 . 65629) (65606 . 65608) (#("g" 0 1 (fontified t)) . -65606) (undo-tree-id14821 . -1) (#(" " 0 1 (fontified t)) . -65607) (undo-tree-id14822 . -1) 65608 (65605 . 65608) (65600 . 65605) (65579 . 65600) (65558 . 65579) (65557 . 65558) (65546 . 65557) (#("o" 0 1 (fontified t)) . -65546) (undo-tree-id14823 . -1) (#("t" 0 1 (fontified t)) . -65547) (undo-tree-id14824 . -1) (#(" " 0 1 (fontified t)) . -65548) (undo-tree-id14825 . -1) (#("o" 0 1 (fontified t)) . -65549) (undo-tree-id14826 . -1) 65550 (65533 . 65550) (65526 . 65533) (65505 . 65526) (#("u" 0 1 (fontified t)) . -65505) (undo-tree-id14827 . -1) 65506 (65504 . 65506) (#("n" 0 1 (fontified t)) . -65504) (undo-tree-id14828 . -1) (#("l" 0 1 (fontified t)) . -65505) (undo-tree-id14829 . -1) (#("y" 0 1 (fontified t)) . -65506) (undo-tree-id14830 . -1) (#(" " 0 1 (fontified t)) . -65507) (undo-tree-id14831 . -1) 65508 (65502 . 65508) (#("n" 0 1 (fontified t)) . -65502) (undo-tree-id14832 . -1) 65503 (65491 . 65503) (t 25725 47748 28735 649000)) ((#("it is extren" 0 11 (fontified nil) 11 12 (fontified nil)) . 65491) (undo-tree-id14833 . -11) (65502 . 65503) (#("menly " 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 65502) (undo-tree-id14834 . -2) (65504 . 65508) (#("lu" 0 1 (fontified nil) 1 2 (fontified nil)) . 65504) (undo-tree-id14835 . -1) (65505 . 65506) (#("y efficient using thi" 0 21 (fontified nil)) . 65505) (undo-tree-id14836 . -21) (#("s to in" 0 7 (fontified nil)) . 65526) (undo-tree-id14837 . -7) (#("ject nodes inot o" 0 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil)) . 65533) (undo-tree-id14838 . -13) (65546 . 65550) (#("to our dom " 0 11 (fontified nil)) . 65546) (undo-tree-id14839 . -11) (#("
" 0 1 (fontified t)) . 65557) (undo-tree-id14840 . -1) (#("there are many advant" 0 21 (fontified nil)) . 65558) (undo-tree-id14841 . -21) (#("ages of using this to" 0 21 (fontified nil)) . 65579) (undo-tree-id14842 . -21) (#(" inje" 0 5 (fontified nil)) . 65600) (undo-tree-id14843 . -5) (#("cg " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 65605) (undo-tree-id14844 . -1) (65606 . 65608) (#("t " 0 2 (fontified nil)) . 65606) (undo-tree-id14845 . -2) (#("elements than using a" 0 21 (fontified nil)) . 65608) (undo-tree-id14846 . -21) (#(" creat" 0 6 (fontified nil)) . 65629) (undo-tree-id14847 . -6) (#("eElement" 0 8 (fontified nil)) . 65635) (undo-tree-id14848 . -8) (#(" " 0 1 (fontified nil)) . 65643) (undo-tree-id14849 . -1) (65643 . 65644) (#("() " 0 1 (fontified nil face (rainbow-delimiters-unmatched-face)) 1 2 (fontified nil face (rainbow-delimiters-unmatched-face)) 2 3 (fontified nil)) . 65643) (#("
" 0 1 (fontified t)) . 65646) (#("1. " 0 3 (fontified t)) . 65647) (#("it c" 0 4 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 65227) (undo-tree-id14850 . -3) (undo-tree-id14851 . -3) (undo-tree-id14852 . -3)) (25725 47852 760009 570000) 0 nil])
([nil nil ((65491 . 65492) 65491) nil (25725 48022 61882 593000) 0 nil])
nil
([nil nil ((#("j" 0 1 (fontified t)) . -65599) (undo-tree-id14954 . -1) (#("k" 0 1 (fontified t)) . -65600) (undo-tree-id14955 . -1) 65601 (65588 . 65601) (#("y" 0 1 (fontified t)) . -65588) (undo-tree-id14956 . -1) (undo-tree-id14957 . -1) (#("d" 0 1 (fontified t)) . -65589) (undo-tree-id14958 . -1) 65590 (65579 . 65590) (#("e" 0 1 (fontified t)) . -65579) (undo-tree-id14959 . -1) (undo-tree-id14960 . -1) (#("x" 0 1 (fontified t)) . -65580) (undo-tree-id14961 . -1) (undo-tree-id14962 . -1) (#("c" 0 1 (fontified t)) . -65581) (undo-tree-id14963 . -1) (undo-tree-id14964 . -1) (#("e" 0 1 (fontified t)) . -65582) (undo-tree-id14965 . -1) (#("p" 0 1 (fontified t)) . -65583) (undo-tree-id14966 . -1) (#("t" 0 1 (fontified t)) . -65584) (undo-tree-id14967 . -1) 65585 (65568 . 65585) (65547 . 65568) (65544 . 65547) (65543 . 65544) (65541 . 65543) (65534 . 65541) (65524 . 65534) (#("f" 0 1 (fontified t)) . -65524) (undo-tree-id14968 . -1) (undo-tree-id14969 . -1) 65525 (65510 . 65525) (#("n" 0 1 (fontified t)) . -65510) (undo-tree-id14970 . -1) (#("e" 0 1 (fontified t)) . -65511) (undo-tree-id14971 . -1) 65512 (65511 . 65512) (65505 . 65511) (#("c" 0 1 (fontified t)) . -65505) (undo-tree-id14972 . -1) 65506 (65505 . 65506) (#("d" 0 1 (fontified t)) . -65505) (undo-tree-id14973 . -1) (#("o" 0 1 (fontified t)) . -65506) (undo-tree-id14974 . -1) 65507 (65495 . 65507) (#("n" 0 1 (fontified t)) . -65495) (undo-tree-id14975 . -1) 65496 (65492 . 65496) (65491 . 65492) 65491) nil (25725 48022 61869 742000) 0 nil])
([nil nil ((65858 . 65860) (65837 . 65858) (#(" " 0 1 (fontified t)) . -65837) (undo-tree-id14857 . -1) 65838 (65825 . 65838) (#("a" 0 1 (fontified t)) . -65825) (undo-tree-id14858 . -1) (undo-tree-id14859 . -1) (#("t" 0 1 (fontified t)) . -65826) (undo-tree-id14860 . -1) (undo-tree-id14861 . -1) (#("n" 0 1 (fontified t)) . -65827) (undo-tree-id14862 . -1) 65828 (65819 . 65828) (65818 . 65819) (#("," 0 1 (fontified t)) . -65818) (undo-tree-id14863 . -1) 65819 (65806 . 65819) (#("s" 0 1 (fontified t)) . -65806) (undo-tree-id14864 . -1) (#(" " 0 1 (fontified t)) . -65807) (undo-tree-id14865 . -1) 65808 (65793 . 65808) (65788 . 65793) (#("," 0 1 (fontified t)) . -65788) (undo-tree-id14866 . -1) 65789 (65785 . 65789) (#("j" 0 1 (fontified t)) . -65785) (undo-tree-id14867 . -1) 65786 (65783 . 65786) (65762 . 65783) (65741 . 65762) (#("e" 0 1 (fontified t)) . -65741) (undo-tree-id14868 . -1) 65742 (65740 . 65742) (#("m" 0 1 (fontified t)) . -65740) (undo-tree-id14869 . -1) (undo-tree-id14870 . -1) 65741 (65740 . 65741) (65729 . 65740) (#("c" 0 1 (fontified t)) . -65729) (undo-tree-id14871 . -1) (#("o" 0 1 (fontified t)) . -65730) (undo-tree-id14872 . -1) 65731 (65728 . 65731) (#("m" 0 1 (fontified t)) . -65728) (undo-tree-id14873 . -1) (undo-tree-id14874 . -1) (#("e" 0 1 (fontified t)) . -65729) (undo-tree-id14875 . -1) (undo-tree-id14876 . -1) (#("m" 0 1 (fontified t)) . -65730) (undo-tree-id14877 . -1) (undo-tree-id14878 . -1) (#("o" 0 1 (fontified t)) . -65731) (undo-tree-id14879 . -1) (undo-tree-id14880 . -1) (#("r" 0 1 (fontified t)) . -65732) (undo-tree-id14881 . -1) (undo-tree-id14882 . -1) (#("y" 0 1 (fontified t)) . -65733) (undo-tree-id14883 . -1) (undo-tree-id14884 . -1) (#(" " 0 1 (fontified t)) . -65734) (undo-tree-id14885 . -1) (undo-tree-id14886 . -1) (#("i" 0 1 (fontified t)) . -65735) (undo-tree-id14887 . -1) (undo-tree-id14888 . -1) (#("s" 0 1 (fontified t)) . -65736) (undo-tree-id14889 . -1) (undo-tree-id14890 . -1) (#(" " 0 1 (fontified t)) . -65737) (undo-tree-id14891 . -1) 65738 (65731 . 65738) (65710 . 65731) (#("," 0 1 (fontified t)) . -65710) (undo-tree-id14892 . -1) (undo-tree-id14893 . -1) (#(" " 0 1 (fontified t)) . -65711) (undo-tree-id14894 . -1) (undo-tree-id14895 . -1) (#("t" 0 1 (fontified t)) . -65712) (undo-tree-id14896 . -1) (undo-tree-id14897 . -1) (#("h" 0 1 (fontified t)) . -65713) (undo-tree-id14898 . -1) (undo-tree-id14899 . -1) (#("e" 0 1 (fontified t)) . -65714) (undo-tree-id14900 . -1) (undo-tree-id14901 . -1) (#(" " 0 1 (fontified t)) . -65715) (undo-tree-id14902 . -1) (undo-tree-id14903 . -1) (#("d" 0 1 (fontified t)) . -65716) (undo-tree-id14904 . -1) (undo-tree-id14905 . -1) (#("o" 0 1 (fontified t)) . -65717) (undo-tree-id14906 . -1) (undo-tree-id14907 . -1) (#("m" 0 1 (fontified t)) . -65718) (undo-tree-id14908 . -1) (undo-tree-id14909 . -1) (#(" " 0 1 (fontified t)) . -65719) (undo-tree-id14910 . -1) 65720 (65716 . 65720) (65695 . 65716) (#("w" 0 1 (fontified t)) . -65695) (undo-tree-id14911 . -1) (undo-tree-id14912 . -1) (#("e" 0 1 (fontified t)) . -65696) (undo-tree-id14913 . -1) (undo-tree-id14914 . -1) 65697 (65695 . 65697) (65692 . 65695) (#("2" 0 1 (fontified t)) . -65692) (undo-tree-id14915 . -1) 65693 (65692 . 65693) (65691 . 65692) (65685 . 65691) (#("e" 0 1 (fontified t)) . -65685) (undo-tree-id14916 . -1) 65686 (65674 . 65686) (#(" " 0 1 (fontified t)) . -65674) (undo-tree-id14917 . -1) (#("s" 0 1 (fontified t)) . -65675) (undo-tree-id14918 . -1) 65676 (65667 . 65676) (#("d" 0 1 (fontified t)) . -65667) (undo-tree-id14919 . -1) (#("o" 0 1 (fontified t)) . -65668) (undo-tree-id14920 . -1) (#("n" 0 1 (fontified t)) . -65669) (undo-tree-id14921 . -1) (#("t" 0 1 (fontified t)) . -65670) (undo-tree-id14922 . -1) (#("e" 0 1 (fontified t)) . -65671) (undo-tree-id14923 . -1) (#("n" 0 1 (fontified t)) . -65672) (undo-tree-id14924 . -1) (#("t" 0 1 (fontified t)) . -65673) (undo-tree-id14925 . -1) (#("s" 0 1 (fontified t)) . -65674) (undo-tree-id14926 . -1) (#(" " 0 1 (fontified t)) . -65675) (undo-tree-id14927 . -1) 65676 (65666 . 65676) (65656 . 65666) (#(" " 0 1 (fontified t)) . -65656) (undo-tree-id14928 . -1) 65657 (65655 . 65657) (65634 . 65655) (#("n" 0 1 (fontified t)) . -65634) (undo-tree-id14929 . -1) 65635 (65617 . 65635) (#(" " 0 1 (fontified t)) . -65617) (undo-tree-id14930 . -1) 65618 (65617 . 65618) (#("t" 0 1 (fontified t)) . -65617) (undo-tree-id14931 . -1) (undo-tree-id14932 . -1) (#(" " 0 1 (fontified t)) . -65618) (undo-tree-id14933 . -1) (undo-tree-id14934 . -1) (#("i" 0 1 (fontified t)) . -65619) (undo-tree-id14935 . -1) (undo-tree-id14936 . -1) (#("t" 0 1 (fontified t)) . -65620) (undo-tree-id14937 . -1) (undo-tree-id14938 . -1) (#("s" 0 1 (fontified t)) . -65621) (undo-tree-id14939 . -1) (undo-tree-id14940 . -1) (#("e" 0 1 (fontified t)) . -65622) (undo-tree-id14941 . -1) (undo-tree-id14942 . -1) (#("l" 0 1 (fontified t)) . -65623) (undo-tree-id14943 . -1) (undo-tree-id14944 . -1) (#("f" 0 1 (fontified t)) . -65624) (undo-tree-id14945 . -1) (undo-tree-id14946 . -1) (#(" " 0 1 (fontified t)) . -65625) (undo-tree-id14947 . -1) (undo-tree-id14948 . -1) (#("i" 0 1 (fontified t)) . -65626) (undo-tree-id14949 . -1) (undo-tree-id14950 . -1) (#("s" 0 1 (fontified t)) . -65627) (undo-tree-id14951 . -1) (undo-tree-id14952 . -1) (#(" " 0 1 (fontified t)) . -65628) (undo-tree-id14953 . -1) 65629 (65627 . 65629) (65606 . 65627) (65603 . 65606) (65599 . 65603) 65598) nil (25725 48022 61784 115000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . 65600) (undo-tree-id14853 . -2) (undo-tree-id14854 . -2) (undo-tree-id14855 . -2) (undo-tree-id14856 . -2) 65602) nil (25725 48022 61584 435000) 0 nil])
([nil nil ((nil rear-nonsticky nil 65958 . 65959) (nil fontified nil 65958 . 65959) (nil fontified nil 65957 . 65958) (nil fontified nil 65949 . 65957) (nil fontified nil 65948 . 65949) (nil fontified nil 65920 . 65948) (nil fontified nil 65919 . 65920) (nil fontified nil 65913 . 65919) (65913 . 65959) (#("j" 0 1 (fontified t)) . -65913) (undo-tree-id14983 . -1) 65914 (65913 . 65914) (65908 . 65913) (t 25725 48022 172150 420000) 65859) nil (25725 48081 593111 768000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -65949) (undo-tree-id14982 . -4) 65953 (65948 . 65953) 65909) nil (25725 48081 592876 817000) 0 nil])
([nil nil ((nil rear-nonsticky nil 66441 . 66442) (nil fontified nil 65949 . 66442) (65949 . 66442)) nil (25725 48081 592868 296000) 0 nil])
([nil nil ((#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 65938) (undo-tree-id14980 . -4) (undo-tree-id14981 . -2) 65940) nil (25725 48088 920555 779000) 0 nil])
([nil nil ((nil rear-nonsticky nil 65947 . 65948) (nil fontified nil 65938 . 65948) (65938 . 65948)) nil (25725 48118 570248 239000) 0 nil] [nil nil ((nil rear-nonsticky nil 65948 . 65949) (nil fontified nil 65939 . 65949) (65939 . 65949) 65938) ((#("agment to " 0 9 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 9 10 (fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 65939) (undo-tree-id14988 . -9) (undo-tree-id14989 . -8) (undo-tree-id14990 . -8) (undo-tree-id14991 . -8) (nil rear-nonsticky t 65948 . 65949)) (25725 48088 918685 814000) 0 nil] [nil nil ((nil rear-nonsticky nil 65942 . 65943) (nil fontified nil 65938 . 65943) (65938 . 65943) 65937) ((#("enter" 0 4 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 4 5 (fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 65938) (undo-tree-id14984 . -4) (undo-tree-id14985 . -4) (undo-tree-id14986 . -4) (undo-tree-id14987 . -4) (nil rear-nonsticky t 65942 . 65943)) (25725 48081 592829 813000) 0 nil])
([nil nil ((65952 . 65956) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -65952) (undo-tree-id15002 . -1) 65953 (65938 . 65953)) nil (25725 48118 570240 207000) 0 nil])
nil
nil
([nil nil ((#("h" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -65971) (undo-tree-id14994 . -1) (#("h" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -65972) (undo-tree-id14995 . -1) 65973 (65971 . 65973) (#("
" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -65971) (undo-tree-id14996 . -1) (undo-tree-id14997 . -1) (#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -65972) (undo-tree-id14998 . -1) (#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -65973) (undo-tree-id14999 . -1) (#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -65974) (undo-tree-id15000 . -1) (#(" " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -65975) (undo-tree-id15001 . -1) 65976 (65971 . 65976) 65966) nil (25725 48118 570219 673000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -65974) (undo-tree-id14993 . -1) 65975 (65966 . 65975)) nil (25725 48118 569437 18000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -65980) (undo-tree-id14992 . -4) 65984 (65979 . 65984) 65973) nil (25725 48118 569421 722000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -65909) (undo-tree-id15079 . -4) 65913 (65908 . 65913) (t 25725 48118 694419 875000) 65859) nil (25725 48323 60378 496000) 0 nil])
([nil nil ((nil rear-nonsticky nil 66936 . 66937) (nil fontified nil 66936 . 66937) (nil fontified nil 66935 . 66936) (nil fontified nil 66927 . 66935) (nil fontified nil 66926 . 66927) (nil fontified nil 66898 . 66926) (nil fontified nil 66897 . 66898) (nil fontified nil 66891 . 66897) (66891 . 66937) (66890 . 66891) (66889 . 66890) (66874 . 66889) (#("a" 0 1 (fontified t)) . -66874) (undo-tree-id15025 . -1) (#(" " 0 1 (fontified t)) . -66875) (undo-tree-id15026 . -1) 66876 (66864 . 66876) (66843 . 66864) (#("i" 0 1 (fontified t)) . -66843) (undo-tree-id15027 . -1) (undo-tree-id15028 . -1) (#("s" 0 1 (fontified t)) . -66844) (undo-tree-id15029 . -1) (undo-tree-id15030 . -1) (#(" " 0 1 (fontified t)) . -66845) (undo-tree-id15031 . -1) 66846 (66837 . 66846) (#("n" 0 1 (fontified t)) . -66837) (undo-tree-id15032 . -1) (undo-tree-id15033 . -1) (#(" " 0 1 (fontified t)) . -66838) (undo-tree-id15034 . -1) 66839 (66822 . 66839) (66821 . 66822) (66811 . 66821) (66795 . 66811) (66793 . 66795) (66772 . 66793) (#("d" 0 1 (fontified t)) . -66772) (undo-tree-id15035 . -1) (undo-tree-id15036 . -1) 66773 (66757 . 66773) (66753 . 66757) (66740 . 66753) (66729 . 66740) (66724 . 66729) (66717 . 66724) (#("n" 0 1 (fontified t)) . -66717) (undo-tree-id15037 . -1) 66718 (66716 . 66718) (#("o" 0 1 (fontified t)) . -66716) (undo-tree-id15038 . -1) 66717 (66716 . 66717) (#("o" 0 1 (fontified t)) . -66716) (undo-tree-id15039 . -1) (#("n" 0 1 (fontified t)) . -66717) (undo-tree-id15040 . -1) (#(" " 0 1 (fontified t)) . -66718) (undo-tree-id15041 . -1) 66719 (66702 . 66719) (#("h" 0 1 (fontified nil)) . 66702) (undo-tree-id15042 . -1) (undo-tree-id15043 . -1) (66698 . 66702) 66699 (66683 . 66699) (66678 . 66683) (#("m" 0 1 (fontified t)) . -66678) (undo-tree-id15044 . -1) (undo-tree-id15045 . -1) (#("g" 0 1 (fontified t)) . -66679) (undo-tree-id15046 . -1) 66680 (66669 . 66680) (66654 . 66669) (66653 . 66654) (66651 . 66653) (66640 . 66651) (66623 . 66640) (#("o" 0 1 (fontified t)) . -66623) (undo-tree-id15047 . -1) (#("d" 0 1 (fontified t)) . -66624) (undo-tree-id15048 . -1) 66625 (66612 . 66625) (#("e" 0 1 (fontified t)) . -66612) (undo-tree-id15049 . -1) (undo-tree-id15050 . -1) (#("r" 0 1 (fontified t)) . -66613) (undo-tree-id15051 . -1) 66614 (66598 . 66614) (66577 . 66598) (66575 . 66577) (#("v" 0 1 (fontified t)) . -66575) (undo-tree-id15052 . -1) (undo-tree-id15053 . -1) (#("e" 0 1 (fontified t)) . -66576) (undo-tree-id15054 . -1) (undo-tree-id15055 . -1) 66577 (66569 . 66577) (66548 . 66569) (#(" " 0 1 (fontified t)) . -66548) (undo-tree-id15056 . -1) 66549 (66548 . 66549) (#("n" 0 1 (fontified t)) . -66548) (undo-tree-id15057 . -1) (undo-tree-id15058 . -1) (#("o" 0 1 (fontified t)) . -66549) (undo-tree-id15059 . -1) (undo-tree-id15060 . -1) (#("r" 0 1 (fontified t)) . -66550) (undo-tree-id15061 . -1) (undo-tree-id15062 . -1) (#("m" 0 1 (fontified t)) . -66551) (undo-tree-id15063 . -1) (undo-tree-id15064 . -1) (#("a" 0 1 (fontified t)) . -66552) (undo-tree-id15065 . -1) (undo-tree-id15066 . -1) (#("l" 0 1 (fontified t)) . -66553) (undo-tree-id15067 . -1) (undo-tree-id15068 . -1) (#(" " 0 1 (fontified t)) . -66554) (undo-tree-id15069 . -1) (undo-tree-id15070 . -1) (#("d" 0 1 (fontified t)) . -66555) (undo-tree-id15071 . -1) (undo-tree-id15072 . -1) (#("o" 0 1 (fontified t)) . -66556) (undo-tree-id15073 . -1) (undo-tree-id15074 . -1) (#("m" 0 1 (fontified t)) . -66557) (undo-tree-id15075 . -1) (undo-tree-id15076 . -1) (#(" " 0 1 (fontified t)) . -66558) (undo-tree-id15077 . -1) (#("i" 0 1 (fontified t)) . -66559) (undo-tree-id15078 . -1) 66560 (66558 . 66560) (66537 . 66558) (66532 . 66537) 66487) nil (25725 48323 60346 159000) 0 nil])
([nil nil ((66926 . 66927) 66891) nil (25725 48323 60121 615000) 0 nil])
([nil nil ((nil rear-nonsticky nil 67522 . 67523) (nil fontified nil 66927 . 67523) (66927 . 67523)) nil (25725 48323 60117 285000) 0 nil])
([nil nil ((#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -66940) (undo-tree-id15007 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -66941) (undo-tree-id15008 . -1) 66942 (66940 . 66942) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -66940) (undo-tree-id15009 . -1) (#("k" 0 1 (font-lock-fontified t fontified nil font-lock-multiline t face org-block-begin-line)) . -66941) 66942 (66941 . 66942) (66940 . 66941) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -66940) (undo-tree-id15010 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -66941) (undo-tree-id15011 . -1) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -66942) (undo-tree-id15012 . -1) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -66943) (undo-tree-id15013 . -1) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -66944) (undo-tree-id15014 . -1) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -66945) (undo-tree-id15015 . -1) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -66946) (undo-tree-id15016 . -1) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -66947) (undo-tree-id15017 . -1) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -66948) (undo-tree-id15018 . -1) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -66949) (undo-tree-id15019 . -1) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -66950) (undo-tree-id15020 . -1) 66951 (66940 . 66951) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -66940) (undo-tree-id15021 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -66941) (undo-tree-id15022 . -1) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -66942) (undo-tree-id15023 . -1) 66943 (66937 . 66943) (66916 . 66937) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 66916) (undo-tree-id15024 . -4)) nil (25725 48323 60101 780000) 0 nil])
([nil nil ((67553 . 67556)) nil (25725 48323 60051 75000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -67553) (undo-tree-id15003 . -1) (undo-tree-id15004 . -1) (#("x" 0 1 (fontified t)) . -67554) (undo-tree-id15005 . -1) (#("l" 0 1 (fontified t)) . -67555) (undo-tree-id15006 . -1) 67556) nil (25725 48323 60038 363000) 0 nil])
([nil nil ((67617 . 67625) (67603 . 67617) (#("s" 0 1 (fontified t)) . -67603) (undo-tree-id15084 . -1) (#("a" 0 1 (fontified t)) . -67604) (undo-tree-id15085 . -1) (#("i" 0 1 (fontified t)) . -67605) (undo-tree-id15086 . -1) 67606 (67595 . 67606) (67574 . 67595) (67553 . 67574) (t 25725 48323 170825 956000)) nil (25725 48364 577622 82000) 0 nil])
([nil nil ((nil rear-nonsticky nil 67671 . 67672) (nil fontified nil 67671 . 67672) (nil fontified nil 67670 . 67671) (nil fontified nil 67662 . 67670) (nil fontified nil 67661 . 67662) (nil fontified nil 67633 . 67661) (nil fontified nil 67632 . 67633) (nil fontified nil 67626 . 67632) (67626 . 67672) (67625 . 67626) 67624) nil (25725 48364 577106 17000) 0 nil])
([nil nil ((#("enter." 0 6 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 67651) (undo-tree-id15080 . -5) (undo-tree-id15081 . -5) (undo-tree-id15082 . -5) (undo-tree-id15083 . -5) 67656) nil (25725 48364 577096 449000) 0 nil])
([nil nil ((67651 . 67661)) nil (25725 48364 577070 188000) 0 nil])
([nil nil ((67665 . 67666) 67660) nil (25725 48364 577065 928000) 0 nil])
([nil nil ((nil rear-nonsticky nil 68325 . 68326) (nil fontified nil 67666 . 68326) (67666 . 68326)) nil (25725 48364 577053 77000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -68337) (undo-tree-id15545 . -1) (#("k" 0 1 (fontified t)) . -68338) (undo-tree-id15546 . -1) 68339 (68337 . 68339) (#("j" 0 1 (fontified t)) . -68337) (undo-tree-id15547 . -1) (#("k" 0 1 (fontified t)) . -68338) (undo-tree-id15548 . -1) (#("j" 0 1 (fontified t)) . -68339) (undo-tree-id15549 . -1) 68340 (68337 . 68340) (#("j" 0 1 (fontified t)) . -68337) (undo-tree-id15550 . -1) (#("k" 0 1 (fontified t)) . -68338) (undo-tree-id15551 . -1) 68339 (68337 . 68339) (#("j" 0 1 (fontified t)) . -68337) (undo-tree-id15552 . -1) (#("k" 0 1 (fontified t)) . -68338) (undo-tree-id15553 . -1) (#("j" 0 1 (fontified t)) . -68339) (undo-tree-id15554 . -1) (#("j" 0 1 (fontified t)) . -68340) (undo-tree-id15555 . -1) 68341 (68337 . 68341) (t 25725 48364 755668 715000)) nil (25725 48395 65956 438000) 0 nil])
([nil nil ((68403 . 68408) 68338) nil (25725 48395 65927 803000) 0 nil])
([nil nil ((68408 . 68409)) nil (25725 48395 65923 53000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -68408) (undo-tree-id15087 . -1) (undo-tree-id15088 . -1) (undo-tree-id15089 . -1) (undo-tree-id15090 . -1) (undo-tree-id15091 . -1) (undo-tree-id15092 . -1) (undo-tree-id15093 . -1) (undo-tree-id15094 . -1) (undo-tree-id15095 . -1) (undo-tree-id15096 . -1) (undo-tree-id15097 . -1) (undo-tree-id15098 . -1) (undo-tree-id15099 . -1) (undo-tree-id15100 . -1) (undo-tree-id15101 . -1) (undo-tree-id15102 . -1) (undo-tree-id15103 . -1) (undo-tree-id15104 . -1) (undo-tree-id15105 . -1) (undo-tree-id15106 . -1) (undo-tree-id15107 . -1) (undo-tree-id15108 . -1) (undo-tree-id15109 . -1) (undo-tree-id15110 . -1) (undo-tree-id15111 . -1) (undo-tree-id15112 . -1) (undo-tree-id15113 . -1) (undo-tree-id15114 . -1) (undo-tree-id15115 . -1) (undo-tree-id15116 . -1) (undo-tree-id15117 . -1) (undo-tree-id15118 . -1) (undo-tree-id15119 . -1) (undo-tree-id15120 . -1) (undo-tree-id15121 . -1) (undo-tree-id15122 . -1) (undo-tree-id15123 . -1) (undo-tree-id15124 . -1) (undo-tree-id15125 . -1) (undo-tree-id15126 . -1) (undo-tree-id15127 . -1) (undo-tree-id15128 . -1) (undo-tree-id15129 . -1) (undo-tree-id15130 . -1) (undo-tree-id15131 . -1) (undo-tree-id15132 . -1) (undo-tree-id15133 . -1) (undo-tree-id15134 . -1) (undo-tree-id15135 . -1) (undo-tree-id15136 . -1) (undo-tree-id15137 . -1) (undo-tree-id15138 . -1) (undo-tree-id15139 . -1) (undo-tree-id15140 . -1) (undo-tree-id15141 . -1) (undo-tree-id15142 . -1) (undo-tree-id15143 . -1) (undo-tree-id15144 . -1) (undo-tree-id15145 . -1) (undo-tree-id15146 . -1) (undo-tree-id15147 . -1) (undo-tree-id15148 . -1) (undo-tree-id15149 . -1) (undo-tree-id15150 . -1) (undo-tree-id15151 . -1) (undo-tree-id15152 . -1) (undo-tree-id15153 . -1) (undo-tree-id15154 . -1) (undo-tree-id15155 . -1) (undo-tree-id15156 . -1) (undo-tree-id15157 . -1) (undo-tree-id15158 . -1) (undo-tree-id15159 . -1) (undo-tree-id15160 . -1) (undo-tree-id15161 . -1) (undo-tree-id15162 . -1) (undo-tree-id15163 . -1) (undo-tree-id15164 . -1) (undo-tree-id15165 . -1) (undo-tree-id15166 . -1) (undo-tree-id15167 . -1) (undo-tree-id15168 . -1) (undo-tree-id15169 . -1) (undo-tree-id15170 . -1) (undo-tree-id15171 . -1) (undo-tree-id15172 . -1) (undo-tree-id15173 . -1) (undo-tree-id15174 . -1) (undo-tree-id15175 . -1) (undo-tree-id15176 . -1) (undo-tree-id15177 . -1) (undo-tree-id15178 . -1) (undo-tree-id15179 . -1) (undo-tree-id15180 . -1) (undo-tree-id15181 . -1) (undo-tree-id15182 . -1) (undo-tree-id15183 . -1) (undo-tree-id15184 . -1) (undo-tree-id15185 . -1) (undo-tree-id15186 . -1) (undo-tree-id15187 . -1) (undo-tree-id15188 . -1) (undo-tree-id15189 . -1) (undo-tree-id15190 . -1) (undo-tree-id15191 . -1) (undo-tree-id15192 . -1) (undo-tree-id15193 . -1) (undo-tree-id15194 . -1) (undo-tree-id15195 . -1) (undo-tree-id15196 . -1) (undo-tree-id15197 . -1) (undo-tree-id15198 . -1) (undo-tree-id15199 . -1) (undo-tree-id15200 . -1) (undo-tree-id15201 . -1) (undo-tree-id15202 . -1) (undo-tree-id15203 . -1) (undo-tree-id15204 . -1) (undo-tree-id15205 . -1) (undo-tree-id15206 . -1) (undo-tree-id15207 . -1) (undo-tree-id15208 . -1) (undo-tree-id15209 . -1) (undo-tree-id15210 . -1) (undo-tree-id15211 . -1) (undo-tree-id15212 . -1) (undo-tree-id15213 . -1) (undo-tree-id15214 . -1) (undo-tree-id15215 . -1) (undo-tree-id15216 . -1) (undo-tree-id15217 . -1) (undo-tree-id15218 . -1) (undo-tree-id15219 . -1) (undo-tree-id15220 . -1) (undo-tree-id15221 . -1) (undo-tree-id15222 . -1) (undo-tree-id15223 . -1) (undo-tree-id15224 . -1) (undo-tree-id15225 . -1) (undo-tree-id15226 . -1) (undo-tree-id15227 . -1) (undo-tree-id15228 . -1) (undo-tree-id15229 . -1) (undo-tree-id15230 . -1) (undo-tree-id15231 . -1) (undo-tree-id15232 . -1) (undo-tree-id15233 . -1) (undo-tree-id15234 . -1) (undo-tree-id15235 . -1) (undo-tree-id15236 . -1) (undo-tree-id15237 . -1) (undo-tree-id15238 . -1) (undo-tree-id15239 . -1) (undo-tree-id15240 . -1) (undo-tree-id15241 . -1) (undo-tree-id15242 . -1) (undo-tree-id15243 . -1) (undo-tree-id15244 . -1) (undo-tree-id15245 . -1) (undo-tree-id15246 . -1) (undo-tree-id15247 . -1) (undo-tree-id15248 . -1) (undo-tree-id15249 . -1) (undo-tree-id15250 . -1) (undo-tree-id15251 . -1) (undo-tree-id15252 . -1) (undo-tree-id15253 . -1) (undo-tree-id15254 . -1) (undo-tree-id15255 . -1) (undo-tree-id15256 . -1) (undo-tree-id15257 . -1) (undo-tree-id15258 . -1) (undo-tree-id15259 . -1) (undo-tree-id15260 . -1) (undo-tree-id15261 . -1) (undo-tree-id15262 . -1) (undo-tree-id15263 . -1) (undo-tree-id15264 . -1) (undo-tree-id15265 . -1) (undo-tree-id15266 . -1) (undo-tree-id15267 . -1) (undo-tree-id15268 . -1) (undo-tree-id15269 . -1) (undo-tree-id15270 . -1) (undo-tree-id15271 . -1) (undo-tree-id15272 . -1) (undo-tree-id15273 . -1) (undo-tree-id15274 . -1) (undo-tree-id15275 . -1) (undo-tree-id15276 . -1) (undo-tree-id15277 . -1) (undo-tree-id15278 . -1) (undo-tree-id15279 . -1) (undo-tree-id15280 . -1) (undo-tree-id15281 . -1) (undo-tree-id15282 . -1) (undo-tree-id15283 . -1) (undo-tree-id15284 . -1) (undo-tree-id15285 . -1) (undo-tree-id15286 . -1) (undo-tree-id15287 . -1) (undo-tree-id15288 . -1) (undo-tree-id15289 . -1) (undo-tree-id15290 . -1) (undo-tree-id15291 . -1) (undo-tree-id15292 . -1) (undo-tree-id15293 . -1) (undo-tree-id15294 . -1) (undo-tree-id15295 . -1) (undo-tree-id15296 . -1) (undo-tree-id15297 . -1) (undo-tree-id15298 . -1) (undo-tree-id15299 . -1) (undo-tree-id15300 . -1) (undo-tree-id15301 . -1) (undo-tree-id15302 . -1) (undo-tree-id15303 . -1) (undo-tree-id15304 . -1) (undo-tree-id15305 . -1) (undo-tree-id15306 . -1) (undo-tree-id15307 . -1) (undo-tree-id15308 . -1) (undo-tree-id15309 . -1) (undo-tree-id15310 . -1) (undo-tree-id15311 . -1) (undo-tree-id15312 . -1) (undo-tree-id15313 . -1) (undo-tree-id15314 . -1) (undo-tree-id15315 . -1) (undo-tree-id15316 . -1) (undo-tree-id15317 . -1) (undo-tree-id15318 . -1) (undo-tree-id15319 . -1) (undo-tree-id15320 . -1) (undo-tree-id15321 . -1) (undo-tree-id15322 . -1) (undo-tree-id15323 . -1) (undo-tree-id15324 . -1) (undo-tree-id15325 . -1) (undo-tree-id15326 . -1) (undo-tree-id15327 . -1) (undo-tree-id15328 . -1) (undo-tree-id15329 . -1) (undo-tree-id15330 . -1) (undo-tree-id15331 . -1) (undo-tree-id15332 . -1) (undo-tree-id15333 . -1) (undo-tree-id15334 . -1) (undo-tree-id15335 . -1) (undo-tree-id15336 . -1) (undo-tree-id15337 . -1) (undo-tree-id15338 . -1) (undo-tree-id15339 . -1) (undo-tree-id15340 . -1) (undo-tree-id15341 . -1) (undo-tree-id15342 . -1) (undo-tree-id15343 . -1) (undo-tree-id15344 . -1) (undo-tree-id15345 . -1) (undo-tree-id15346 . -1) (undo-tree-id15347 . -1) (undo-tree-id15348 . -1) (undo-tree-id15349 . -1) (undo-tree-id15350 . -1) (undo-tree-id15351 . -1) (undo-tree-id15352 . -1) (undo-tree-id15353 . -1) (undo-tree-id15354 . -1) (undo-tree-id15355 . -1) (undo-tree-id15356 . -1) (undo-tree-id15357 . -1) (undo-tree-id15358 . -1) (undo-tree-id15359 . -1) (undo-tree-id15360 . -1) (undo-tree-id15361 . -1) (undo-tree-id15362 . -1) (undo-tree-id15363 . -1) (undo-tree-id15364 . -1) (undo-tree-id15365 . -1) (undo-tree-id15366 . -1) (undo-tree-id15367 . -1) (undo-tree-id15368 . -1) (undo-tree-id15369 . -1) (undo-tree-id15370 . -1) (undo-tree-id15371 . -1) (undo-tree-id15372 . -1) (undo-tree-id15373 . -1) (undo-tree-id15374 . -1) (undo-tree-id15375 . -1) (undo-tree-id15376 . -1) (undo-tree-id15377 . -1) (undo-tree-id15378 . -1) (undo-tree-id15379 . -1) (undo-tree-id15380 . -1) (undo-tree-id15381 . -1) (undo-tree-id15382 . -1) (undo-tree-id15383 . -1) (undo-tree-id15384 . -1) (undo-tree-id15385 . -1) (undo-tree-id15386 . -1) (undo-tree-id15387 . -1) (undo-tree-id15388 . -1) (undo-tree-id15389 . -1) (undo-tree-id15390 . -1) (undo-tree-id15391 . -1) (undo-tree-id15392 . -1) (undo-tree-id15393 . -1) (undo-tree-id15394 . -1) (undo-tree-id15395 . -1) (undo-tree-id15396 . -1) (undo-tree-id15397 . -1) (undo-tree-id15398 . -1) (undo-tree-id15399 . -1) (undo-tree-id15400 . -1) (undo-tree-id15401 . -1) (undo-tree-id15402 . -1) (undo-tree-id15403 . -1) (undo-tree-id15404 . -1) (undo-tree-id15405 . -1) (undo-tree-id15406 . -1) (undo-tree-id15407 . -1) (undo-tree-id15408 . -1) (undo-tree-id15409 . -1) (undo-tree-id15410 . -1) (undo-tree-id15411 . -1) (undo-tree-id15412 . -1) (undo-tree-id15413 . -1) (undo-tree-id15414 . -1) (undo-tree-id15415 . -1) (undo-tree-id15416 . -1) (undo-tree-id15417 . -1) (undo-tree-id15418 . -1) (undo-tree-id15419 . -1) (undo-tree-id15420 . -1) (undo-tree-id15421 . -1) (undo-tree-id15422 . -1) (undo-tree-id15423 . -1) (undo-tree-id15424 . -1) (undo-tree-id15425 . -1) (undo-tree-id15426 . -1) (undo-tree-id15427 . -1) (undo-tree-id15428 . -1) (undo-tree-id15429 . -1) (undo-tree-id15430 . -1) (undo-tree-id15431 . -1) (undo-tree-id15432 . -1) (undo-tree-id15433 . -1) (undo-tree-id15434 . -1) (undo-tree-id15435 . -1) (undo-tree-id15436 . -1) (undo-tree-id15437 . -1) (undo-tree-id15438 . -1) (undo-tree-id15439 . -1) (undo-tree-id15440 . -1) (undo-tree-id15441 . -1) (undo-tree-id15442 . -1) (undo-tree-id15443 . -1) (undo-tree-id15444 . -1) (undo-tree-id15445 . -1) (undo-tree-id15446 . -1) (undo-tree-id15447 . -1) (undo-tree-id15448 . -1) (undo-tree-id15449 . -1) (undo-tree-id15450 . -1) (undo-tree-id15451 . -1) (undo-tree-id15452 . -1) (undo-tree-id15453 . -1) (undo-tree-id15454 . -1) (undo-tree-id15455 . -1) (undo-tree-id15456 . -1) (undo-tree-id15457 . -1) (undo-tree-id15458 . -1) (undo-tree-id15459 . -1) (undo-tree-id15460 . -1) (undo-tree-id15461 . -1) (undo-tree-id15462 . -1) (undo-tree-id15463 . -1) (undo-tree-id15464 . -1) (undo-tree-id15465 . -1) (undo-tree-id15466 . -1) (undo-tree-id15467 . -1) (undo-tree-id15468 . -1) (undo-tree-id15469 . -1) (undo-tree-id15470 . -1) (undo-tree-id15471 . -1) (undo-tree-id15472 . -1) (undo-tree-id15473 . -1) (undo-tree-id15474 . -1) (undo-tree-id15475 . -1) (undo-tree-id15476 . -1) (undo-tree-id15477 . -1) (undo-tree-id15478 . -1) (undo-tree-id15479 . -1) (undo-tree-id15480 . -1) (undo-tree-id15481 . -1) (undo-tree-id15482 . -1) (undo-tree-id15483 . -1) (undo-tree-id15484 . -1) (undo-tree-id15485 . -1) (undo-tree-id15486 . -1) (undo-tree-id15487 . -1) (undo-tree-id15488 . -1) (undo-tree-id15489 . -1) (undo-tree-id15490 . -1) (undo-tree-id15491 . -1) (undo-tree-id15492 . -1) (undo-tree-id15493 . -1) (undo-tree-id15494 . -1) (undo-tree-id15495 . -1) (undo-tree-id15496 . -1) (undo-tree-id15497 . -1) (undo-tree-id15498 . -1) (undo-tree-id15499 . -1) (undo-tree-id15500 . -1) (undo-tree-id15501 . -1) (undo-tree-id15502 . -1) (undo-tree-id15503 . -1) (undo-tree-id15504 . -1) (undo-tree-id15505 . -1) (undo-tree-id15506 . -1) (undo-tree-id15507 . -1) (undo-tree-id15508 . -1) (undo-tree-id15509 . -1) (undo-tree-id15510 . -1) (undo-tree-id15511 . -1) (undo-tree-id15512 . -1) (undo-tree-id15513 . -1) (undo-tree-id15514 . -1) (undo-tree-id15515 . -1) (undo-tree-id15516 . -1) (undo-tree-id15517 . -1) (undo-tree-id15518 . -1) (undo-tree-id15519 . -1) (undo-tree-id15520 . -1) (undo-tree-id15521 . -1) (undo-tree-id15522 . -1) (undo-tree-id15523 . -1) (undo-tree-id15524 . -1) (undo-tree-id15525 . -1) (undo-tree-id15526 . -1) (undo-tree-id15527 . -1) (undo-tree-id15528 . -1) (undo-tree-id15529 . -1) (undo-tree-id15530 . -1) (undo-tree-id15531 . -1) (undo-tree-id15532 . -1) (undo-tree-id15533 . -1) (undo-tree-id15534 . -1) (undo-tree-id15535 . -1) (undo-tree-id15536 . -1) (undo-tree-id15537 . -1) (undo-tree-id15538 . -1) (undo-tree-id15539 . -1) (undo-tree-id15540 . -1) (undo-tree-id15541 . -1) (undo-tree-id15542 . -1) (undo-tree-id15543 . -1) (undo-tree-id15544 . -1) 68409) nil (25725 48395 65870 951000) 0 nil])
([nil nil ((nil rear-nonsticky nil 68750 . 68751) (nil fontified nil 68408 . 68751) (68408 . 68751) 68407 (t 25725 48395 184275 897000)) nil (25725 48456 957109 903000) 0 nil])
([nil nil ((68751 . 68752) 68750) nil (25725 48456 957104 176000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 68404)) nil (25725 48456 957099 427000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 68404)) nil (25725 48456 957095 655000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 68404)) nil (25725 48456 957091 395000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 68404) (undo-tree-id15557 . -1)) nil (25725 48456 957086 576000) 0 nil])
([nil nil ((68748 . 68749)) nil (25725 48456 957076 937000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -68748) (undo-tree-id15556 . -1) 68749) nil (25725 48456 956994 943000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -68748) (undo-tree-id15568 . -1) (#("k" 0 1 (fontified t)) . -68749) (undo-tree-id15569 . -1) (#("k" 0 1 (fontified t)) . -68750) (undo-tree-id15570 . -1) 68751 (68748 . 68751) (#("j" 0 1 (fontified t)) . -68748) (undo-tree-id15571 . -1) (#("k" 0 1 (fontified t)) . -68749) (undo-tree-id15572 . -1) 68750 (68749 . 68750) (68748 . 68749) (#("j" 0 1 (fontified t)) . -68748) (undo-tree-id15573 . -1) (#("k" 0 1 (fontified t)) . -68749) (undo-tree-id15574 . -1) (#("j" 0 1 (fontified t)) . -68750) (undo-tree-id15575 . -1) 68751 (68748 . 68751) (t 25725 48457 73488 179000)) nil (25725 48499 877025 323000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -68749) (undo-tree-id15563 . -1) (#("d" 0 1 (fontified t)) . -68750) (undo-tree-id15564 . -1) 68751 (68749 . 68751) (#("
" 0 1 (fontified t)) . -68749) (undo-tree-id15565 . -1) (undo-tree-id15566 . -1) (#("k" 0 1 (fontified t)) . -68750) (undo-tree-id15567 . -1) 68751 (68750 . 68751) (68749 . 68750) 68749) nil (25725 48499 876994 802000) 0 nil])
([nil nil ((nil rear-nonsticky nil 68794 . 68795) (nil fontified nil 68794 . 68795) (nil fontified nil 68793 . 68794) (nil fontified nil 68785 . 68793) (nil fontified nil 68784 . 68785) (nil fontified nil 68756 . 68784) (nil fontified nil 68755 . 68756) (nil fontified nil 68749 . 68755) (68749 . 68795) (68748 . 68749) 68748) nil (25725 48499 876863 778000) 0 nil])
([nil nil ((#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -68791) (undo-tree-id15560 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -68792) (undo-tree-id15561 . -1) 68793 (68778 . 68793) (68774 . 68778) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 68774) (undo-tree-id15562 . -4)) nil (25725 48499 876852 882000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -68797) (undo-tree-id15558 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -68798) (undo-tree-id15559 . -1) 68799 (68797 . 68799) (68796 . 68797) 68790) nil (25725 48499 876836 539000) 0 nil])
([nil nil ((nil rear-nonsticky nil 69499 . 69500) (nil fontified nil 68797 . 69500) (68797 . 69500)) nil (25725 48499 876570 859000) 0 nil])
([nil nil ((69511 . 69512) 69511) nil (25725 48499 876356 373000) 0 nil])
([nil nil ((69684 . 69695) (#(" " 0 1 (fontified t)) . -69684) (undo-tree-id15586 . -1) (#("c" 0 1 (fontified t)) . -69685) (undo-tree-id15587 . -1) 69686 (69674 . 69686) (69653 . 69674) (69652 . 69653) (#("l" 0 1 (fontified t)) . -69652) (undo-tree-id15588 . -1) (#("e" 0 1 (fontified t)) . -69653) (undo-tree-id15589 . -1) (#("t" 0 1 (fontified t)) . -69654) (undo-tree-id15590 . -1) (#(" " 0 1 (fontified t)) . -69655) (undo-tree-id15591 . -1) 69656 (69652 . 69656) (69638 . 69652) (69630 . 69638) (#("k" 0 1 (fontified t)) . -69630) (undo-tree-id15592 . -1) (#(" " 0 1 (fontified t)) . -69631) (undo-tree-id15593 . -1) 69632 (69622 . 69632) (#("t" 0 1 (fontified t)) . -69622) (undo-tree-id15594 . -1) (undo-tree-id15595 . -1) (#("t" 0 1 (fontified t)) . -69623) (undo-tree-id15596 . -1) 69624 (69623 . 69624) (#("h" 0 1 (fontified t)) . -69623) (undo-tree-id15597 . -1) (undo-tree-id15598 . -1) 69624 (69613 . 69624) (69596 . 69613) (69590 . 69596) (#("s" 0 1 (fontified t)) . -69590) (undo-tree-id15599 . -1) (undo-tree-id15600 . -1) 69591 (69583 . 69591) (69578 . 69583) (t 25725 48499 990312 486000) 69546) nil (25725 48663 458645 181000) 0 nil])
([nil nil ((69695 . 69696) 69694) nil (25725 48663 458596 781000) 0 nil])
([nil nil ((nil rear-nonsticky nil 69741 . 69742) (nil fontified nil 69741 . 69742) (nil fontified nil 69740 . 69741) (nil fontified nil 69732 . 69740) (nil fontified nil 69731 . 69732) (nil fontified nil 69703 . 69731) (nil fontified nil 69702 . 69703) (nil fontified nil 69696 . 69702) (69696 . 69742)) nil (25725 48663 458591 473000) 0 nil])
([nil nil ((#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -69740) (undo-tree-id15576 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -69741) (undo-tree-id15577 . -1) 69742 (69740 . 69742) (#("j" 0 1 (font-lock-fontified t fontified nil font-lock-multiline t face org-block-begin-line)) . -69740) (undo-tree-id15578 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -69741) (undo-tree-id15579 . -1) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -69742) (undo-tree-id15580 . -1) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -69743) (undo-tree-id15581 . -1) 69744 (69723 . 69744) (#("l" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -69723) (undo-tree-id15582 . -1) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -69724) (undo-tree-id15583 . -1) 69725 (69721 . 69725) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 69721) (undo-tree-id15584 . -4) (undo-tree-id15585 . -1) 69722) nil (25725 48663 458565 72000) 0 nil])
([nil nil ((69745 . 69746) 69696) nil (25725 48663 458519 675000) 0 nil])
([nil nil ((nil rear-nonsticky nil 70265 . 70266) (nil fontified nil 69746 . 70266) (69746 . 70266)) nil (25725 48663 458507 313000) 0 nil])
([nil nil ((70351 . 70362) (#(" " 0 1 (fontified t)) . -70351) (undo-tree-id15626 . -1) (#("=" 0 1 (fontified t)) . -70352) (undo-tree-id15627 . -1) 70353 (70348 . 70353) (#("l" 0 1 (fontified t)) . -70348) (undo-tree-id15628 . -1) 70349 (70347 . 70349) (#("e" 0 1 (fontified t)) . -70347) (undo-tree-id15629 . -1) 70348 (70337 . 70348) (70316 . 70337) (70304 . 70316) (#("e" 0 1 (fontified t)) . -70304) (undo-tree-id15630 . -1) (#(" " 0 1 (fontified t)) . -70305) (undo-tree-id15631 . -1) (#("a" 0 1 (fontified t)) . -70306) (undo-tree-id15632 . -1) 70307 (70304 . 70307) (#("e" 0 1 (fontified nil)) . -70304) (undo-tree-id15633 . -1) (#(" " 0 1 (fontified t)) . -70305) (undo-tree-id15634 . -1) 70306 (70305 . 70306) (#(" " 0 1 (fontified t)) . -70305) (undo-tree-id15635 . -1) (#("a" 0 1 (fontified t)) . -70306) (undo-tree-id15636 . -1) 70307 (70303 . 70307) (#(" " 0 1 (fontified t)) . -70303) (undo-tree-id15637 . -1) (undo-tree-id15638 . -1) (#("e" 0 1 (fontified t)) . -70304) (undo-tree-id15639 . -1) (undo-tree-id15640 . -1) (#("a" 0 1 (fontified t)) . -70305) (undo-tree-id15641 . -1) (undo-tree-id15642 . -1) 70306 (70298 . 70306) (#("e" 0 1 (fontified t)) . -70298) (undo-tree-id15643 . -1) (undo-tree-id15644 . -1) (#("a" 0 1 (fontified t)) . -70299) (undo-tree-id15645 . -1) (undo-tree-id15646 . -1) 70300 (70298 . 70300) (70277 . 70298) (t 25725 48663 573351 84000)) nil (25725 48783 209859 364000) 0 nil])
([nil nil ((70431 . 70443) (70410 . 70431) (nil rear-nonsticky nil 70409 . 70410) (nil fontified nil 70409 . 70410) (nil fontified nil 70408 . 70409) (nil fontified nil 70400 . 70408) (nil fontified nil 70399 . 70400) (nil fontified nil 70371 . 70399) (nil fontified nil 70370 . 70371) (nil fontified nil 70364 . 70370) (70364 . 70410) (70363 . 70364) (70362 . 70363) 70361) nil (25725 48783 209793 14000) 0 nil])
([nil nil ((#("i#+BEGIN_SRC html :tangle enter.html
#+END_SRC
jkkkllllllllllllllllllllllllllciw
" 0 1 (fontified t) 1 7 (font-lock-fontified t fontified t) 7 8 (font-lock-fontified t fontified t) 8 36 (font-lock-fontified t fontified t) 36 37 (rear-nonsticky t font-lock-fontified t fontified t) 37 45 (font-lock-fontified t fontified t face org-meta-line) 45 46 (font-lock-fontified t fontified t face org-meta-line) 46 47 (fontified t rear-nonsticky t) 47 80 (fontified t) 80 81 (fontified t)) . 70363) (undo-tree-id15618 . -79) (undo-tree-id15619 . -80) (undo-tree-id15620 . 1) (undo-tree-id15621 . -47) (undo-tree-id15622 . -81) (undo-tree-id15623 . -79) (undo-tree-id15624 . -32) (undo-tree-id15625 . -79) 70442) nil (25725 48783 209780 233000) 0 nil])
([nil nil ((70362 . 70363) 70309) nil (25725 48783 209753 973000) 0 nil])
([nil nil ((70363 . 70364) 70363) nil (25725 48783 209746 849000) 0 nil])
([nil nil ((70364 . 70365) 70364) nil (25725 48783 209576 15000) 0 nil])
([nil nil ((70432 . 70444) (70411 . 70432) (nil rear-nonsticky nil 70410 . 70411) (nil fontified nil 70410 . 70411) (nil fontified nil 70409 . 70410) (nil fontified nil 70401 . 70409) (nil fontified nil 70400 . 70401) (nil fontified nil 70372 . 70400) (nil fontified nil 70371 . 70372) (nil fontified nil 70365 . 70371) (70365 . 70411) (70364 . 70365)) nil (25725 48783 209570 707000) 0 nil])
([nil nil ((#("i#+BEGIN_SRC html :tangle enter.html
#+END_SRC
jkkkllllllllllllllllllllllllllciw
" 0 1 (fontified t) 1 7 (font-lock-fontified t fontified t) 7 8 (font-lock-fontified t fontified t) 8 36 (font-lock-fontified t fontified t) 36 37 (rear-nonsticky t font-lock-fontified t fontified t) 37 45 (font-lock-fontified t fontified t face org-meta-line) 45 46 (font-lock-fontified t fontified t face org-meta-line) 46 47 (fontified t rear-nonsticky t) 47 80 (fontified t) 80 81 (fontified t)) . 70364) (undo-tree-id15610 . -79) (undo-tree-id15611 . -80) (undo-tree-id15612 . 1) (undo-tree-id15613 . -47) (undo-tree-id15614 . -81) (undo-tree-id15615 . -79) (undo-tree-id15616 . -32) (undo-tree-id15617 . -79) 70443) nil (25725 48783 209558 275000) 0 nil])
([nil nil ((70431 . 70443) (70410 . 70431) (nil rear-nonsticky nil 70409 . 70410) (nil fontified nil 70409 . 70410) (nil fontified nil 70408 . 70409) (nil fontified nil 70400 . 70408) (nil fontified nil 70399 . 70400) (nil fontified nil 70371 . 70399) (nil fontified nil 70370 . 70371) (nil fontified nil 70364 . 70370) (70364 . 70410) (70363 . 70364)) nil (25725 48783 209366 69000) 0 nil])
([nil nil ((#("jkkkllllllllllllllllllllllllllciw
" 0 33 (fontified t) 33 34 (fontified t)) . 70410) (undo-tree-id15604 . -34) (undo-tree-id15605 . -33) (undo-tree-id15606 . 1) (undo-tree-id15607 . -34) (undo-tree-id15608 . -31) (undo-tree-id15609 . -34) 70441) nil (25725 48783 209338 272000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 70363) (undo-tree-id15603 . -1)) nil (25725 48783 209223 382000) 0 nil])
([nil nil ((70388 . 70406) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 70388) (undo-tree-id15601 . -4) (undo-tree-id15602 . -3) 70391) nil (25725 48783 209216 258000) 0 nil])
([nil nil ((70411 . 70412) 70405) nil (25725 48783 209193 349000) 0 nil])
([nil nil ((nil rear-nonsticky nil 70928 . 70929) (nil fontified nil 70412 . 70929) (70412 . 70929)) nil (25725 48783 209179 591000) 0 nil])
([nil nil ((71015 . 71020) (t 25725 48783 323491 315000) 70941) nil (25725 48833 295560 635000) 0 nil])
([nil nil ((71020 . 71041)) nil (25725 48833 295556 305000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -71040) (undo-tree-id15653 . -1) 71041) nil (25725 48833 295551 975000) 0 nil])
([nil nil ((71040 . 71045)) nil (25725 48833 295544 781000) 0 nil])
([nil nil ((#("s" 0 1 (fontified nil)) . -71043) (undo-tree-id15650 . -1) (undo-tree-id15651 . -1) (#("e" 0 1 (fontified t)) . -71044) (undo-tree-id15652 . -1) 71045) nil (25725 48833 295539 54000) 0 nil])
([nil nil ((71043 . 71064)) nil (25725 48833 295356 766000) 0 nil])
([nil nil ((71064 . 71074)) nil (25725 48833 295352 506000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -71073) (undo-tree-id15649 . -1) 71074) nil (25725 48833 295347 687000) 0 nil])
([nil nil ((71078 . 71084) (71073 . 71078)) nil (25725 48833 295340 213000) 0 nil])
([nil nil ((71084 . 71085)) nil (25725 48833 295334 975000) 0 nil])
([nil nil ((71085 . 71086)) nil (25725 48833 295331 553000) 0 nil])
([nil nil ((71086 . 71087)) nil (25725 48833 295327 223000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -71086) (undo-tree-id15647 . -1) (undo-tree-id15648 . -1) 71087) nil (25725 48833 295315 769000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -71086) (undo-tree-id15654 . -1) (#("k" 0 1 (fontified t)) . -71087) (undo-tree-id15655 . -1) 71088 (71086 . 71088) (#("j" 0 1 (fontified t)) . -71086) (undo-tree-id15656 . -1) 71087 (71086 . 71087) (t 25725 48833 408369 545000)) nil (25725 48867 987798 945000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -71086) (undo-tree-id15657 . -1) 71087 (71086 . 71087) (t 25725 48868 100972 767000)) nil (25725 48961 464861 926000) 0 nil])
([nil nil ((71085 . 71086) (#("
" 0 1 (fontified t)) . -71085) (undo-tree-id15692 . -1) (undo-tree-id15693 . -1) (undo-tree-id15694 . -1) (undo-tree-id15695 . -1) (undo-tree-id15696 . -1) (undo-tree-id15697 . -1) (undo-tree-id15698 . -1) (undo-tree-id15699 . -1) 71086 (t 25725 48961 578579 578000)) nil (25725 49823 733342 714000) 0 nil])
([nil nil ((71154 . 71166) (71133 . 71154) (nil rear-nonsticky nil 71132 . 71133) (nil fontified nil 71132 . 71133) (nil fontified nil 71131 . 71132) (nil fontified nil 71123 . 71131) (nil fontified nil 71122 . 71123) (nil fontified nil 71094 . 71122) (nil fontified nil 71093 . 71094) (nil fontified nil 71087 . 71093) (71087 . 71133) (71086 . 71087) (#("a" 0 1 (fontified t)) . -71086) (undo-tree-id15671 . -1) (undo-tree-id15672 . -1) (#("c" 0 1 (fontified t)) . -71087) (undo-tree-id15673 . -1) (undo-tree-id15674 . -1) (#("c" 0 1 (fontified t)) . -71088) (undo-tree-id15675 . -1) (undo-tree-id15676 . -1) (#("e" 0 1 (fontified t)) . -71089) (undo-tree-id15677 . -1) (undo-tree-id15678 . -1) (#("s" 0 1 (fontified t)) . -71090) (undo-tree-id15679 . -1) (undo-tree-id15680 . -1) (#("s" 0 1 (fontified t)) . -71091) (undo-tree-id15681 . -1) (undo-tree-id15682 . -1) (#("i" 0 1 (fontified t)) . -71092) (undo-tree-id15683 . -1) (undo-tree-id15684 . -1) (#("n" 0 1 (fontified t)) . -71093) (undo-tree-id15685 . -1) (undo-tree-id15686 . -1) (#("g" 0 1 (fontified t)) . -71094) (undo-tree-id15687 . -1) (undo-tree-id15688 . -1) (#(" " 0 1 (fontified t)) . -71095) (undo-tree-id15689 . -1) (#("a" 0 1 (fontified t)) . -71096) (undo-tree-id15690 . -1) 71097 (71086 . 71097) (#("c" 0 1 (fontified t)) . -71086) (undo-tree-id15691 . -1) 71087 (71086 . 71087)) nil (25725 49823 733312 119000) 0 nil])
([nil nil ((#("jkkkllllllllllllllllllllllllllciw
" 0 33 (fontified t) 33 34 (fontified t)) . 71133) (undo-tree-id15667 . -33) (undo-tree-id15668 . 1) (undo-tree-id15669 . -32) (undo-tree-id15670 . -34) 71165) nil (25725 49823 733185 195000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 71086) (undo-tree-id15665 . -1) (undo-tree-id15666 . -1)) nil (25725 49823 733171 783000) 0 nil])
([nil nil ((71122 . 71136) (71120 . 71122) (#("a" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -71120) (undo-tree-id15660 . -1) (#("l" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -71121) (undo-tree-id15661 . -1) (#("l" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -71122) (undo-tree-id15662 . -1) 71123 (71111 . 71123) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 71111) (undo-tree-id15663 . -4) (undo-tree-id15664 . -2) 71113) nil (25725 49823 733160 747000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -71142) (undo-tree-id15658 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -71143) (undo-tree-id15659 . -1) 71144 (71142 . 71144) (71141 . 71142) 71135) nil (25725 49823 733138 324000) 0 nil])
([nil nil ((nil rear-nonsticky nil 71545 . 71546) (nil fontified nil 71142 . 71546) (71142 . 71546)) nil (25725 49823 732984 297000) 0 nil])
([nil nil ((71556 . 71557) 71547) nil (25725 49823 732970 955000) 0 nil])
([nil nil ((71624 . 71625) (71621 . 71624) (71600 . 71621) (#("i" 0 1 (fontified t)) . -71600) (undo-tree-id15733 . -1) (#("s" 0 1 (fontified t)) . -71601) (undo-tree-id15734 . -1) (#("n" 0 1 (fontified t)) . -71602) (undo-tree-id15735 . -1) (#("g" 0 1 (fontified t)) . -71603) (undo-tree-id15736 . -1) 71604 (71584 . 71604) (71574 . 71584) (#("p" 0 1 (fontified t)) . -71574) (undo-tree-id15737 . -1) (undo-tree-id15738 . -1) (#("a" 0 1 (fontified t)) . -71575) (undo-tree-id15739 . -1) (undo-tree-id15740 . -1) 71576 (71575 . 71576) (#("r" 0 1 (fontified t)) . -71575) (undo-tree-id15741 . -1) (undo-tree-id15742 . -1) (#("o" 0 1 (fontified t)) . -71576) (undo-tree-id15743 . -1) (undo-tree-id15744 . -1) (#("p" 0 1 (fontified t)) . -71577) (undo-tree-id15745 . -1) (undo-tree-id15746 . -1) (#("e" 0 1 (fontified t)) . -71578) (undo-tree-id15747 . -1) (undo-tree-id15748 . -1) (#("r" 0 1 (fontified t)) . -71579) (undo-tree-id15749 . -1) (undo-tree-id15750 . -1) (#("t" 0 1 (fontified t)) . -71580) (undo-tree-id15751 . -1) (undo-tree-id15752 . -1) 71581 (71578 . 71581) (71557 . 71578) (t 25725 49823 843047 246000)) nil (25725 49935 203663 243000) 0 nil])
([nil nil ((71625 . 71626) 71625) nil (25725 49935 203611 713000) 0 nil])
([nil nil ((nil rear-nonsticky nil 71670 . 71671) (nil fontified nil 71670 . 71671) (nil fontified nil 71669 . 71670) (nil fontified nil 71661 . 71669) (nil fontified nil 71660 . 71661) (nil fontified nil 71632 . 71660) (nil fontified nil 71631 . 71632) (nil fontified nil 71625 . 71631) (71625 . 71671)) nil (25725 49935 203606 964000) 0 nil])
([nil nil ((57489 . 57496) (57484 . 57489) (#("a" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -57484) (undo-tree-id15729 . -1) 57485 (57480 . 57485) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 57480) (undo-tree-id15730 . -4) (undo-tree-id15731 . -5) (undo-tree-id15732 . -4) 57484) nil (25725 49935 203598 376000) 0 nil])
([nil nil ((62055 . 62056) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -62055) (undo-tree-id15704 . -1) (undo-tree-id15705 . -1) (#("." 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -62056) (undo-tree-id15706 . -1) 62057 (62056 . 62057) (#("w" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -62056) (undo-tree-id15707 . -1) (#("i" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -62057) (undo-tree-id15708 . -1) 62058 (62043 . 62058) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -62043) (undo-tree-id15709 . -1) (undo-tree-id15710 . -1) (undo-tree-id15711 . -1) (undo-tree-id15712 . -1) 62044 (#("n" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -62044) (undo-tree-id15713 . -1) (undo-tree-id15714 . -1) (undo-tree-id15715 . -1) (undo-tree-id15716 . -1) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -62045) (undo-tree-id15717 . -1) (undo-tree-id15718 . -1) (undo-tree-id15719 . -1) (undo-tree-id15720 . -1) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -62046) (undo-tree-id15721 . -1) (undo-tree-id15722 . -1) (undo-tree-id15723 . -1) (undo-tree-id15724 . -1) (#("r" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -62047) (undo-tree-id15725 . -1) (undo-tree-id15726 . -1) (undo-tree-id15727 . -1) (undo-tree-id15728 . -1) 62048 (#("." 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 62048)) nil (25725 49935 203577 429000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -71674) (undo-tree-id15700 . -1) 71675 (71668 . 71675) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 71668) (undo-tree-id15701 . -4) (undo-tree-id15702 . -5) (undo-tree-id15703 . -3) 71671) nil (25725 49935 203515 634000) 0 nil])
([nil nil ((71679 . 71680) 71673) nil (25725 49935 203487 495000) 0 nil])
([nil nil ((#("." 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 71668)) nil (25725 49935 203473 390000) 0 nil])
([nil nil ((#("j" 0 1 (font-lock-fontified t fontified t src-block t font-lock-multiline t face (org-block))) . -71679) (undo-tree-id16378 . -1) (#("k" 0 1 (font-lock-fontified t fontified t src-block t font-lock-multiline t face (org-block))) . -71680) (undo-tree-id16379 . -1) 71681 (71679 . 71681) (71678 . 71679) (#("
" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -71678) (undo-tree-id16380 . -1) (undo-tree-id16381 . -1) (undo-tree-id16382 . -1) (undo-tree-id16383 . -1) (undo-tree-id16384 . -1) 71679 (t 25725 49935 329599 170000)) nil (25725 49956 754431 143000) 0 nil])
([nil nil ((nil rear-nonsticky nil 72229 . 72230) (nil fontified nil 71679 . 72230) (71679 . 72230)) nil (25725 49956 754413 614000) 0 nil])
([nil nil ((72241 . 72242)) nil (25725 49956 754409 284000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -72241) (undo-tree-id15753 . -1) (undo-tree-id15754 . -1) (undo-tree-id15755 . -1) (undo-tree-id15756 . -1) (undo-tree-id15757 . -1) (undo-tree-id15758 . -1) (undo-tree-id15759 . -1) (undo-tree-id15760 . -1) (undo-tree-id15761 . -1) (undo-tree-id15762 . -1) (undo-tree-id15763 . -1) (undo-tree-id15764 . -1) (undo-tree-id15765 . -1) (undo-tree-id15766 . -1) (undo-tree-id15767 . -1) (undo-tree-id15768 . -1) (undo-tree-id15769 . -1) (undo-tree-id15770 . -1) (undo-tree-id15771 . -1) (undo-tree-id15772 . -1) (undo-tree-id15773 . -1) (undo-tree-id15774 . -1) (undo-tree-id15775 . -1) (undo-tree-id15776 . -1) (undo-tree-id15777 . -1) (undo-tree-id15778 . -1) (undo-tree-id15779 . -1) (undo-tree-id15780 . -1) (undo-tree-id15781 . -1) (undo-tree-id15782 . -1) (undo-tree-id15783 . -1) (undo-tree-id15784 . -1) (undo-tree-id15785 . -1) (undo-tree-id15786 . -1) (undo-tree-id15787 . -1) (undo-tree-id15788 . -1) (undo-tree-id15789 . -1) (undo-tree-id15790 . -1) (undo-tree-id15791 . -1) (undo-tree-id15792 . -1) (undo-tree-id15793 . -1) (undo-tree-id15794 . -1) (undo-tree-id15795 . -1) (undo-tree-id15796 . -1) (undo-tree-id15797 . -1) (undo-tree-id15798 . -1) (undo-tree-id15799 . -1) (undo-tree-id15800 . -1) (undo-tree-id15801 . -1) (undo-tree-id15802 . -1) (undo-tree-id15803 . -1) (undo-tree-id15804 . -1) (undo-tree-id15805 . -1) (undo-tree-id15806 . -1) (undo-tree-id15807 . -1) (undo-tree-id15808 . -1) (undo-tree-id15809 . -1) (undo-tree-id15810 . -1) (undo-tree-id15811 . -1) (undo-tree-id15812 . -1) (undo-tree-id15813 . -1) (undo-tree-id15814 . -1) (undo-tree-id15815 . -1) (undo-tree-id15816 . -1) (undo-tree-id15817 . -1) (undo-tree-id15818 . -1) (undo-tree-id15819 . -1) (undo-tree-id15820 . -1) (undo-tree-id15821 . -1) (undo-tree-id15822 . -1) (undo-tree-id15823 . -1) (undo-tree-id15824 . -1) (undo-tree-id15825 . -1) (undo-tree-id15826 . -1) (undo-tree-id15827 . -1) (undo-tree-id15828 . -1) (undo-tree-id15829 . -1) (undo-tree-id15830 . -1) (undo-tree-id15831 . -1) (undo-tree-id15832 . -1) (undo-tree-id15833 . -1) (undo-tree-id15834 . -1) (undo-tree-id15835 . -1) (undo-tree-id15836 . -1) (undo-tree-id15837 . -1) (undo-tree-id15838 . -1) (undo-tree-id15839 . -1) (undo-tree-id15840 . -1) (undo-tree-id15841 . -1) (undo-tree-id15842 . -1) (undo-tree-id15843 . -1) (undo-tree-id15844 . -1) (undo-tree-id15845 . -1) (undo-tree-id15846 . -1) (undo-tree-id15847 . -1) (undo-tree-id15848 . -1) (undo-tree-id15849 . -1) (undo-tree-id15850 . -1) (undo-tree-id15851 . -1) (undo-tree-id15852 . -1) (undo-tree-id15853 . -1) (undo-tree-id15854 . -1) (undo-tree-id15855 . -1) (undo-tree-id15856 . -1) (undo-tree-id15857 . -1) (undo-tree-id15858 . -1) (undo-tree-id15859 . -1) (undo-tree-id15860 . -1) (undo-tree-id15861 . -1) (undo-tree-id15862 . -1) (undo-tree-id15863 . -1) (undo-tree-id15864 . -1) (undo-tree-id15865 . -1) (undo-tree-id15866 . -1) (undo-tree-id15867 . -1) (undo-tree-id15868 . -1) (undo-tree-id15869 . -1) (undo-tree-id15870 . -1) (undo-tree-id15871 . -1) (undo-tree-id15872 . -1) (undo-tree-id15873 . -1) (undo-tree-id15874 . -1) (undo-tree-id15875 . -1) (undo-tree-id15876 . -1) (undo-tree-id15877 . -1) (undo-tree-id15878 . -1) (undo-tree-id15879 . -1) (undo-tree-id15880 . -1) (undo-tree-id15881 . -1) (undo-tree-id15882 . -1) (undo-tree-id15883 . -1) (undo-tree-id15884 . -1) (undo-tree-id15885 . -1) (undo-tree-id15886 . -1) (undo-tree-id15887 . -1) (undo-tree-id15888 . -1) (undo-tree-id15889 . -1) (undo-tree-id15890 . -1) (undo-tree-id15891 . -1) (undo-tree-id15892 . -1) (undo-tree-id15893 . -1) (undo-tree-id15894 . -1) (undo-tree-id15895 . -1) (undo-tree-id15896 . -1) (undo-tree-id15897 . -1) (undo-tree-id15898 . -1) (undo-tree-id15899 . -1) (undo-tree-id15900 . -1) (undo-tree-id15901 . -1) (undo-tree-id15902 . -1) (undo-tree-id15903 . -1) (undo-tree-id15904 . -1) (undo-tree-id15905 . -1) (undo-tree-id15906 . -1) (undo-tree-id15907 . -1) (undo-tree-id15908 . -1) (undo-tree-id15909 . -1) (undo-tree-id15910 . -1) (undo-tree-id15911 . -1) (undo-tree-id15912 . -1) (undo-tree-id15913 . -1) (undo-tree-id15914 . -1) (undo-tree-id15915 . -1) (undo-tree-id15916 . -1) (undo-tree-id15917 . -1) (undo-tree-id15918 . -1) (undo-tree-id15919 . -1) (undo-tree-id15920 . -1) (undo-tree-id15921 . -1) (undo-tree-id15922 . -1) (undo-tree-id15923 . -1) (undo-tree-id15924 . -1) (undo-tree-id15925 . -1) (undo-tree-id15926 . -1) (undo-tree-id15927 . -1) (undo-tree-id15928 . -1) (undo-tree-id15929 . -1) (undo-tree-id15930 . -1) (undo-tree-id15931 . -1) (undo-tree-id15932 . -1) (undo-tree-id15933 . -1) (undo-tree-id15934 . -1) (undo-tree-id15935 . -1) (undo-tree-id15936 . -1) (undo-tree-id15937 . -1) (undo-tree-id15938 . -1) (undo-tree-id15939 . -1) (undo-tree-id15940 . -1) (undo-tree-id15941 . -1) (undo-tree-id15942 . -1) (undo-tree-id15943 . -1) (undo-tree-id15944 . -1) (undo-tree-id15945 . -1) (undo-tree-id15946 . -1) (undo-tree-id15947 . -1) (undo-tree-id15948 . -1) (undo-tree-id15949 . -1) (undo-tree-id15950 . -1) (undo-tree-id15951 . -1) (undo-tree-id15952 . -1) (undo-tree-id15953 . -1) (undo-tree-id15954 . -1) (undo-tree-id15955 . -1) (undo-tree-id15956 . -1) (undo-tree-id15957 . -1) (undo-tree-id15958 . -1) (undo-tree-id15959 . -1) (undo-tree-id15960 . -1) (undo-tree-id15961 . -1) (undo-tree-id15962 . -1) (undo-tree-id15963 . -1) (undo-tree-id15964 . -1) (undo-tree-id15965 . -1) (undo-tree-id15966 . -1) (undo-tree-id15967 . -1) (undo-tree-id15968 . -1) (undo-tree-id15969 . -1) (undo-tree-id15970 . -1) (undo-tree-id15971 . -1) (undo-tree-id15972 . -1) (undo-tree-id15973 . -1) (undo-tree-id15974 . -1) (undo-tree-id15975 . -1) (undo-tree-id15976 . -1) (undo-tree-id15977 . -1) (undo-tree-id15978 . -1) (undo-tree-id15979 . -1) (undo-tree-id15980 . -1) (undo-tree-id15981 . -1) (undo-tree-id15982 . -1) (undo-tree-id15983 . -1) (undo-tree-id15984 . -1) (undo-tree-id15985 . -1) (undo-tree-id15986 . -1) (undo-tree-id15987 . -1) (undo-tree-id15988 . -1) (undo-tree-id15989 . -1) (undo-tree-id15990 . -1) (undo-tree-id15991 . -1) (undo-tree-id15992 . -1) (undo-tree-id15993 . -1) (undo-tree-id15994 . -1) (undo-tree-id15995 . -1) (undo-tree-id15996 . -1) (undo-tree-id15997 . -1) (undo-tree-id15998 . -1) (undo-tree-id15999 . -1) (undo-tree-id16000 . -1) (undo-tree-id16001 . -1) (undo-tree-id16002 . -1) (undo-tree-id16003 . -1) (undo-tree-id16004 . -1) (undo-tree-id16005 . -1) (undo-tree-id16006 . -1) (undo-tree-id16007 . -1) (undo-tree-id16008 . -1) (undo-tree-id16009 . -1) (undo-tree-id16010 . -1) (undo-tree-id16011 . -1) (undo-tree-id16012 . -1) (undo-tree-id16013 . -1) (undo-tree-id16014 . -1) (undo-tree-id16015 . -1) (undo-tree-id16016 . -1) (undo-tree-id16017 . -1) (undo-tree-id16018 . -1) (undo-tree-id16019 . -1) (undo-tree-id16020 . -1) (undo-tree-id16021 . -1) (undo-tree-id16022 . -1) (undo-tree-id16023 . -1) (undo-tree-id16024 . -1) (undo-tree-id16025 . -1) (undo-tree-id16026 . -1) (undo-tree-id16027 . -1) (undo-tree-id16028 . -1) (undo-tree-id16029 . -1) (undo-tree-id16030 . -1) (undo-tree-id16031 . -1) (undo-tree-id16032 . -1) (undo-tree-id16033 . -1) (undo-tree-id16034 . -1) (undo-tree-id16035 . -1) (undo-tree-id16036 . -1) (undo-tree-id16037 . -1) (undo-tree-id16038 . -1) (undo-tree-id16039 . -1) (undo-tree-id16040 . -1) (undo-tree-id16041 . -1) (undo-tree-id16042 . -1) (undo-tree-id16043 . -1) (undo-tree-id16044 . -1) (undo-tree-id16045 . -1) (undo-tree-id16046 . -1) (undo-tree-id16047 . -1) (undo-tree-id16048 . -1) (undo-tree-id16049 . -1) (undo-tree-id16050 . -1) (undo-tree-id16051 . -1) (undo-tree-id16052 . -1) (undo-tree-id16053 . -1) (undo-tree-id16054 . -1) (undo-tree-id16055 . -1) (undo-tree-id16056 . -1) (undo-tree-id16057 . -1) (undo-tree-id16058 . -1) (undo-tree-id16059 . -1) (undo-tree-id16060 . -1) (undo-tree-id16061 . -1) (undo-tree-id16062 . -1) (undo-tree-id16063 . -1) (undo-tree-id16064 . -1) (undo-tree-id16065 . -1) (undo-tree-id16066 . -1) (undo-tree-id16067 . -1) (undo-tree-id16068 . -1) (undo-tree-id16069 . -1) (undo-tree-id16070 . -1) (undo-tree-id16071 . -1) (undo-tree-id16072 . -1) (undo-tree-id16073 . -1) (undo-tree-id16074 . -1) (undo-tree-id16075 . -1) (undo-tree-id16076 . -1) (undo-tree-id16077 . -1) (undo-tree-id16078 . -1) (undo-tree-id16079 . -1) (undo-tree-id16080 . -1) (undo-tree-id16081 . -1) (undo-tree-id16082 . -1) (undo-tree-id16083 . -1) (undo-tree-id16084 . -1) (undo-tree-id16085 . -1) (undo-tree-id16086 . -1) (undo-tree-id16087 . -1) (undo-tree-id16088 . -1) (undo-tree-id16089 . -1) (undo-tree-id16090 . -1) (undo-tree-id16091 . -1) (undo-tree-id16092 . -1) (undo-tree-id16093 . -1) (undo-tree-id16094 . -1) (undo-tree-id16095 . -1) (undo-tree-id16096 . -1) (undo-tree-id16097 . -1) (undo-tree-id16098 . -1) (undo-tree-id16099 . -1) (undo-tree-id16100 . -1) (undo-tree-id16101 . -1) (undo-tree-id16102 . -1) (undo-tree-id16103 . -1) (undo-tree-id16104 . -1) (undo-tree-id16105 . -1) (undo-tree-id16106 . -1) (undo-tree-id16107 . -1) (undo-tree-id16108 . -1) (undo-tree-id16109 . -1) (undo-tree-id16110 . -1) (undo-tree-id16111 . -1) (undo-tree-id16112 . -1) (undo-tree-id16113 . -1) (undo-tree-id16114 . -1) (undo-tree-id16115 . -1) (undo-tree-id16116 . -1) (undo-tree-id16117 . -1) (undo-tree-id16118 . -1) (undo-tree-id16119 . -1) (undo-tree-id16120 . -1) (undo-tree-id16121 . -1) (undo-tree-id16122 . -1) (undo-tree-id16123 . -1) (undo-tree-id16124 . -1) (undo-tree-id16125 . -1) (undo-tree-id16126 . -1) (undo-tree-id16127 . -1) (undo-tree-id16128 . -1) (undo-tree-id16129 . -1) (undo-tree-id16130 . -1) (undo-tree-id16131 . -1) (undo-tree-id16132 . -1) (undo-tree-id16133 . -1) (undo-tree-id16134 . -1) (undo-tree-id16135 . -1) (undo-tree-id16136 . -1) (undo-tree-id16137 . -1) (undo-tree-id16138 . -1) (undo-tree-id16139 . -1) (undo-tree-id16140 . -1) (undo-tree-id16141 . -1) (undo-tree-id16142 . -1) (undo-tree-id16143 . -1) (undo-tree-id16144 . -1) (undo-tree-id16145 . -1) (undo-tree-id16146 . -1) (undo-tree-id16147 . -1) (undo-tree-id16148 . -1) (undo-tree-id16149 . -1) (undo-tree-id16150 . -1) (undo-tree-id16151 . -1) (undo-tree-id16152 . -1) (undo-tree-id16153 . -1) (undo-tree-id16154 . -1) (undo-tree-id16155 . -1) (undo-tree-id16156 . -1) (undo-tree-id16157 . -1) (undo-tree-id16158 . -1) (undo-tree-id16159 . -1) (undo-tree-id16160 . -1) (undo-tree-id16161 . -1) (undo-tree-id16162 . -1) (undo-tree-id16163 . -1) (undo-tree-id16164 . -1) (undo-tree-id16165 . -1) (undo-tree-id16166 . -1) (undo-tree-id16167 . -1) (undo-tree-id16168 . -1) (undo-tree-id16169 . -1) (undo-tree-id16170 . -1) (undo-tree-id16171 . -1) (undo-tree-id16172 . -1) (undo-tree-id16173 . -1) (undo-tree-id16174 . -1) (undo-tree-id16175 . -1) (undo-tree-id16176 . -1) (undo-tree-id16177 . -1) (undo-tree-id16178 . -1) (undo-tree-id16179 . -1) (undo-tree-id16180 . -1) (undo-tree-id16181 . -1) (undo-tree-id16182 . -1) (undo-tree-id16183 . -1) (undo-tree-id16184 . -1) (undo-tree-id16185 . -1) (undo-tree-id16186 . -1) (undo-tree-id16187 . -1) (undo-tree-id16188 . -1) (undo-tree-id16189 . -1) (undo-tree-id16190 . -1) (undo-tree-id16191 . -1) (undo-tree-id16192 . -1) (undo-tree-id16193 . -1) (undo-tree-id16194 . -1) (undo-tree-id16195 . -1) (undo-tree-id16196 . -1) (undo-tree-id16197 . -1) (undo-tree-id16198 . -1) (undo-tree-id16199 . -1) (undo-tree-id16200 . -1) (undo-tree-id16201 . -1) (undo-tree-id16202 . -1) (undo-tree-id16203 . -1) (undo-tree-id16204 . -1) (undo-tree-id16205 . -1) (undo-tree-id16206 . -1) (undo-tree-id16207 . -1) (undo-tree-id16208 . -1) (undo-tree-id16209 . -1) (undo-tree-id16210 . -1) (undo-tree-id16211 . -1) (undo-tree-id16212 . -1) (undo-tree-id16213 . -1) (undo-tree-id16214 . -1) (undo-tree-id16215 . -1) (undo-tree-id16216 . -1) (undo-tree-id16217 . -1) (undo-tree-id16218 . -1) (undo-tree-id16219 . -1) (undo-tree-id16220 . -1) (undo-tree-id16221 . -1) (undo-tree-id16222 . -1) (undo-tree-id16223 . -1) (undo-tree-id16224 . -1) (undo-tree-id16225 . -1) (undo-tree-id16226 . -1) (undo-tree-id16227 . -1) (undo-tree-id16228 . -1) (undo-tree-id16229 . -1) (undo-tree-id16230 . -1) (undo-tree-id16231 . -1) (undo-tree-id16232 . -1) (undo-tree-id16233 . -1) (undo-tree-id16234 . -1) (undo-tree-id16235 . -1) (undo-tree-id16236 . -1) (undo-tree-id16237 . -1) (undo-tree-id16238 . -1) (undo-tree-id16239 . -1) (undo-tree-id16240 . -1) (undo-tree-id16241 . -1) (undo-tree-id16242 . -1) (undo-tree-id16243 . -1) (undo-tree-id16244 . -1) (undo-tree-id16245 . -1) (undo-tree-id16246 . -1) (undo-tree-id16247 . -1) (undo-tree-id16248 . -1) (undo-tree-id16249 . -1) (undo-tree-id16250 . -1) (undo-tree-id16251 . -1) (undo-tree-id16252 . -1) (undo-tree-id16253 . -1) (undo-tree-id16254 . -1) (undo-tree-id16255 . -1) (undo-tree-id16256 . -1) (undo-tree-id16257 . -1) (undo-tree-id16258 . -1) (undo-tree-id16259 . -1) (undo-tree-id16260 . -1) (undo-tree-id16261 . -1) (undo-tree-id16262 . -1) (undo-tree-id16263 . -1) (undo-tree-id16264 . -1) (undo-tree-id16265 . -1) (undo-tree-id16266 . -1) (undo-tree-id16267 . -1) (undo-tree-id16268 . -1) (undo-tree-id16269 . -1) (undo-tree-id16270 . -1) (undo-tree-id16271 . -1) (undo-tree-id16272 . -1) (undo-tree-id16273 . -1) (undo-tree-id16274 . -1) (undo-tree-id16275 . -1) (undo-tree-id16276 . -1) (undo-tree-id16277 . -1) (undo-tree-id16278 . -1) (undo-tree-id16279 . -1) (undo-tree-id16280 . -1) (undo-tree-id16281 . -1) (undo-tree-id16282 . -1) (undo-tree-id16283 . -1) (undo-tree-id16284 . -1) (undo-tree-id16285 . -1) (undo-tree-id16286 . -1) (undo-tree-id16287 . -1) (undo-tree-id16288 . -1) (undo-tree-id16289 . -1) (undo-tree-id16290 . -1) (undo-tree-id16291 . -1) (undo-tree-id16292 . -1) (undo-tree-id16293 . -1) (undo-tree-id16294 . -1) (undo-tree-id16295 . -1) (undo-tree-id16296 . -1) (undo-tree-id16297 . -1) (undo-tree-id16298 . -1) (undo-tree-id16299 . -1) (undo-tree-id16300 . -1) (undo-tree-id16301 . -1) (undo-tree-id16302 . -1) (undo-tree-id16303 . -1) (undo-tree-id16304 . -1) (undo-tree-id16305 . -1) (undo-tree-id16306 . -1) (undo-tree-id16307 . -1) (undo-tree-id16308 . -1) (undo-tree-id16309 . -1) (undo-tree-id16310 . -1) (undo-tree-id16311 . -1) (undo-tree-id16312 . -1) (undo-tree-id16313 . -1) (undo-tree-id16314 . -1) (undo-tree-id16315 . -1) (undo-tree-id16316 . -1) (undo-tree-id16317 . -1) (undo-tree-id16318 . -1) (undo-tree-id16319 . -1) (undo-tree-id16320 . -1) (undo-tree-id16321 . -1) (undo-tree-id16322 . -1) (undo-tree-id16323 . -1) (undo-tree-id16324 . -1) (undo-tree-id16325 . -1) (undo-tree-id16326 . -1) (undo-tree-id16327 . -1) (undo-tree-id16328 . -1) (undo-tree-id16329 . -1) (undo-tree-id16330 . -1) (undo-tree-id16331 . -1) (undo-tree-id16332 . -1) (undo-tree-id16333 . -1) (undo-tree-id16334 . -1) (undo-tree-id16335 . -1) (undo-tree-id16336 . -1) (undo-tree-id16337 . -1) (undo-tree-id16338 . -1) (undo-tree-id16339 . -1) (undo-tree-id16340 . -1) (undo-tree-id16341 . -1) (undo-tree-id16342 . -1) (undo-tree-id16343 . -1) (undo-tree-id16344 . -1) (undo-tree-id16345 . -1) (undo-tree-id16346 . -1) (undo-tree-id16347 . -1) (undo-tree-id16348 . -1) (undo-tree-id16349 . -1) (undo-tree-id16350 . -1) (undo-tree-id16351 . -1) (undo-tree-id16352 . -1) (undo-tree-id16353 . -1) (undo-tree-id16354 . -1) (undo-tree-id16355 . -1) (undo-tree-id16356 . -1) (undo-tree-id16357 . -1) (undo-tree-id16358 . -1) (undo-tree-id16359 . -1) (undo-tree-id16360 . -1) (undo-tree-id16361 . -1) (undo-tree-id16362 . -1) (undo-tree-id16363 . -1) (undo-tree-id16364 . -1) (undo-tree-id16365 . -1) (undo-tree-id16366 . -1) (undo-tree-id16367 . -1) (undo-tree-id16368 . -1) (undo-tree-id16369 . -1) (undo-tree-id16370 . -1) (undo-tree-id16371 . -1) (undo-tree-id16372 . -1) (undo-tree-id16373 . -1) (undo-tree-id16374 . -1) (undo-tree-id16375 . -1) (undo-tree-id16376 . -1) (undo-tree-id16377 . -1) 72242) nil (25725 49956 754326 320000) 0 nil])
([nil nil ((72287 . 72292) (t 25725 49956 866382 515000) 72243) nil (25725 49966 900651 184000) 0 nil])
([nil nil ((72352 . 72353) (#("j" 0 1 (fontified t)) . -72372) (undo-tree-id16394 . -1) (#("k" 0 1 (fontified t)) . -72373) (undo-tree-id16395 . -1) (#("k" 0 1 (fontified t)) . -72374) (undo-tree-id16396 . -1) (#("k" 0 1 (fontified t)) . -72375) (undo-tree-id16397 . -1) 72376 (72372 . 72376) (nil rear-nonsticky nil 72371 . 72372) (nil fontified nil 72371 . 72372) (nil fontified nil 72370 . 72371) (nil fontified nil 72362 . 72370) (nil fontified nil 72361 . 72362) (nil fontified nil 72333 . 72361) (nil fontified nil 72332 . 72333) (nil fontified nil 72326 . 72332) (72326 . 72372) (#("i" 0 1 (fontified t)) . -72326) (undo-tree-id16398 . -1) 72327 (72326 . 72327) (72325 . 72326) (72320 . 72325) (#(" " 0 1 (fontified t)) . -72320) (undo-tree-id16399 . -1) (undo-tree-id16400 . -1) (#("a" 0 1 (fontified t)) . -72321) (undo-tree-id16401 . -1) (undo-tree-id16402 . -1) (#("r" 0 1 (fontified t)) . -72322) (undo-tree-id16403 . -1) (undo-tree-id16404 . -1) (#("e" 0 1 (fontified t)) . -72323) (undo-tree-id16405 . -1) (#("
" 0 1 (fontified t)) . -72324) (undo-tree-id16406 . -1) (undo-tree-id16407 . -1) 72325 (72324 . 72325) (72315 . 72324) (#("c" 0 1 (fontified t)) . -72315) (undo-tree-id16408 . -1) 72316 (72313 . 72316) (72292 . 72313) (t 25725 49967 17804 253000)) nil (25725 50979 873621 107000) 0 nil])
([nil nil ((72379 . 72380) (#("d" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -72379) (undo-tree-id16385 . -1) (#("s" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -72380) (undo-tree-id16386 . -1) 72381 (72377 . 72381) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -72377) (undo-tree-id16387 . -1) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -72378) (undo-tree-id16388 . -1) 72379 (72377 . 72379) (72374 . 72377) (#("h" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -72374) (undo-tree-id16389 . -1) (#("w" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -72375) (undo-tree-id16390 . -1) 72376 (72372 . 72376) (72351 . 72372) (#("elnter" 0 6 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 72351) (undo-tree-id16391 . -5) (undo-tree-id16392 . 4) (undo-tree-id16393 . -1) 72352) nil (25725 50979 873567 399000) 0 nil])
([nil nil ((72385 . 72386) 72379) nil (25725 50979 873522 213000) 0 nil])
([nil nil ((nil rear-nonsticky nil 73146 . 73147) (nil fontified nil 72386 . 73147) (72386 . 73147)) nil (25725 50979 873508 734000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -73189) (undo-tree-id16414 . -4) 73193 (73188 . 73193) (t 25725 50979 989767 330000) 73159) nil (25725 51779 258834 470000) 0 nil])
([nil nil ((73179 . 73188) (73174 . 73179) (#("o" 0 1 (fontified t)) . -73174) (undo-tree-id16409 . -1) (undo-tree-id16410 . -1) (#("r" 0 1 (fontified t)) . -73175) (undo-tree-id16411 . -1) (undo-tree-id16412 . -1) (#("p" 0 1 (fontified t)) . -73176) (undo-tree-id16413 . -1) 73177 (73158 . 73177) (73157 . 73158) 73148) nil (25725 51779 258821 130000) 0 nil])
([nil nil ((73188 . 73189) 73187) nil (25725 51779 258640 513000) 0 nil])
([nil nil ((nil rear-nonsticky nil 73285 . 73286) (nil fontified nil 73189 . 73286) (73189 . 73286)) nil (25725 51779 258625 356000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -73287) (undo-tree-id16415 . -1) (#("j" 0 1 (fontified t)) . -73288) (undo-tree-id16416 . -1) (#("k" 0 1 (fontified t)) . -73289) (undo-tree-id16417 . -1) 73290 (73287 . 73290) (t 25725 51779 479065 400000)) nil (25725 51953 127780 696000) 0 nil])
([nil nil (("" . -73297) (73297 . 73299) ("" . -73284) (73284 . 73286) ("" . -73272) (73272 . 73274) ("" . -73261) (73261 . 73263) ("" . -73254) (73254 . 73256) ("" . -73246) (73246 . 73248) ("" . -73227) (73227 . 73229) ("" . -73215) (73215 . 73217) ("" . -73207) (73207 . 73209) ("" . -73200) (73200 . 73202) ("" . -73189) (73189 . 73191)) nil (25725 51953 127743 540000) 0 nil])
([nil nil ((nil rear-nonsticky nil 73468 . 73469) (nil fontified nil 73468 . 73469) (nil fontified nil 73467 . 73468) (nil fontified nil 73459 . 73467) (nil fontified nil 73458 . 73459) (nil fontified nil 73430 . 73458) (nil fontified nil 73429 . 73430) (nil fontified nil 73423 . 73429) (73423 . 73469) (73422 . 73423) (73416 . 73422) (73395 . 73416) (73374 . 73395) (73354 . 73374) (#("css" 0 3 (fontified nil)) . 73354) (undo-tree-id16424 . -3) (undo-tree-id16425 . -3) (73342 . 73354) 73345 (73342 . 73345) (#("s" 0 1 (fontified t)) . -73342) (undo-tree-id16426 . -1) (undo-tree-id16427 . -1) (#("c" 0 1 (fontified nil)) . -73343) (undo-tree-id16428 . -1) (undo-tree-id16429 . -1) (#("s" 0 1 (fontified t)) . -73344) (undo-tree-id16430 . -1) (#("s" 0 1 (fontified t)) . -73345) (undo-tree-id16431 . -1) 73346 (73343 . 73346) (#("t" 0 1 (fontified t)) . -73343) (undo-tree-id16432 . -1) (undo-tree-id16433 . -1) 73344 (73340 . 73344) (t 25725 51953 242101 360000)) nil (25725 52413 773529 821000) 0 nil])
([nil nil ((#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -73463) (undo-tree-id16418 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -73464) (undo-tree-id16419 . -1) 73465 (73454 . 73465) (#("l" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -73454) (undo-tree-id16420 . -1) 73455 (73448 . 73455) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -73448) (undo-tree-id16421 . -1) 73449 (73448 . 73449) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 73448) (undo-tree-id16422 . -4) (undo-tree-id16423 . -1) 73449) nil (25725 52413 773488 404000) 0 nil])
([nil nil ((73468 . 73469) 73462) nil (25725 52413 773452 155000) 0 nil])
([nil nil ((nil rear-nonsticky nil 73958 . 73959) (nil fontified nil 73469 . 73959) (73469 . 73959)) nil (25725 52413 773439 793000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -74080) (undo-tree-id16438 . -1) (#("k" 0 1 (fontified t)) . -74081) (undo-tree-id16439 . -1) (#("
" 0 1 (fontified t)) . -74082) (undo-tree-id16440 . -1) (undo-tree-id16441 . -1) 74083 (74082 . 74083) (74074 . 74082) (74053 . 74074) (#("h" 0 1 (fontified t)) . -74053) (undo-tree-id16442 . -1) (#("o" 0 1 (fontified t)) . -74054) (undo-tree-id16443 . -1) (#("d" 0 1 (fontified t)) . -74055) (undo-tree-id16444 . -1) (#("s" 0 1 (fontified t)) . -74056) (undo-tree-id16445 . -1) 74057 (74053 . 74057) (#("d" 0 1 (fontified t)) . -74053) (undo-tree-id16446 . -1) (#("o" 0 1 (fontified t)) . -74054) (undo-tree-id16447 . -1) (#("s" 0 1 (fontified t)) . -74055) (undo-tree-id16448 . -1) 74056 (74053 . 74056) (#("d" 0 1 (fontified nil)) . -74053) (undo-tree-id16449 . -1) (undo-tree-id16450 . -1) (#("s" 0 1 (fontified t)) . -74054) (undo-tree-id16451 . -1) 74055 (74040 . 74055) (74019 . 74040) (74014 . 74019) (t 25725 52413 970672 487000) 73971) nil (25725 52459 595568 82000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -74081) (undo-tree-id16437 . -4) 74085 (74080 . 74085) 74015) nil (25725 52459 595524 569000) 0 nil])
([nil nil ((nil rear-nonsticky nil 74317 . 74318) (nil fontified nil 74081 . 74318) (74081 . 74318)) nil (25725 52459 595516 537000) 0 nil])
([nil nil ((#("Scripting the rules (e.g. body{background-color:red;}) contained inside of a style sheet is made possible by the CSSrule object. This object provides the following properties:
" 0 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-unmatched-face)) 21 30 (fontified t) 30 31 (fontified t face (rainbow-delimiters-unmatched-face)) 31 52 (fontified t) 52 53 (fontified t face (rainbow-delimiters-unmatched-face)) 53 54 (fontified t face (rainbow-delimiters-unmatched-face)) 54 176 (fontified t)) . 74081) (undo-tree-id16434 . -175) (undo-tree-id16435 . -176) (undo-tree-id16436 . -3) 74084) nil (25725 52459 595510 321000) 0 nil])
([nil nil (("" . -74148) (74148 . 74150) ("" . -74140) (74140 . 74142) ("" . -74125) (74125 . 74127) ("" . -74105) (74105 . 74107) ("" . -74092) (74092 . 74094) ("" . -74082) (74082 . 74084)) nil (25725 52459 595484 60000) 0 nil])
([nil nil ((74154 . 74155) 74149) nil (25725 52459 595465 901000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -74322) (undo-tree-id16459 . -1) (#("k" 0 1 (fontified t)) . -74323) (undo-tree-id16460 . -1) (#("k" 0 1 (fontified t)) . -74324) (undo-tree-id16461 . -1) (#("k" 0 1 (fontified t)) . -74325) (undo-tree-id16462 . -1) 74326 (74322 . 74326) (nil rear-nonsticky nil 74321 . 74322) (nil fontified nil 74321 . 74322) (nil fontified nil 74320 . 74321) (nil fontified nil 74312 . 74320) (nil fontified nil 74311 . 74312) (nil fontified nil 74283 . 74311) (nil fontified nil 74282 . 74283) (nil fontified nil 74276 . 74282) (74276 . 74322) (74275 . 74276) (74265 . 74275) (#("a" 0 1 (fontified t)) . -74265) (undo-tree-id16463 . -1) 74266 (74258 . 74266) (74237 . 74258) (74234 . 74237) (#("l" 0 1 (fontified t)) . -74234) (undo-tree-id16464 . -1) (undo-tree-id16465 . -1) (#("d" 0 1 (fontified t)) . -74235) (undo-tree-id16466 . -1) (undo-tree-id16467 . -1) (#("e" 0 1 (fontified t)) . -74236) (undo-tree-id16468 . -1) (#(" " 0 1 (fontified t)) . -74237) (undo-tree-id16469 . -1) 74238 (74236 . 74238) (#("e" 0 1 (fontified t)) . -74236) (undo-tree-id16470 . -1) (undo-tree-id16471 . -1) (#(" " 0 1 (fontified t)) . -74237) (undo-tree-id16472 . -1) (undo-tree-id16473 . -1) (#("b" 0 1 (fontified t)) . -74238) (undo-tree-id16474 . -1) (undo-tree-id16475 . -1) (#("e" 0 1 (fontified t)) . -74239) (undo-tree-id16476 . -1) (undo-tree-id16477 . -1) (#("l" 0 1 (fontified t)) . -74240) (undo-tree-id16478 . -1) 74241 (74228 . 74241) (74223 . 74228) (t 25725 52459 720250 34000) 74156) nil (25725 52523 414045 939000) 0 nil])
([nil nil ((74307 . 74310) (74305 . 74307) (#("r" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 74305) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 74305) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 74305) (74301 . 74305) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -74301) (undo-tree-id16456 . -1) (#("c" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -74302) (undo-tree-id16457 . -1) 74303 (74302 . 74303) (#("n" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -74302) (undo-tree-id16458 . -1) 74303) nil (25725 52523 413984 407000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -74317) (undo-tree-id16455 . -1) 74318 (74310 . 74318)) nil (25725 52523 413968 133000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -74323) (undo-tree-id16452 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -74324) (undo-tree-id16453 . -1) (#("p" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -74325) (undo-tree-id16454 . -1) 74326 (74323 . 74326) (74322 . 74323) 74316) nil (25725 52523 413957 237000) 0 nil])
([nil nil ((nil rear-nonsticky nil 74931 . 74932) (nil fontified nil 74323 . 74932) (74323 . 74932)) nil (25725 52523 413920 989000) 0 nil])
([nil nil ((75114 . 75115) (75113 . 75114) (75100 . 75113) (#("n" 0 1 (fontified t)) . -75100) (undo-tree-id16483 . -1) (undo-tree-id16484 . -1) (#("a" 0 1 (fontified t)) . -75101) (undo-tree-id16485 . -1) (undo-tree-id16486 . -1) 75102 (75099 . 75102) (#("ru" 0 2 (fontified nil)) . 75099) (undo-tree-id16487 . -2) (undo-tree-id16488 . -2) (75095 . 75099) 75097 (75093 . 75097) (75086 . 75093) (#("g" 0 1 (fontified t)) . -75086) (undo-tree-id16489 . -1) (#("n" 0 1 (fontified t)) . -75087) (undo-tree-id16490 . -1) 75088 (75086 . 75088) (#("g" 0 1 (fontified t)) . -75086) (undo-tree-id16491 . -1) (#("n" 0 1 (fontified t)) . -75087) (undo-tree-id16492 . -1) (#(" " 0 1 (fontified t)) . -75088) (undo-tree-id16493 . -1) (#("i" 0 1 (fontified t)) . -75089) (undo-tree-id16494 . -1) 75090 (75086 . 75090) (75065 . 75086) (75057 . 75065) (75042 . 75057) (75037 . 75042) (t 25725 52523 534517 314000) 74944) nil (25725 52591 979171 129000) 0 nil])
([nil nil ((nil rear-nonsticky nil 75165 . 75166) (nil fontified nil 75165 . 75166) (nil fontified nil 75164 . 75165) (nil fontified nil 75156 . 75164) (nil fontified nil 75155 . 75156) (nil fontified nil 75127 . 75155) (nil fontified nil 75126 . 75127) (nil fontified nil 75120 . 75126) (75120 . 75166) (75115 . 75120) 75115) nil (25725 52591 979130 690000) 0 nil])
([nil nil ((75145 . 75155) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 75145) (undo-tree-id16479 . -4) (undo-tree-id16480 . -5) (undo-tree-id16481 . -5) (undo-tree-id16482 . -4) 75149) nil (25725 52591 979122 169000) 0 nil])
([nil nil ((75160 . 75165) 75154) nil (25725 52591 979093 114000) 0 nil])
([nil nil ((nil rear-nonsticky nil 75813 . 75814) (nil fontified nil 75165 . 75814) (75165 . 75814) 75164) nil (25725 52591 980749 733000) 0 nil])
([nil nil ((nil rear-nonsticky nil 76003 . 76004) (nil fontified nil 76003 . 76004) (nil fontified nil 76002 . 76003) (nil fontified nil 75994 . 76002) (nil fontified nil 75993 . 75994) (nil fontified nil 75965 . 75993) (nil fontified nil 75964 . 75965) (nil fontified nil 75958 . 75964) (75958 . 76004) (75957 . 75958) (75953 . 75957) (75932 . 75953) (#("i" 0 1 (fontified t)) . -75932) (undo-tree-id16508 . -1) (undo-tree-id16509 . -1) (#("n" 0 1 (fontified t)) . -75933) (undo-tree-id16510 . -1) 75934 (75930 . 75934) (#("a" 0 1 (fontified t)) . -75930) (undo-tree-id16511 . -1) (#("m" 0 1 (fontified t)) . -75931) (undo-tree-id16512 . -1) 75932 (75925 . 75932) (#("t" 0 1 (fontified t)) . -75925) (undo-tree-id16513 . -1) (#(" " 0 1 (fontified t)) . -75926) (undo-tree-id16514 . -1) 75927 (75911 . 75927) (#("l" 0 1 (fontified t)) . -75911) (undo-tree-id16515 . -1) (#("." 0 1 (fontified t)) . -75912) (undo-tree-id16516 . -1) (#("s" 0 1 (fontified t)) . -75913) (undo-tree-id16517 . -1) 75914 (75909 . 75914) (75900 . 75909) (75895 . 75900) (t 25725 52596 61178 107000) 75826) nil (25725 52680 14213 324000) 0 nil] [nil nil ((75821 . 75843) (#("#+BEGIN_SRC 
#+END_SRC" 0 22 (fontified nil)) . -75821) (#("SRC" 0 2 (font-lock-fontified t fontified nil font-lock-multiline t face org-block-end-line) 2 3 (font-lock-fontified t fontified nil font-lock-multiline t face org-block-end-line)) . 75843) (75821 . 75843) 75825 (75824 . 75825) 75821) ((#("
" 0 1 (fontified nil face org-block-end-line)) . 75824) (undo-tree-id16495 . -1) (undo-tree-id16496 . -1) (undo-tree-id16497 . -1) (undo-tree-id16498 . -1) (undo-tree-id16499 . -1) (#("#+BEGIN_SRC 
#+END_SRC" 0 22 (fontified nil)) . 75821) (75821 . 75846) (#("#+BEGIN_SRC 
#+END_SRC" 0 13 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 13 22 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line)) . 75821)) (25725 52591 979072 510000) 0 nil])
([nil nil ((76003 . 76011) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -76003) (undo-tree-id16500 . -1) (#("r" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -76004) (undo-tree-id16501 . -1) (#("u" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -76005) (undo-tree-id16502 . -1) (#("l" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -76006) (undo-tree-id16503 . -1) 76007 (76003 . 76007) (75991 . 76003) (#("i" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -75991) (undo-tree-id16504 . -1) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -75992) (undo-tree-id16505 . -1) 75993 (75983 . 75993) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 75983) (undo-tree-id16506 . -4) (undo-tree-id16507 . -1) 75984) nil (25725 52680 14148 20000) 0 nil])
nil
([nil nil ((76016 . 76017) 76010) nil (25725 52680 14108 349000) 0 nil])
([nil nil ((nil rear-nonsticky nil 76546 . 76547) (nil fontified nil 76017 . 76547) (76017 . 76547)) nil (25725 52680 14095 9000) 0 nil])
([nil nil ((76736 . 76744) (#(" " 0 1 (fontified t)) . -76736) (undo-tree-id16518 . -1) (undo-tree-id16519 . -1) (undo-tree-id16520 . -1) (undo-tree-id16521 . -1) (undo-tree-id16522 . -1) (undo-tree-id16523 . -1) (undo-tree-id16524 . -1) (undo-tree-id16525 . -1) (undo-tree-id16526 . -1) (undo-tree-id16527 . -1) (undo-tree-id16528 . -1) (undo-tree-id16529 . -1) (undo-tree-id16530 . -1) (undo-tree-id16531 . -1) (undo-tree-id16532 . -1) (undo-tree-id16533 . -1) (undo-tree-id16534 . -1) (undo-tree-id16535 . -1) (undo-tree-id16536 . -1) (undo-tree-id16537 . -1) (undo-tree-id16538 . -1) (undo-tree-id16539 . -1) (undo-tree-id16540 . -1) (undo-tree-id16541 . -1) (undo-tree-id16542 . -1) (undo-tree-id16543 . -1) (undo-tree-id16544 . -1) (undo-tree-id16545 . -1) (undo-tree-id16546 . -1) (undo-tree-id16547 . -1) (undo-tree-id16548 . -1) (undo-tree-id16549 . -1) (undo-tree-id16550 . -1) (undo-tree-id16551 . -1) (undo-tree-id16552 . -1) (undo-tree-id16553 . -1) (undo-tree-id16554 . -1) (undo-tree-id16555 . -1) (undo-tree-id16556 . -1) (undo-tree-id16557 . -1) (undo-tree-id16558 . -1) (undo-tree-id16559 . -1) (undo-tree-id16560 . -1) (undo-tree-id16561 . -1) (undo-tree-id16562 . -1) (undo-tree-id16563 . -1) (undo-tree-id16564 . -1) (undo-tree-id16565 . -1) (undo-tree-id16566 . -1) (undo-tree-id16567 . -1) (undo-tree-id16568 . -1) (undo-tree-id16569 . -1) (undo-tree-id16570 . -1) (undo-tree-id16571 . -1) (undo-tree-id16572 . -1) (undo-tree-id16573 . -1) (undo-tree-id16574 . -1) (undo-tree-id16575 . -1) (undo-tree-id16576 . -1) (undo-tree-id16577 . -1) (undo-tree-id16578 . -1) (undo-tree-id16579 . -1) (undo-tree-id16580 . -1) (undo-tree-id16581 . -1) (undo-tree-id16582 . -1) (undo-tree-id16583 . -1) (undo-tree-id16584 . -1) (undo-tree-id16585 . -1) (undo-tree-id16586 . -1) (undo-tree-id16587 . -1) (undo-tree-id16588 . -1) (undo-tree-id16589 . -1) (undo-tree-id16590 . -1) (undo-tree-id16591 . -1) (undo-tree-id16592 . -1) (undo-tree-id16593 . -1) (undo-tree-id16594 . -1) (undo-tree-id16595 . -1) (undo-tree-id16596 . -1) (undo-tree-id16597 . -1) (undo-tree-id16598 . -1) (undo-tree-id16599 . -1) (undo-tree-id16600 . -1) (undo-tree-id16601 . -1) (undo-tree-id16602 . -1) (undo-tree-id16603 . -1) (undo-tree-id16604 . -1) (undo-tree-id16605 . -1) (undo-tree-id16606 . -1) (undo-tree-id16607 . -1) (undo-tree-id16608 . -1) (undo-tree-id16609 . -1) (undo-tree-id16610 . -1) (undo-tree-id16611 . -1) (undo-tree-id16612 . -1) (undo-tree-id16613 . -1) (undo-tree-id16614 . -1) (undo-tree-id16615 . -1) (undo-tree-id16616 . -1) (undo-tree-id16617 . -1) (undo-tree-id16618 . -1) (undo-tree-id16619 . -1) (undo-tree-id16620 . -1) (undo-tree-id16621 . -1) (undo-tree-id16622 . -1) (undo-tree-id16623 . -1) (undo-tree-id16624 . -1) (undo-tree-id16625 . -1) (undo-tree-id16626 . -1) (undo-tree-id16627 . -1) (undo-tree-id16628 . -1) (#("d" 0 1 (fontified t)) . -76737) (undo-tree-id16629 . -1) (undo-tree-id16630 . -1) (undo-tree-id16631 . -1) (#("o" 0 1 (fontified t)) . -76738) (undo-tree-id16632 . -1) (undo-tree-id16633 . -1) (#("c" 0 1 (fontified t)) . -76739) (undo-tree-id16634 . -1) (undo-tree-id16635 . -1) (#("u" 0 1 (fontified t)) . -76740) (undo-tree-id16636 . -1) (undo-tree-id16637 . -1) (#("m" 0 1 (fontified t)) . -76741) (undo-tree-id16638 . -1) (undo-tree-id16639 . -1) 76742 (76728 . 76742) (#("f" 0 1 (fontified t)) . -76728) (undo-tree-id16640 . -1) (undo-tree-id16641 . -1) (#("o" 0 1 (fontified t)) . -76729) (undo-tree-id16642 . -1) (undo-tree-id16643 . -1) 76730 (76718 . 76730) (76706 . 76718) (76701 . 76706) (76700 . 76701) (#("h" 0 1 (fontified t)) . -76700) (undo-tree-id16644 . -1) 76701 (76691 . 76701) (#("i" 0 1 (fontified t)) . -76691) (undo-tree-id16645 . -1) 76692 (76685 . 76692) (#("u" 0 1 (fontified t)) . -76685) (undo-tree-id16646 . -1) 76686 (76677 . 76686) (76666 . 76677) (#("y" 0 1 (fontified t)) . -76666) (undo-tree-id16647 . -1) (undo-tree-id16648 . -1) 76667 (76652 . 76667) (76631 . 76652) (76610 . 76631) (#("w" 0 1 (fontified t)) . -76610) (undo-tree-id16649 . -1) (undo-tree-id16650 . -1) (#("e" 0 1 (fontified t)) . -76611) (undo-tree-id16651 . -1) (undo-tree-id16652 . -1) (#(" " 0 1 (fontified t)) . -76612) (undo-tree-id16653 . -1) (undo-tree-id16654 . -1) (#("c" 0 1 (fontified t)) . -76613) (undo-tree-id16655 . -1) (undo-tree-id16656 . -1) (#("a" 0 1 (fontified t)) . -76614) (undo-tree-id16657 . -1) (undo-tree-id16658 . -1) 76615 (76610 . 76615) (76605 . 76610) (t 25725 52680 140359 631000) 76559) nil (25725 52748 953226 613000) 0 nil])
([nil nil ((76744 . 76749) 76743) nil (25725 52748 952603 678000) 0 nil])
([nil nil ((nil rear-nonsticky nil 76793 . 76794) (nil fontified nil 76793 . 76794) (nil fontified nil 76792 . 76793) (nil fontified nil 76784 . 76792) (nil fontified nil 76783 . 76784) (nil fontified nil 76755 . 76783) (nil fontified nil 76754 . 76755) (nil fontified nil 76748 . 76754) (76748 . 76794) (t 25725 52749 75035 101000)) nil (25725 52780 734915 985000) 0 nil])
([nil nil ((76804 . 76809) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -76804) (undo-tree-id16660 . -1) 76805 (76799 . 76805) (76786 . 76799) (#("l" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -76786) (undo-tree-id16661 . -1) 76787 (76773 . 76787) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 76773) (undo-tree-id16662 . -4) (undo-tree-id16663 . -4) 76777) nil (25725 52780 734905 998000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -76815) (undo-tree-id16659 . -3) 76818 (76814 . 76818) 76808) nil (25725 52780 734886 651000) 0 nil])
([nil nil ((nil rear-nonsticky nil 77161 . 77162) (nil fontified nil 76815 . 77162) (76815 . 77162)) nil (25725 52780 734857 945000) 0 nil])
([nil nil ((nil rear-nonsticky nil 77298 . 77299) (nil fontified nil 77298 . 77299) (nil fontified nil 77297 . 77298) (nil fontified nil 77289 . 77297) (nil fontified nil 77288 . 77289) (nil fontified nil 77260 . 77288) (nil fontified nil 77259 . 77260) (nil fontified nil 77253 . 77259) (77253 . 77299) (#("p" 0 1 (fontified t)) . -77253) (undo-tree-id16705 . -1) (undo-tree-id16706 . -1) (#("r" 0 1 (fontified t)) . -77254) (undo-tree-id16707 . -1) (undo-tree-id16708 . -1) 77255 (77253 . 77255) (77248 . 77253) (t 25725 52780 852286 436000) 77175) nil (25725 52916 768771 963000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -77289) (undo-tree-id16704 . -4) 77293 (77288 . 77293) 77278) nil (25725 52916 768751 848000) 0 nil])
([nil nil ((nil rear-nonsticky nil 77827 . 77828) (nil fontified nil 77289 . 77828) (77289 . 77828)) nil (25725 52916 768743 816000) 0 nil])
([nil nil ((77308 . 77318) (#("i" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -77308) (undo-tree-id16679 . -1) 77309 (77291 . 77309) (#("s" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -77291) (undo-tree-id16680 . -1) (undo-tree-id16681 . -1) (#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -77292) (undo-tree-id16682 . -1) (undo-tree-id16683 . -1) 77293 (77278 . 77293) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -77278) (undo-tree-id16684 . -1) (undo-tree-id16685 . -1) (undo-tree-id16686 . -1) (undo-tree-id16687 . -1) (#("n" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -77279) (undo-tree-id16688 . -1) (undo-tree-id16689 . -1) (undo-tree-id16690 . -1) (undo-tree-id16691 . -1) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -77280) (undo-tree-id16692 . -1) (undo-tree-id16693 . -1) (undo-tree-id16694 . -1) (undo-tree-id16695 . -1) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -77281) (undo-tree-id16696 . -1) (undo-tree-id16697 . -1) (undo-tree-id16698 . -1) (undo-tree-id16699 . -1) (#("r" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -77282) (undo-tree-id16700 . -1) (undo-tree-id16701 . -1) (undo-tree-id16702 . -1) (undo-tree-id16703 . -1) 77283 (#("." 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 77283)) nil (25725 52916 768733 60000) 0 nil])
([nil nil ((78008 . 78009) (78003 . 78008) (#("s" 0 1 (fontified t)) . -78003) (undo-tree-id16668 . -1) (undo-tree-id16669 . -1) 78004 (77983 . 78004) (#("l" 0 1 (fontified t)) . -77983) (undo-tree-id16670 . -1) (#("b" 0 1 (fontified t)) . -77984) (undo-tree-id16671 . -1) 77985 (77984 . 77985) (77976 . 77984) (77973 . 77976) (77971 . 77973) (#("e" 0 1 (fontified t)) . -77971) (undo-tree-id16672 . -1) (#("p" 0 1 (fontified t)) . -77972) (undo-tree-id16673 . -1) (#("r" 0 1 (fontified t)) . -77973) (undo-tree-id16674 . -1) (#("t" 0 1 (fontified t)) . -77974) (undo-tree-id16675 . -1) (#("y" 0 1 (fontified t)) . -77975) (undo-tree-id16676 . -1) 77976 (77960 . 77976) (#("s" 0 1 (fontified t)) . -77960) (undo-tree-id16677 . -1) 77961 (77958 . 77961) (#("d" 0 1 (fontified t)) . -77958) (undo-tree-id16678 . -1) 77959 (77943 . 77959) (77938 . 77943) 77937) nil (25725 52916 768622 497000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -78010) (undo-tree-id16667 . -4) 78014 (78009 . 78014) 78008) nil (25725 52916 768584 432000) 0 nil])
([nil nil ((nil rear-nonsticky nil 78055 . 78056) (nil fontified nil 78055 . 78056) (nil fontified nil 78054 . 78055) (nil fontified nil 78046 . 78054) (nil fontified nil 78045 . 78046) (nil fontified nil 78017 . 78045) (nil fontified nil 78016 . 78017) (nil fontified nil 78010 . 78016) (78010 . 78056)) nil (25725 52916 768575 423000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -78053) (undo-tree-id16664 . -1) 78054 (78035 . 78054) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 78035) (undo-tree-id16665 . -4) (undo-tree-id16666 . -1) 78036) nil (25725 52916 768566 273000) 0 nil])
([nil nil ((78058 . 78059) 78052) nil (25725 52916 768540 571000) 0 nil])
([nil nil ((nil rear-nonsticky nil 78728 . 78729) (nil fontified nil 78059 . 78729) (78059 . 78729)) nil (25725 52916 768528 69000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -78818) (undo-tree-id16711 . -4) (undo-tree-id16712 . -4) (undo-tree-id16713 . -4) (undo-tree-id16714 . -4) (undo-tree-id16715 . -4) (undo-tree-id16716 . -4) (undo-tree-id16717 . -4) (undo-tree-id16718 . -4) (undo-tree-id16719 . -4) (undo-tree-id16720 . -4) (undo-tree-id16721 . -4) (undo-tree-id16722 . -4) (undo-tree-id16723 . -4) (undo-tree-id16724 . -4) (undo-tree-id16725 . -4) (undo-tree-id16726 . -4) (undo-tree-id16727 . -4) (undo-tree-id16728 . -4) (undo-tree-id16729 . -4) (undo-tree-id16730 . -4) (undo-tree-id16731 . -4) (undo-tree-id16732 . -4) (undo-tree-id16733 . -4) (undo-tree-id16734 . -4) (undo-tree-id16735 . -4) (undo-tree-id16736 . -4) (undo-tree-id16737 . -4) (undo-tree-id16738 . -4) (undo-tree-id16739 . -4) (undo-tree-id16740 . -4) (undo-tree-id16741 . -4) (undo-tree-id16742 . -4) (undo-tree-id16743 . -4) (undo-tree-id16744 . -4) (undo-tree-id16745 . -4) (undo-tree-id16746 . -4) (undo-tree-id16747 . -4) (undo-tree-id16748 . -4) (undo-tree-id16749 . -4) (undo-tree-id16750 . -4) (undo-tree-id16751 . -4) (undo-tree-id16752 . -4) (undo-tree-id16753 . -4) (undo-tree-id16754 . -4) (undo-tree-id16755 . -4) (undo-tree-id16756 . -4) (undo-tree-id16757 . -4) (undo-tree-id16758 . -4) (undo-tree-id16759 . -4) (undo-tree-id16760 . -4) (undo-tree-id16761 . -4) (undo-tree-id16762 . -4) (undo-tree-id16763 . -4) (undo-tree-id16764 . -4) (undo-tree-id16765 . -4) (undo-tree-id16766 . -4) (undo-tree-id16767 . -4) (undo-tree-id16768 . -4) (undo-tree-id16769 . -4) (undo-tree-id16770 . -4) (undo-tree-id16771 . -4) (undo-tree-id16772 . -4) (undo-tree-id16773 . -4) (undo-tree-id16774 . -4) (undo-tree-id16775 . -4) (undo-tree-id16776 . -4) (undo-tree-id16777 . -4) (undo-tree-id16778 . -4) (undo-tree-id16779 . -4) (undo-tree-id16780 . -4) (undo-tree-id16781 . -4) (undo-tree-id16782 . -4) (undo-tree-id16783 . -4) (undo-tree-id16784 . -4) (undo-tree-id16785 . -4) (undo-tree-id16786 . -4) (undo-tree-id16787 . -4) (undo-tree-id16788 . -4) (undo-tree-id16789 . -4) (undo-tree-id16790 . -4) (undo-tree-id16791 . -4) (undo-tree-id16792 . -4) (undo-tree-id16793 . -4) (undo-tree-id16794 . -4) (undo-tree-id16795 . -4) (undo-tree-id16796 . -4) (undo-tree-id16797 . -4) (undo-tree-id16798 . -4) (undo-tree-id16799 . -4) (undo-tree-id16800 . -4) (undo-tree-id16801 . -4) (undo-tree-id16802 . -4) (undo-tree-id16803 . -4) (undo-tree-id16804 . -4) (undo-tree-id16805 . -4) (undo-tree-id16806 . -4) (undo-tree-id16807 . -4) (undo-tree-id16808 . -4) (undo-tree-id16809 . -4) (undo-tree-id16810 . -4) (undo-tree-id16811 . -4) (undo-tree-id16812 . -4) (undo-tree-id16813 . -4) (undo-tree-id16814 . -4) (undo-tree-id16815 . -4) (undo-tree-id16816 . -4) (undo-tree-id16817 . -4) (undo-tree-id16818 . -4) (undo-tree-id16819 . -4) (undo-tree-id16820 . -4) (undo-tree-id16821 . -4) (undo-tree-id16822 . -4) (undo-tree-id16823 . -4) (undo-tree-id16824 . -4) (undo-tree-id16825 . -4) (undo-tree-id16826 . -4) (undo-tree-id16827 . -4) (undo-tree-id16828 . -4) (undo-tree-id16829 . -4) (undo-tree-id16830 . -4) (undo-tree-id16831 . -4) (undo-tree-id16832 . -4) (undo-tree-id16833 . -4) (undo-tree-id16834 . -4) (undo-tree-id16835 . -4) (undo-tree-id16836 . -4) (undo-tree-id16837 . -4) (undo-tree-id16838 . -4) (undo-tree-id16839 . -4) (undo-tree-id16840 . -4) (undo-tree-id16841 . -4) (undo-tree-id16842 . -4) (undo-tree-id16843 . -4) (undo-tree-id16844 . -4) (undo-tree-id16845 . -4) (undo-tree-id16846 . -4) (undo-tree-id16847 . -4) (undo-tree-id16848 . -4) (undo-tree-id16849 . -4) (undo-tree-id16850 . -4) (undo-tree-id16851 . -4) (undo-tree-id16852 . -4) (undo-tree-id16853 . -4) (undo-tree-id16854 . -4) (undo-tree-id16855 . -4) (undo-tree-id16856 . -4) (undo-tree-id16857 . -4) (undo-tree-id16858 . -4) (undo-tree-id16859 . -4) (undo-tree-id16860 . -4) (undo-tree-id16861 . -4) (undo-tree-id16862 . -4) (undo-tree-id16863 . -4) (undo-tree-id16864 . -4) (undo-tree-id16865 . -4) (undo-tree-id16866 . -4) (undo-tree-id16867 . -4) (undo-tree-id16868 . -4) (undo-tree-id16869 . -4) (undo-tree-id16870 . -4) (undo-tree-id16871 . -4) (undo-tree-id16872 . -4) (undo-tree-id16873 . -4) (undo-tree-id16874 . -4) (undo-tree-id16875 . -4) (undo-tree-id16876 . -4) (undo-tree-id16877 . -4) (undo-tree-id16878 . -4) (undo-tree-id16879 . -4) (undo-tree-id16880 . -4) (undo-tree-id16881 . -4) (undo-tree-id16882 . -4) (undo-tree-id16883 . -4) (undo-tree-id16884 . -4) (undo-tree-id16885 . -4) (undo-tree-id16886 . -4) (undo-tree-id16887 . -4) (undo-tree-id16888 . -4) (undo-tree-id16889 . -4) (undo-tree-id16890 . -4) (undo-tree-id16891 . -4) (undo-tree-id16892 . -4) (undo-tree-id16893 . -4) (undo-tree-id16894 . -4) (undo-tree-id16895 . -4) (undo-tree-id16896 . -4) (undo-tree-id16897 . -4) (undo-tree-id16898 . -4) (undo-tree-id16899 . -4) (undo-tree-id16900 . -4) (undo-tree-id16901 . -4) (undo-tree-id16902 . -4) (undo-tree-id16903 . -4) (undo-tree-id16904 . -4) (undo-tree-id16905 . -4) (undo-tree-id16906 . -4) (undo-tree-id16907 . -4) (undo-tree-id16908 . -4) (undo-tree-id16909 . -4) (undo-tree-id16910 . -4) (undo-tree-id16911 . -4) (undo-tree-id16912 . -4) (undo-tree-id16913 . -4) (undo-tree-id16914 . -4) (undo-tree-id16915 . -4) (undo-tree-id16916 . -4) (undo-tree-id16917 . -4) (undo-tree-id16918 . -4) (undo-tree-id16919 . -4) (undo-tree-id16920 . -4) (undo-tree-id16921 . -4) (undo-tree-id16922 . -4) (undo-tree-id16923 . -4) (undo-tree-id16924 . -4) (undo-tree-id16925 . -4) (undo-tree-id16926 . -4) (undo-tree-id16927 . -4) (undo-tree-id16928 . -4) (undo-tree-id16929 . -4) (undo-tree-id16930 . -4) (undo-tree-id16931 . -4) (undo-tree-id16932 . -4) (undo-tree-id16933 . -4) (undo-tree-id16934 . -4) (undo-tree-id16935 . -4) (undo-tree-id16936 . -4) (undo-tree-id16937 . -4) (undo-tree-id16938 . -4) (undo-tree-id16939 . -4) (undo-tree-id16940 . -4) (undo-tree-id16941 . -4) (undo-tree-id16942 . -4) (undo-tree-id16943 . -4) (undo-tree-id16944 . -4) (undo-tree-id16945 . -4) (undo-tree-id16946 . -4) (undo-tree-id16947 . -4) (undo-tree-id16948 . -4) (undo-tree-id16949 . -4) (undo-tree-id16950 . -4) (undo-tree-id16951 . -4) (undo-tree-id16952 . -4) (undo-tree-id16953 . -4) (undo-tree-id16954 . -4) (undo-tree-id16955 . -4) (undo-tree-id16956 . -4) (undo-tree-id16957 . -4) (undo-tree-id16958 . -4) (undo-tree-id16959 . -4) (undo-tree-id16960 . -4) (undo-tree-id16961 . -4) (undo-tree-id16962 . -4) (undo-tree-id16963 . -4) (undo-tree-id16964 . -4) (undo-tree-id16965 . -4) (undo-tree-id16966 . -4) (undo-tree-id16967 . -4) (undo-tree-id16968 . -4) (undo-tree-id16969 . -4) (undo-tree-id16970 . -4) (undo-tree-id16971 . -4) (undo-tree-id16972 . -4) (undo-tree-id16973 . -4) (undo-tree-id16974 . -4) (undo-tree-id16975 . -4) (undo-tree-id16976 . -4) (undo-tree-id16977 . -4) (undo-tree-id16978 . -4) (undo-tree-id16979 . -4) (undo-tree-id16980 . -4) (undo-tree-id16981 . -4) (undo-tree-id16982 . -4) (undo-tree-id16983 . -4) (undo-tree-id16984 . -4) (undo-tree-id16985 . -4) (undo-tree-id16986 . -4) (undo-tree-id16987 . -4) (undo-tree-id16988 . -4) (undo-tree-id16989 . -4) (undo-tree-id16990 . -4) (undo-tree-id16991 . -4) (undo-tree-id16992 . -4) (undo-tree-id16993 . -4) (undo-tree-id16994 . -4) (undo-tree-id16995 . -4) (undo-tree-id16996 . -4) (undo-tree-id16997 . -4) (undo-tree-id16998 . -4) (undo-tree-id16999 . -4) (undo-tree-id17000 . -4) (undo-tree-id17001 . -4) (undo-tree-id17002 . -4) (undo-tree-id17003 . -4) (undo-tree-id17004 . -4) (undo-tree-id17005 . -4) (undo-tree-id17006 . -4) (undo-tree-id17007 . -4) (undo-tree-id17008 . -4) (undo-tree-id17009 . -4) (undo-tree-id17010 . -4) (undo-tree-id17011 . -4) (undo-tree-id17012 . -4) (undo-tree-id17013 . -4) (undo-tree-id17014 . -4) (undo-tree-id17015 . -4) (undo-tree-id17016 . -4) (undo-tree-id17017 . -4) (undo-tree-id17018 . -4) (undo-tree-id17019 . -4) (undo-tree-id17020 . -4) (undo-tree-id17021 . -4) (undo-tree-id17022 . -4) (undo-tree-id17023 . -4) (undo-tree-id17024 . -4) (undo-tree-id17025 . -4) (undo-tree-id17026 . -4) (undo-tree-id17027 . -4) (undo-tree-id17028 . -4) (undo-tree-id17029 . -4) (undo-tree-id17030 . -4) (undo-tree-id17031 . -4) (undo-tree-id17032 . -4) (undo-tree-id17033 . -4) (undo-tree-id17034 . -4) (undo-tree-id17035 . -4) (undo-tree-id17036 . -4) (undo-tree-id17037 . -4) (undo-tree-id17038 . -4) (undo-tree-id17039 . -4) (undo-tree-id17040 . -4) (undo-tree-id17041 . -4) (undo-tree-id17042 . -4) (undo-tree-id17043 . -4) (undo-tree-id17044 . -4) (undo-tree-id17045 . -4) (undo-tree-id17046 . -4) (undo-tree-id17047 . -4) (undo-tree-id17048 . -4) (undo-tree-id17049 . -4) (undo-tree-id17050 . -4) (undo-tree-id17051 . -4) (undo-tree-id17052 . -4) (undo-tree-id17053 . -4) (undo-tree-id17054 . -4) (undo-tree-id17055 . -4) (undo-tree-id17056 . -4) (undo-tree-id17057 . -4) (undo-tree-id17058 . -4) (undo-tree-id17059 . -4) (undo-tree-id17060 . -4) (undo-tree-id17061 . -4) (undo-tree-id17062 . -4) (undo-tree-id17063 . -4) (undo-tree-id17064 . -4) (undo-tree-id17065 . -4) (undo-tree-id17066 . -4) (undo-tree-id17067 . -4) (undo-tree-id17068 . -4) (undo-tree-id17069 . -4) (undo-tree-id17070 . -4) (undo-tree-id17071 . -4) (undo-tree-id17072 . -4) (undo-tree-id17073 . -4) (undo-tree-id17074 . -4) (undo-tree-id17075 . -4) (undo-tree-id17076 . -4) (undo-tree-id17077 . -4) (undo-tree-id17078 . -4) (undo-tree-id17079 . -4) (undo-tree-id17080 . -4) (undo-tree-id17081 . -4) (undo-tree-id17082 . -4) (undo-tree-id17083 . -4) (undo-tree-id17084 . -4) (undo-tree-id17085 . -4) (undo-tree-id17086 . -4) (undo-tree-id17087 . -4) (undo-tree-id17088 . -4) (undo-tree-id17089 . -4) (undo-tree-id17090 . -4) (undo-tree-id17091 . -4) (undo-tree-id17092 . -4) (undo-tree-id17093 . -4) (undo-tree-id17094 . -4) (undo-tree-id17095 . -4) (undo-tree-id17096 . -4) (undo-tree-id17097 . -4) (undo-tree-id17098 . -4) (undo-tree-id17099 . -4) (undo-tree-id17100 . -4) (undo-tree-id17101 . -4) (undo-tree-id17102 . -4) (undo-tree-id17103 . -4) (undo-tree-id17104 . -4) (undo-tree-id17105 . -4) (undo-tree-id17106 . -4) (undo-tree-id17107 . -4) (undo-tree-id17108 . -4) (undo-tree-id17109 . -4) (undo-tree-id17110 . -4) (undo-tree-id17111 . -4) (undo-tree-id17112 . -4) (undo-tree-id17113 . -4) (undo-tree-id17114 . -4) (undo-tree-id17115 . -4) (undo-tree-id17116 . -4) (undo-tree-id17117 . -4) (undo-tree-id17118 . -4) (undo-tree-id17119 . -4) (undo-tree-id17120 . -4) (undo-tree-id17121 . -4) (undo-tree-id17122 . -4) (undo-tree-id17123 . -4) (undo-tree-id17124 . -4) (undo-tree-id17125 . -4) (undo-tree-id17126 . -4) (undo-tree-id17127 . -4) (undo-tree-id17128 . -4) (undo-tree-id17129 . -4) (undo-tree-id17130 . -4) (undo-tree-id17131 . -4) (undo-tree-id17132 . -4) (undo-tree-id17133 . -4) (undo-tree-id17134 . -4) (undo-tree-id17135 . -4) (undo-tree-id17136 . -4) (undo-tree-id17137 . -4) (undo-tree-id17138 . -4) (undo-tree-id17139 . -4) (undo-tree-id17140 . -4) (undo-tree-id17141 . -4) (undo-tree-id17142 . -4) (undo-tree-id17143 . -4) (undo-tree-id17144 . -4) (undo-tree-id17145 . -4) (undo-tree-id17146 . -4) (undo-tree-id17147 . -4) (undo-tree-id17148 . -4) (undo-tree-id17149 . -4) (undo-tree-id17150 . -4) (undo-tree-id17151 . -4) (undo-tree-id17152 . -4) (undo-tree-id17153 . -4) (undo-tree-id17154 . -4) (undo-tree-id17155 . -4) (undo-tree-id17156 . -4) (undo-tree-id17157 . -4) (undo-tree-id17158 . -4) (undo-tree-id17159 . -4) (undo-tree-id17160 . -4) (undo-tree-id17161 . -4) (undo-tree-id17162 . -4) (undo-tree-id17163 . -4) (undo-tree-id17164 . -4) (undo-tree-id17165 . -4) (undo-tree-id17166 . -4) (undo-tree-id17167 . -4) (undo-tree-id17168 . -4) (undo-tree-id17169 . -4) (undo-tree-id17170 . -4) (undo-tree-id17171 . -4) (undo-tree-id17172 . -4) (undo-tree-id17173 . -4) (undo-tree-id17174 . -4) (undo-tree-id17175 . -4) (undo-tree-id17176 . -4) (undo-tree-id17177 . -4) (undo-tree-id17178 . -4) (undo-tree-id17179 . -4) (undo-tree-id17180 . -4) (undo-tree-id17181 . -4) (undo-tree-id17182 . -4) (undo-tree-id17183 . -4) (undo-tree-id17184 . -4) (undo-tree-id17185 . -4) (undo-tree-id17186 . -4) (undo-tree-id17187 . -4) (undo-tree-id17188 . -4) (undo-tree-id17189 . -4) (undo-tree-id17190 . -4) (undo-tree-id17191 . -4) (undo-tree-id17192 . -4) (undo-tree-id17193 . -4) (undo-tree-id17194 . -4) (undo-tree-id17195 . -4) (undo-tree-id17196 . -4) (undo-tree-id17197 . -4) (undo-tree-id17198 . -4) (undo-tree-id17199 . -4) (undo-tree-id17200 . -4) (undo-tree-id17201 . -4) (undo-tree-id17202 . -4) (undo-tree-id17203 . -4) (undo-tree-id17204 . -4) (undo-tree-id17205 . -4) (undo-tree-id17206 . -4) (undo-tree-id17207 . -4) (undo-tree-id17208 . -4) (undo-tree-id17209 . -4) (undo-tree-id17210 . -4) (undo-tree-id17211 . -4) (undo-tree-id17212 . -4) (undo-tree-id17213 . -4) (undo-tree-id17214 . -4) (undo-tree-id17215 . -4) (undo-tree-id17216 . -4) (undo-tree-id17217 . -4) (undo-tree-id17218 . -4) (undo-tree-id17219 . -4) (undo-tree-id17220 . -4) (undo-tree-id17221 . -4) (undo-tree-id17222 . -4) (undo-tree-id17223 . -4) (undo-tree-id17224 . -4) (undo-tree-id17225 . -4) (undo-tree-id17226 . -4) (undo-tree-id17227 . -4) (undo-tree-id17228 . -4) (undo-tree-id17229 . -4) (undo-tree-id17230 . -4) (undo-tree-id17231 . -4) (undo-tree-id17232 . -4) (undo-tree-id17233 . -4) (undo-tree-id17234 . -4) (undo-tree-id17235 . -4) (undo-tree-id17236 . -4) (undo-tree-id17237 . -4) (undo-tree-id17238 . -4) (undo-tree-id17239 . -4) (undo-tree-id17240 . -4) (undo-tree-id17241 . -4) (undo-tree-id17242 . -4) (undo-tree-id17243 . -4) (undo-tree-id17244 . -4) (undo-tree-id17245 . -4) (undo-tree-id17246 . -4) (undo-tree-id17247 . -4) (undo-tree-id17248 . -4) (undo-tree-id17249 . -4) (undo-tree-id17250 . -4) (undo-tree-id17251 . -4) (undo-tree-id17252 . -4) (undo-tree-id17253 . -4) (undo-tree-id17254 . -4) (undo-tree-id17255 . -4) (undo-tree-id17256 . -4) (undo-tree-id17257 . -4) (undo-tree-id17258 . -4) (undo-tree-id17259 . -4) (undo-tree-id17260 . -4) (undo-tree-id17261 . -4) (undo-tree-id17262 . -4) (undo-tree-id17263 . -4) (undo-tree-id17264 . -4) (undo-tree-id17265 . -4) (undo-tree-id17266 . -4) (undo-tree-id17267 . -4) (undo-tree-id17268 . -4) (undo-tree-id17269 . -4) 78822 (78817 . 78822) (t 25725 52916 933755 416000) 78767) nil (25725 52964 437557 189000) 0 nil])
([nil nil ((78873 . 78878) 78819) nil (25725 52964 436298 534000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -78874) 78878) nil (25725 52964 436294 762000) 0 nil])
([nil nil ((78955 . 78960) 78875) nil (25725 52964 436291 410000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -78956) 78960) nil (25725 52964 436288 127000) 0 nil])
([nil nil ((79042 . 79047) 78957) nil (25725 52964 436284 774000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -79043) 79047) nil (25725 52964 436280 863000) 0 nil])
([nil nil ((79141 . 79146) 79044) nil (25725 52964 436277 930000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -79142) 79146) nil (25725 52964 436273 669000) 0 nil])
([nil nil ((79233 . 79238) 79143) nil (25725 52964 436270 806000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -79234) 79238) nil (25725 52964 436266 615000) 0 nil])
([nil nil ((79308 . 79313) 79235) nil (25725 52964 436262 774000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -79309) 79313) nil (25725 52964 436258 513000) 0 nil])
([nil nil ((79358 . 79363) 79310) nil (25725 52964 436254 253000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -79359) 79363) nil (25725 52964 436250 341000) 0 nil])
([nil nil ((79402 . 79407) 79374) nil (25725 52964 436246 989000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -79403) 79407) nil (25725 52964 436243 148000) 0 nil])
([nil nil ((79428 . 79433) 79404) nil (25725 52964 436239 865000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -79429) 79433) nil (25725 52964 436236 93000) 0 nil])
([nil nil ((79453 . 79458) 79430) nil (25725 52964 436232 741000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -79454) 79458) nil (25725 52964 436228 480000) 0 nil])
([nil nil ((79539 . 79544) 79455) nil (25725 52964 436225 198000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -79540) 79544) nil (25725 52964 436221 775000) 0 nil])
([nil nil ((79574 . 79579) 79541) nil (25725 52964 436218 353000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -79575) 79579) nil (25725 52964 436214 93000) 0 nil])
([nil nil ((79631 . 79636) 79576) nil (25725 52964 436210 740000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -79632) 79636) nil (25725 52964 436207 457000) 0 nil])
([nil nil ((79689 . 79694) 79633) nil (25725 52964 436204 175000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -79690) 79694) nil (25725 52964 436200 403000) 0 nil])
([nil nil ((79785 . 79790) 79691) nil (25725 52964 436197 51000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -79786) 79790) nil (25725 52964 436193 139000) 0 nil])
([nil nil ((79852 . 79857) 79787) nil (25725 52964 436189 298000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -79853) 79857) nil (25725 52964 436185 457000) 0 nil])
([nil nil ((79910 . 79915) 79854) nil (25725 52964 436181 615000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -79911) 79915) nil (25725 52964 436177 844000) 0 nil])
([nil nil ((80049 . 80054) 80026) nil (25725 52964 436174 72000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -80050) 80054) nil (25725 52964 436169 881000) 0 nil])
([nil nil ((80095 . 80100) 80051) nil (25725 52964 436166 110000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -80096) 80100) nil (25725 52964 436162 338000) 0 nil])
([nil nil ((80049 . 80054) 80026) nil (25725 52964 436158 567000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -80050) 80054) nil (25725 52964 436154 655000) 0 nil])
([nil nil ((80025 . 80030) 79912) nil (25725 52964 436151 722000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -80026) 80030) nil (25725 52964 436147 881000) 0 nil])
([nil nil ((80234 . 80239) 80210) nil (25725 52964 436144 528000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -80235) 80239) nil (25725 52964 436141 176000) 0 nil])
([nil nil ((80383 . 80388) 80267) nil (25725 52964 436137 404000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -80384) 80388) nil (25725 52964 436133 702000) 0 nil])
([nil nil ((80384 . 80389) 80384) nil (25725 52964 436129 931000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -80385) 80389) nil (25725 52964 436126 578000) 0 nil])
([nil nil ((80266 . 80271) 80236) nil (25725 52964 436122 737000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -80267) 80271) nil (25725 52964 436118 337000) 0 nil])
([nil nil ((80384 . 80389) 80268) nil (25725 52964 436114 565000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -80385) 80389) nil (25725 52964 436109 746000) 0 nil])
([nil nil ((80446 . 80451) 80388) nil (25725 52964 436105 485000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -80447) 80451) nil (25725 52964 436100 806000) 0 nil])
([nil nil ((80531 . 80536) 80448) nil (25725 52964 435836 447000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -80532) 80536) nil (25725 52964 435771 492000) 0 nil])
([nil nil ((80593 . 80598) 80533) nil (25725 52964 435767 721000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -80594) 80598) nil (25725 52964 435763 390000) 0 nil])
([nil nil ((80645 . 80650) 80595) nil (25725 52964 435759 200000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -80646) 80650) nil (25725 52964 435754 870000) 0 nil])
([nil nil ((80680 . 80685) 80647) nil (25725 52964 435750 679000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -80681) 80685) nil (25725 52964 435745 860000) 0 nil])
([nil nil ((80726 . 80731) 80682) nil (25725 52964 435661 488000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -80727) 80731) nil (25725 52964 435655 901000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -78819) (undo-tree-id16709 . -1) (undo-tree-id16710 . -1) (#("k" 0 1 (fontified nil)) . -78820) 78821 (78819 . 78821)) nil (25725 52964 435644 866000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -78937) (undo-tree-id17272 . -1) (#("k" 0 1 (fontified t)) . -78938) (undo-tree-id17273 . -1) (#("k" 0 1 (fontified t)) . -78939) (undo-tree-id17274 . -1) 78940 (78937 . 78940) (nil rear-nonsticky nil 78936 . 78937) (nil fontified nil 78936 . 78937) (nil fontified nil 78935 . 78936) (nil fontified nil 78927 . 78935) (nil fontified nil 78926 . 78927) (nil fontified nil 78898 . 78926) (nil fontified nil 78897 . 78898) (nil fontified nil 78891 . 78897) (78891 . 78937) (#("q" 0 1 (fontified t)) . -78891) (undo-tree-id17275 . -1) 78892 (78891 . 78892) (#("j" 0 1 (fontified t)) . -78891) (undo-tree-id17276 . -1) 78892 (78891 . 78892) (78890 . 78891) (78875 . 78890) (#("c" 0 1 (fontified t)) . -78875) (undo-tree-id17277 . -1) (undo-tree-id17278 . -1) (#("d" 0 1 (fontified t)) . -78876) (undo-tree-id17279 . -1) (#("d" 0 1 (fontified t)) . -78877) (undo-tree-id17280 . -1) (#(" " 0 1 (fontified t)) . -78878) (undo-tree-id17281 . -1) (#("e" 0 1 (fontified t)) . -78879) (undo-tree-id17282 . -1) 78880 (78863 . 78880) (78849 . 78863) (#("e" 0 1 (fontified t)) . -78849) (undo-tree-id17283 . -1) 78850 (78842 . 78850) (#("s" 0 1 (fontified t)) . -78842) (undo-tree-id17284 . -1) (undo-tree-id17285 . -1) (#("a" 0 1 (fontified t)) . -78843) (undo-tree-id17286 . -1) 78844 (78842 . 78844) (#("a" 0 1 (fontified nil)) . -78842) (undo-tree-id17287 . -1) (undo-tree-id17288 . -1) (#("m" 0 1 (fontified t)) . -78843) (undo-tree-id17289 . -1) 78844 (78842 . 78844) (78822 . 78842) (78818 . 78822) (t 25725 52964 567706 520000)) nil (25725 54443 952037 459000) 0 nil])
([nil nil ((#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 78916) (undo-tree-id17270 . -4) (undo-tree-id17271 . -2) 78918) nil (25725 54443 951903 88000) 0 nil])
([nil nil ((nil rear-nonsticky nil 78924 . 78925) (nil fontified nil 78916 . 78925) (78916 . 78925)) nil (25725 54443 951879 762000) 0 nil])
([nil nil ((78925 . 78927)) nil (25725 54443 951874 524000) 0 nil])
([nil nil ((78932 . 78933) 78926) nil (25725 54443 951869 775000) 0 nil])
([nil nil ((nil rear-nonsticky nil 79212 . 79213) (nil fontified nil 78933 . 79213) (78933 . 79213)) nil (25725 54443 951856 576000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -79281) (undo-tree-id17290 . -4) 79285 (79280 . 79285) (t 25725 54444 80125 227000) 79280) nil (25725 54507 905291 545000) 0 nil])
([nil nil ((79224 . 79225) 79224) nil (25725 54507 905069 874000) 0 nil])
([nil nil ((nil rear-nonsticky nil 80520 . 80521) (nil fontified nil 79224 . 80521) (79224 . 80521)) nil (25725 54507 905064 217000) 0 nil])
([nil nil ((80521 . 80522) 80520) nil (25725 54507 904986 137000) 0 nil])
([nil nil ((80631 . 80652) (#("b" 0 1 (fontified t)) . -80631) (undo-tree-id17334 . -1) 80632 (80625 . 80632) (#("k" 0 1 (fontified nil)) . -80625) 80626 (80624 . 80626) (#("c" 0 1 (fontified t)) . -80624) (undo-tree-id17335 . -1) (#("i" 0 1 (fontified t)) . -80625) (undo-tree-id17336 . -1) 80626 (80623 . 80626) (80617 . 80623) (#("i" 0 1 (fontified t)) . -80617) (undo-tree-id17337 . -1) (undo-tree-id17338 . -1) (#("s" 0 1 (fontified t)) . -80618) (undo-tree-id17339 . -1) (undo-tree-id17340 . -1) 80619 (80609 . 80619) (80603 . 80609) (80598 . 80603) (#("n" 0 1 (fontified t)) . -80598) (undo-tree-id17341 . -1) (undo-tree-id17342 . -1) 80599 (80598 . 80599) (#("c" 0 1 (fontified t)) . -80598) (undo-tree-id17343 . -1) (undo-tree-id17344 . -1) 80599 (80597 . 80599) (#("s" 0 1 (fontified t)) . -80597) (undo-tree-id17345 . -1) 80598 (80579 . 80598) (t 25725 54508 38468 388000)) nil (25725 54771 441261 169000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -80776) (undo-tree-id17328 . -1) (#("e" 0 1 (fontified t)) . -80777) (undo-tree-id17329 . -1) (#("d" 0 1 (fontified t)) . -80778) (undo-tree-id17330 . -1) 80779 (80776 . 80779) (80773 . 80776) (#("r" 0 1 (fontified t)) . -80773) (undo-tree-id17331 . -1) (undo-tree-id17332 . -1) (#("f" 0 1 (fontified t)) . -80774) (undo-tree-id17333 . -1) 80775 (80760 . 80775) (80739 . 80760) (80734 . 80739) 80654) nil (25725 54771 441040 752000) 0 nil])
([nil nil ((80929 . 80944) (80908 . 80929) (80893 . 80908) (#("o" 0 1 (fontified t)) . -80893) (undo-tree-id17322 . -1) (#("i" 0 1 (fontified t)) . -80894) (undo-tree-id17323 . -1) (#("r" 0 1 (fontified t)) . -80895) (undo-tree-id17324 . -1) (#(" " 0 1 (fontified t)) . -80896) (undo-tree-id17325 . -1) 80897 (80881 . 80897) (80878 . 80881) (#("a" 0 1 (fontified t)) . -80878) (undo-tree-id17326 . -1) (#("b" 0 1 (fontified t)) . -80879) (undo-tree-id17327 . -1) 80880 (80868 . 80880) (80863 . 80868) 80817) nil (25725 54771 441011 209000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -81048) (undo-tree-id17315 . -1) (#(" " 0 1 (fontified t)) . -81049) (undo-tree-id17316 . -1) 81050 (81048 . 81050) (#("t" 0 1 (fontified t)) . -81048) (undo-tree-id17317 . -1) (undo-tree-id17318 . -1) (#("o" 0 1 (fontified t)) . -81049) (undo-tree-id17319 . -1) (undo-tree-id17320 . -1) (#(" " 0 1 (fontified t)) . -81050) (undo-tree-id17321 . -1) 81051 (81048 . 81051) (81043 . 81048) 81024) nil (25725 54771 440984 111000) 0 nil])
([nil nil ((nil rear-nonsticky nil 81287 . 81288) (nil fontified nil 81048 . 81288) (81048 . 81288) 81047) nil (25725 54771 440960 714000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -81381) (undo-tree-id17314 . -4) 81385 (81380 . 81385) 81290) nil (25725 54771 440955 476000) 0 nil])
([nil nil ((nil rear-nonsticky nil 81679 . 81680) (nil fontified nil 81381 . 81680) (81381 . 81680)) nil (25725 54771 440947 235000) 0 nil])
([nil nil ((#("In the code below I leverage the onload event to create a callback programatically notifying us when the JavaScript file has been downloaded and exectued." 0 153 (fontified t) 153 154 (fontified t rear-nonsticky t)) . 81526) (undo-tree-id17313 . -153)) nil (25725 54771 440941 508000) 0 nil])
([nil nil ((81560 . 81574) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -81560) (undo-tree-id17300 . -1) (undo-tree-id17301 . -1) (#("n" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -81561) (undo-tree-id17302 . -1) (undo-tree-id17303 . -1) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -81562) (undo-tree-id17304 . -1) (undo-tree-id17305 . -1) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -81563) (undo-tree-id17306 . -1) (undo-tree-id17307 . -1) (#("r" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -81564) (undo-tree-id17308 . -1) (undo-tree-id17309 . -1) 81565 (nil rear-nonsticky nil 81580 . 81581) (nil fontified nil 81580 . 81581) (nil fontified nil 81579 . 81580) (nil fontified nil 81571 . 81579) (nil fontified nil 81570 . 81571) (nil fontified nil 81542 . 81570) (nil fontified nil 81541 . 81542) (nil fontified nil 81535 . 81541) (81535 . 81581) (#("s" 0 1 (fontified t)) . -81535) (undo-tree-id17310 . -1) (#("r" 0 1 (fontified t)) . -81536) (undo-tree-id17311 . -1) (#("c" 0 1 (fontified t)) . -81537) (undo-tree-id17312 . -1) 81538 (81535 . 81538) (81534 . 81535) (81527 . 81534) (81526 . 81527) 81525) nil (25725 54771 440923 0) 0 nil])
([nil nil ((81579 . 81580) 81573) nil (25725 54771 440654 603000) 0 nil])
([nil nil ((nil rear-nonsticky nil 82295 . 82296) (nil fontified nil 81580 . 82296) (81580 . 82296)) nil (25725 54771 440650 342000) 0 nil])
([nil nil ((82428 . 82443) (#("h" 0 1 (fontified nil)) . -82428) (undo-tree-id17291 . -1) (undo-tree-id17292 . -1) (#("a" 0 1 (fontified t)) . -82429) (undo-tree-id17293 . -1) (undo-tree-id17294 . -1) 82430 (82412 . 82430) (#("d" 0 1 (fontified t)) . -82412) (undo-tree-id17295 . -1) (undo-tree-id17296 . -1) 82413 (82409 . 82413) (#(" " 0 1 (fontified t)) . -82409) (undo-tree-id17297 . -1) 82410 (82399 . 82410) (82395 . 82399) (#("h" 0 1 (fontified t)) . -82395) (undo-tree-id17298 . -1) (undo-tree-id17299 . -1) 82396 (82387 . 82396) (82382 . 82387) 82314) nil (25725 54771 440640 844000) 0 nil])
([nil nil ((82444 . 82449) 82444) nil (25725 54771 440590 349000) 0 nil])
([nil nil ((nil rear-nonsticky nil 82754 . 82755) (nil fontified nil 82499 . 82755) (82499 . 82755) (t 25725 54771 563121 227000)) nil (25725 54829 73035 993000) 0 nil])
([nil nil ((82755 . 82756) 82754) nil (25725 54829 73031 244000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . -82803) (undo-tree-id17381 . -1) (#("k" 0 1 (fontified t)) . -82804) (undo-tree-id17382 . -1) 82805 (82803 . 82805) (#("j" 0 1 (fontified t)) . -82803) (undo-tree-id17383 . -1) (#("k" 0 1 (fontified t)) . -82804) (undo-tree-id17384 . -1) 82805 (82803 . 82805) (#("j" 0 1 (fontified t)) . -82803) (undo-tree-id17385 . -1) (#("k" 0 1 (fontified t)) . -82804) (undo-tree-id17386 . -1) 82805 (82803 . 82805) (#("j" 0 1 (fontified t)) . -82803) (undo-tree-id17387 . -1) (#("k" 0 1 (fontified t)) . -82804) (undo-tree-id17388 . -1) 82805 (82803 . 82805) (#("k" 0 1 (fontified t)) . -82803) (undo-tree-id17389 . -1) (#("k" 0 1 (fontified t)) . -82804) (undo-tree-id17390 . -1) 82805 (82803 . 82805) (#("j" 0 1 (fontified t)) . -82803) (undo-tree-id17391 . -1) 82804 (82803 . 82804) (#("j" 0 1 (fontified t)) . -82803) (undo-tree-id17392 . -1) (#("k" 0 1 (fontified t)) . -82804) (undo-tree-id17393 . -1) 82805 (82803 . 82805) (nil rear-nonsticky nil 82802 . 82803) (nil fontified nil 82802 . 82803) (nil fontified nil 82801 . 82802) (nil fontified nil 82793 . 82801) (nil fontified nil 82792 . 82793) (nil fontified nil 82764 . 82792) (nil fontified nil 82763 . 82764) (nil fontified nil 82757 . 82763) (82757 . 82803) (82756 . 82757) 82756) nil (25725 54829 73018 672000) 0 nil])
([nil nil ((#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82797) (undo-tree-id17360 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82798) (undo-tree-id17361 . -1) 82799 (82797 . 82799) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82797) (undo-tree-id17362 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82798) (undo-tree-id17363 . -1) 82799 (82797 . 82799) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82797) (undo-tree-id17364 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82798) (undo-tree-id17365 . -1) 82799 (82796 . 82799) (#("s" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82796) (undo-tree-id17366 . -1) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82797) (undo-tree-id17367 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82798) (undo-tree-id17368 . -1) 82799 (82793 . 82799) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82793) (undo-tree-id17369 . -1) (#("i" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82794) (undo-tree-id17370 . -1) (#("p" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82795) (undo-tree-id17371 . -1) (#("s" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82796) (undo-tree-id17372 . -1) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82797) (undo-tree-id17373 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82798) (undo-tree-id17374 . -1) 82799 (82792 . 82799) (#("f" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82792) (undo-tree-id17375 . -1) (#("i" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82793) (undo-tree-id17376 . -1) (#("p" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82794) (undo-tree-id17377 . -1) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -82795) (undo-tree-id17378 . -1) 82796 (82782 . 82796) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 82782) (undo-tree-id17379 . -4) (undo-tree-id17380 . -1) 82783) nil (25725 54829 72882 832000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -82803) (undo-tree-id17346 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -82804) (undo-tree-id17347 . -1) 82805 (82803 . 82805) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -82803) (undo-tree-id17348 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -82804) (undo-tree-id17349 . -1) 82805 (82803 . 82805) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -82803) (undo-tree-id17350 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -82804) (undo-tree-id17351 . -1) 82805 (82803 . 82805) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -82803) (undo-tree-id17352 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -82804) (undo-tree-id17353 . -1) 82805 (82803 . 82805) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -82803) (undo-tree-id17354 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -82804) (undo-tree-id17355 . -1) 82805 (82803 . 82805) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -82803) (undo-tree-id17356 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -82804) (undo-tree-id17357 . -1) 82805 (82803 . 82805) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -82803) (undo-tree-id17358 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -82804) (undo-tree-id17359 . -1) 82805 (82803 . 82805) (82802 . 82803) 82796) nil (25725 54829 72817 182000) 0 nil])
([nil nil ((nil rear-nonsticky nil 83318 . 83319) (nil fontified nil 82803 . 83319) (82803 . 83319)) nil (25725 54829 72747 341000) 0 nil])
([nil nil ((nil rear-nonsticky nil 84428 . 84429) (nil fontified nil 83374 . 84429) (83374 . 84429) (t 25725 54829 202969 878000)) nil (25725 54924 404989 34000) 0 nil])
([nil nil ((84429 . 84430) 84428) nil (25725 54924 404984 284000) 0 nil])
([nil nil (("" . -84448) (84448 . 84450) ("" . -84270) (84270 . 84272) ("" . -84150) (84150 . 84152) ("" . -84053) (84053 . 84055) ("" . -83949) (83949 . 83951) ("" . -83892) (83892 . 83894) ("" . -83670) (83670 . 83672) ("" . -83574) (83574 . 83576) ("" . -83484) (83484 . 83486) ("" . -83374) (83374 . 83376)) nil (25725 54924 404977 719000) 0 nil])
([nil nil ((#("> 
" 0 1 (fontified t face (rainbow-delimiters-unmatched-face)) 1 2 (fontified t) 2 3 (fontified t)) . 84448) (undo-tree-id17409 . -3) (undo-tree-id17410 . -2) (undo-tree-id17411 . 1) (undo-tree-id17412 . -3) (undo-tree-id17413 . -2)) nil (25725 54924 404964 450000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -84473) (undo-tree-id17408 . -4) 84477 (84472 . 84477) 84448) nil (25725 54924 404949 15000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -84473) (undo-tree-id17407 . -4) 84477 (84472 . 84477) 84448) nil (25725 54924 404941 123000) 0 nil])
([nil nil ((nil rear-nonsticky nil 84493 . 84494) (nil fontified nil 84493 . 84494) (nil fontified nil 84492 . 84493) (nil fontified nil 84484 . 84492) (nil fontified nil 84483 . 84484) (nil fontified nil 84455 . 84483) (nil fontified nil 84454 . 84455) (nil fontified nil 84448 . 84454) (84448 . 84494) (#("i" 0 1 (fontified t)) . -84448) (undo-tree-id17406 . -1) 84449 (84448 . 84449) (84447 . 84448) 84270) nil (25725 54924 404931 485000) 0 nil])
([nil nil ((84476 . 84483) (84473 . 84476) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 84473) (undo-tree-id17404 . -4) (undo-tree-id17405 . -2) 84475) nil (25725 54924 404917 97000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -84489) (undo-tree-id17394 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -84490) (undo-tree-id17395 . -1) (#("k" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -84491) (undo-tree-id17396 . -1) 84492 (84489 . 84492) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -84489) (undo-tree-id17397 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -84490) (undo-tree-id17398 . -1) (#("p" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -84491) (undo-tree-id17399 . -1) 84492 (84489 . 84492) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -84489) (undo-tree-id17400 . -1) (undo-tree-id17401 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -84490) (undo-tree-id17402 . -1) (undo-tree-id17403 . -1) 84491 (84489 . 84491) (84488 . 84489) 84482) nil (25725 54924 404795 504000) 0 nil])
([nil nil ((nil rear-nonsticky nil 85001 . 85002) (nil fontified nil 84489 . 85002) (84489 . 85002)) nil (25725 54924 404552 247000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -85039) (undo-tree-id17425 . -4) 85043 (85038 . 85043) (t 25725 54924 627065 942000) 85014) nil (25725 55992 127751 312000) 0 nil])
([nil nil ((85084 . 85085) (85067 . 85084) (85061 . 85067) (#("c" 0 1 (fontified t)) . -85061) (undo-tree-id17418 . -1) (#("h" 0 1 (fontified t)) . -85062) (undo-tree-id17419 . -1) (#("e" 0 1 (fontified t)) . -85063) (undo-tree-id17420 . -1) 85064 (85062 . 85064) (#("h" 0 1 (fontified t)) . -85062) (undo-tree-id17421 . -1) (#("e" 0 1 (fontified nil)) . -85063) (undo-tree-id17422 . -1) (#("d" 0 1 (fontified t)) . -85064) (undo-tree-id17423 . -1) (#(" " 0 1 (fontified t)) . -85065) (undo-tree-id17424 . -1) 85066 (85056 . 85066) (85035 . 85056) (85014 . 85035) (85013 . 85014) 85013) nil (25725 55992 127737 903000) 0 nil])
([nil nil ((nil rear-nonsticky nil 85992 . 85993) (nil fontified nil 85085 . 85993) (85085 . 85993)) nil (25725 55992 127600 598000) 0 nil])
([nil nil ((#("one of the events in the example above is attached to the body element
" 0 71 (fontified t)) . 85014) (undo-tree-id17414 . -71) (undo-tree-id17415 . -70) (undo-tree-id17416 . -71) (undo-tree-id17417 . -70)) nil (25725 55992 127594 452000) 0 nil])
([nil nil ((nil rear-nonsticky nil 85968 . 85969) (nil fontified nil 85968 . 85969) (nil fontified nil 85967 . 85968) (nil fontified nil 85959 . 85967) (nil fontified nil 85958 . 85959) (nil fontified nil 85930 . 85958) (nil fontified nil 85929 . 85930) (nil fontified nil 85923 . 85929) (85923 . 85969) (85922 . 85923) 85607) nil (25725 55992 129166 475000) 0 nil])
([nil nil ((85958 . 85959) 85923) nil (25725 56113 832817 918000) 0 nil] [nil nil ((nil rear-nonsticky nil 86280 . 86281) (nil fontified nil 85924 . 86281) (85924 . 86281) 85923) ((#("<!DOCTYPE html>
<html lang=\"en\">
<body>

<div>click me</div>

<script>
var elementDiv = document.querySelector('div');

// property event handler 
elementDiv.onclick = function(){console.log('I\\'m first, but I get overidden/replace')};

//overrides/replaces the prior value
elementDiv.onclick = function(){console.log('I win')};

</script> 
</body>
</html>
" 0 1 (fontified nil face (rainbow-delimiters-unmatched-face)) 1 14 (fontified nil) 14 15 (fontified nil face (rainbow-delimiters-unmatched-face)) 15 16 (fontified nil) 16 17 (fontified nil face (rainbow-delimiters-unmatched-face)) 17 31 (fontified nil) 31 32 (fontified nil face (rainbow-delimiters-unmatched-face)) 32 33 (fontified nil) 33 34 (fontified nil face (rainbow-delimiters-unmatched-face)) 34 38 (fontified nil) 38 39 (fontified nil face (rainbow-delimiters-unmatched-face)) 39 41 (fontified nil) 41 42 (fontified nil face (rainbow-delimiters-unmatched-face)) 42 45 (fontified nil) 45 46 (fontified nil face (rainbow-delimiters-unmatched-face)) 46 54 (fontified nil) 54 55 (fontified nil face (rainbow-delimiters-unmatched-face)) 55 59 (fontified nil) 59 60 (fontified nil face (rainbow-delimiters-unmatched-face)) 60 62 (fontified nil) 62 63 (fontified nil face (rainbow-delimiters-unmatched-face)) 63 69 (fontified nil) 69 70 (fontified nil face (rainbow-delimiters-unmatched-face)) 70 110 (fontified nil) 110 111 (fontified nil face (rainbow-delimiters-unmatched-face)) 111 116 (fontified nil) 116 117 (fontified nil face (rainbow-delimiters-unmatched-face)) 117 176 (fontified nil) 176 177 (fontified nil face (rainbow-delimiters-unmatched-face)) 177 178 (fontified nil face (rainbow-delimiters-unmatched-face)) 178 179 (fontified nil face (rainbow-delimiters-unmatched-face)) 179 190 (fontified nil) 190 191 (fontified nil face (rainbow-delimiters-unmatched-face)) 191 232 (fontified nil) 232 233 (fontified nil face (rainbow-delimiters-unmatched-face)) 233 234 (fontified nil face (rainbow-delimiters-unmatched-face)) 234 303 (fontified nil) 303 304 (fontified nil face (rainbow-delimiters-unmatched-face)) 304 305 (fontified nil face (rainbow-delimiters-unmatched-face)) 305 306 (fontified nil face (rainbow-delimiters-unmatched-face)) 306 317 (fontified nil) 317 318 (fontified nil face (rainbow-delimiters-unmatched-face)) 318 325 (fontified nil) 325 326 (fontified nil face (rainbow-delimiters-unmatched-face)) 326 327 (fontified nil face (rainbow-delimiters-unmatched-face)) 327 330 (fontified nil) 330 331 (fontified nil face (rainbow-delimiters-unmatched-face)) 331 338 (fontified nil) 338 339 (fontified nil face (rainbow-delimiters-unmatched-face)) 339 341 (fontified nil) 341 342 (fontified nil face (rainbow-delimiters-unmatched-face)) 342 347 (fontified nil) 347 348 (fontified nil face (rainbow-delimiters-unmatched-face)) 348 349 (fontified nil) 349 350 (fontified nil face (rainbow-delimiters-unmatched-face)) 350 355 (fontified nil) 355 356 (fontified nil face (rainbow-delimiters-unmatched-face)) 356 357 (fontified nil rear-nonsticky nil)) . 85924) (undo-tree-id17426 . -356) (undo-tree-id17427 . -16) (nil fontified t 86272 . 86273) (nil fontified t 86271 . 86272) (nil fontified t 86266 . 86271) (nil fontified t 86265 . 86266) (nil fontified t 86263 . 86265) (nil fontified t 86262 . 86263) (nil fontified t 86255 . 86262) (nil fontified t 86254 . 86255) (nil fontified t 86251 . 86254) (nil fontified t 86250 . 86251) (nil fontified t 86249 . 86250) (nil fontified t 86242 . 86249) (nil fontified t 86241 . 86242) (nil fontified t 86230 . 86241) (nil fontified t 86229 . 86230) (nil fontified t 86228 . 86229) (nil fontified t 86227 . 86228) (nil fontified t 86158 . 86227) (nil fontified t 86157 . 86158) (nil fontified t 86156 . 86157) (nil fontified t 86115 . 86156) (nil fontified t 86114 . 86115) (nil fontified t 86103 . 86114) (nil fontified t 86102 . 86103) (nil fontified t 86101 . 86102) (nil fontified t 86100 . 86101) (nil fontified t 86041 . 86100) (nil fontified t 86040 . 86041) (nil fontified t 86035 . 86040) (nil fontified t 86034 . 86035) (nil fontified t 85994 . 86034) (nil fontified t 85993 . 85994) (nil fontified t 85987 . 85993) (nil fontified t 85986 . 85987) (nil fontified t 85984 . 85986) (nil fontified t 85983 . 85984) (nil fontified t 85979 . 85983) (nil fontified t 85978 . 85979) (nil fontified t 85970 . 85978) (nil fontified t 85969 . 85970) (nil fontified t 85966 . 85969) (nil fontified t 85965 . 85966) (nil fontified t 85963 . 85965) (nil fontified t 85962 . 85963) (nil fontified t 85958 . 85962) (nil fontified t 85957 . 85958) (nil fontified t 85956 . 85957) (nil fontified t 85955 . 85956) (nil fontified t 85941 . 85955) (nil fontified t 85940 . 85941) (nil fontified t 85939 . 85940) (nil fontified t 85938 . 85939) (nil fontified t 85925 . 85938) (nil fontified t 85924 . 85925) (nil rear-nonsticky t 86280 . 86281)) (25725 55992 127303 150000) 0 nil])
([nil nil ((nil rear-nonsticky nil 86315 . 86316) (nil fontified nil 85959 . 86316) (85959 . 86316)) nil (25725 56113 832814 147000) 0 nil])
nil
([nil nil ((#("j" 0 1 (font-lock-fontified t fontified nil font-lock-multiline t face org-block-begin-line)) . -85964) (undo-tree-id17428 . -1) (#("k" 0 1 (font-lock-fontified t fontified nil font-lock-multiline t face org-block-begin-line)) . -85965) 85966 (85948 . 85966) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 85948) (undo-tree-id17429 . -4) (undo-tree-id17430 . -5) (undo-tree-id17431 . -4) 85952) nil (25725 56113 833467 153000) 0 nil])
([nil nil ((86422 . 86423) (86401 . 86422) (86380 . 86401) (86365 . 86380)) nil (25725 56232 537653 706000) 0 nil] [nil nil ((nil rear-nonsticky nil 86751 . 86752) (nil fontified nil 86365 . 86752) (86365 . 86752)) ((#("Event Type	Event Interface	Description	Event Targets	Bubbles	Cancelable
load	Event, UIEvent	Fires when an asset is loaded	Element, Document, window, XMLHttpRequest, XMLHttpRequestUpload	No	No
unload	UIEvent	Fires when a resource is removed	window, <body>, <frameset>	No	No
abort	Event, UIEvent	Fires when a resource loading is stopped	Element, XMLHttpRequest, XMLHttpRequestUpload	Yes	No" 0 248 (fontified nil) 248 249 (fontified nil face (rainbow-delimiters-unmatched-face)) 249 253 (fontified nil) 253 254 (fontified nil face (rainbow-delimiters-unmatched-face)) 254 256 (fontified nil) 256 257 (fontified nil face (rainbow-delimiters-unmatched-face)) 257 265 (fontified nil) 265 266 (fontified nil face (rainbow-delimiters-unmatched-face)) 266 273 (fontified nil) 273 386 (fontified nil) 386 387 (fontified nil rear-nonsticky nil)) . 86365) (undo-tree-id17432 . -386) (undo-tree-id17433 . -273) (undo-tree-id17434 . -386) (undo-tree-id17435 . -273) (undo-tree-id17436 . -386) (undo-tree-id17437 . -386) (nil fontified t 86631 . 86638) (nil fontified t 86630 . 86631) (nil fontified t 86622 . 86630) (nil fontified t 86621 . 86622) (nil fontified t 86619 . 86621) (nil fontified t 86618 . 86619) (nil fontified t 86614 . 86618) (nil fontified t 86613 . 86614) (nil fontified t 86365 . 86613) (nil rear-nonsticky t 86751 . 86752)) (25725 56113 832705 755000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -86450) (undo-tree-id17448 . -4) 86454 (86449 . 86454) 86448) nil (25725 56232 537647 560000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 86495 . 86496) (nil fontified nil 86495 . 86496) (nil fontified nil 86494 . 86495) (nil fontified nil 86486 . 86494) (nil fontified nil 86485 . 86486) (nil fontified nil 86457 . 86485) (nil fontified nil 86456 . 86457) (nil fontified nil 86450 . 86456) (86450 . 86496)) nil (25725 56232 537635 687000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -86450) (undo-tree-id17447 . -4) 86454 (86449 . 86454) 86426) nil (25725 56232 537515 142000) 0 nil])
([nil nil ((nil rear-nonsticky nil 87597 . 87598) (nil fontified nil 86450 . 87598) (86450 . 87598)) nil (25725 56232 537506 622000) 0 nil])
([nil nil ((#("ChatGPT
" 0 8 (fontified t)) . 86451) (undo-tree-id17444 . -7) (undo-tree-id17445 . -8) (undo-tree-id17446 . -6) 86457) nil (25725 56232 537500 825000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -87627) (undo-tree-id17438 . -1) (#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -87628) (undo-tree-id17439 . -1) (#("=" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -87629) (undo-tree-id17440 . -1) (#("=" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -87630) (undo-tree-id17441 . -1) (#("=" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -87631) (undo-tree-id17442 . -1) (#("=" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -87632) (undo-tree-id17443 . -1) 87633 (87627 . 87633) (87626 . 87627) 87597) nil (25725 56232 537484 552000) 0 nil])
([nil nil ((nil rear-nonsticky nil 88900 . 88901) (nil fontified nil 87627 . 88901) (87627 . 88901)) nil (25725 56232 536998 251000) 0 nil])
([nil nil ((nil rear-nonsticky nil 89764 . 89765) (nil fontified nil 88913 . 89765) (88913 . 89765) (t 25725 56232 660782 281000)) nil (25725 56251 884551 790000) 0 nil])
([nil nil ((89765 . 89766) 89764) nil (25725 56251 884547 111000) 0 nil])
([nil nil ((89766 . 89767)) nil (25725 56251 884542 780000) 0 nil])
([nil nil ((#("j" 0 1 (fontified nil)) . -89766) 89767) nil (25725 56251 884538 520000) 0 nil])
([nil nil ((89766 . 89767)) nil (25725 56251 884534 679000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -89766) (undo-tree-id17538 . -1) 89767) nil (25725 56251 884530 349000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -89765) (undo-tree-id17536 . -1) (undo-tree-id17537 . -1) 89766) nil (25725 56251 884523 155000) 0 nil])
([nil nil ((89765 . 89767)) nil (25725 56251 884514 216000) 0 nil])
([nil nil ((89767 . 89768)) nil (25725 56251 884509 885000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -89767) (undo-tree-id17449 . -1) (undo-tree-id17450 . -1) (undo-tree-id17451 . -1) (undo-tree-id17452 . -1) (undo-tree-id17453 . -1) (undo-tree-id17454 . -1) (undo-tree-id17455 . -1) (undo-tree-id17456 . -1) (undo-tree-id17457 . -1) (undo-tree-id17458 . -1) (undo-tree-id17459 . -1) (undo-tree-id17460 . -1) (undo-tree-id17461 . -1) (undo-tree-id17462 . -1) (undo-tree-id17463 . -1) (undo-tree-id17464 . -1) (undo-tree-id17465 . -1) (undo-tree-id17466 . -1) (undo-tree-id17467 . -1) (undo-tree-id17468 . -1) (undo-tree-id17469 . -1) (undo-tree-id17470 . -1) (undo-tree-id17471 . -1) (undo-tree-id17472 . -1) (undo-tree-id17473 . -1) (undo-tree-id17474 . -1) (undo-tree-id17475 . -1) (undo-tree-id17476 . -1) (undo-tree-id17477 . -1) (undo-tree-id17478 . -1) (undo-tree-id17479 . -1) (undo-tree-id17480 . -1) (undo-tree-id17481 . -1) (undo-tree-id17482 . -1) (undo-tree-id17483 . -1) (undo-tree-id17484 . -1) (undo-tree-id17485 . -1) (undo-tree-id17486 . -1) (undo-tree-id17487 . -1) (undo-tree-id17488 . -1) (undo-tree-id17489 . -1) (undo-tree-id17490 . -1) (undo-tree-id17491 . -1) (undo-tree-id17492 . -1) (undo-tree-id17493 . -1) (undo-tree-id17494 . -1) (undo-tree-id17495 . -1) (undo-tree-id17496 . -1) (undo-tree-id17497 . -1) (undo-tree-id17498 . -1) (undo-tree-id17499 . -1) (undo-tree-id17500 . -1) (undo-tree-id17501 . -1) (undo-tree-id17502 . -1) (undo-tree-id17503 . -1) (undo-tree-id17504 . -1) (undo-tree-id17505 . -1) (undo-tree-id17506 . -1) (undo-tree-id17507 . -1) (undo-tree-id17508 . -1) (undo-tree-id17509 . -1) (undo-tree-id17510 . -1) (undo-tree-id17511 . -1) (undo-tree-id17512 . -1) (undo-tree-id17513 . -1) (undo-tree-id17514 . -1) (undo-tree-id17515 . -1) (undo-tree-id17516 . -1) (undo-tree-id17517 . -1) (undo-tree-id17518 . -1) (undo-tree-id17519 . -1) (undo-tree-id17520 . -1) (undo-tree-id17521 . -1) (undo-tree-id17522 . -1) (undo-tree-id17523 . -1) (undo-tree-id17524 . -1) (undo-tree-id17525 . -1) (undo-tree-id17526 . -1) (undo-tree-id17527 . -1) (undo-tree-id17528 . -1) (undo-tree-id17529 . -1) (undo-tree-id17530 . -1) (undo-tree-id17531 . -1) (undo-tree-id17532 . -1) (undo-tree-id17533 . -1) (undo-tree-id17534 . -1) (undo-tree-id17535 . -1) 89768) nil (25725 56251 884491 168000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -88981) (undo-tree-id17548 . -1) 88982 (88981 . 88982) (#("j" 0 1 (fontified t)) . -88981) (undo-tree-id17549 . -1) 88982 (88981 . 88982) (t 25725 56252 24721 326000)) nil (25725 57010 711904 267000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t face org-block-end-line)) . -89902) (undo-tree-id17541 . -1) (undo-tree-id17542 . -1) (undo-tree-id17543 . -1) (#("j" 0 1 (fontified t)) . -89903) (undo-tree-id17544 . -1) (undo-tree-id17545 . -1) (#("k" 0 1 (fontified t)) . -89904) (undo-tree-id17546 . -1) (undo-tree-id17547 . -1) 89905 (89903 . 89905) (nil rear-nonsticky nil 89902 . 89903) (nil fontified nil 89902 . 89903) (nil fontified nil 89901 . 89902) (nil fontified nil 89893 . 89901) (nil fontified nil 89892 . 89893) (nil fontified nil 89864 . 89892) (nil fontified nil 89863 . 89864) (nil fontified nil 89857 . 89863) (89857 . 89903) (89852 . 89857) 89768) nil (25725 57010 711889 111000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -89897) (undo-tree-id17540 . -1) 89898 (89897 . 89898) (89892 . 89897) 89861) nil (25725 57010 711710 456000) 0 nil])
([nil nil ((nil rear-nonsticky nil 90580 . 90581) (nil fontified nil 89897 . 90581) (89897 . 90581) 89896) nil (25725 57010 711701 97000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -89853) (undo-tree-id17539 . -4) 89857 (89852 . 89857) 89781) nil (25725 57010 711692 925000) 0 nil])
([nil nil ((nil rear-nonsticky nil 90396 . 90397) (nil fontified nil 89853 . 90397) (89853 . 90397)) nil (25725 57010 711421 31000) 0 nil])
([nil nil ((90397 . 90398) 90396) nil (25725 57010 711405 247000) 0 nil])
([nil nil ((nil rear-nonsticky nil 91896 . 91897) (nil fontified nil 91138 . 91897) (91138 . 91897) (t 25725 57010 846309 597000)) nil (25725 57044 734900 752000) 0 nil])
([nil nil ((91897 . 91898) 91896) nil (25725 57044 734825 811000) 0 nil])
([nil nil ((#("** Creating dom.js a wishful Jquery inspired Dom Library for mordern browserslement
*** 12.1 dom.js overview

*** 12.2 Create a unique scope

*** 12.3 Create the dom() and GetOrMakeDom() functions exposing dom() and GetOrMakeDom.prototype to the global scope



*** 12.4 Create optional context paramater passed to dom()

*** 12.5 Populate object with DOM node references based on params and return object

*** 12.6 Create each() method and make it a chainable method

*** 12.7 Create html(), append(), & text() methods

*** 12.8 Taking dom.js for a spin

*** 12.9 Summary & continuing on with dom.js


" 0 1 (fontified t face org-hide keymap (keymap)) 1 2 (fontified t composition (1 1 [9675]) keymap (keymap) face org-level-2) 2 3 (fontified t keymap (keymap) face org-level-2) 3 6 (fontified t face org-level-2) 6 12 (fontified t face org-level-2) 12 15 (fontified t face org-level-2) 15 16 (fontified t face org-level-2) 16 52 (fontified t face org-level-2) 52 53 (fontified t face org-level-2) 53 54 (fontified t face org-level-2) 54 64 (fontified t face org-level-2) 64 72 (fontified t face org-level-2) 72 83 (fontified t face org-level-2) 83 84 (fontified t) 84 86 (fontified t face org-hide keymap (keymap)) 86 87 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 87 88 (fontified t keymap (keymap) face org-level-3) 88 108 (fontified t face org-level-3) 108 109 (fontified t) 109 110 (fontified t) 110 112 (fontified t face org-hide keymap (keymap)) 112 113 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 113 114 (fontified t keymap (keymap) face org-level-3) 114 140 (fontified t face org-level-3) 140 141 (fontified t) 141 142 (fontified t) 142 144 (fontified t face org-hide keymap (keymap)) 144 145 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 145 146 (fontified t keymap (keymap) face org-level-3) 146 160 (fontified t face org-level-3) 160 165 (fontified t face org-level-3) 165 166 (fontified t face (rainbow-delimiters-depth-1-face org-level-3)) 166 167 (fontified t face (rainbow-delimiters-depth-1-face org-level-3)) 167 169 (fontified t face org-level-3) 169 184 (fontified t face org-level-3) 184 185 (fontified t face (rainbow-delimiters-depth-1-face org-level-3)) 185 186 (fontified t face (rainbow-delimiters-depth-1-face org-level-3)) 186 209 (fontified t face org-level-3) 209 210 (fontified t face (rainbow-delimiters-depth-1-face org-level-3)) 210 211 (fontified t face (rainbow-delimiters-depth-1-face org-level-3)) 211 227 (fontified t face org-level-3) 227 235 (fontified t face org-level-3) 235 258 (fontified t face org-level-3) 258 259 (fontified t) 259 260 (fontified t) 260 261 (fontified t) 261 262 (fontified t) 262 264 (fontified t face org-hide keymap (keymap)) 264 265 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 265 266 (fontified t keymap (keymap) face org-level-3) 266 285 (fontified t face org-level-3) 285 290 (fontified t face org-level-3) 290 295 (fontified t face org-level-3) 295 318 (fontified t face org-level-3) 318 319 (fontified t face (rainbow-delimiters-depth-1-face org-level-3)) 319 320 (fontified t face (rainbow-delimiters-depth-1-face org-level-3)) 320 321 (fontified t) 321 322 (fontified t) 322 324 (fontified t face org-hide keymap (keymap)) 324 325 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 325 326 (fontified t keymap (keymap) face org-level-3) 326 400 (fontified t face org-level-3) 400 405 (fontified t face org-level-3) 405 406 (fontified t) 406 407 (fontified t) 407 409 (fontified t face org-hide keymap (keymap)) 409 410 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 410 411 (fontified t keymap (keymap) face org-level-3) 411 425 (fontified t face org-level-3) 425 427 (fontified t face org-level-3) 427 428 (fontified t face (rainbow-delimiters-depth-1-face org-level-3)) 428 429 (fontified t face (rainbow-delimiters-depth-1-face org-level-3)) 429 435 (fontified t face org-level-3) 435 454 (fontified t face org-level-3) 454 467 (fontified t face org-level-3) 467 468 (fontified t) 468 469 (fontified t) 469 471 (fontified t face org-hide keymap (keymap)) 471 472 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 472 473 (keymap (keymap) face org-level-3 fontified t) 473 481 (face org-level-3 fontified t) 481 489 (face org-level-3 fontified t) 489 490 (face (rainbow-delimiters-depth-1-face org-level-3) fontified t) 490 491 (face (rainbow-delimiters-depth-1-face org-level-3) fontified t) 491 499 (face org-level-3 fontified t) 499 500 (face (rainbow-delimiters-depth-1-face org-level-3) fontified t) 500 501 (face (rainbow-delimiters-depth-1-face org-level-3) fontified t) 501 509 (face org-level-3 fontified t) 509 510 (face (rainbow-delimiters-depth-1-face org-level-3) fontified t) 510 511 (face (rainbow-delimiters-depth-1-face org-level-3) fontified t) 511 519 (face org-level-3 fontified t) 519 520 (fontified t) 520 521 (fontified t) 521 523 (fontified t face org-hide keymap (keymap)) 523 524 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 524 525 (fontified t keymap (keymap) face org-level-3) 525 554 (fontified t face org-level-3) 554 555 (fontified t) 555 556 (fontified t) 556 558 (fontified t face org-hide keymap (keymap)) 558 559 (fontified t composition (2 1 [10040]) keymap (keymap) face org-level-3) 559 560 (fontified t keymap (keymap) face org-level-3) 560 584 (fontified t face org-level-3) 584 594 (fontified t face org-level-3) 594 598 (fontified t face org-level-3) 598 600 (fontified t face org-level-3) 600 601 (fontified t) 601 602 (rear-nonsticky t fontified t) 602 603 (fontified t)) . 92484) (undo-tree-id17949 . -603) (undo-tree-id17950 . -602) (undo-tree-id17951 . -603) (undo-tree-id17952 . -603) (undo-tree-id17953 . -603) (undo-tree-id17954 . -603) 93087 (t 25725 57044 854776 632000)) nil (25725 57126 528234 947000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -91933) (undo-tree-id17948 . -4) 91937 (91932 . 91937) 91899) nil (25725 57126 528220 629000) 0 nil])
([nil nil ((nil rear-nonsticky nil 92070 . 92071) (nil fontified nil 91933 . 92071) (91933 . 92071)) nil (25725 57126 528214 64000) 0 nil])
([nil nil ((92071 . 92072) 92070) nil (25725 57126 528209 874000) 0 nil])
([nil nil ((90469 . 90473) (#("j" 0 1 (font-lock-fontified t fontified nil font-lock-multiline t face org-block-begin-line)) . -90469) 90470 (90459 . 90470) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -90459) (undo-tree-id17942 . -1) 90460 (90459 . 90460) (90438 . 90459) (#("l" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -90438) (undo-tree-id17943 . -1) (#("n" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -90439) (undo-tree-id17944 . -1) 90440 (90428 . 90440) (#("enter" 0 5 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 90428) (undo-tree-id17945 . -4) (undo-tree-id17946 . -5) (undo-tree-id17947 . -3) 90431) nil (25725 57126 528203 727000) 0 nil])
([nil nil ((#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92161) (undo-tree-id17918 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92162) (undo-tree-id17919 . -1) (#("o" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92163) (undo-tree-id17920 . -1) 92164 (92161 . 92164) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92161) (undo-tree-id17921 . -1) (#("k" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92162) (undo-tree-id17922 . -1) (#("o" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92163) (undo-tree-id17923 . -1) 92164 (92157 . 92164) (#("r" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92157) (undo-tree-id17924 . -1) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92158) (undo-tree-id17925 . -1) 92159 (92158 . 92159) (#("n" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92158) (undo-tree-id17926 . -1) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92159) (undo-tree-id17927 . -1) (#("r" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92160) (undo-tree-id17928 . -1) 92161 (92160 . 92161) (92139 . 92160) (#("v" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92139) (undo-tree-id17929 . -1) (#("l" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92140) (undo-tree-id17930 . -1) 92141 (92137 . 92141) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92137) (undo-tree-id17931 . -1) (undo-tree-id17932 . -1) (#("n" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92138) (undo-tree-id17933 . -1) (undo-tree-id17934 . -1) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92139) (undo-tree-id17935 . -1) (undo-tree-id17936 . -1) (#("e" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92140) (undo-tree-id17937 . -1) (undo-tree-id17938 . -1) (#("r" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92141) (undo-tree-id17939 . -1) (undo-tree-id17940 . -1) (#("c" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -92142) (undo-tree-id17941 . -1) 92143 (92142 . 92143) (nil rear-nonsticky nil 92157 . 92158) (nil fontified nil 92157 . 92158) (nil fontified nil 92156 . 92157) (nil fontified nil 92148 . 92156) (nil fontified nil 92147 . 92148) (nil fontified nil 92119 . 92147) (nil fontified nil 92118 . 92119) (nil fontified nil 92112 . 92118) (92112 . 92158)) nil (25725 57126 528175 372000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -92167) (undo-tree-id17914 . -1) (undo-tree-id17915 . -1) (#("k" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -92168) (undo-tree-id17916 . -1) (undo-tree-id17917 . -1) 92169 (92167 . 92169) (92166 . 92167) 92160) nil (25725 57126 528111 885000) 0 nil])
([nil nil ((nil rear-nonsticky nil 93049 . 93050) (nil fontified nil 92167 . 93050) (92167 . 93050)) nil (25725 57126 527756 669000) 0 nil])
([nil nil ((93062 . 93063)) nil (25725 57126 527751 361000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -93062) (undo-tree-id17550 . -1) (undo-tree-id17551 . -1) (undo-tree-id17552 . -1) (undo-tree-id17553 . -1) (undo-tree-id17554 . -1) (undo-tree-id17555 . -1) (undo-tree-id17556 . -1) (undo-tree-id17557 . -1) (undo-tree-id17558 . -1) (undo-tree-id17559 . -1) (undo-tree-id17560 . -1) (undo-tree-id17561 . -1) (undo-tree-id17562 . -1) (undo-tree-id17563 . -1) (undo-tree-id17564 . -1) (undo-tree-id17565 . -1) (undo-tree-id17566 . -1) (undo-tree-id17567 . -1) (undo-tree-id17568 . -1) (undo-tree-id17569 . -1) (undo-tree-id17570 . -1) (undo-tree-id17571 . -1) (undo-tree-id17572 . -1) (undo-tree-id17573 . -1) (undo-tree-id17574 . -1) (undo-tree-id17575 . -1) (undo-tree-id17576 . -1) (undo-tree-id17577 . -1) (undo-tree-id17578 . -1) (undo-tree-id17579 . -1) (undo-tree-id17580 . -1) (undo-tree-id17581 . -1) (undo-tree-id17582 . -1) (undo-tree-id17583 . -1) (undo-tree-id17584 . -1) (undo-tree-id17585 . -1) (undo-tree-id17586 . -1) (undo-tree-id17587 . -1) (undo-tree-id17588 . -1) (undo-tree-id17589 . -1) (undo-tree-id17590 . -1) (undo-tree-id17591 . -1) (undo-tree-id17592 . -1) (undo-tree-id17593 . -1) (undo-tree-id17594 . -1) (undo-tree-id17595 . -1) (undo-tree-id17596 . -1) (undo-tree-id17597 . -1) (undo-tree-id17598 . -1) (undo-tree-id17599 . -1) (undo-tree-id17600 . -1) (undo-tree-id17601 . -1) (undo-tree-id17602 . -1) (undo-tree-id17603 . -1) (undo-tree-id17604 . -1) (undo-tree-id17605 . -1) (undo-tree-id17606 . -1) (undo-tree-id17607 . -1) (undo-tree-id17608 . -1) (undo-tree-id17609 . -1) (undo-tree-id17610 . -1) (undo-tree-id17611 . -1) (undo-tree-id17612 . -1) (undo-tree-id17613 . -1) (undo-tree-id17614 . -1) (undo-tree-id17615 . -1) (undo-tree-id17616 . -1) (undo-tree-id17617 . -1) (undo-tree-id17618 . -1) (undo-tree-id17619 . -1) (undo-tree-id17620 . -1) (undo-tree-id17621 . -1) (undo-tree-id17622 . -1) (undo-tree-id17623 . -1) (undo-tree-id17624 . -1) (undo-tree-id17625 . -1) (undo-tree-id17626 . -1) (undo-tree-id17627 . -1) (undo-tree-id17628 . -1) (undo-tree-id17629 . -1) (undo-tree-id17630 . -1) (undo-tree-id17631 . -1) (undo-tree-id17632 . -1) (undo-tree-id17633 . -1) (undo-tree-id17634 . -1) (undo-tree-id17635 . -1) (undo-tree-id17636 . -1) (undo-tree-id17637 . -1) (undo-tree-id17638 . -1) (undo-tree-id17639 . -1) (undo-tree-id17640 . -1) (undo-tree-id17641 . -1) (undo-tree-id17642 . -1) (undo-tree-id17643 . -1) (undo-tree-id17644 . -1) (undo-tree-id17645 . -1) (undo-tree-id17646 . -1) (undo-tree-id17647 . -1) (undo-tree-id17648 . -1) (undo-tree-id17649 . -1) (undo-tree-id17650 . -1) (undo-tree-id17651 . -1) (undo-tree-id17652 . -1) (undo-tree-id17653 . -1) (undo-tree-id17654 . -1) (undo-tree-id17655 . -1) (undo-tree-id17656 . -1) (undo-tree-id17657 . -1) (undo-tree-id17658 . -1) (undo-tree-id17659 . -1) (undo-tree-id17660 . -1) (undo-tree-id17661 . -1) (undo-tree-id17662 . -1) (undo-tree-id17663 . -1) (undo-tree-id17664 . -1) (undo-tree-id17665 . -1) (undo-tree-id17666 . -1) (undo-tree-id17667 . -1) (undo-tree-id17668 . -1) (undo-tree-id17669 . -1) (undo-tree-id17670 . -1) (undo-tree-id17671 . -1) (undo-tree-id17672 . -1) (undo-tree-id17673 . -1) (undo-tree-id17674 . -1) (undo-tree-id17675 . -1) (undo-tree-id17676 . -1) (undo-tree-id17677 . -1) (undo-tree-id17678 . -1) (undo-tree-id17679 . -1) (undo-tree-id17680 . -1) (undo-tree-id17681 . -1) (undo-tree-id17682 . -1) (undo-tree-id17683 . -1) (undo-tree-id17684 . -1) (undo-tree-id17685 . -1) (undo-tree-id17686 . -1) (undo-tree-id17687 . -1) (undo-tree-id17688 . -1) (undo-tree-id17689 . -1) (undo-tree-id17690 . -1) (undo-tree-id17691 . -1) (undo-tree-id17692 . -1) (undo-tree-id17693 . -1) (undo-tree-id17694 . -1) (undo-tree-id17695 . -1) (undo-tree-id17696 . -1) (undo-tree-id17697 . -1) (undo-tree-id17698 . -1) (undo-tree-id17699 . -1) (undo-tree-id17700 . -1) (undo-tree-id17701 . -1) (undo-tree-id17702 . -1) (undo-tree-id17703 . -1) (undo-tree-id17704 . -1) (undo-tree-id17705 . -1) (undo-tree-id17706 . -1) (undo-tree-id17707 . -1) (undo-tree-id17708 . -1) (undo-tree-id17709 . -1) (undo-tree-id17710 . -1) (undo-tree-id17711 . -1) (undo-tree-id17712 . -1) (undo-tree-id17713 . -1) (undo-tree-id17714 . -1) (undo-tree-id17715 . -1) (undo-tree-id17716 . -1) (undo-tree-id17717 . -1) (undo-tree-id17718 . -1) (undo-tree-id17719 . -1) (undo-tree-id17720 . -1) (undo-tree-id17721 . -1) (undo-tree-id17722 . -1) (undo-tree-id17723 . -1) (undo-tree-id17724 . -1) (undo-tree-id17725 . -1) (undo-tree-id17726 . -1) (undo-tree-id17727 . -1) (undo-tree-id17728 . -1) (undo-tree-id17729 . -1) (undo-tree-id17730 . -1) (undo-tree-id17731 . -1) (undo-tree-id17732 . -1) (undo-tree-id17733 . -1) (undo-tree-id17734 . -1) (undo-tree-id17735 . -1) (undo-tree-id17736 . -1) (undo-tree-id17737 . -1) (undo-tree-id17738 . -1) (undo-tree-id17739 . -1) (undo-tree-id17740 . -1) (undo-tree-id17741 . -1) (undo-tree-id17742 . -1) (undo-tree-id17743 . -1) (undo-tree-id17744 . -1) (undo-tree-id17745 . -1) (undo-tree-id17746 . -1) (undo-tree-id17747 . -1) (undo-tree-id17748 . -1) (undo-tree-id17749 . -1) (undo-tree-id17750 . -1) (undo-tree-id17751 . -1) (undo-tree-id17752 . -1) (undo-tree-id17753 . -1) (undo-tree-id17754 . -1) (undo-tree-id17755 . -1) (undo-tree-id17756 . -1) (undo-tree-id17757 . -1) (undo-tree-id17758 . -1) (undo-tree-id17759 . -1) (undo-tree-id17760 . -1) (undo-tree-id17761 . -1) (undo-tree-id17762 . -1) (undo-tree-id17763 . -1) (undo-tree-id17764 . -1) (undo-tree-id17765 . -1) (undo-tree-id17766 . -1) (undo-tree-id17767 . -1) (undo-tree-id17768 . -1) (undo-tree-id17769 . -1) (undo-tree-id17770 . -1) (undo-tree-id17771 . -1) (undo-tree-id17772 . -1) (undo-tree-id17773 . -1) (undo-tree-id17774 . -1) (undo-tree-id17775 . -1) (undo-tree-id17776 . -1) (undo-tree-id17777 . -1) (undo-tree-id17778 . -1) (undo-tree-id17779 . -1) (undo-tree-id17780 . -1) (undo-tree-id17781 . -1) (undo-tree-id17782 . -1) (undo-tree-id17783 . -1) (undo-tree-id17784 . -1) (undo-tree-id17785 . -1) (undo-tree-id17786 . -1) (undo-tree-id17787 . -1) (undo-tree-id17788 . -1) (undo-tree-id17789 . -1) (undo-tree-id17790 . -1) (undo-tree-id17791 . -1) (undo-tree-id17792 . -1) (undo-tree-id17793 . -1) (undo-tree-id17794 . -1) (undo-tree-id17795 . -1) (undo-tree-id17796 . -1) (undo-tree-id17797 . -1) (undo-tree-id17798 . -1) (undo-tree-id17799 . -1) (undo-tree-id17800 . -1) (undo-tree-id17801 . -1) (undo-tree-id17802 . -1) (undo-tree-id17803 . -1) (undo-tree-id17804 . -1) (undo-tree-id17805 . -1) (undo-tree-id17806 . -1) (undo-tree-id17807 . -1) (undo-tree-id17808 . -1) (undo-tree-id17809 . -1) (undo-tree-id17810 . -1) (undo-tree-id17811 . -1) (undo-tree-id17812 . -1) (undo-tree-id17813 . -1) (undo-tree-id17814 . -1) (undo-tree-id17815 . -1) (undo-tree-id17816 . -1) (undo-tree-id17817 . -1) (undo-tree-id17818 . -1) (undo-tree-id17819 . -1) (undo-tree-id17820 . -1) (undo-tree-id17821 . -1) (undo-tree-id17822 . -1) (undo-tree-id17823 . -1) (undo-tree-id17824 . -1) (undo-tree-id17825 . -1) (undo-tree-id17826 . -1) (undo-tree-id17827 . -1) (undo-tree-id17828 . -1) (undo-tree-id17829 . -1) (undo-tree-id17830 . -1) (undo-tree-id17831 . -1) (undo-tree-id17832 . -1) (undo-tree-id17833 . -1) (undo-tree-id17834 . -1) (undo-tree-id17835 . -1) (undo-tree-id17836 . -1) (undo-tree-id17837 . -1) (undo-tree-id17838 . -1) (undo-tree-id17839 . -1) (undo-tree-id17840 . -1) (undo-tree-id17841 . -1) (undo-tree-id17842 . -1) (undo-tree-id17843 . -1) (undo-tree-id17844 . -1) (undo-tree-id17845 . -1) (undo-tree-id17846 . -1) (undo-tree-id17847 . -1) (undo-tree-id17848 . -1) (undo-tree-id17849 . -1) (undo-tree-id17850 . -1) (undo-tree-id17851 . -1) (undo-tree-id17852 . -1) (undo-tree-id17853 . -1) (undo-tree-id17854 . -1) (undo-tree-id17855 . -1) (undo-tree-id17856 . -1) (undo-tree-id17857 . -1) (undo-tree-id17858 . -1) (undo-tree-id17859 . -1) (undo-tree-id17860 . -1) (undo-tree-id17861 . -1) (undo-tree-id17862 . -1) (undo-tree-id17863 . -1) (undo-tree-id17864 . -1) (undo-tree-id17865 . -1) (undo-tree-id17866 . -1) (undo-tree-id17867 . -1) (undo-tree-id17868 . -1) (undo-tree-id17869 . -1) (undo-tree-id17870 . -1) (undo-tree-id17871 . -1) (undo-tree-id17872 . -1) (undo-tree-id17873 . -1) (undo-tree-id17874 . -1) (undo-tree-id17875 . -1) (undo-tree-id17876 . -1) (undo-tree-id17877 . -1) (undo-tree-id17878 . -1) (undo-tree-id17879 . -1) (undo-tree-id17880 . -1) (undo-tree-id17881 . -1) (undo-tree-id17882 . -1) (undo-tree-id17883 . -1) (undo-tree-id17884 . -1) (undo-tree-id17885 . -1) (undo-tree-id17886 . -1) (undo-tree-id17887 . -1) (undo-tree-id17888 . -1) (undo-tree-id17889 . -1) (undo-tree-id17890 . -1) (undo-tree-id17891 . -1) (undo-tree-id17892 . -1) (undo-tree-id17893 . -1) (undo-tree-id17894 . -1) (undo-tree-id17895 . -1) (undo-tree-id17896 . -1) (undo-tree-id17897 . -1) (undo-tree-id17898 . -1) (undo-tree-id17899 . -1) (undo-tree-id17900 . -1) (undo-tree-id17901 . -1) (undo-tree-id17902 . -1) (undo-tree-id17903 . -1) (undo-tree-id17904 . -1) (undo-tree-id17905 . -1) (undo-tree-id17906 . -1) (undo-tree-id17907 . -1) (undo-tree-id17908 . -1) (undo-tree-id17909 . -1) (undo-tree-id17910 . -1) (undo-tree-id17911 . -1) (undo-tree-id17912 . -1) (undo-tree-id17913 . -1) 93063) nil (25725 57126 527704 707000) 0 nil])
([nil nil ((nil rear-nonsticky nil 93145 . 93146) (nil fontified nil 93061 . 93146) (93061 . 93146) (t 25725 57126 899943 809000)) nil (25725 57200 951535 420000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -93204) (undo-tree-id17955 . -4) 93208 (93203 . 93208) 93148) nil (25725 57200 951528 785000) 0 nil])
([nil nil ((nil rear-nonsticky nil 93620 . 93621) (nil fontified nil 93204 . 93621) (93204 . 93621)) nil (25725 57200 951509 159000) 0 nil])
([nil nil ((93621 . 93622) 93620) nil (25725 57200 953016 70000) 0 nil])
([nil nil ((nil rear-nonsticky nil 94039 . 94040) (nil fontified nil 94039 . 94040) (nil fontified nil 94038 . 94039) (nil fontified nil 93623 . 94038) (nil fontified nil 93622 . 93623) (93622 . 94040)) nil (25725 57291 896605 373000) 0 nil] [nil nil ((94041 . 94043) (nil rear-nonsticky nil 94040 . 94041) (nil fontified nil 94040 . 94041) (nil fontified nil 94039 . 94040) (nil fontified nil 93624 . 94039) (nil fontified nil 93623 . 93624) (93623 . 94041)) ((#("
The handler or callback function for events receives a parameter by default, which contains all the important information about the event. This parameter gives details like the event type, the element it occurred on, mouse coordinates, keyboard keys, and other relevant data. It allows the handler function to access and use this information to respond or perform specific actions based on the event that took place.
" 0 1 (fontified nil) 1 416 (fontified nil) 416 417 (rear-nonsticky t fontified nil) 417 418 (fontified nil rear-nonsticky nil)) . 93623) (undo-tree-id17956 . -418) (undo-tree-id17957 . -418) (undo-tree-id17958 . -418) (undo-tree-id17959 . -418) (undo-tree-id17960 . -418) (nil fontified t 93623 . 93624) (nil rear-nonsticky t 94040 . 94041) (#("ku" 0 2 (fontified t)) . 94041) (undo-tree-id17961 . -1) (undo-tree-id17962 . -1) (undo-tree-id17963 . -1)) (25725 57200 951488 346000) 0 nil])
([nil nil ((#("The handler or callback function for events receives a parameter by default, which contains all the important information about the event. This parameter gives details like the event type, the element it occurred on, mouse coordinates, keyboard keys, and other relevant data. It allows the handler function to access and use this information to respond or perform specific actions based on the event that took place.
" 0 415 (fontified t) 415 416 (rear-nonsticky t fontified t) 416 417 (rear-nonsticky t fontified t)) . 93623) (undo-tree-id17989 . -416) (undo-tree-id17990 . 417) (undo-tree-id17991 . -417)) nil (25725 57291 896598 738000) 0 nil])
nil
([nil nil ((#("s" 0 1 (fontified t)) . -93623) (undo-tree-id17980 . -1) (undo-tree-id17981 . -1) (#("r" 0 1 (fontified t)) . -93624) (undo-tree-id17982 . -1) (#("c" 0 1 (fontified t)) . -93625) (undo-tree-id17983 . -1) (#("x" 0 1 (fontified t)) . -93626) (undo-tree-id17984 . -1) (#("a" 0 1 (fontified t)) . -93627) (undo-tree-id17985 . -1) (#("e" 0 1 (fontified t)) . -93628) (undo-tree-id17986 . -1) 93629 (93624 . 93629) (#("e" 0 1 (fontified t)) . -93624) (undo-tree-id17987 . -1) (undo-tree-id17988 . -1) 93625 (93623 . 93625) (93622 . 93623) 93622) nil (25725 57291 896584 421000) 0 nil])
([nil nil ((nil rear-nonsticky nil 93146 . 93147) (#("
" 0 1 (rear-nonsticky t face org-block-end-line fontified nil)) . -93156) (93146 . 93157)) nil (25725 57291 896557 950000) 0 nil])
([nil nil ((nil rear-nonsticky nil 93146 . 93147) (#("
" 0 1 (font-lock-fontified t font-lock-multiline t face org-block-begin-line fontified nil)) . -93201) (93146 . 93202)) nil (25725 57291 896552 712000) 0 nil])
([nil nil ((nil rear-nonsticky nil 93201 . 93202) (#("
" 0 1 (font-lock-fontified t font-lock-multiline t face org-block-begin-line fontified nil)) . -93256) (93201 . 93257) 93147) nil (25725 57291 896546 985000) 0 nil])
([nil nil ((#("#+BEGIN_SRC html :tangle removing event listeners.html
" 0 6 (font-lock-fontified t fontified t font-lock-multiline t face (org-block) src-block t) 6 7 (font-lock-fontified t fontified t font-lock-multiline t face (org-block) src-block t) 7 54 (font-lock-fontified t fontified t font-lock-multiline t face (org-block) src-block t) 54 55 (fontified t rear-nonsticky t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 93202) (undo-tree-id17977 . -54) (undo-tree-id17978 . -54) (undo-tree-id17979 . -55)) nil (25725 57291 896541 258000) 0 nil])
([nil nil ((#("removing event listeners" 0 24 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 93172) (undo-tree-id17973 . -23) (undo-tree-id17974 . -23) (undo-tree-id17975 . -23) (undo-tree-id17976 . -23) 93195) nil (25725 57291 897410 93000) 0 nil])
([nil nil ((#("#+BEGIN_SRC html :tangle .html
#+END_SRC
" 0 6 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 6 7 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 7 30 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 30 31 (fontified t rear-nonsticky t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 31 39 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 39 40 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 40 41 (fontified t face org-block-end-line)) . 93147) (undo-tree-id17996 . -39) (undo-tree-id17997 . -40) (undo-tree-id17998 . 16) (undo-tree-id17999 . -41) (undo-tree-id18000 . -31) (undo-tree-id18001 . -41) (undo-tree-id18002 . -41) (undo-tree-id18003 . -39) (undo-tree-id18004 . -8) (undo-tree-id18005 . -39) 93186) nil (25725 57336 117314 307000) 0 nil] [nil nil ((#("#+BEGIN_SRC html :tangle .html
#+END_SRC
" 0 6 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 6 7 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 7 30 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 30 31 (fontified t rear-nonsticky t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 31 39 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 39 40 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 40 41 (fontified t face org-block-end-line)) . 93147) (undo-tree-id17964 . -40) (undo-tree-id17965 . -40) (undo-tree-id17966 . 16) (undo-tree-id17967 . -31) (undo-tree-id17968 . -41) (undo-tree-id17969 . -40) (undo-tree-id17970 . -24) (undo-tree-id17971 . -40) (undo-tree-id17972 . -40) 93187) ((93147 . 93188)) (25725 57291 896507 525000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -94081) (undo-tree-id17994 . -1) (#("k" 0 1 (fontified t)) . -94082) (undo-tree-id17995 . -1) 94083 (94081 . 94083) (nil rear-nonsticky nil 94080 . 94081) (nil fontified nil 94080 . 94081) (nil fontified nil 94079 . 94080) (nil fontified nil 94071 . 94079) (nil fontified nil 94070 . 94071) (nil fontified nil 94047 . 94070) (nil fontified nil 94046 . 94047) (nil fontified nil 94040 . 94046) (nil fontified nil 94039 . 94040) (nil fontified nil 94038 . 94039) (nil fontified nil 93623 . 94038) (nil fontified nil 93622 . 93623) (93622 . 94081)) nil (25725 57336 117278 129000) 0 nil])
nil
([nil nil ((#("The handler or callback function for events receives a parameter by default, which contains all the important information about the event. This parameter gives details like the event type, the element it occurred on, mouse coordinates, keyboard keys, and other relevant data. It allows the handler function to access and use this information to respond or perform specific actions based on the event that took place.
" 0 415 (fontified t) 415 416 (rear-nonsticky t fontified t) 416 417 (fontified t)) . 93623) (undo-tree-id17992 . -416) (undo-tree-id17993 . -417)) nil (25725 57336 117260 180000) 0 nil])
([nil nil ((93653 . 93665) (93648 . 93653)) nil (25725 57336 117233 919000) 0 nil])
([nil nil ((93670 . 93671) 93664) nil (25725 57336 117229 170000) 0 nil])
([nil nil ((nil rear-nonsticky nil 94205 . 94206) (nil fontified nil 93671 . 94206) (93671 . 94206)) nil (25725 57336 117214 294000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -94305) (undo-tree-id18009 . -1) (#("k" 0 1 (fontified t)) . -94306) (undo-tree-id18010 . -1) (#("p" 0 1 (fontified t)) . -94307) (undo-tree-id18011 . -1) 94308 (94305 . 94308) (#("f" 0 1 (fontified t)) . -94305) (undo-tree-id18012 . -1) 94306 (94300 . 94306) (#("w" 0 1 (fontified t)) . -94300) (undo-tree-id18013 . -1) (undo-tree-id18014 . -1) (#("i" 0 1 (fontified t)) . -94301) (undo-tree-id18015 . -1) (undo-tree-id18016 . -1) (#("l" 0 1 (fontified t)) . -94302) (undo-tree-id18017 . -1) (undo-tree-id18018 . -1) (#("l" 0 1 (fontified t)) . -94303) (undo-tree-id18019 . -1) (undo-tree-id18020 . -1) (#(" " 0 1 (fontified t)) . -94304) (undo-tree-id18021 . -1) (undo-tree-id18022 . -1) (#("b" 0 1 (fontified t)) . -94305) (undo-tree-id18023 . -1) (undo-tree-id18024 . -1) (#("e" 0 1 (fontified t)) . -94306) (undo-tree-id18025 . -1) (undo-tree-id18026 . -1) 94307 (94305 . 94307) (94303 . 94305) (94282 . 94303) (94277 . 94282) (t 25725 57336 475136 535000) 94221) nil (25725 57462 543617 810000) 0 nil])
([nil nil ((nil rear-nonsticky nil 94615 . 94616) (nil fontified nil 94305 . 94616) (94305 . 94616) 94304) nil (25725 57462 543571 16000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -94617) (undo-tree-id18008 . -4) 94621 (94616 . 94621) 94615) nil (25725 57462 543565 289000) 0 nil])
([nil nil ((nil rear-nonsticky nil 95075 . 95076) (nil fontified nil 95075 . 95076) (nil fontified nil 95074 . 95075) (nil fontified nil 95066 . 95074) (nil fontified nil 95065 . 95066) (nil fontified nil 95042 . 95065) (nil fontified nil 95041 . 95042) (nil fontified nil 95035 . 95041) (nil fontified nil 95034 . 95035) (nil fontified nil 95033 . 95034) (nil fontified nil 94618 . 95033) (nil fontified nil 94617 . 94618) (94617 . 95076)) nil (25725 57462 543556 349000) 0 nil])
([nil nil ((95065 . 95066) 95035) nil (25725 57462 543547 758000) 0 nil])
([nil nil ((nil rear-nonsticky nil 95349 . 95350) (nil fontified nil 95066 . 95350) (95066 . 95350)) nil (25725 57462 543543 428000) 0 nil])
([nil nil ((95060 . 95073) (#("a" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -95060) (undo-tree-id18006 . -1) (#("d" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -95061) (undo-tree-id18007 . -1) 95062 (95060 . 95062)) nil (25725 57462 543536 234000) 0 nil])
([nil nil ((95374 . 95375) 95374) nil (25725 57462 543504 37000) 0 nil])
([nil nil ((nil rear-nonsticky nil 95785 . 95786) (nil fontified nil 95375 . 95786) (95375 . 95786) (t 25725 57462 873174 167000)) nil (25725 57542 302212 656000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -96246) (undo-tree-id18042 . -1) (undo-tree-id18043 . -1) (#("k" 0 1 (fontified t)) . -96247) (undo-tree-id18044 . -1) (undo-tree-id18045 . -1) 96248 (96246 . 96248) (nil rear-nonsticky nil 96245 . 96246) (nil fontified nil 96245 . 96246) (nil fontified nil 96244 . 96245) (nil fontified nil 96236 . 96244) (nil fontified nil 96235 . 96236) (nil fontified nil 96212 . 96235) (nil fontified nil 96211 . 96212) (nil fontified nil 96205 . 96211) (nil fontified nil 96204 . 96205) (nil fontified nil 96203 . 96204) (nil fontified nil 95788 . 96203) (nil fontified nil 95787 . 95788) (95787 . 96246) (95786 . 95787) 95785) nil (25725 57542 302204 554000) 0 nil])
([nil nil ((96235 . 96236) 96205) nil (25725 57542 302168 865000) 0 nil])
([nil nil ((nil rear-nonsticky nil 96522 . 96523) (nil fontified nil 96236 . 96523) (96236 . 96523)) nil (25725 57542 302165 24000) 0 nil])
([nil nil ((#("The handler or callback function for events receives a parameter by default, which contains all the important information about the event. This parameter gives details like the event type, the element it occurred on, mouse coordinates, keyboard keys, and other relevant data. It allows the handler function to access and use this information to respond or perform specific actions based on the event that took place.
" 0 415 (fontified t) 415 416 (rear-nonsticky t fontified t) 416 417 (fontified t)) . 95788) (undo-tree-id18039 . -416) (undo-tree-id18040 . -417) (undo-tree-id18041 . -6) 95794) nil (25725 57542 302160 135000) 0 nil])
([nil nil ((#("The handler or callback function for events receives a parameter by default, which contains all the important information about the event. This parameter gives details like the event type, the element it occurred on, mouse coordinates, keyboard keys, and other relevant data. It allows the handler function to access and use this information to respond or perform specific actions based on the event that took place.
" 0 415 (fontified t) 415 416 (rear-nonsticky t fontified t) 416 417 (fontified t)) . 94618) (undo-tree-id18036 . -416) (undo-tree-id18037 . -417) (undo-tree-id18038 . -6) 94624) nil (25725 57542 302147 843000) 0 nil])
([nil nil ((nil rear-nonsticky nil 96158 . 96159) (nil fontified nil 96158 . 96159) (nil fontified nil 96157 . 96158) (nil fontified nil 96149 . 96157) (nil fontified nil 96148 . 96149) (nil fontified nil 96125 . 96148) (nil fontified nil 96124 . 96125) (nil fontified nil 96118 . 96124) (nil fontified nil 96117 . 96118) (nil fontified nil 96116 . 96117) (nil fontified nil 95701 . 96116) (nil fontified nil 95700 . 95701) (95700 . 96159)) nil (25725 57542 302135 480000) 0 nil])
([nil nil ((#("The handler or callback function for events receives a parameter by default, which contains all the important information about the event. This parameter gives details like the event type, the element it occurred on, mouse coordinates, keyboard keys, and other relevant data. It allows the handler function to access and use this information to respond or perform specific actions based on the event that took place.
" 0 415 (fontified t) 415 416 (rear-nonsticky t fontified t) 416 417 (fontified t)) . 95701) (undo-tree-id18034 . -416) (undo-tree-id18035 . -417)) nil (25725 57560 896828 317000) 0 nil])
([nil nil ((#("#+BEGIN_SRC html :tangle .html
#+END_SRC
" 0 6 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 6 7 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 7 30 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 30 31 (font-lock-fontified t rear-nonsticky t fontified t font-lock-multiline t face org-block-begin-line) 31 39 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 39 40 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 40 41 (fontified t rear-nonsticky t face org-block-end-line)) . 95701) (undo-tree-id18061 . -31) (undo-tree-id18062 . -40) (undo-tree-id18063 . -41) (undo-tree-id18064 . -31) (undo-tree-id18065 . -41) (undo-tree-id18066 . -41) (undo-tree-id18067 . -31) (undo-tree-id18068 . -31) 95732) nil (25725 57731 232680 165000) 0 nil] [nil nil ((#("#+BEGIN_SRC html :tangle .html
#+END_SRC
" 0 6 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 6 7 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 7 30 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 30 31 (font-lock-fontified t rear-nonsticky t fontified t font-lock-multiline t face org-block-begin-line) 31 39 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 39 40 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 40 41 (fontified t rear-nonsticky t face org-block-end-line)) . 95701) (undo-tree-id18046 . -31) (undo-tree-id18047 . -40) (undo-tree-id18048 . -31) (undo-tree-id18049 . -41) (undo-tree-id18050 . -31) (undo-tree-id18051 . -31) (undo-tree-id18052 . -31) 95732) ((95701 . 95742)) (25725 57560 896458 503000) 0 nil] [nil nil ((#("#+BEGIN_SRC html :tangle .html
#+END_SRC
" 0 6 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 6 7 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 7 30 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 30 31 (font-lock-fontified t rear-nonsticky t fontified t font-lock-multiline t face org-block-begin-line) 31 39 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 39 40 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 40 41 (fontified t rear-nonsticky t face org-block-end-line)) . 95701) (undo-tree-id18027 . -31) (undo-tree-id18028 . -40) (undo-tree-id18029 . -31) (undo-tree-id18030 . -41) (undo-tree-id18031 . -31) (undo-tree-id18032 . -31) (undo-tree-id18033 . -31) 95732) ((95701 . 95742)) (25725 57542 302105 448000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -95798) (undo-tree-id18060 . -4) 95802 (95797 . 95802) 95703) nil (25725 57731 232659 212000) 0 nil])
nil
nil
([nil nil ((nil rear-nonsticky nil 95979 . 95980) (nil fontified nil 95701 . 95980) (95701 . 95980)) nil (25725 57731 232585 249000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -96022) (undo-tree-id18055 . -1) (undo-tree-id18056 . -1) (#("k" 0 1 (fontified t)) . -96023) (undo-tree-id18057 . -1) (undo-tree-id18058 . -1) (#("k" 0 1 (fontified t)) . -96024) (undo-tree-id18059 . -1) 96025 (96022 . 96025) (nil fontified nil 96021 . 96022) (nil fontified nil 96020 . 96021) (nil fontified nil 96012 . 96020) (nil fontified nil 96011 . 96012) (nil fontified nil 95988 . 96011) (nil fontified nil 95987 . 95988) (nil fontified nil 95981 . 95987) (95981 . 96022) (95980 . 95981) 95979) nil (25725 57731 232578 56000) 0 nil])
([nil nil ((95396 . 95410)) nil (25725 57731 232556 614000) 0 nil])
([nil nil ((96038 . 96039) (#("r" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -96038) (undo-tree-id18053 . -1) (#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -96039) (undo-tree-id18054 . -1) 96040 (96020 . 96040)) nil (25725 57731 232550 398000) 0 nil])
([nil nil ((96044 . 96045) 96038) nil (25725 57731 232526 372000) 0 nil])
([nil nil ((nil rear-nonsticky nil 96603 . 96604) (nil fontified nil 96045 . 96604) (96045 . 96604)) nil (25725 57731 232513 242000) 0 nil])
([nil nil ((#("j" 0 1 (face org-level-3 fontified nil)) . -96622) (undo-tree-id18069 . -1) (undo-tree-id18070 . -1) (#("k" 0 1 (face org-level-3)) . -96623) (undo-tree-id18071 . -1) 96624 (96622 . 96624) (t 25725 57731 517694 407000)) nil (25725 57735 354470 330000) 0 nil])
([nil nil ((96711 . 96716) 96621) nil (25725 57735 354402 653000) 0 nil])
([nil nil ((nil rear-nonsticky nil 97645 . 97646) (nil fontified nil 96716 . 97646) (96716 . 97646) 96715 (t 25725 57735 641765 340000)) nil (25725 57809 608929 950000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -97688) (undo-tree-id18073 . -1) (#("k" 0 1 (fontified t)) . -97689) (undo-tree-id18074 . -1) (#("k" 0 1 (fontified t)) . -97690) (undo-tree-id18075 . -1) (#("k" 0 1 (fontified t)) . -97691) (undo-tree-id18076 . -1) 97692 (97688 . 97692) (#("j" 0 1 (fontified t)) . -97688) (undo-tree-id18077 . -1) (undo-tree-id18078 . -1) (#("k" 0 1 (fontified t)) . -97689) (undo-tree-id18079 . -1) (undo-tree-id18080 . -1) 97690 (97688 . 97690) (nil fontified nil 97687 . 97688) (nil fontified nil 97686 . 97687) (nil fontified nil 97678 . 97686) (nil fontified nil 97677 . 97678) (nil fontified nil 97654 . 97677) (nil fontified nil 97653 . 97654) (nil fontified nil 97647 . 97653) (97647 . 97688) (97646 . 97647) 97645) nil (25725 57809 608920 451000) 0 nil])
([nil nil ((97674 . 97684) (#("g" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -97674) (undo-tree-id18072 . -1) 97675 (97674 . 97675) (97672 . 97674)) nil (25725 57809 608891 397000) 0 nil])
([nil nil ((97689 . 97690) 97683) nil (25725 57809 608870 235000) 0 nil])
([nil nil ((nil rear-nonsticky nil 97974 . 97975) (nil fontified nil 97690 . 97975) (97690 . 97975)) nil (25725 57809 608856 546000) 0 nil])
([nil nil ((nil rear-nonsticky nil 98349 . 98350) (nil fontified nil 97986 . 98350) (97986 . 98350) (t 25725 57809 979050 251000)) nil (25725 57846 36118 338000) 0 nil])
([nil nil ((98350 . 98351) 98349) nil (25725 57846 36101 925000) 0 nil])
([nil nil ((98464 . 98471) (#("m" 0 1 (fontified t)) . -98464) (undo-tree-id18081 . -1) (undo-tree-id18082 . -1) (undo-tree-id18083 . -1) (undo-tree-id18084 . -1) (undo-tree-id18085 . -1) (undo-tree-id18086 . -1) (undo-tree-id18087 . -1) (undo-tree-id18088 . -1) (undo-tree-id18089 . -1) (undo-tree-id18090 . -1) (undo-tree-id18091 . -1) (undo-tree-id18092 . -1) (undo-tree-id18093 . -1) (undo-tree-id18094 . -1) (undo-tree-id18095 . -1) (undo-tree-id18096 . -1) (undo-tree-id18097 . -1) (undo-tree-id18098 . -1) (undo-tree-id18099 . -1) (undo-tree-id18100 . -1) (undo-tree-id18101 . -1) (undo-tree-id18102 . -1) (undo-tree-id18103 . -1) (undo-tree-id18104 . -1) (undo-tree-id18105 . -1) (undo-tree-id18106 . -1) (undo-tree-id18107 . -1) (undo-tree-id18108 . -1) (undo-tree-id18109 . -1) (undo-tree-id18110 . -1) (undo-tree-id18111 . -1) (undo-tree-id18112 . -1) (undo-tree-id18113 . -1) (undo-tree-id18114 . -1) (undo-tree-id18115 . -1) (undo-tree-id18116 . -1) (undo-tree-id18117 . -1) (undo-tree-id18118 . -1) (undo-tree-id18119 . -1) (undo-tree-id18120 . -1) (undo-tree-id18121 . -1) (undo-tree-id18122 . -1) (undo-tree-id18123 . -1) (undo-tree-id18124 . -1) (undo-tree-id18125 . -1) (undo-tree-id18126 . -1) (undo-tree-id18127 . -1) (undo-tree-id18128 . -1) (undo-tree-id18129 . -1) (undo-tree-id18130 . -1) (undo-tree-id18131 . -1) (undo-tree-id18132 . -1) (undo-tree-id18133 . -1) (undo-tree-id18134 . -1) (undo-tree-id18135 . -1) (undo-tree-id18136 . -1) (undo-tree-id18137 . -1) (undo-tree-id18138 . -1) (undo-tree-id18139 . -1) (undo-tree-id18140 . -1) (undo-tree-id18141 . -1) (undo-tree-id18142 . -1) (undo-tree-id18143 . -1) (undo-tree-id18144 . -1) (undo-tree-id18145 . -1) (undo-tree-id18146 . -1) (undo-tree-id18147 . -1) (undo-tree-id18148 . -1) (undo-tree-id18149 . -1) (undo-tree-id18150 . -1) (undo-tree-id18151 . -1) (undo-tree-id18152 . -1) (undo-tree-id18153 . -1) (undo-tree-id18154 . -1) (undo-tree-id18155 . -1) (undo-tree-id18156 . -1) (undo-tree-id18157 . -1) (undo-tree-id18158 . -1) (undo-tree-id18159 . -1) (undo-tree-id18160 . -1) (undo-tree-id18161 . -1) (undo-tree-id18162 . -1) (undo-tree-id18163 . -1) (undo-tree-id18164 . -1) (undo-tree-id18165 . -1) (undo-tree-id18166 . -1) (undo-tree-id18167 . -1) (undo-tree-id18168 . -1) (undo-tree-id18169 . -1) (undo-tree-id18170 . -1) (undo-tree-id18171 . -1) (undo-tree-id18172 . -1) (undo-tree-id18173 . -1) (undo-tree-id18174 . -1) (undo-tree-id18175 . -1) (undo-tree-id18176 . -1) (undo-tree-id18177 . -1) (undo-tree-id18178 . -1) (undo-tree-id18179 . -1) (undo-tree-id18180 . -1) (undo-tree-id18181 . -1) (undo-tree-id18182 . -1) (undo-tree-id18183 . -1) (undo-tree-id18184 . -1) (undo-tree-id18185 . -1) (undo-tree-id18186 . -1) (undo-tree-id18187 . -1) (undo-tree-id18188 . -1) (undo-tree-id18189 . -1) (undo-tree-id18190 . -1) (undo-tree-id18191 . -1) (undo-tree-id18192 . -1) (undo-tree-id18193 . -1) (undo-tree-id18194 . -1) (undo-tree-id18195 . -1) (undo-tree-id18196 . -1) (undo-tree-id18197 . -1) (undo-tree-id18198 . -1) (undo-tree-id18199 . -1) (undo-tree-id18200 . -1) (undo-tree-id18201 . -1) (undo-tree-id18202 . -1) (undo-tree-id18203 . -1) (undo-tree-id18204 . -1) (undo-tree-id18205 . -1) (undo-tree-id18206 . -1) (undo-tree-id18207 . -1) (undo-tree-id18208 . -1) (undo-tree-id18209 . -1) (undo-tree-id18210 . -1) (undo-tree-id18211 . -1) (undo-tree-id18212 . -1) (undo-tree-id18213 . -1) (undo-tree-id18214 . -1) (undo-tree-id18215 . -1) (undo-tree-id18216 . -1) (undo-tree-id18217 . -1) (undo-tree-id18218 . -1) (undo-tree-id18219 . -1) (undo-tree-id18220 . -1) (undo-tree-id18221 . -1) (undo-tree-id18222 . -1) (undo-tree-id18223 . -1) (undo-tree-id18224 . -1) (undo-tree-id18225 . -1) (undo-tree-id18226 . -1) (undo-tree-id18227 . -1) (undo-tree-id18228 . -1) (undo-tree-id18229 . -1) (undo-tree-id18230 . -1) (undo-tree-id18231 . -1) (undo-tree-id18232 . -1) (undo-tree-id18233 . -1) (undo-tree-id18234 . -1) (undo-tree-id18235 . -1) (undo-tree-id18236 . -1) (undo-tree-id18237 . -1) (undo-tree-id18238 . -1) (undo-tree-id18239 . -1) (undo-tree-id18240 . -1) (undo-tree-id18241 . -1) (undo-tree-id18242 . -1) (undo-tree-id18243 . -1) (undo-tree-id18244 . -1) (undo-tree-id18245 . -1) (undo-tree-id18246 . -1) (undo-tree-id18247 . -1) (undo-tree-id18248 . -1) (undo-tree-id18249 . -1) (undo-tree-id18250 . -1) (undo-tree-id18251 . -1) (undo-tree-id18252 . -1) (undo-tree-id18253 . -1) (undo-tree-id18254 . -1) (undo-tree-id18255 . -1) (undo-tree-id18256 . -1) (undo-tree-id18257 . -1) (undo-tree-id18258 . -1) (undo-tree-id18259 . -1) (undo-tree-id18260 . -1) (undo-tree-id18261 . -1) (undo-tree-id18262 . -1) (undo-tree-id18263 . -1) (undo-tree-id18264 . -1) (undo-tree-id18265 . -1) (undo-tree-id18266 . -1) (undo-tree-id18267 . -1) (undo-tree-id18268 . -1) (undo-tree-id18269 . -1) (undo-tree-id18270 . -1) (undo-tree-id18271 . -1) (undo-tree-id18272 . -1) (undo-tree-id18273 . -1) (undo-tree-id18274 . -1) (undo-tree-id18275 . -1) (undo-tree-id18276 . -1) (undo-tree-id18277 . -1) (undo-tree-id18278 . -1) (undo-tree-id18279 . -1) (undo-tree-id18280 . -1) (undo-tree-id18281 . -1) (undo-tree-id18282 . -1) (undo-tree-id18283 . -1) (undo-tree-id18284 . -1) (undo-tree-id18285 . -1) (undo-tree-id18286 . -1) (undo-tree-id18287 . -1) (undo-tree-id18288 . -1) (undo-tree-id18289 . -1) (undo-tree-id18290 . -1) (undo-tree-id18291 . -1) (undo-tree-id18292 . -1) (undo-tree-id18293 . -1) (undo-tree-id18294 . -1) (undo-tree-id18295 . -1) (undo-tree-id18296 . -1) (undo-tree-id18297 . -1) (undo-tree-id18298 . -1) (undo-tree-id18299 . -1) (undo-tree-id18300 . -1) (undo-tree-id18301 . -1) (undo-tree-id18302 . -1) (undo-tree-id18303 . -1) (undo-tree-id18304 . -1) (undo-tree-id18305 . -1) (undo-tree-id18306 . -1) (undo-tree-id18307 . -1) (undo-tree-id18308 . -1) (undo-tree-id18309 . -1) (undo-tree-id18310 . -1) (undo-tree-id18311 . -1) (undo-tree-id18312 . -1) (undo-tree-id18313 . -1) (undo-tree-id18314 . -1) (undo-tree-id18315 . -1) (undo-tree-id18316 . -1) (undo-tree-id18317 . -1) (undo-tree-id18318 . -1) (undo-tree-id18319 . -1) (undo-tree-id18320 . -1) (undo-tree-id18321 . -1) (undo-tree-id18322 . -1) (undo-tree-id18323 . -1) (undo-tree-id18324 . -1) (undo-tree-id18325 . -1) (undo-tree-id18326 . -1) (undo-tree-id18327 . -1) (undo-tree-id18328 . -1) (undo-tree-id18329 . -1) (undo-tree-id18330 . -1) (undo-tree-id18331 . -1) (undo-tree-id18332 . -1) (undo-tree-id18333 . -1) (undo-tree-id18334 . -1) (undo-tree-id18335 . -1) (undo-tree-id18336 . -1) (undo-tree-id18337 . -1) (undo-tree-id18338 . -1) (undo-tree-id18339 . -1) (undo-tree-id18340 . -1) (undo-tree-id18341 . -1) (undo-tree-id18342 . -1) (undo-tree-id18343 . -1) (undo-tree-id18344 . -1) (undo-tree-id18345 . -1) (undo-tree-id18346 . -1) (undo-tree-id18347 . -1) (undo-tree-id18348 . -1) (undo-tree-id18349 . -1) (undo-tree-id18350 . -1) (undo-tree-id18351 . -1) (undo-tree-id18352 . -1) (undo-tree-id18353 . -1) (undo-tree-id18354 . -1) (undo-tree-id18355 . -1) (undo-tree-id18356 . -1) (undo-tree-id18357 . -1) (undo-tree-id18358 . -1) (undo-tree-id18359 . -1) (undo-tree-id18360 . -1) (undo-tree-id18361 . -1) (undo-tree-id18362 . -1) (undo-tree-id18363 . -1) (undo-tree-id18364 . -1) (undo-tree-id18365 . -1) (undo-tree-id18366 . -1) (undo-tree-id18367 . -1) (undo-tree-id18368 . -1) (undo-tree-id18369 . -1) (undo-tree-id18370 . -1) (undo-tree-id18371 . -1) (undo-tree-id18372 . -1) (undo-tree-id18373 . -1) (undo-tree-id18374 . -1) (undo-tree-id18375 . -1) (undo-tree-id18376 . -1) (undo-tree-id18377 . -1) (undo-tree-id18378 . -1) (undo-tree-id18379 . -1) (undo-tree-id18380 . -1) (undo-tree-id18381 . -1) (undo-tree-id18382 . -1) (undo-tree-id18383 . -1) (undo-tree-id18384 . -1) (undo-tree-id18385 . -1) (undo-tree-id18386 . -1) (undo-tree-id18387 . -1) (undo-tree-id18388 . -1) (undo-tree-id18389 . -1) (undo-tree-id18390 . -1) (undo-tree-id18391 . -1) (undo-tree-id18392 . -1) (undo-tree-id18393 . -1) (undo-tree-id18394 . -1) (undo-tree-id18395 . -1) (undo-tree-id18396 . -1) (undo-tree-id18397 . -1) (undo-tree-id18398 . -1) (undo-tree-id18399 . -1) (undo-tree-id18400 . -1) (undo-tree-id18401 . -1) (undo-tree-id18402 . -1) (undo-tree-id18403 . -1) (undo-tree-id18404 . -1) (undo-tree-id18405 . -1) (undo-tree-id18406 . -1) (undo-tree-id18407 . -1) (undo-tree-id18408 . -1) (undo-tree-id18409 . -1) (undo-tree-id18410 . -1) (undo-tree-id18411 . -1) (undo-tree-id18412 . -1) (undo-tree-id18413 . -1) (undo-tree-id18414 . -1) (undo-tree-id18415 . -1) (undo-tree-id18416 . -1) (undo-tree-id18417 . -1) (undo-tree-id18418 . -1) (undo-tree-id18419 . -1) (undo-tree-id18420 . -1) (undo-tree-id18421 . -1) (undo-tree-id18422 . -1) (undo-tree-id18423 . -1) (undo-tree-id18424 . -1) (undo-tree-id18425 . -1) (undo-tree-id18426 . -1) (undo-tree-id18427 . -1) (undo-tree-id18428 . -1) (undo-tree-id18429 . -1) (undo-tree-id18430 . -1) (undo-tree-id18431 . -1) (undo-tree-id18432 . -1) (undo-tree-id18433 . -1) (undo-tree-id18434 . -1) (undo-tree-id18435 . -1) (undo-tree-id18436 . -1) (undo-tree-id18437 . -1) (undo-tree-id18438 . -1) (undo-tree-id18439 . -1) (undo-tree-id18440 . -1) (undo-tree-id18441 . -1) (undo-tree-id18442 . -1) (undo-tree-id18443 . -1) (undo-tree-id18444 . -1) (undo-tree-id18445 . -1) (undo-tree-id18446 . -1) (undo-tree-id18447 . -1) (undo-tree-id18448 . -1) (undo-tree-id18449 . -1) (undo-tree-id18450 . -1) (undo-tree-id18451 . -1) (undo-tree-id18452 . -1) (undo-tree-id18453 . -1) (undo-tree-id18454 . -1) (undo-tree-id18455 . -1) (undo-tree-id18456 . -1) (undo-tree-id18457 . -1) (undo-tree-id18458 . -1) (undo-tree-id18459 . -1) (undo-tree-id18460 . -1) (undo-tree-id18461 . -1) (undo-tree-id18462 . -1) (undo-tree-id18463 . -1) (undo-tree-id18464 . -1) (undo-tree-id18465 . -1) (undo-tree-id18466 . -1) (undo-tree-id18467 . -1) (undo-tree-id18468 . -1) (undo-tree-id18469 . -1) (undo-tree-id18470 . -1) (undo-tree-id18471 . -1) (undo-tree-id18472 . -1) (undo-tree-id18473 . -1) (undo-tree-id18474 . -1) (undo-tree-id18475 . -1) (undo-tree-id18476 . -1) (undo-tree-id18477 . -1) (undo-tree-id18478 . -1) (undo-tree-id18479 . -1) (undo-tree-id18480 . -1) (undo-tree-id18481 . -1) (undo-tree-id18482 . -1) (undo-tree-id18483 . -1) (undo-tree-id18484 . -1) (undo-tree-id18485 . -1) (undo-tree-id18486 . -1) (undo-tree-id18487 . -1) (undo-tree-id18488 . -1) (undo-tree-id18489 . -1) (undo-tree-id18490 . -1) (undo-tree-id18491 . -1) (undo-tree-id18492 . -1) (undo-tree-id18493 . -1) (undo-tree-id18494 . -1) (undo-tree-id18495 . -1) (undo-tree-id18496 . -1) (undo-tree-id18497 . -1) (undo-tree-id18498 . -1) (undo-tree-id18499 . -1) (undo-tree-id18500 . -1) (undo-tree-id18501 . -1) (undo-tree-id18502 . -1) (undo-tree-id18503 . -1) (undo-tree-id18504 . -1) (undo-tree-id18505 . -1) (undo-tree-id18506 . -1) (undo-tree-id18507 . -1) (undo-tree-id18508 . -1) (undo-tree-id18509 . -1) (undo-tree-id18510 . -1) (undo-tree-id18511 . -1) (undo-tree-id18512 . -1) (undo-tree-id18513 . -1) (undo-tree-id18514 . -1) (undo-tree-id18515 . -1) (undo-tree-id18516 . -1) (undo-tree-id18517 . -1) (undo-tree-id18518 . -1) (undo-tree-id18519 . -1) (undo-tree-id18520 . -1) (undo-tree-id18521 . -1) (undo-tree-id18522 . -1) (undo-tree-id18523 . -1) (undo-tree-id18524 . -1) (undo-tree-id18525 . -1) (undo-tree-id18526 . -1) (undo-tree-id18527 . -1) (undo-tree-id18528 . -1) (undo-tree-id18529 . -1) (undo-tree-id18530 . -1) (undo-tree-id18531 . -1) (undo-tree-id18532 . -1) (undo-tree-id18533 . -1) (undo-tree-id18534 . -1) (undo-tree-id18535 . -1) (undo-tree-id18536 . -1) (undo-tree-id18537 . -1) (undo-tree-id18538 . -1) (undo-tree-id18539 . -1) (undo-tree-id18540 . -1) (undo-tree-id18541 . -1) (undo-tree-id18542 . -1) (undo-tree-id18543 . -1) (undo-tree-id18544 . -1) (undo-tree-id18545 . -1) (undo-tree-id18546 . -1) (undo-tree-id18547 . -1) (undo-tree-id18548 . -1) (undo-tree-id18549 . -1) (undo-tree-id18550 . -1) (undo-tree-id18551 . -1) (undo-tree-id18552 . -1) (undo-tree-id18553 . -1) (undo-tree-id18554 . -1) (undo-tree-id18555 . -1) (undo-tree-id18556 . -1) (undo-tree-id18557 . -1) (undo-tree-id18558 . -1) (undo-tree-id18559 . -1) (undo-tree-id18560 . -1) (undo-tree-id18561 . -1) (undo-tree-id18562 . -1) (undo-tree-id18563 . -1) (undo-tree-id18564 . -1) (undo-tree-id18565 . -1) (undo-tree-id18566 . -1) (undo-tree-id18567 . -1) (undo-tree-id18568 . -1) (undo-tree-id18569 . -1) (undo-tree-id18570 . -1) (undo-tree-id18571 . -1) (undo-tree-id18572 . -1) (undo-tree-id18573 . -1) (undo-tree-id18574 . -1) (undo-tree-id18575 . -1) (undo-tree-id18576 . -1) (undo-tree-id18577 . -1) (undo-tree-id18578 . -1) (undo-tree-id18579 . -1) (undo-tree-id18580 . -1) (undo-tree-id18581 . -1) (undo-tree-id18582 . -1) (undo-tree-id18583 . -1) (undo-tree-id18584 . -1) (undo-tree-id18585 . -1) (undo-tree-id18586 . -1) (undo-tree-id18587 . -1) (undo-tree-id18588 . -1) (undo-tree-id18589 . -1) (undo-tree-id18590 . -1) (undo-tree-id18591 . -1) (undo-tree-id18592 . -1) (undo-tree-id18593 . -1) (undo-tree-id18594 . -1) (undo-tree-id18595 . -1) (undo-tree-id18596 . -1) (undo-tree-id18597 . -1) (undo-tree-id18598 . -1) (undo-tree-id18599 . -1) (undo-tree-id18600 . -1) (undo-tree-id18601 . -1) (undo-tree-id18602 . -1) (undo-tree-id18603 . -1) (undo-tree-id18604 . -1) (undo-tree-id18605 . -1) (undo-tree-id18606 . -1) (undo-tree-id18607 . -1) (undo-tree-id18608 . -1) (undo-tree-id18609 . -1) (undo-tree-id18610 . -1) (undo-tree-id18611 . -1) (undo-tree-id18612 . -1) (undo-tree-id18613 . -1) (undo-tree-id18614 . -1) (undo-tree-id18615 . -1) (undo-tree-id18616 . -1) (undo-tree-id18617 . -1) (undo-tree-id18618 . -1) (undo-tree-id18619 . -1) (undo-tree-id18620 . -1) (undo-tree-id18621 . -1) (undo-tree-id18622 . -1) (undo-tree-id18623 . -1) (undo-tree-id18624 . -1) (undo-tree-id18625 . -1) (undo-tree-id18626 . -1) (undo-tree-id18627 . -1) (undo-tree-id18628 . -1) (undo-tree-id18629 . -1) (undo-tree-id18630 . -1) (undo-tree-id18631 . -1) (undo-tree-id18632 . -1) (undo-tree-id18633 . -1) (undo-tree-id18634 . -1) (undo-tree-id18635 . -1) (undo-tree-id18636 . -1) (undo-tree-id18637 . -1) (undo-tree-id18638 . -1) (undo-tree-id18639 . -1) (undo-tree-id18640 . -1) (undo-tree-id18641 . -1) (undo-tree-id18642 . -1) (undo-tree-id18643 . -1) (undo-tree-id18644 . -1) (undo-tree-id18645 . -1) (undo-tree-id18646 . -1) (undo-tree-id18647 . -1) (undo-tree-id18648 . -1) (undo-tree-id18649 . -1) (undo-tree-id18650 . -1) (undo-tree-id18651 . -1) (undo-tree-id18652 . -1) (undo-tree-id18653 . -1) (undo-tree-id18654 . -1) (undo-tree-id18655 . -1) (undo-tree-id18656 . -1) (undo-tree-id18657 . -1) (undo-tree-id18658 . -1) (undo-tree-id18659 . -1) (undo-tree-id18660 . -1) (undo-tree-id18661 . -1) (undo-tree-id18662 . -1) (undo-tree-id18663 . -1) (undo-tree-id18664 . -1) (undo-tree-id18665 . -1) (undo-tree-id18666 . -1) (undo-tree-id18667 . -1) (undo-tree-id18668 . -1) (undo-tree-id18669 . -1) (undo-tree-id18670 . -1) (undo-tree-id18671 . -1) (undo-tree-id18672 . -1) (undo-tree-id18673 . -1) (undo-tree-id18674 . -1) (undo-tree-id18675 . -1) (undo-tree-id18676 . -1) (undo-tree-id18677 . -1) (undo-tree-id18678 . -1) (undo-tree-id18679 . -1) (undo-tree-id18680 . -1) (undo-tree-id18681 . -1) (undo-tree-id18682 . -1) (undo-tree-id18683 . -1) (undo-tree-id18684 . -1) (undo-tree-id18685 . -1) (undo-tree-id18686 . -1) (undo-tree-id18687 . -1) (undo-tree-id18688 . -1) (undo-tree-id18689 . -1) (undo-tree-id18690 . -1) (undo-tree-id18691 . -1) (undo-tree-id18692 . -1) (undo-tree-id18693 . -1) (undo-tree-id18694 . -1) (undo-tree-id18695 . -1) (undo-tree-id18696 . -1) (undo-tree-id18697 . -1) (undo-tree-id18698 . -1) (undo-tree-id18699 . -1) (undo-tree-id18700 . -1) (undo-tree-id18701 . -1) (undo-tree-id18702 . -1) (undo-tree-id18703 . -1) (undo-tree-id18704 . -1) (undo-tree-id18705 . -1) (undo-tree-id18706 . -1) (undo-tree-id18707 . -1) (undo-tree-id18708 . -1) (undo-tree-id18709 . -1) (undo-tree-id18710 . -1) (undo-tree-id18711 . -1) (undo-tree-id18712 . -1) (undo-tree-id18713 . -1) (undo-tree-id18714 . -1) (undo-tree-id18715 . -1) (undo-tree-id18716 . -1) (undo-tree-id18717 . -1) (undo-tree-id18718 . -1) (undo-tree-id18719 . -1) (undo-tree-id18720 . -1) (undo-tree-id18721 . -1) (undo-tree-id18722 . -1) (undo-tree-id18723 . -1) (undo-tree-id18724 . -1) (undo-tree-id18725 . -1) (undo-tree-id18726 . -1) (undo-tree-id18727 . -1) (undo-tree-id18728 . -1) (undo-tree-id18729 . -1) (undo-tree-id18730 . -1) (undo-tree-id18731 . -1) (undo-tree-id18732 . -1) (undo-tree-id18733 . -1) (undo-tree-id18734 . -1) (undo-tree-id18735 . -1) (undo-tree-id18736 . -1) (undo-tree-id18737 . -1) (undo-tree-id18738 . -1) (undo-tree-id18739 . -1) (undo-tree-id18740 . -1) (undo-tree-id18741 . -1) (undo-tree-id18742 . -1) (undo-tree-id18743 . -1) (undo-tree-id18744 . -1) (undo-tree-id18745 . -1) (undo-tree-id18746 . -1) (undo-tree-id18747 . -1) (undo-tree-id18748 . -1) (undo-tree-id18749 . -1) (undo-tree-id18750 . -1) (undo-tree-id18751 . -1) (undo-tree-id18752 . -1) (undo-tree-id18753 . -1) (undo-tree-id18754 . -1) (undo-tree-id18755 . -1) (undo-tree-id18756 . -1) (undo-tree-id18757 . -1) (undo-tree-id18758 . -1) (undo-tree-id18759 . -1) (undo-tree-id18760 . -1) (undo-tree-id18761 . -1) (undo-tree-id18762 . -1) (undo-tree-id18763 . -1) (undo-tree-id18764 . -1) (undo-tree-id18765 . -1) (undo-tree-id18766 . -1) (undo-tree-id18767 . -1) 98465 (98463 . 98465) (98455 . 98463) (98444 . 98455) (#("t" 0 1 (fontified t)) . -98444) (undo-tree-id18768 . -1) (undo-tree-id18769 . -1) (#(" " 0 1 (fontified t)) . -98445) (undo-tree-id18770 . -1) (#("t" 0 1 (fontified t)) . -98446) (undo-tree-id18771 . -1) 98447 (98441 . 98447) (98420 . 98441) (t 25725 57846 371683 351000)) nil (25725 57872 749351 928000) 0 nil])
([nil nil ((98471 . 98472) 98470) nil (25725 57872 745537 778000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -98531) (undo-tree-id18774 . -4) 98535 (98530 . 98535) (t 25725 57873 48148 972000) 98530) nil (25725 57904 678783 292000) 0 nil])
([nil nil ((nil fontified nil 98570 . 98571) (nil fontified nil 98569 . 98570) (nil fontified nil 98561 . 98569) (nil fontified nil 98560 . 98561) (nil fontified nil 98537 . 98560) (nil fontified nil 98536 . 98537) (nil fontified nil 98530 . 98536) (98530 . 98571)) nil (25725 57904 678774 352000) 0 nil])
([nil nil ((nil rear-nonsticky nil 98572 . 98573) (#("
" 0 1 (rear-nonsticky t face org-block-end-line fontified nil)) . -98613) (98572 . 98614)) nil (25725 57904 679224 765000) 0 nil])
([nil nil ((98613 . 98614) 98604) nil (25725 57941 621684 51000) 0 nil] [nil nil ((#("
" 0 1 (font-lock-fontified t rear-nonsticky t fontified t font-lock-multiline t face org-block-begin-line)) . -98603) (undo-tree-id18772 . -1) (undo-tree-id18773 . -1) 98604) ((98603 . 98604)) (25725 57904 678753 749000) 0 nil])
([nil nil ((nil rear-nonsticky nil 98614 . 98615) (#("
" 0 1 (rear-nonsticky t face org-block-end-line fontified nil)) . -98655) (98614 . 98656)) nil (25725 57941 621678 464000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 98770 . 98771) (#("
" 0 1 (rear-nonsticky t face org-block-end-line fontified nil)) . -98811) (98770 . 98812)) nil (25725 57941 621672 318000) 0 nil])
([nil nil ((nil rear-nonsticky nil 98836 . 98837) (#("
" 0 1 (rear-nonsticky t face org-block-end-line fontified nil)) . -98877) (98836 . 98878)) nil (25725 57941 621667 10000) 0 nil])
([nil nil ((nil rear-nonsticky nil 98924 . 98925) (#("
" 0 1 (rear-nonsticky t face org-block-end-line fontified nil)) . -98965) (98924 . 98966)) nil (25725 57941 621661 702000) 0 nil])
([nil nil ((nil rear-nonsticky nil 98993 . 98994) (#("
" 0 1 (rear-nonsticky t face org-block-end-line fontified nil)) . -99034) (98993 . 99035)) nil (25725 57941 621655 905000) 0 nil])
([nil nil ((#("j" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -98563) (undo-tree-id18782 . -1) (#("k" 0 1 (font-lock-fontified t fontified nil font-lock-multiline t face org-block-begin-line)) . -98564) 98565 (98555 . 98565)) nil (25725 57941 621650 248000) 0 nil])
([nil nil ((98568 . 98569) 98562) nil (25725 57941 621642 705000) 0 nil])
([nil nil ((#("#+BEGIN_SRC html :tangle stopping.html

#+END_SRC
" 0 6 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 6 7 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 7 38 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line) 38 39 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 39 40 (font-lock-fontified t rear-nonsticky t fontified t font-lock-multiline t face (org-block) src-block t) 40 48 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 48 49 (font-lock-fontified t fontified t font-lock-multiline t face org-block-end-line) 49 50 (rear-nonsticky t fontified t face org-block-end-line)) . 98530) (undo-tree-id18775 . -40) (undo-tree-id18776 . -49) (undo-tree-id18777 . 11) (undo-tree-id18778 . -40) (undo-tree-id18779 . -50) (undo-tree-id18780 . -40) (undo-tree-id18781 . -40) 98570) nil (25725 57941 621637 955000) 0 nil])
([nil nil ((nil rear-nonsticky nil 98472 . 98473) (#("
" 0 1 (rear-nonsticky t face org-block-end-line fontified nil)) . -98522) (98472 . 98523)) nil (25725 57941 621601 638000) 0 nil])
([nil nil ((nil rear-nonsticky nil 99455 . 99456) (nil fontified nil 98512 . 99456) (98512 . 99456)) nil (25725 57941 621594 933000) 0 nil])
([nil nil ((99987 . 99988) 99524) nil (25725 57941 621580 685000) 0 nil])
([nil nil ((99524 . 99525) (t 25725 57941 977357 655000)) nil (25725 57946 123473 591000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -99524) (undo-tree-id18783 . -1) 99525) nil (25725 57946 123461 998000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -99524) (undo-tree-id18811 . -1) (undo-tree-id18812 . -1) (#("k" 0 1 (fontified t)) . -99525) (undo-tree-id18813 . -1) (undo-tree-id18814 . -1) 99526 (99524 . 99526) (#("j" 0 1 (fontified t)) . -99524) (undo-tree-id18815 . -1) (#("k" 0 1 (fontified t)) . -99525) (undo-tree-id18816 . -1) (#("j" 0 1 (fontified t)) . -99526) (undo-tree-id18817 . -1) (#("j" 0 1 (fontified t)) . -99527) (undo-tree-id18818 . -1) 99528 (99524 . 99528) (t 25725 57946 405156 314000)) nil (25725 58014 760485 810000) 0 nil])
([nil nil ((99551 . 99568)) nil (25725 58014 760459 273000) 0 nil])
([nil nil ((99573 . 99574) 99567) nil (25725 58014 760455 502000) 0 nil])
([nil nil ((nil rear-nonsticky nil 100393 . 100394) (nil fontified nil 99574 . 100394) (99574 . 100394)) nil (25725 58014 760450 823000) 0 nil])
([nil nil ((99637 . 99640) (#("l" 0 1 (fontified t)) . -99637) (undo-tree-id18784 . -1) (#("e" 0 1 (fontified t)) . -99638) (undo-tree-id18785 . -1) 99639 (99621 . 99639) (#(" " 0 1 (fontified t)) . -99621) (undo-tree-id18786 . -1) 99622 (99606 . 99622) (#("i" 0 1 (fontified t)) . -99606) (undo-tree-id18787 . -1) (undo-tree-id18788 . -1) (#("c" 0 1 (fontified t)) . -99607) (undo-tree-id18789 . -1) (#("k" 0 1 (fontified t)) . -99608) (undo-tree-id18790 . -1) (#(" " 0 1 (fontified t)) . -99609) (undo-tree-id18791 . -1) 99610 (99599 . 99610) (99598 . 99599) (99587 . 99598) (99579 . 99587) (99558 . 99579) (99556 . 99558) (99553 . 99556) (#("b" 0 1 (fontified t)) . -99553) (undo-tree-id18792 . -1) (#("b" 0 1 (fontified t)) . -99554) (undo-tree-id18793 . -1) 99555 (99553 . 99555) (#("u" 0 1 (fontified t)) . -99553) (undo-tree-id18794 . -1) (undo-tree-id18795 . -1) (#("g" 0 1 (fontified t)) . -99554) (undo-tree-id18796 . -1) 99555 (99552 . 99555) (#("u" 0 1 (fontified t)) . -99552) (undo-tree-id18797 . -1) 99553 (99540 . 99553) (#("p" 0 1 (fontified t)) . -99540) (undo-tree-id18798 . -1) (undo-tree-id18799 . -1) (#("r" 0 1 (fontified t)) . -99541) (undo-tree-id18800 . -1) (undo-tree-id18801 . -1) (#("o" 0 1 (fontified t)) . -99542) (undo-tree-id18802 . -1) (undo-tree-id18803 . -1) (#("p" 0 1 (fontified t)) . -99543) (undo-tree-id18804 . -1) (undo-tree-id18805 . -1) (#("a" 0 1 (fontified t)) . -99544) (undo-tree-id18806 . -1) (undo-tree-id18807 . -1) 99545 (99543 . 99545) (#("g" 0 1 (fontified t)) . -99543) (undo-tree-id18808 . -1) (undo-tree-id18809 . -1) (#("p" 0 1 (fontified t)) . -99544) (undo-tree-id18810 . -1) 99545 (99524 . 99545)) nil (25725 58051 555803 851000) 0 nil])
([nil nil ((100708 . 100709) (t 25725 58015 51276 498000) 100678) nil (25725 58058 847998 344000) 0 nil] [nil nil ((nil rear-nonsticky nil 101608 . 101609) (nil fontified nil 100679 . 101609) (100679 . 101609) 100678 (t 25725 58015 51276 498000)) ((#("<!DOCTYPE html>
<html lang=\"en\">
<body>

<div>click me</div>

<script>

//first event attached
document.querySelector('div').addEventListener('click',function(){
console.log('I get invoked because I was attached first');
},false);

//seond event attached
document.querySelector('div').addEventListener('click',function(event){
console.log('I get invoked, but stop any other click events on this target');
event.stopImmediatePropagation();
},false);

//third event attached, but because stopImmediatePropagation() was called above this event does not get invoked
document.querySelector('div').addEventListener('click',function(){
console.log('I get stopped from the previous click event listener');
},false);

//notice that the event flow is also cancelled as if stopPropagation was called too
document.body.addEventListener('click',function(){
console.log('What, denied from being invoked!');
},false);

</script> 
</body>
</html>" 0 1 (fontified nil face (rainbow-delimiters-unmatched-face)) 1 14 (fontified nil) 14 15 (fontified nil face (rainbow-delimiters-unmatched-face)) 15 16 (fontified nil) 16 17 (fontified nil face (rainbow-delimiters-unmatched-face)) 17 31 (fontified nil) 31 32 (fontified nil face (rainbow-delimiters-unmatched-face)) 32 33 (fontified nil) 33 34 (fontified nil face (rainbow-delimiters-unmatched-face)) 34 38 (fontified nil) 38 39 (fontified nil face (rainbow-delimiters-unmatched-face)) 39 41 (fontified nil) 41 42 (fontified nil face (rainbow-delimiters-unmatched-face)) 42 45 (fontified nil) 45 46 (fontified nil face (rainbow-delimiters-unmatched-face)) 46 54 (fontified nil) 54 55 (fontified nil face (rainbow-delimiters-unmatched-face)) 55 59 (fontified nil) 59 60 (fontified nil face (rainbow-delimiters-unmatched-face)) 60 62 (fontified nil) 62 63 (fontified nil face (rainbow-delimiters-unmatched-face)) 63 69 (fontified nil) 69 70 (fontified nil face (rainbow-delimiters-unmatched-face)) 70 117 (fontified nil) 117 118 (fontified nil face (rainbow-delimiters-unmatched-face)) 118 123 (fontified nil) 123 124 (fontified nil face (rainbow-delimiters-unmatched-face)) 124 141 (fontified nil) 141 142 (fontified nil face (rainbow-delimiters-unmatched-face)) 142 158 (fontified nil) 158 159 (fontified nil face (rainbow-delimiters-unmatched-face)) 159 160 (fontified nil face (rainbow-delimiters-unmatched-face)) 160 161 (fontified nil face (rainbow-delimiters-unmatched-face)) 161 173 (fontified nil) 173 174 (fontified nil face (rainbow-delimiters-unmatched-face)) 174 218 (fontified nil) 218 219 (fontified nil face (rainbow-delimiters-unmatched-face)) 219 221 (fontified nil) 221 222 (fontified nil face (rainbow-delimiters-unmatched-face)) 222 228 (fontified nil) 228 229 (fontified nil face (rainbow-delimiters-unmatched-face)) 229 277 (fontified nil) 277 278 (fontified nil face (rainbow-delimiters-unmatched-face)) 278 283 (fontified nil) 283 284 (fontified nil face (rainbow-delimiters-unmatched-face)) 284 301 (fontified nil) 301 302 (fontified nil face (rainbow-delimiters-unmatched-face)) 302 318 (fontified nil) 318 319 (fontified nil face (rainbow-delimiters-unmatched-face)) 319 324 (fontified nil) 324 325 (fontified nil face (rainbow-delimiters-unmatched-face)) 325 326 (fontified nil face (rainbow-delimiters-unmatched-face)) 326 338 (fontified nil) 338 339 (fontified nil face (rainbow-delimiters-unmatched-face)) 339 402 (fontified nil) 402 403 (fontified nil face (rainbow-delimiters-unmatched-face)) 403 435 (fontified nil) 435 436 (fontified nil face (rainbow-delimiters-unmatched-face)) 436 437 (fontified nil face (rainbow-delimiters-unmatched-face)) 437 439 (fontified nil) 439 440 (fontified nil face (rainbow-delimiters-unmatched-face)) 440 446 (fontified nil) 446 447 (fontified nil face (rainbow-delimiters-unmatched-face)) 447 499 (fontified nil) 499 510 (fontified nil) 510 511 (fontified nil face (rainbow-delimiters-unmatched-face)) 511 512 (fontified nil face (rainbow-delimiters-unmatched-face)) 512 562 (fontified nil) 562 584 (fontified nil) 584 585 (fontified nil face (rainbow-delimiters-unmatched-face)) 585 590 (fontified nil) 590 591 (fontified nil face (rainbow-delimiters-unmatched-face)) 591 608 (fontified nil) 608 609 (fontified nil face (rainbow-delimiters-unmatched-face)) 609 625 (fontified nil) 625 626 (fontified nil face (rainbow-delimiters-unmatched-face)) 626 627 (fontified nil face (rainbow-delimiters-unmatched-face)) 627 628 (fontified nil face (rainbow-delimiters-unmatched-face)) 628 640 (fontified nil) 640 641 (fontified nil face (rainbow-delimiters-unmatched-face)) 641 695 (fontified nil) 695 696 (fontified nil face (rainbow-delimiters-unmatched-face)) 696 698 (fontified nil) 698 699 (fontified nil face (rainbow-delimiters-unmatched-face)) 699 705 (fontified nil) 705 706 (fontified nil face (rainbow-delimiters-unmatched-face)) 706 823 (fontified nil) 823 824 (fontified nil face (rainbow-delimiters-unmatched-face)) 824 840 (fontified nil) 840 841 (fontified nil face (rainbow-delimiters-unmatched-face)) 841 842 (fontified nil face (rainbow-delimiters-unmatched-face)) 842 843 (fontified nil face (rainbow-delimiters-unmatched-face)) 843 855 (fontified nil) 855 856 (fontified nil face (rainbow-delimiters-unmatched-face)) 856 890 (fontified nil) 890 891 (fontified nil face (rainbow-delimiters-unmatched-face)) 891 893 (fontified nil) 893 894 (fontified nil face (rainbow-delimiters-unmatched-face)) 894 900 (fontified nil) 900 901 (fontified nil face (rainbow-delimiters-unmatched-face)) 901 904 (fontified nil) 904 905 (fontified nil face (rainbow-delimiters-unmatched-face)) 905 912 (fontified nil) 912 913 (fontified nil face (rainbow-delimiters-unmatched-face)) 913 915 (fontified nil) 915 916 (fontified nil face (rainbow-delimiters-unmatched-face)) 916 921 (fontified nil) 921 922 (fontified nil face (rainbow-delimiters-unmatched-face)) 922 923 (fontified nil) 923 924 (fontified nil face (rainbow-delimiters-unmatched-face)) 924 929 (fontified nil) 929 930 (fontified nil rear-nonsticky nil face (rainbow-delimiters-unmatched-face))) . 100679) (undo-tree-id18819 . -929) (undo-tree-id18820 . -41) (undo-tree-id18821 . -929) (undo-tree-id18822 . -923) (undo-tree-id18823 . -923) (undo-tree-id18824 . -929) (undo-tree-id18825 . -929) (nil fontified t 101601 . 101602) (nil fontified t 101600 . 101601) (nil fontified t 101595 . 101600) (nil fontified t 101594 . 101595) (nil fontified t 101592 . 101594) (nil fontified t 101591 . 101592) (nil fontified t 101584 . 101591) (nil fontified t 101583 . 101584) (nil fontified t 101580 . 101583) (nil fontified t 101579 . 101580) (nil fontified t 101573 . 101579) (nil fontified t 101572 . 101573) (nil fontified t 101570 . 101572) (nil fontified t 101569 . 101570) (nil fontified t 101535 . 101569) (nil fontified t 101534 . 101535) (nil fontified t 101522 . 101534) (nil fontified t 101521 . 101522) (nil fontified t 101520 . 101521) (nil fontified t 101519 . 101520) (nil fontified t 101503 . 101519) (nil fontified t 101502 . 101503) (nil fontified t 101385 . 101502) (nil fontified t 101384 . 101385) (nil fontified t 101378 . 101384) (nil fontified t 101377 . 101378) (nil fontified t 101375 . 101377) (nil fontified t 101374 . 101375) (nil fontified t 101320 . 101374) (nil fontified t 101319 . 101320) (nil fontified t 101307 . 101319) (nil fontified t 101306 . 101307) (nil fontified t 101305 . 101306) (nil fontified t 101304 . 101305) (nil fontified t 101288 . 101304) (nil fontified t 101287 . 101288) (nil fontified t 101270 . 101287) (nil fontified t 101269 . 101270) (nil fontified t 101264 . 101269) (nil fontified t 101263 . 101264) (nil fontified t 101241 . 101263) (nil fontified t 101191 . 101241) (nil fontified t 101190 . 101191) (nil fontified t 101189 . 101190) (nil fontified t 101178 . 101189) (nil fontified t 101126 . 101178) (nil fontified t 101125 . 101126) (nil fontified t 101119 . 101125) (nil fontified t 101118 . 101119) (nil fontified t 101116 . 101118) (nil fontified t 101115 . 101116) (nil fontified t 101114 . 101115) (nil fontified t 101082 . 101114) (nil fontified t 101081 . 101082) (nil fontified t 101018 . 101081) (nil fontified t 101017 . 101018) (nil fontified t 101005 . 101017) (nil fontified t 101004 . 101005) (nil fontified t 101003 . 101004) (nil fontified t 100998 . 101003) (nil fontified t 100997 . 100998) (nil fontified t 100981 . 100997) (nil fontified t 100980 . 100981) (nil fontified t 100963 . 100980) (nil fontified t 100962 . 100963) (nil fontified t 100957 . 100962) (nil fontified t 100956 . 100957) (nil fontified t 100908 . 100956) (nil fontified t 100907 . 100908) (nil fontified t 100901 . 100907) (nil fontified t 100900 . 100901) (nil fontified t 100898 . 100900) (nil fontified t 100897 . 100898) (nil fontified t 100853 . 100897) (nil fontified t 100852 . 100853) (nil fontified t 100840 . 100852) (nil fontified t 100839 . 100840) (nil fontified t 100838 . 100839) (nil fontified t 100837 . 100838) (nil fontified t 100821 . 100837) (nil fontified t 100820 . 100821) (nil fontified t 100803 . 100820) (nil fontified t 100802 . 100803) (nil fontified t 100797 . 100802) (nil fontified t 100796 . 100797) (nil fontified t 100749 . 100796) (nil fontified t 100748 . 100749) (nil fontified t 100742 . 100748) (nil fontified t 100741 . 100742) (nil fontified t 100739 . 100741) (nil fontified t 100738 . 100739) (nil fontified t 100734 . 100738) (nil fontified t 100733 . 100734) (nil fontified t 100725 . 100733) (nil fontified t 100724 . 100725) (nil fontified t 100721 . 100724) (nil fontified t 100720 . 100721) (nil fontified t 100718 . 100720) (nil fontified t 100717 . 100718) (nil fontified t 100713 . 100717) (nil fontified t 100712 . 100713) (nil fontified t 100711 . 100712) (nil fontified t 100710 . 100711) (nil fontified t 100696 . 100710) (nil fontified t 100695 . 100696) (nil fontified t 100694 . 100695) (nil fontified t 100693 . 100694) (nil fontified t 100680 . 100693) (nil fontified t 100679 . 100680) (nil rear-nonsticky t 101608 . 101609)) (25725 58051 553299 611000) 0 nil])
([nil nil ((nil rear-nonsticky nil 101638 . 101639) (nil fontified nil 100709 . 101639) (100709 . 101639)) nil (25725 58058 847984 27000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 101181 . 101182) (nil fontified nil 100677 . 101182) (100677 . 101182) (t 25725 58059 163898 361000)) nil (25725 58252 258227 942000) 0 nil])
([nil nil ((101182 . 101183) 101181) nil (25725 58252 258223 682000) 0 nil])
([nil nil ((102155 . 102156) 102146) nil (25725 58252 258219 771000) 0 nil])
([nil nil ((101225 . 101229) (#("r" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -101225) (undo-tree-id18839 . -1) 101226 (101209 . 101226)) nil (25725 58252 258215 441000) 0 nil])
([nil nil ((102230 . 102238) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -102230) (undo-tree-id18832 . -1) (#("o" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -102231) (undo-tree-id18833 . -1) 102232 (102228 . 102232) (#("y" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -102228) (undo-tree-id18834 . -1) (#("s" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -102229) (undo-tree-id18835 . -1) (#("t" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -102230) (undo-tree-id18836 . -1) (#("o" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -102231) (undo-tree-id18837 . -1) 102232 (102227 . 102232) (#("x" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -102227) (undo-tree-id18838 . -1) 102228 (102227 . 102228)) nil (25725 58252 258204 965000) 0 nil])
([nil nil ((102228 . 102229) (#("y" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 102228)) nil (25725 58252 258161 177000) 0 nil])
([nil nil ((102230 . 102232)) nil (25725 58252 258157 266000) 0 nil])
([nil nil ((102333 . 102345) (#("t" 0 1 (font-lock-fontified t fontified nil font-lock-multiline t face org-block-begin-line)) . -102333) (undo-tree-id18829 . -1) (#("a" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -102334) (undo-tree-id18830 . -1) 102335 (102329 . 102335) (#("u" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . -102329) (undo-tree-id18831 . -1) 102330 (102328 . 102330)) nil (25725 58252 258152 936000) 0 nil])
([nil nil ((102420 . 102430) (102414 . 102420)) nil (25725 58252 258139 667000) 0 nil])
([nil nil ((102350 . 102351) 102343) nil (25725 58252 258136 315000) 0 nil])
([nil nil ((102245 . 102246) 102202) nil (25725 58252 258133 33000) 0 nil])
([nil nil ((nil rear-nonsticky nil 103004 . 103005) (nil fontified nil 102246 . 103005) (102246 . 103005)) nil (25725 58252 258129 261000) 0 nil])
([nil nil ((102247 . 102260) (102227 . 102247) (#("t" 0 1 (fontified t)) . -102227) (undo-tree-id18826 . -1) (#("o" 0 1 (fontified t)) . -102228) (undo-tree-id18827 . -1) 102229 (102226 . 102229) (102205 . 102226) (#("a" 0 1 (fontified t)) . -102205) (undo-tree-id18828 . -1) 102206 (102201 . 102206)) nil (25725 58252 258122 417000) 0 nil])
([nil nil ((nil rear-nonsticky nil 103766 . 103767) (nil fontified nil 103121 . 103767) (103121 . 103767)) nil (25725 58252 258095 320000) 0 nil])
([nil nil ((103767 . 103768) 103766) nil (25725 58252 258090 921000) 0 nil])
([nil nil ((nil rear-nonsticky nil 104613 . 104614) (nil fontified nil 103817 . 104614) (103817 . 104614)) nil (25725 58252 258087 149000) 0 nil])
([nil nil ((104699 . 104700) 104653) nil (25725 58252 258082 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 105559 . 105560) (nil fontified nil 104700 . 105560) (104700 . 105560)) nil (25725 58252 258077 232000) 0 nil])
([nil nil ((nil rear-nonsticky nil 105728 . 105729) (nil fontified nil 104652 . 105729) (104652 . 105729)) nil (25725 58252 258063 335000) 0 nil])
([nil nil ((99467 . 99469) (t 25725 58252 548128 300000)) nil (25725 58287 606876 572000) 0 nil])
([nil nil ((#("/" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 78043) (t 25725 58287 954422 2000)) nil (25725 58335 836011 44000) 0 nil])
([nil nil ((78043 . 78044)) nil (25725 58335 836006 155000) 0 nil])
([nil nil ((78043 . 78044) (#("$" 0 1 (font-lock-fontified t fontified t font-lock-multiline t face org-block-begin-line)) . 78043)) nil (25725 58335 835993 305000) 0 nil])
([nil nil ((78099 . 78100) (t 25725 58336 132285 639000)) nil (25725 58340 416513 727000) 0 nil])
([nil current ((#("t" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -78099) (undo-tree-id18840 . -1) 78100 (t 25725 58340 704093 395000)) nil (25725 58344 503781 576000) 0 nil])
nil
